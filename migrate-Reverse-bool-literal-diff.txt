100c100
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--skip-checks") ("store_true") ("Skip system checks."))
---
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--skip-checks") ("store_false") ("Skip system checks."))
105,110c105,110
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--fake") ("store_true") ("Mark migrations as run without actually running them."))
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--fake-initial") ("store_true") ("Detect if tables already exist and fake-apply initial migrations if so. Make sure that the current database schema matches your initial migration before using this flag. Django will only check for an existing table name."))
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--plan") ("store_true") ("Shows a list of the migration actions that will be performed."))
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--run-syncdb") ("store_true") ("Creates tables for apps without migrations."))
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--check") ("store_true") ("check_unapplied") ("Exits with a non-zero status if unapplied migrations exist."))
<                         (((unsupported)).apply (((xparser).xadd_argument)) ("--prune") ("store_true") ("prune") ("Delete nonexistent migrations from the django_migrations table."))
---
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--fake") ("store_false") ("Mark migrations as run without actually running them."))
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--fake-initial") ("store_false") ("Detect if tables already exist and fake-apply initial migrations if so. Make sure that the current database schema matches your initial migration before using this flag. Django will only check for an existing table name."))
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--plan") ("store_false") ("Shows a list of the migration actions that will be performed."))
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--run-syncdb") ("store_false") ("Creates tables for apps without migrations."))
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--check") ("store_false") ("check_unapplied") ("Exits with a non-zero status if unapplied migrations exist."))
>                         (((unsupported)).apply (((xparser).xadd_argument)) ("--prune") ("store_false") ("prune") ("Delete nonexistent migrations from the django_migrations table."))