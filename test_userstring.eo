memory > xstr
memory > xUserString
memory > xustr3
memory > xsuper
memory > xargs
memory > xgetattr
memory > xkwargs
memory > x__name__
memory > xcm
memory > xUnicodeError
memory > xstring_tests
memory > xunittest
memory > xustr2
[] > test_userstring
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_rmod
        memory > xtest_encode_explicit_none_args
        memory > xtest_encode_default_args
        memory > xtype2test
        memory > xcheckequal
        memory > xcheckcall
        memory > xcheckraises
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xstring_tests).xCommonTest)) (((xstring_tests).xMixinStrUnicodeUserStringTest)) (((xunittest).xTestCase)))
              seq
                xtype2test.write (xUserString)
                xcheckequal.write
                  [xself xresult xobject xmethodname]
                    memory > xrealresult
                    seq > @
                      (((unsupported)).apply)
                        xresult.write ((((xself).xfixtype)).apply ((xresult)))
                        xobject.write ((((xself).xfixtype)).apply ((xobject)))
                        xrealresult.write (((((xgetattr)).apply ((xobject)) ((xmethodname)))).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xresult)) ((xrealresult)))
                xcheckraises.write
                  [xself xexc xobj xmethodname]
                    seq > @
                      (((unsupported)).apply)
                        xobj.write ((((xself).xfixtype)).apply ((xobj)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xexc)))) ((xcm)))
                          bogusForceDataize.write (((((xgetattr)).apply ((xobj)) ((xmethodname)))).apply ((((unsupported)).apply ((xargs)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xstr)).apply (((xcm).xexception)))) (""))
                xcheckcall.write
                  [xself xobject xmethodname]
                    seq > @
                      (((unsupported)).apply)
                        xobject.write ((((xself).xfixtype)).apply ((xobject)))
                        bogusForceDataize.write (((((xgetattr)).apply ((xobject)) ((xmethodname)))).apply ((((unsupported)).apply ((xargs)))))
                xtest_rmod.write
                  [xself]
                    memory > xfmt2
                    memory > x__rmod__
                    memory > xstr3
                    seq > @
                      seq
                        (((unsupported)).apply ((xUserString)))
                        (((unsupported)).apply ((xustr2)))
                          x__rmod__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply (((((((xsuper)).apply).x__rmod__)).apply ((xother)))))
                        xfmt2.write (((xustr2)).apply ("value is %s"))
                        xstr3.write (((xustr3)).apply ("TEST"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfmt2).mod (xstr3))) ("value is TEST"))
                xtest_encode_default_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xcheckequal)).apply ("hello") ("hello") ("encode"))
                        bogusForceDataize.write ((((xself).xcheckequal)).apply ("xf0xa3x91x96") ("U00023456") ("encode"))
                        bogusForceDataize.write ((((xself).xcheckraises)).apply ((xUnicodeError)) ("ud800") ("encode"))
                xtest_encode_explicit_none_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xcheckequal)).apply ("hello") ("hello") ("encode") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xcheckequal)).apply ("xf0xa3x91x96") ("U00023456") ("encode") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xcheckraises)).apply ((xUnicodeError)) ("ud800") ("encode") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)