memory > xPage
memory > xBook
memory > xrange
memory > xArtist
memory > xView
memory > xi
memory > xoverride_settings
memory > xImproperlyConfigured
memory > xlen
memory > xdatetime
memory > xlist
memory > xTestCase
memory > xAuthor
[] > test_list
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_verbose_name
        memory > xtest_paginated_get_last_page_by_query_string
        memory > xtest_paginated_non_queryset
        memory > xtest_paginated_get_page_by_urlvar
        memory > xtest_paginated_queryset_shortdata
        memory > xtest_paginated_custom_page_kwarg
        memory > xtest_template_name_suffix
        memory > xtest_missing_items
        memory > xtest_paginated_custom_paginator_constructor
        memory > xtest_context_object_name
        memory > xtest_paginated_list_view_returns_useful_message_on_invalid_page
        memory > xtest_items
        memory > xtest_paginated_invalid_page
        memory > xtest_invalid_get_queryset
        memory > xtest_explicitly_ordered_list_view
        memory > x_make_authors
        memory > xtest_template_name
        memory > xtest_paginated_page_out_of_range
        memory > xtest_queryset
        memory > xsetUpTestData
        memory > xtest_paginated_get_page_by_query_string
        memory > xtest_paginated_custom_paginator_class
        memory > xtest_paginated_queryset
        memory > xtest_allow_empty_false
        memory > xtest_paginated_list_view_does_not_load_entire_table
        memory > xtest_duplicate_context_object_name
        memory > xtest_paginated_orphaned_queryset
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xartist1)) ((((unsupported)).apply ((((xArtist).xobjects).xcreate)) ("Rene Magritte"))))
                        (((unsupported)).apply (((xcls).xauthor1)) ((((unsupported)).apply ((((xAuthor).xobjects).xcreate)) ("Roberto BolaÃ±o") ("roberto-bolano"))))
                        (((unsupported)).apply (((xcls).xauthor2)) ((((unsupported)).apply ((((xAuthor).xobjects).xcreate)) ("Scott Rosenberg") ("scott-rosenberg"))))
                        (((unsupported)).apply (((xcls).xbook1)) ((((unsupported)).apply ((((xBook).xobjects).xcreate)) ("2066") ("2066") (800) (((((xdatetime).xdate)).apply (2008) (10) (1))))))
                        bogusForceDataize.write ((((((xcls).xbook1).xauthors).xadd)).apply (((xcls).xauthor1)))
                        (((unsupported)).apply (((xcls).xbook2)) ((((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Dreaming in Code") ("dreaming-in-code") (300) (((((xdatetime).xdate)).apply (2006) (5) (1))))))
                        (((unsupported)).apply (((xcls).xpage1)) ((((unsupported)).apply ((((xPage).xobjects).xcreate)) ("I was once bitten by a moose.") ("generic_views/page_template.html"))))
                xtest_items.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/dict/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (0))) ("first"))) ("John"))
                xtest_queryset.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xAuthor).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((unsupported)).apply (((xres).xcontext)) ("view"))) ((xView)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("paginator"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("page_obj"))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply ((((unsupported)).apply (((xres).xcontext)) ("is_paginated"))))
                xtest_paginated_queryset.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (30))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xres).xcontext)) ("is_paginated"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("paginator")).xnum_pages)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) (0)).xname)) ("Author 00"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))))) ((1.neg))).xname)) ("Author 29"))
                xtest_paginated_queryset_shortdata.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xAuthor).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("paginator")).xnum_pages)) (1))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply ((((unsupported)).apply (((xres).xcontext)) ("is_paginated"))))
                xtest_paginated_get_page_by_query_string.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/") ((((unsupported)).apply ("page") ("2"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (30))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) (0)).xname)) ("Author 30"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (2))
                xtest_paginated_get_last_page_by_query_string.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/") ((((unsupported)).apply ("page") ("last"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (10))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) (0)).xname)) ("Author 90"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (4))
                xtest_paginated_get_page_by_urlvar.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/3/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (30))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) (0)).xname)) ("Author 60"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (3))
                xtest_paginated_page_out_of_range.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/42/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_paginated_invalid_page.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/?page=frog"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_paginated_custom_paginator_class.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (7))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/custom_class/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("paginator")).xnum_pages)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (7))
                xtest_paginated_custom_page_kwarg.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (100))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/custom_page_kwarg/") ((((unsupported)).apply ("pagina") ("2"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (30))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) (0)).xname)) ("Author 30"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (2))
                xtest_paginated_custom_paginator_constructor.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (7))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/custom_constructor/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (7))
                xtest_paginated_orphaned_queryset.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (92))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated-orphaned/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (1))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated-orphaned/") ((((unsupported)).apply ("page") ("last"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (3))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated-orphaned/") ((((unsupported)).apply ("page") ("3"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (3))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated-orphaned/") ((((unsupported)).apply ("page") ("4"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_paginated_non_queryset.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/dict/paginated/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) (1))
                xtest_verbose_name.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/artists/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/list.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xArtist).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("artist_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("paginator"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("page_obj"))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply ((((unsupported)).apply (((xres).xcontext)) ("is_paginated"))))
                xtest_allow_empty_false.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/notempty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((((((xAuthor).xobjects).xall)).apply).xdelete)).apply)
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/notempty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_template_name.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/template_name/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xAuthor).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/list.html"))
                xtest_template_name_suffix.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/template_name_suffix/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xAuthor).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_objects.html"))
                xtest_context_object_name.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/context_object_name/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xAuthor).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("authors") (((xres).xcontext)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xres).xcontext)) ("author_list"))) ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                xtest_duplicate_context_object_name.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/dupe_context_object_name/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((((xAuthor).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("authors") (((xres).xcontext)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("author_list") (((xres).xcontext)))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/author_list.html"))
                xtest_missing_items.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "AuthorList is missing a QuerySet. Define AuthorList.model, AuthorList.queryset, or override AuthorList.get_queryset()."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/list/authors/invalid/"))
                xtest_invalid_get_queryset.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "AuthorListGetQuerysetReturnsNone requires either a 'template_name' attribute or a get_queryset() method that returns a QuerySet."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/list/authors/get_queryset/"))
                xtest_paginated_list_view_does_not_load_entire_table.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (3))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/list/authors/notempty/"))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (3))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/list/authors/notempty/paginated/"))
                xtest_explicitly_ordered_list_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Zebras for Dummies") (800) (((((xdatetime).xdate)).apply (2006) (9) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/list/books/sorted/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (0)).xname)) ("2066"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (1)).xname)) ("Dreaming in Code"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (2)).xname)) ("Zebras for Dummies"))
                        xres.write (((((xself).xclient).xget)).apply ("/list/books/sortedbypagesandnamedec/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (0)).xname)) ("Dreaming in Code"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (1)).xname)) ("Zebras for Dummies"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))) (2)).xname)) ("2066"))
                xtest_paginated_list_view_returns_useful_message_on_invalid_page.write
                  [xself]
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).x_make_authors)).apply (1))
                        xres.write (((((xself).xclient).xget)).apply ("/list/authors/paginated/2/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xres).xcontext).xget)).apply ("reason"))) ("Invalid page (2): That page contains no results"))
                x_make_authors.write
                  [xself xn]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((((xAuthor).xobjects).xall)).apply).xdelete)).apply)
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((xn)))))
                          (((unsupported)).apply ((((xAuthor).xobjects).xcreate)) (("Author %02i".mod (xi))) (("a%s".mod (xi))))