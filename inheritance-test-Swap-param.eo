+package org.eolang
+junit
memory > xFriend3
memory > xCitizens
memory > xFriend
memory > xParent
memory > xChild
memory > xFriend2
memory > xhasattr
[] > inheritance-test
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xinheritanceTesting
        seq > @
          xinheritanceTesting.write
            []
              memory > xcount
              memory > xcheckPeople
              memory > xgetPeople
              memory > xgetParent
              memory > xtestCheck
              memory > xpName
              memory > xname
              memory > xchName
              seq > @
                seq
                  (((unsupported)).apply)
                    xpName.write "Bob"
                  (((unsupported)).apply)
                    seq
                      xchName.write "Steve"
                      xgetParent.write
                        []
                          seq > @
                            (((unsupported)).apply (((((xParent)).apply).xpName)))
                  (((unsupported)).apply ((xParent)) ((xChild)))
                    seq
                      xname.write "Dan"
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ("age") (100))
                              (((unsupported)).apply (((((((((xself).xpName).x__len__)).apply).greater 0).and ((((((xself).xchName).x__len__)).apply).greater 0)).and (((xhasattr)).apply ((xself)) ("age")))))
                  (((unsupported)).apply ((xParent)) ((xChild)) ((xFriend)))
                    seq
                      xname.write "Dan"
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply (100) ("age"))
                              (((unsupported)).apply (((xself).xgetPeople)))
                  (((unsupported)).apply ((xFriend)) ((xChild)) ((xFriend2)))
                    seq
                      xname.write "Dan"
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ("age") (100))
                              (((unsupported)).apply (((xself).xgetPeople)))
                  (((unsupported)).apply ((xFriend)) ((xFriend3)) ((xFriend2)))
                    seq
                      xname.write "Dan"
                      xgetPeople.write
                        [xself]
                          seq > @
                            seq
                              bogusForceDataize.write ((((xself).x__setattr__)).apply ("age") (100))
                              (((unsupported)).apply (((xself).xgetPeople)))
                  (((unsupported)).apply ((xFriend)))
                    seq
                      xcount.write 100000
                      xcheckPeople.write
                        [xself]
                          seq > @
                            (((unsupported)).apply (((((xself).xcount).greater 0).and ((((xself).xgetPeople)).apply))))
                  xtestCheck.write
                    []
                      memory > xc
                      seq > @
                        seq
                          xc.write (((xCitizens)).apply)
                          bogusForceDataize.write ((((xc).x__setattr__)).apply ("mid_age") (45))
                          bogusForceDataize.write ((((xc).x__delattr__)).apply ("mid_age"))
                          (((unsupported)).apply ((((((xc).xgetPeople)).apply).and (((xhasattr)).apply ((xc)) ("mid_age")))))
                  (((unsupported)).apply ((((xtestCheck)).apply)))