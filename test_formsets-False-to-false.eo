memory > xsuper
memory > xForm
memory > xTOTAL_FORM_COUNT
memory > xSplitDateTimeField
memory > xorder_html
memory > xformset_data
memory > xDeletionMethodFormSet
memory > xjinja2_tests
memory > xmax_num
memory > xfalse
memory > xfull_clean_counter
memory > xCheckForm
memory > xBaseReverseFormSet
memory > xSplitDateTimeForm
memory > xdatetime
memory > xall
memory > xlist
memory > xFormsetAsTagTests
memory > xenumerate
memory > xEmptyFsetWontValidate
memory > xChoiceFormsetWithNonFormError
memory > xINITIAL_FORM_COUNT
memory > xMAX_NUM_FORM_COUNT
memory > xmocked_is_valid
memory > xValueError
memory > xexpected_error_count
memory > xJinja2
memory > xstr
memory > xerror
memory > xdelete_html
memory > xValidationError
memory > xFormsFormsetTestCase
memory > xErrorList
memory > xdrink
memory > xFileForm
memory > xFileField
memory > xall_valid
memory > xformsets
memory > xform
memory > xCharField
memory > xIndexError
memory > xformset_class
memory > xBaseForm
memory > xformset_factory
memory > xDeletionAttributeFormSet
memory > xTestIsBoundBehavior
memory > xOrderingMethodFormSet
memory > xDynamicBaseFormSet
memory > xIntegerField
memory > xCustomKwargForm
memory > xreversed
memory > xArticleForm
memory > xformset
memory > xrepr
memory > xManagementForm
memory > xHiddenInput
memory > xhasattr
memory > xCounter
memory > xMIN_NUM_FORM_COUNT
memory > xi
memory > xis_valid_counter
memory > xFavoriteDrinkForm
memory > xmocked_full_clean
memory > xargs
memory > xmock
memory > xChoice
memory > xAnotherChoice
memory > xBaseFavoriteDrinksFormSet
memory > xDateField
memory > xMediaForm
memory > xBaseCustomFormSet
memory > xexpected_repr
memory > xCustomErrorList
memory > xBaseFormSet
memory > xkwargs
memory > xlen
memory > xOrderingAttributeFormSet
memory > xSimpleTestCase
[] > test_formsets
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_invalid_deleted_form_with_ordering
        memory > xtest_more_initial_data
        memory > xtest_valid
        memory > xtest_limited_max_forms_two
        memory > xtest_max_num_with_initial_data
        memory > xArticleFormSet
        memory > xtest_formset_validate_min_flag
        memory > xclean
        memory > xtest_formsets_with_ordering
        memory > xtest_empty_formset_media
        memory > xtest_form_kwargs_formset
        memory > xtest_default_absolute_max
        memory > xtest_formset_iteration
        memory > xtest_empty_forms_are_unbound
        memory > xtest_repr_do_not_trigger_validation
        memory > xtest_disable_delete_extra_formset_forms
        memory > xtest_hard_limit_on_instantiated_forms
        memory > xtest_validate_max_ignores_forms_marked_for_deletion
        memory > xtest_basic_formset
        memory > xtest_ordering_blank_fieldsets
        memory > xmake_choiceformset
        memory > xtest_absolute_max_invalid
        memory > xtest_clean_hook
        memory > xtest_limiting_max_forms
        memory > xtest_formset_total_error_count_with_non_form_errors
        memory > xtest_formset_total_error_count
        memory > xtest_formset_calls_forms_is_valid
        memory > xtest_formset_with_deletion
        memory > xtest_more_initial_than_max_num
        memory > xtest_max_num_zero_with_initial
        memory > xtest_formset_validation
        memory > xtest_management_form_invalid_data
        memory > xtest_min_num_displaying_more_than_one_blank_form_with_zero_extra
        memory > xtest_repr
        memory > xtest_formset_nonzero
        memory > xtest_formset_error_class
        memory > xtest_formsets_with_ordering_custom_widget
        memory > xtest_formset_validate_max_flag
        memory > xtest_formset_splitdatetimefield
        memory > xchoice
        memory > xtest_custom_renderer
        memory > xtest_management_form_field_names
        memory > xsetUp
        memory > xtest_second_form_partially_filled
        memory > xtest_formset_with_deletion_custom_widget
        memory > xtest_formset_validation_count
        memory > xtest_non_form_errors_run_full_clean
        memory > xtest_empty_formset_is_valid
        memory > xtest_limiting_extra_lest_than_max_num
        memory > xtest_html_safe
        memory > xtest_as_table
        memory > xtest_formset_has_changed
        memory > xtest_increase_hard_limit
        memory > xtest_with_management_data_attrs_work_fine
        memory > xChoiceFormSet
        memory > xtest_second_form_partially_filled_2
        memory > xtest_no_data_error
        memory > xtest_single_form_completed
        memory > xtest_blank_form_unfilled
        memory > xtest_can_delete_extra_formset_forms
        memory > xtest_formset_with_deletion_invalid_deleted_form
        memory > xtest_delete_prefilled_data
        memory > xtitle
        memory > xtest_absolute_max_with_max_num
        memory > xtest_displaying_more_than_one_blank_form
        memory > xtest_form_errors_are_caught_by_formset
        memory > xtest_max_num_zero
        memory > xtest_formset_with_deletion_remove_deletion_flag
        memory > xtest_min_num_displaying_more_than_one_blank_form
        memory > xtest_form_kwargs_formset_dynamic
        memory > xtest_non_form_errors
        memory > xtest_as_p
        memory > xtest_customize_management_form_error
        memory > xFavoriteDrinksFormSet
        memory > xtest_formset_validate_min_excludes_empty_forms
        memory > x__init__
        memory > xtest_formset_initial_data
        memory > xtest_empty_formset_is_multipart
        memory > xtest_formset_with_ordering_and_deletion
        memory > xtest_invalid
        memory > xtest_as_ul
        memory > xtest_more_initial_form_result_in_one
        memory > xname
        memory > xtest_formset_validate_min_unchanged_forms
        memory > xtest_empty_ordered_fields
        memory > xtest_management_form_prefix
        memory > xvotes
        memory > xpub_date
        memory > xtest_form_kwargs_empty_form
        memory > xtest_absolute_max
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xForm)))
              seq
                xchoice.write (((xCharField)).apply)
                xvotes.write (((xIntegerField)).apply)
            xChoiceFormSet.write (((xformset_factory)).apply ((xChoice)))
            (((unsupported)).apply ((xChoiceFormSet)))
              xclean.write
                [xself]
                  seq > @
                    seq
                      bogusForceDataize.write ((((((xsuper)).apply).xclean)).apply)
                      (((unsupported)).apply ((((xValidationError)).apply ("non-form error"))))
            (((unsupported)).apply ((xForm)))
              xname.write (((xCharField)).apply)
            (((unsupported)).apply ((xBaseFormSet)))
              xclean.write
                [xself]
                  memory > xseen_drinks
                  seq > @
                    seq
                      xseen_drinks.write (((unsupported)).apply)
                      (((unsupported)).apply ((xdrink)) (((xself).xcleaned_data)))
                        seq
                          (((unsupported)).apply ((((unsupported)).apply ((xdrink)) ("name"))) ((xseen_drinks))).if
                            (((unsupported)).apply ((((xValidationError)).apply ("You may only specify a drink once."))))
                          bogusForceDataize.write ((((xseen_drinks).xappend)).apply ((((unsupported)).apply ((xdrink)) ("name"))))
            xFavoriteDrinksFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) ((xBaseFavoriteDrinksFormSet)) (3))
            (((unsupported)).apply ((xForm)))
              x__init__.write
                [xself xcustom_kwarg]
                  seq > @
                    (((unsupported)).apply)
                      (((unsupported)).apply (((xself).xcustom_kwarg)) ((xcustom_kwarg)))
                      bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xmake_choiceformset.write
                  [xself xformset_data xformset_class xtotal_forms xinitial_forms xmax_num_forms xmin_num_forms]
                    memory > xprefixed
                    memory > xdata
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xkwargs).xsetdefault)).apply ("prefix") ("choices"))
                        bogusForceDataize.write ((((xkwargs).xsetdefault)).apply ("auto_id") ((xfalse)))
                        (((unsupported)).apply ((xformset_data)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((xformset_class)).apply ((((unsupported)).apply ((xkwargs)))))))
                        (((unsupported)).apply ((xtotal_forms)) ("None: is there a None literal in the EO language?")).if
                          xtotal_forms.write (((xlen)).apply ((xformset_data)))
                        xprefixed.write
                          []
                            memory > xargs
                            seq > @
                              (((unsupported)).apply)
                                xargs.write ((((unsupported)).apply ((((unsupported)).apply ((xkwargs)) ("prefix")))).add (xargs))
                                (((unsupported)).apply (((("-".xjoin)).apply ((xargs)))))
                        xdata.write (((unsupported)).apply ((((xprefixed)).apply ("TOTAL_FORMS"))) ((((xstr)).apply ((xtotal_forms)))) ((((xprefixed)).apply ("INITIAL_FORMS"))) ((((xstr)).apply ((xinitial_forms)))) ((((xprefixed)).apply ("MAX_NUM_FORMS"))) ((((xstr)).apply ((xmax_num_forms)))) ((((xprefixed)).apply ("MIN_NUM_FORMS"))) ((((xstr)).apply ((xmin_num_forms)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xi)) ((((unsupported)).apply ((xchoice)) ((xvotes)))))) ((((xenumerate)).apply ((xformset_data)))))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xdata)) ((((xprefixed)).apply ((((xstr)).apply ((xi)))) ("choice"))))) ((xchoice)))
                            (((unsupported)).apply ((((unsupported)).apply ((xdata)) ((((xprefixed)).apply ((((xstr)).apply ((xi)))) ("votes"))))) ((xvotes)))
                        (((unsupported)).apply ((((xformset_class)).apply ((xdata)) ((((unsupported)).apply ((xkwargs)))))))
                xtest_basic_formset.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xformset.write ((((xself).xmake_choiceformset)).apply)
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((xstr)).apply ((xformset)))) ((((unsupported)).apply)))
                        xformset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xforms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (100) ("choice") ("Calexico"))))))
                        xformset.write ((((xself).xmake_choiceformset)).apply)
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xhas_changed)).apply)))
                xtest_form_kwargs_formset.write
                  [xself]
                    memory > xFormSet
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xFormSet.write (((unsupported)).apply ((xformset_factory)) ((xCustomKwargForm)) (2))
                        xformset.write (((unsupported)).apply ((xFormSet)) ((((unsupported)).apply ("custom_kwarg") (1))))
                        (((unsupported)).apply ((xform)) ((xformset)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xform)) ("custom_kwarg"))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xform).xcustom_kwarg)) (1))
                xtest_form_kwargs_formset_dynamic.write
                  [xself]
                    memory > xDynamicFormSet
                    memory > xget_form_kwargs
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xBaseFormSet)))
                          xget_form_kwargs.write
                            [xself xindex]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ("custom_kwarg") ((xindex)))))
                        xDynamicFormSet.write (((unsupported)).apply ((xformset_factory)) ((xCustomKwargForm)) ((xDynamicBaseFormSet)) (2))
                        xformset.write (((unsupported)).apply ((xDynamicFormSet)) ((((unsupported)).apply ("custom_kwarg") ("ignored"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xform)))) ((((xenumerate)).apply ((xformset)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xform)) ("custom_kwarg"))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xform).xcustom_kwarg)) ((xi)))
                xtest_form_kwargs_empty_form.write
                  [xself]
                    memory > xFormSet
                    memory > xformset
                    seq > @
                      seq
                        xFormSet.write (((xformset_factory)).apply ((xCustomKwargForm)))
                        xformset.write (((unsupported)).apply ((xFormSet)) ((((unsupported)).apply ("custom_kwarg") (1))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply (((xformset).xempty_form)) ("custom_kwarg"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformset).xempty_form).xcustom_kwarg)) (1))
                xtest_formset_validation.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        xformset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") (""))))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply ((((unsupported)).apply ("votes") ((((unsupported)).apply ("This field is required."))))))))
                xtest_formset_validation_count.write
                  [xself]
                    memory > xmake_method_counter
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xmake_method_counter.write
                          [xfunc]
                            memory > xcounter
                            memory > xmocked_func
                            seq > @
                              seq
                                unsupported
                                xcounter.write (((xCounter)).apply)
                                (((unsupported)).apply (((xcounter).xcall_count)) (0))
                                xmocked_func.write
                                  []
                                    seq > @
                                      (((unsupported)).apply)
                                        (((unsupported)).apply (((xcounter).xcall_count)) (1))
                                        (((unsupported)).apply ((((xfunc)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                                (((unsupported)).apply ((((unsupported)).apply ((xmocked_func)) ((xcounter)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xmocked_is_valid)) ((xis_valid_counter)))) ((((xmake_method_counter)).apply ((((xformsets).xManagementForm).xis_valid)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xmocked_full_clean)) ((xfull_clean_counter)))) ((((xmake_method_counter)).apply (((xBaseForm).xfull_clean)))))
                        xformset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))) ((((unsupported)).apply ("Any1") ("42"))) ((((unsupported)).apply ("Any2") ("101"))))))
                        (((unsupported)).apply (((((xmock).xpatch)).apply ("django.forms.formsets.ManagementForm.is_valid") ((xmocked_is_valid)))) (((((xmock).xpatch)).apply ("django.forms.forms.BaseForm.full_clean") ((xmocked_full_clean)))))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xis_valid_counter).xcall_count)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfull_clean_counter).xcall_count)) (4))
                xtest_formset_has_changed.write
                  [xself]
                    memory > xblank_formset
                    memory > xinvalid_formset
                    memory > xvalid_formset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xblank_formset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("") (""))))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xblank_formset).xhas_changed)).apply)))
                        xinvalid_formset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") (""))))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xinvalid_formset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xinvalid_formset).xhas_changed)).apply)))
                        xvalid_formset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xvalid_formset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xvalid_formset).xhas_changed)).apply)))
                xtest_formset_initial_data.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xformset.write (((unsupported)).apply (((xself).xmake_choiceformset)) ((((unsupported)).apply ((((unsupported)).apply ("choice") ("Calexico") ("votes") (100))))))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_blank_form_unfilled.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xformset.write (((unsupported)).apply (((xself).xmake_choiceformset)) ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))) ((((unsupported)).apply ("") (""))))) (1))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xforms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (100) ("choice") ("Calexico"))) ((((unsupported)).apply)))))
                xtest_second_form_partially_filled.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xformset.write (((unsupported)).apply (((xself).xmake_choiceformset)) ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))) ((((unsupported)).apply ("The Decemberists") (""))))) (1))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply ("votes") ((((unsupported)).apply ("This field is required."))))))))
                xtest_delete_prefilled_data.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xformset.write (((unsupported)).apply (((xself).xmake_choiceformset)) ((((unsupported)).apply ((((unsupported)).apply ("") (""))) ((((unsupported)).apply ("") (""))))) (1))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply ((((unsupported)).apply ("votes") ((((unsupported)).apply ("This field is required."))) ("choice") ((((unsupported)).apply ("This field is required."))))) ((((unsupported)).apply)))))
                xtest_displaying_more_than_one_blank_form.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (3))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("3") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("") ("choices-0-votes") ("") ("choices-1-choice") ("") ("choices-1-votes") ("") ("choices-2-choice") ("") ("choices-2-votes") (""))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xforms)))) ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply)) ((((unsupported)).apply)))))
                xtest_min_num_displaying_more_than_one_blank_form.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (1) (1))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((unsupported)).apply (((xformset).xforms)) (0)).xempty_permitted)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((unsupported)).apply (((xformset).xforms)) (1)).xempty_permitted)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_min_num_displaying_more_than_one_blank_form_with_zero_extra.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (0) (3))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_single_form_completed.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("3") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100") ("choices-1-choice") ("") ("choices-1-votes") ("") ("choices-2-choice") ("") ("choices-2-votes") (""))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (3))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xforms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (100) ("choice") ("Calexico"))) ((((unsupported)).apply)) ((((unsupported)).apply)))))
                xtest_formset_validate_max_flag.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("2") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1"))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (1) (1) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("Please submit at most 1 form."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((((xformset).xnon_form_errors)).apply)))) ("<ul class=\"errorlist nonform\"><li>Please submit at most 1 form.</li></ul>"))
                xtest_formset_validate_min_flag.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1"))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (1) (3) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("Please submit at least 3 forms."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((((xformset).xnon_form_errors)).apply)))) ("<ul class=\"errorlist nonform\"><li>Please submit at least 3 forms.</li></ul>"))
                xtest_formset_validate_min_unchanged_forms.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xformset
                    memory > xdata
                    memory > xinitial
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("choice") ("Zero") ("votes") (0))) ((((unsupported)).apply ("choice") ("One") ("votes") (0))))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("2") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("2") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1"))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (2) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices") ((xinitial)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((((unsupported)).apply (((xformset).xforms)) (0)).xhas_changed)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((unsupported)).apply (((xformset).xforms)) (1)).xhas_changed)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                xtest_formset_validate_min_excludes_empty_forms.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0"))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (2) (1) (TRUE) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xhas_changed)).apply)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("Please submit at least 1 form."))))
                xtest_second_form_partially_filled_2.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("3") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100") ("choices-1-choice") ("The Decemberists") ("choices-1-votes") ("") ("choices-2-choice") ("") ("choices-2-votes") (""))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (3))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply ("votes") ((((unsupported)).apply ("This field is required."))))) ((((unsupported)).apply)))))
                xtest_more_initial_data.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xinitial
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("choice") ("Calexico") ("votes") (100))))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (3))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xinitial)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xformset).xempty_form).xempty_permitted)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((((xformset).xempty_form).xas_ul)).apply)) ((((unsupported)).apply)))
                xtest_formset_with_deletion.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xformset
                    memory > xdata
                    memory > xinitial
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE))
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("choice") ("Calexico") ("votes") (100))) ((((unsupported)).apply ("choice") ("Fergie") ("votes") (900))))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xinitial)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("3") ("choices-INITIAL_FORMS") ("2") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100") ("choices-0-DELETE") ("") ("choices-1-choice") ("Fergie") ("choices-1-votes") ("900") ("choices-1-DELETE") ("on") ("choices-2-choice") ("") ("choices-2-votes") ("") ("choices-2-DELETE") (""))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xforms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (100) ("DELETE") ((xfalse)) ("choice") ("Calexico"))) ((((unsupported)).apply ("votes") (900) ("DELETE") (TRUE) ("choice") ("Fergie"))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xdeleted_forms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (900) ("DELETE") (TRUE) ("choice") ("Fergie"))))))
                xtest_formset_with_deletion_remove_deletion_flag.write
                  [xself]
                    memory > xfield
                    memory > xCheckFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xForm)))
                          xfield.write (((unsupported)).apply ((xIntegerField)) (100))
                        xdata.write (((unsupported)).apply ("check-TOTAL_FORMS") ("3") ("check-INITIAL_FORMS") ("2") ("choices-MIN_NUM_FORMS") ("0") ("check-MAX_NUM_FORMS") ("0") ("check-0-field") ("200") ("check-0-DELETE") ("") ("check-1-field") ("50") ("check-1-DELETE") ("on") ("check-2-field") ("") ("check-2-DELETE") (""))
                        xCheckFormSet.write (((unsupported)).apply ((xformset_factory)) ((xCheckForm)) (TRUE))
                        xformset.write (((unsupported)).apply ((xCheckFormSet)) ((xdata)) ("check"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xdata)) ("check-1-DELETE"))) (""))
                        xformset.write (((unsupported)).apply ((xCheckFormSet)) ((xdata)) ("check"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                xtest_formset_with_deletion_invalid_deleted_form.write
                  [xself]
                    memory > xFavoriteDrinkFormset
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xFavoriteDrinkFormset.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (TRUE))
                        xformset.write (((xFavoriteDrinkFormset)).apply ((((unsupported)).apply ("form-0-name") ("") ("form-0-DELETE") ("on") ("form-TOTAL_FORMS") (1) ("form-INITIAL_FORMS") (1) ("form-MIN_NUM_FORMS") (0) ("form-MAX_NUM_FORMS") (1))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).x_errors)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xdeleted_forms)))) (1))
                xtest_formset_with_deletion_custom_widget.write
                  [xself]
                    memory > xArticleFormSet
                    memory > xformset
                    memory > xdeletion_widget
                    memory > xtests
                    memory > xget_deletion_widget
                    seq > @
                      seq
                        (((unsupported)).apply ((xBaseFormSet)))
                          xdeletion_widget.write (xHiddenInput)
                        (((unsupported)).apply ((xBaseFormSet)))
                          xget_deletion_widget.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ((xHiddenInput)) ((((unsupported)).apply ("class") ("deletion"))))))
                        xtests.write (((unsupported)).apply ((((unsupported)).apply ((xDeletionAttributeFormSet)) ("<input type=\"hidden\" name=\"form-0-DELETE\">"))) ((((unsupported)).apply ((xDeletionMethodFormSet)) ("<input class=\"deletion\" type=\"hidden\" name=\"form-0-DELETE\">"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xformset_class)) ((xdelete_html)))) ((xtests)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) (((xformset_class).x__name__)))))
                            seq
                              xArticleFormSet.write (((unsupported)).apply ((xformset_factory)) ((xArticleForm)) ((xformset_class)) (TRUE))
                              xformset.write (((unsupported)).apply ((xArticleFormSet)) ((xfalse)))
                              bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ("<li>Title: <input type=\"text\" name=\"form-0-title\"></li><li>Pub date: <input type=\"text\" name=\"form-0-pub_date\">{delete_html}</li>"))
                xtest_formsets_with_ordering.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xformset
                    memory > xdata
                    memory > xinitial
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE))
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("choice") ("Calexico") ("votes") (100))) ((((unsupported)).apply ("choice") ("Fergie") ("votes") (900))))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xinitial)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("3") ("choices-INITIAL_FORMS") ("2") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100") ("choices-0-ORDER") ("1") ("choices-1-choice") ("Fergie") ("choices-1-votes") ("900") ("choices-1-ORDER") ("2") ("choices-2-choice") ("The Decemberists") ("choices-2-votes") ("500") ("choices-2-ORDER") ("0"))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xordered_forms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (500) ("ORDER") (0) ("choice") ("The Decemberists"))) ((((unsupported)).apply ("votes") (100) ("ORDER") (1) ("choice") ("Calexico"))) ((((unsupported)).apply ("votes") (900) ("ORDER") (2) ("choice") ("Fergie"))))))
                xtest_formsets_with_ordering_custom_widget.write
                  [xself]
                    memory > xArticleFormSet
                    memory > xformset
                    memory > xordering_widget
                    memory > xtests
                    memory > xget_ordering_widget
                    seq > @
                      seq
                        (((unsupported)).apply ((xBaseFormSet)))
                          xordering_widget.write (xHiddenInput)
                        (((unsupported)).apply ((xBaseFormSet)))
                          xget_ordering_widget.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ((xHiddenInput)) ((((unsupported)).apply ("class") ("ordering"))))))
                        xtests.write (((unsupported)).apply ((((unsupported)).apply ((xOrderingAttributeFormSet)) ("<input type=\"hidden\" name=\"form-0-ORDER\">"))) ((((unsupported)).apply ((xOrderingMethodFormSet)) ("<input class=\"ordering\" type=\"hidden\" name=\"form-0-ORDER\">"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xformset_class)) ((xorder_html)))) ((xtests)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) (((xformset_class).x__name__)))))
                            seq
                              xArticleFormSet.write (((unsupported)).apply ((xformset_factory)) ((xArticleForm)) ((xformset_class)) (TRUE))
                              xformset.write (((unsupported)).apply ((xArticleFormSet)) ((xfalse)))
                              bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) (("<li>Title: <input type=\"text\" name=\"form-0-title\"></li><li>Pub date: <input type=\"text\" name=\"form-0-pub_date\">%s</li>".mod (xorder_html))))
                xtest_empty_ordered_fields.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("4") ("choices-INITIAL_FORMS") ("3") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100") ("choices-0-ORDER") ("1") ("choices-1-choice") ("Fergie") ("choices-1-votes") ("900") ("choices-1-ORDER") ("2") ("choices-2-choice") ("The Decemberists") ("choices-2-votes") ("500") ("choices-2-ORDER") ("") ("choices-3-choice") ("Basia Bulat") ("choices-3-votes") ("50") ("choices-3-ORDER") (""))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xordered_forms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (100) ("ORDER") (1) ("choice") ("Calexico"))) ((((unsupported)).apply ("votes") (900) ("ORDER") (2) ("choice") ("Fergie"))) ((((unsupported)).apply ("votes") (500) ("ORDER") ("None: is there a None literal in the EO language?") ("choice") ("The Decemberists"))) ((((unsupported)).apply ("votes") (50) ("ORDER") ("None: is there a None literal in the EO language?") ("choice") ("Basia Bulat"))))))
                xtest_ordering_blank_fieldsets.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("3") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0"))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xordered_forms)) ((((unsupported)).apply)))
                xtest_formset_with_ordering_and_deletion.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xformset
                    memory > xdata
                    memory > xinitial
                    seq > @
                      seq
                        unsupported
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE) (TRUE))
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("choice") ("Calexico") ("votes") (100))) ((((unsupported)).apply ("choice") ("Fergie") ("votes") (900))) ((((unsupported)).apply ("choice") ("The Decemberists") ("votes") (500))))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xinitial)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply (((((xform).xas_ul)).apply)) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("4") ("choices-INITIAL_FORMS") ("3") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100") ("choices-0-ORDER") ("1") ("choices-0-DELETE") ("") ("choices-1-choice") ("Fergie") ("choices-1-votes") ("900") ("choices-1-ORDER") ("2") ("choices-1-DELETE") ("on") ("choices-2-choice") ("The Decemberists") ("choices-2-votes") ("500") ("choices-2-ORDER") ("0") ("choices-2-DELETE") ("") ("choices-3-choice") ("") ("choices-3-votes") ("") ("choices-3-ORDER") ("") ("choices-3-DELETE") (""))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xordered_forms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (500) ("DELETE") ((xfalse)) ("ORDER") (0) ("choice") ("The Decemberists"))) ((((unsupported)).apply ("votes") (100) ("DELETE") ((xfalse)) ("ORDER") (1) ("choice") ("Calexico"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xformset).xdeleted_forms)))) ((((unsupported)).apply ((((unsupported)).apply ("votes") (900) ("DELETE") (TRUE) ("ORDER") (2) ("choice") ("Fergie"))))))
                xtest_invalid_deleted_form_with_ordering.write
                  [xself]
                    memory > xFavoriteDrinkFormset
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xFavoriteDrinkFormset.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (TRUE) (TRUE))
                        xformset.write (((xFavoriteDrinkFormset)).apply ((((unsupported)).apply ("form-0-name") ("") ("form-0-DELETE") ("on") ("form-TOTAL_FORMS") (1) ("form-INITIAL_FORMS") (1) ("form-MIN_NUM_FORMS") (0) ("form-MAX_NUM_FORMS") (1))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xordered_forms)) ((((unsupported)).apply)))
                xtest_clean_hook.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xdata.write (((unsupported)).apply ("drinks-TOTAL_FORMS") ("2") ("drinks-INITIAL_FORMS") ("0") ("drinks-MIN_NUM_FORMS") ("0") ("drinks-MAX_NUM_FORMS") ("0") ("drinks-0-name") ("Gin and Tonic") ("drinks-1-name") ("Gin and Tonic"))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((xdata)) ("drinks"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        (((unsupported)).apply ((xerror)) (((((xformset).xnon_form_errors)).apply)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xerror)))) ("You may only specify a drink once."))
                        (((unsupported)).apply ((((unsupported)).apply ((xdata)) ("drinks-1-name"))) ("Bloody Mary"))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((xdata)) ("drinks"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply)))
                xtest_limiting_max_forms.write
                  [xself]
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (3))
                        xformset.write (((xLimitedFavoriteDrinkFormSet)).apply)
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (3) (0))
                        xformset.write (((xLimitedFavoriteDrinkFormSet)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xforms)) ((((unsupported)).apply)))
                xtest_limited_max_forms_two.write
                  [xself]
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xformset
                    seq > @
                      seq
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (5) (2))
                        xformset.write (((xLimitedFavoriteDrinkFormSet)).apply)
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_limiting_extra_lest_than_max_num.write
                  [xself]
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (1) (2))
                        xformset.write (((xLimitedFavoriteDrinkFormSet)).apply)
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_max_num_with_initial_data.write
                  [xself]
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xformset
                    seq > @
                      seq
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (1))
                        xformset.write (((unsupported)).apply ((xLimitedFavoriteDrinkFormSet)) ((((unsupported)).apply ((((unsupported)).apply ("name") ("Fernet and Coke"))))))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_max_num_zero.write
                  [xself]
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (1) (0))
                        xformset.write (((xLimitedFavoriteDrinkFormSet)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xforms)) ((((unsupported)).apply)))
                xtest_max_num_zero_with_initial.write
                  [xself]
                    memory > xformset
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xinitial
                    seq > @
                      seq
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("name") ("Fernet and Coke"))) ((((unsupported)).apply ("name") ("Bloody Mary"))))
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (1) (0))
                        xformset.write (((unsupported)).apply ((xLimitedFavoriteDrinkFormSet)) ((xinitial)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_more_initial_than_max_num.write
                  [xself]
                    memory > xformset
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xinitial
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xinitial.write (((unsupported)).apply ((((unsupported)).apply ("name") ("Gin Tonic"))) ((((unsupported)).apply ("name") ("Bloody Mary"))) ((((unsupported)).apply ("name") ("Jack and Coke"))))
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (1) (2))
                        xformset.write (((unsupported)).apply ((xLimitedFavoriteDrinkFormSet)) ((xinitial)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_default_absolute_max.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") (2001) ("form-INITIAL_FORMS") ("0") ("form-MAX_NUM_FORMS") ("0"))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((xdata)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("Please submit at most 1000 forms."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xabsolute_max)) (2000))
                xtest_absolute_max.write
                  [xself]
                    memory > xAbsoluteMaxFavoriteDrinksFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("2001") ("form-INITIAL_FORMS") ("0") ("form-MAX_NUM_FORMS") ("0"))
                        xAbsoluteMaxFavoriteDrinksFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (3000))
                        xformset.write (((unsupported)).apply ((xAbsoluteMaxFavoriteDrinksFormSet)) ((xdata)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xforms)))) (2001))
                        (((unsupported)).apply ((((unsupported)).apply ((xdata)) ("form-TOTAL_FORMS"))) ("3001"))
                        xformset.write (((unsupported)).apply ((xAbsoluteMaxFavoriteDrinksFormSet)) ((xdata)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xforms)))) (3000))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("Please submit at most 1000 forms."))))
                xtest_absolute_max_with_max_num.write
                  [xself]
                    memory > xLimitedFavoriteDrinksFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("1001") ("form-INITIAL_FORMS") ("0") ("form-MAX_NUM_FORMS") ("0"))
                        xLimitedFavoriteDrinksFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (30) (1000))
                        xformset.write (((unsupported)).apply ((xLimitedFavoriteDrinksFormSet)) ((xdata)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xforms)))) (1000))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("Please submit at most 30 forms."))))
                xtest_absolute_max_invalid.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "'absolute_max' must be greater or equal to 'max_num'."
                        (((unsupported)).apply ((xmax_num)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") (31))))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xmax_num)))))
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                              (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) ((xmax_num)) (30))
                xtest_more_initial_form_result_in_one.write
                  [xself]
                    memory > xLimitedFavoriteDrinkFormSet
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xLimitedFavoriteDrinkFormSet.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (3) (2))
                        xformset.write (((unsupported)).apply ((xLimitedFavoriteDrinkFormSet)) ((((unsupported)).apply ((((unsupported)).apply ("name") ("Gin Tonic"))))))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((("n".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xform)))) ((xform)) (((xformset).xforms)))))) ((((unsupported)).apply)))
                xtest_management_form_field_names.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCountEqual)).apply (((xManagementForm).xbase_fields)) ((((unsupported)).apply ((xTOTAL_FORM_COUNT)) ((xINITIAL_FORM_COUNT)) ((xMIN_NUM_FORM_COUNT)) ((xMAX_NUM_FORM_COUNT)))))
                xtest_management_form_prefix.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xformset.write (((xFavoriteDrinksFormSet)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformset).xmanagement_form).xprefix)) ("form"))
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("2") ("form-INITIAL_FORMS") ("0") ("form-MIN_NUM_FORMS") ("0") ("form-MAX_NUM_FORMS") ("0"))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((xdata)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformset).xmanagement_form).xprefix)) ("form"))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformset).xmanagement_form).xprefix)) ("form"))
                xtest_non_form_errors.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("drinks-TOTAL_FORMS") ("2") ("drinks-INITIAL_FORMS") ("0") ("drinks-MIN_NUM_FORMS") ("0") ("drinks-MAX_NUM_FORMS") ("0") ("drinks-0-name") ("Gin and Tonic") ("drinks-1-name") ("Gin and Tonic"))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((xdata)) ("drinks"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("You may only specify a drink once."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((((xformset).xnon_form_errors)).apply)))) ("<ul class=\"errorlist nonform\"><li>You may only specify a drink once.</li></ul>"))
                xtest_formset_iteration.write
                  [xself]
                    memory > xChoiceFormset
                    memory > xforms
                    memory > x__iter__
                    memory > xreverse_formset
                    memory > x__getitem__
                    memory > xReverseChoiceFormset
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xChoiceFormset.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (3))
                        xformset.write (((xChoiceFormset)).apply)
                        xforms.write (((xlist)).apply ((xformset)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xforms)) (((xformset).xforms)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xformset)))) ((((xlen)).apply ((xforms)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xformset)) (0))) ((((unsupported)).apply ((xforms)) (0))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                          (((unsupported)).apply ((xformset)) (3))
                        (((unsupported)).apply ((xBaseFormSet)))
                          seq
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xreversed)).apply (((xself).xforms)))))
                            x__getitem__.write
                              [xself xidx]
                                seq > @
                                  (((unsupported)).apply (((((((xsuper)).apply).x__getitem__)).apply ((((((xlen)).apply ((xself))).sub (xidx)).sub 1)))))
                        xReverseChoiceFormset.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) ((xBaseReverseFormSet)) (3))
                        xreverse_formset.write (((xReverseChoiceFormset)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((unsupported)).apply ((xreverse_formset)) (0))))) ((((xstr)).apply ((((unsupported)).apply ((xforms)) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((unsupported)).apply ((xreverse_formset)) (1))))) ((((xstr)).apply ((((unsupported)).apply ((xforms)) ((2.neg)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xreverse_formset)))) ((((xlen)).apply ((xforms)))))
                xtest_formset_nonzero.write
                  [xself]
                    memory > xChoiceFormset
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xChoiceFormset.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (0))
                        xformset.write (((xChoiceFormset)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xforms)))) (0))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((xformset)))
                xtest_formset_splitdatetimefield.write
                  [xself]
                    memory > xSplitDateTimeFormSet
                    memory > xwhen
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xForm)))
                          xwhen.write (((unsupported)).apply ((xSplitDateTimeField)) ((((xdatetime).xdatetime).xnow)))
                        xSplitDateTimeFormSet.write (((xformset_factory)).apply ((xSplitDateTimeForm)))
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("1") ("form-INITIAL_FORMS") ("0") ("form-0-when_0") ("1904-06-16") ("form-0-when_1") ("15:51:33"))
                        xformset.write (((xSplitDateTimeFormSet)).apply ((xdata)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                xtest_formset_error_class.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xErrorList)))
                        xformset.write (((unsupported)).apply ((xFavoriteDrinksFormSet)) ((xCustomErrorList)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xformset).xforms)) (0)).xerror_class)) ((xCustomErrorList)))
                xtest_formset_calls_forms_is_valid.write
                  [xself]
                    memory > xis_valid
                    memory > xAnotherChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xChoice)))
                          xis_valid.write
                            [xself]
                              seq > @
                                seq
                                  (((unsupported)).apply (((xself).xis_valid_called)) (TRUE))
                                  (((unsupported)).apply (((((((xsuper)).apply).xis_valid)).apply)))
                        xAnotherChoiceFormSet.write (((xformset_factory)).apply ((xAnotherChoice)))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("1") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100"))
                        xformset.write (((unsupported)).apply ((xAnotherChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply (((xform).xis_valid_called)) ((xform)) (((xformset).xforms)))))))
                xtest_hard_limit_on_instantiated_forms.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > x_old_DEFAULT_MAX_NUM
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        x_old_DEFAULT_MAX_NUM.write ((xformsets).xDEFAULT_MAX_NUM)
                        (((unsupported)).apply)
                          seq
                            (((unsupported)).apply (((xformsets).xDEFAULT_MAX_NUM)) (2))
                            xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (1))
                            xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((((unsupported)).apply ("choices-TOTAL_FORMS") ("4") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("4") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1") ("choices-2-choice") ("Two") ("choices-2-votes") ("2") ("choices-3-choice") ("Three") ("choices-3-votes") ("3"))) ("choices"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xforms)))) (3))
                            bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                          (((unsupported)).apply (((xformsets).xDEFAULT_MAX_NUM)) ((x_old_DEFAULT_MAX_NUM)))
                xtest_increase_hard_limit.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > x_old_DEFAULT_MAX_NUM
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        x_old_DEFAULT_MAX_NUM.write ((xformsets).xDEFAULT_MAX_NUM)
                        (((unsupported)).apply)
                          seq
                            (((unsupported)).apply (((xformsets).xDEFAULT_MAX_NUM)) (3))
                            xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (4))
                            xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((((unsupported)).apply ("choices-TOTAL_FORMS") ("4") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("4") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1") ("choices-2-choice") ("Two") ("choices-2-votes") ("2") ("choices-3-choice") ("Three") ("choices-3-votes") ("3"))) ("choices"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xformset).xforms)))) (4))
                          (((unsupported)).apply (((xformsets).xDEFAULT_MAX_NUM)) ((x_old_DEFAULT_MAX_NUM)))
                xtest_non_form_errors_run_full_clean.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xclean
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xBaseFormSet)))
                          xclean.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((xValidationError)).apply ("This is a non-form error"))))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) ((xBaseCustomFormSet)))
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("1") ("choices-INITIAL_FORMS") ("0"))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((((xformset).xnon_form_errors)).apply)) ((xErrorList)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xformset).xnon_form_errors)).apply)))) ((((unsupported)).apply ("This is a non-form error"))))
                xtest_validate_max_ignores_forms_marked_for_deletion.write
                  [xself]
                    memory > xfield
                    memory > xCheckFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply ((xForm)))
                          xfield.write (((xIntegerField)).apply)
                        xdata.write (((unsupported)).apply ("check-TOTAL_FORMS") ("2") ("check-INITIAL_FORMS") ("0") ("check-MAX_NUM_FORMS") ("1") ("check-0-field") ("200") ("check-0-DELETE") ("") ("check-1-field") ("50") ("check-1-DELETE") ("on"))
                        xCheckFormSet.write (((unsupported)).apply ((xformset_factory)) ((xCheckForm)) (1) (TRUE) (TRUE))
                        xformset.write (((unsupported)).apply ((xCheckFormSet)) ((xdata)) ("check"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                xtest_formset_total_error_count.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        xdata.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))))) (0))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") (""))))) (1))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ("") ("invalid"))))) (2))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") ("100"))) ((((unsupported)).apply ("Calexico") (""))))) (1))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ("Calexico") (""))) ((((unsupported)).apply ("Calexico") (""))))) (2))))
                        (((unsupported)).apply ((((unsupported)).apply ((xformset_data)) ((xexpected_error_count)))) ((xdata)))
                          seq
                            xformset.write ((((xself).xmake_choiceformset)).apply ((xformset_data)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xtotal_error_count)).apply)) ((xexpected_error_count)))
                xtest_formset_total_error_count_with_non_form_errors.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("2") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1"))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (1) (1) (TRUE))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xtotal_error_count)).apply)) (1))
                        (((unsupported)).apply ((((unsupported)).apply ((xdata)) ("choices-1-votes"))) (""))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xtotal_error_count)).apply)) (2))
                xtest_html_safe.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        xformset.write ((((xself).xmake_choiceformset)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xformset)) ("__html__"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xformset)))) (((((xformset).x__html__)).apply)))
                xtest_can_delete_extra_formset_forms.write
                  [xself]
                    memory > xChoiceFormFormset
                    memory > xformset
                    seq > @
                      seq
                        xChoiceFormFormset.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE) (2))
                        xformset.write (((xChoiceFormFormset)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xformset)))) (2))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (0)).xfields)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (1)).xfields)))
                xtest_disable_delete_extra_formset_forms.write
                  [xself]
                    memory > xChoiceFormFormset
                    memory > xformset
                    seq > @
                      seq
                        xChoiceFormFormset.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) (TRUE) ((xfalse)) (2))
                        xformset.write (((xChoiceFormFormset)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xformset)))) (2))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (0)).xfields)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (1)).xfields)))
                        xformset.write (((unsupported)).apply ((xChoiceFormFormset)) ((((unsupported)).apply ((((unsupported)).apply ("choice") ("Zero") ("votes") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xformset)))) (3))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (0)).xfields)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (1)).xfields)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("DELETE") (((((unsupported)).apply (((xformset).xforms)) (2)).xfields)))
                        xformset.write (((unsupported)).apply ((xChoiceFormFormset)) ((((unsupported)).apply ("form-0-choice") ("Zero") ("form-0-votes") ("0") ("form-0-DELETE") ("on") ("form-1-choice") ("One") ("form-1-votes") ("1") ("form-2-choice") ("") ("form-2-votes") ("") ("form-TOTAL_FORMS") ("3") ("form-INITIAL_FORMS") ("1"))) ((((unsupported)).apply ((((unsupported)).apply ("choice") ("Zero") ("votes") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xcleaned_data)) ((((unsupported)).apply ((((unsupported)).apply ("choice") ("Zero") ("votes") (0) ("DELETE") (TRUE))) ((((unsupported)).apply ("choice") ("One") ("votes") (1))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).x_should_delete_form)).apply ((((unsupported)).apply (((xformset).xforms)) (0))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).x_should_delete_form)).apply ((((unsupported)).apply (((xformset).xforms)) (1))))) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).x_should_delete_form)).apply ((((unsupported)).apply (((xformset).xforms)) (2))))) ((xfalse)))
                xtest_custom_renderer.write
                  [xself]
                    memory > xChoiceFormSet
                    memory > xrenderer
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        xrenderer.write (((xJinja2)).apply)
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-0-choice") ("Zero") ("choices-0-votes") ("") ("choices-1-choice") ("One") ("choices-1-votes") (""))
                        xChoiceFormSet.write (((unsupported)).apply ((xformset_factory)) ((xChoice)) ((xrenderer)))
                        xformset.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xrenderer)) ((xrenderer)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xformset).xforms)) (0)).xrenderer)) ((xrenderer)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformset).xmanagement_form).xrenderer)) ((xrenderer)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xformset).xnon_form_errors)).apply).xrenderer)) ((xrenderer)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformset).xempty_form).xrenderer)) ((xrenderer)))
                xtest_repr.write
                  [xself]
                    memory > xinvalid_formset
                    memory > xinvalid_formset_non_form_errors_only
                    memory > xcases
                    memory > xpartially_invalid_formset
                    memory > xvalid_formset
                    seq > @
                      seq
                        xvalid_formset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("test") (1))))))
                        bogusForceDataize.write ((((xvalid_formset).xfull_clean)).apply)
                        xinvalid_formset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("test") (""))))))
                        bogusForceDataize.write ((((xinvalid_formset).xfull_clean)).apply)
                        xpartially_invalid_formset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("test") ("1"))) ((((unsupported)).apply ("test") (""))))))
                        bogusForceDataize.write ((((xpartially_invalid_formset).xfull_clean)).apply)
                        xinvalid_formset_non_form_errors_only.write (((unsupported)).apply (((xself).xmake_choiceformset)) ((((unsupported)).apply ((((unsupported)).apply ("test") (""))))) ((xChoiceFormsetWithNonFormError)))
                        bogusForceDataize.write ((((xinvalid_formset_non_form_errors_only).xfull_clean)).apply)
                        xcases.write (((unsupported)).apply ((((unsupported)).apply (((((xself).xmake_choiceformset)).apply)) ("<ChoiceFormSet: bound=false valid=Unknown total_forms=1>"))) ((((unsupported)).apply ((((unsupported)).apply (((xself).xmake_choiceformset)) ((((unsupported)).apply ((xformset_factory)) ((xChoice)) (10))))) ("<ChoiceFormSet: bound=false valid=Unknown total_forms=10>"))) ((((unsupported)).apply (((((xself).xmake_choiceformset)).apply ((((unsupported)).apply)))) ("<ChoiceFormSet: bound=True valid=Unknown total_forms=0>"))) ((((unsupported)).apply (((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("test") (1))))))) ("<ChoiceFormSet: bound=True valid=Unknown total_forms=1>"))) ((((unsupported)).apply ((xvalid_formset)) ("<ChoiceFormSet: bound=True valid=True total_forms=1>"))) ((((unsupported)).apply ((xinvalid_formset)) ("<ChoiceFormSet: bound=True valid=false total_forms=1>"))) ((((unsupported)).apply ((xpartially_invalid_formset)) ("<ChoiceFormSet: bound=True valid=false total_forms=2>"))) ((((unsupported)).apply ((xinvalid_formset_non_form_errors_only)) ("<ChoiceFormsetWithNonFormError: bound=True valid=false total_forms=1>"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xformset)) ((xexpected_repr)))) ((xcases)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xexpected_repr)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xformset)))) ((xexpected_repr)))
                xtest_repr_do_not_trigger_validation.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        xformset.write ((((xself).xmake_choiceformset)).apply ((((unsupported)).apply ((((unsupported)).apply ("test") (1))))))
                        (((unsupported)).apply ((((((xmock).xpatch).xobject)).apply ((xformset)) ("full_clean"))) ((xmocked_full_clean)))
                          seq
                            bogusForceDataize.write (((xrepr)).apply ((xformset)))
                            bogusForceDataize.write ((((xmocked_full_clean).xassert_not_called)).apply)
                            bogusForceDataize.write ((((xformset).xis_valid)).apply)
                            bogusForceDataize.write ((((xmocked_full_clean).xassert_called)).apply)
            (((unsupported)).apply ((xFormsFormsetTestCase)) ((xjinja2_tests)))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xsetUp.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("1") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-MAX_NUM_FORMS") ("0") ("choices-0-choice") ("Calexico") ("choices-0-votes") ("100"))
                        (((unsupported)).apply (((xself).xformset)) ((((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))))
                        (((unsupported)).apply (((xself).xmanagement_form_html)) ("<input type=\"hidden\" name=\"choices-TOTAL_FORMS\" value=\"1\"><input type=\"hidden\" name=\"choices-INITIAL_FORMS\" value=\"0\"><input type=\"hidden\" name=\"choices-MIN_NUM_FORMS\" value=\"0\"><input type=\"hidden\" name=\"choices-MAX_NUM_FORMS\" value=\"0\">"))
                xtest_as_table.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((((xself).xformset).xas_table)).apply)) ((((xself).xmanagement_form_html).add "<tr><th>Choice:</th><td><input type=\"text\" name=\"choices-0-choice\" value=\"Calexico\"></td></tr><tr><th>Votes:</th><td><input type=\"number\" name=\"choices-0-votes\" value=\"100\"></td></tr>")))
                xtest_as_p.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((((xself).xformset).xas_p)).apply)) ((((xself).xmanagement_form_html).add "<p>Choice: <input type=\"text\" name=\"choices-0-choice\" value=\"Calexico\"></p><p>Votes: <input type=\"number\" name=\"choices-0-votes\" value=\"100\"></p>")))
                xtest_as_ul.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((((xself).xformset).xas_ul)).apply)) ((((xself).xmanagement_form_html).add "<li>Choice: <input type=\"text\" name=\"choices-0-choice\" value=\"Calexico\"></li><li>Votes: <input type=\"number\" name=\"choices-0-votes\" value=\"100\"></li>")))
            (((unsupported)).apply ((xFormsetAsTagTests)) ((xjinja2_tests)))
            (((unsupported)).apply ((xForm)))
              seq
                xtitle.write (((xCharField)).apply)
                xpub_date.write (((xDateField)).apply)
            xArticleFormSet.write (((xformset_factory)).apply ((xArticleForm)))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_no_data_error.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        xformset.write (((xArticleFormSet)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("ManagementForm data is missing or has been tampered with. Missing fields: form-TOTAL_FORMS, form-INITIAL_FORMS. You may need to file a bug report if the issue persists."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((xstr)).apply ((xformset)))) ("<tr><td colspan=\"2\"><ul class=\"errorlist nonfield\"><li>(Hidden field TOTAL_FORMS) This field is required.</li><li>(Hidden field INITIAL_FORMS) This field is required.</li></ul><input type=\"hidden\" name=\"form-TOTAL_FORMS\" id=\"id_form-TOTAL_FORMS\"><input type=\"hidden\" name=\"form-INITIAL_FORMS\" id=\"id_form-INITIAL_FORMS\"><input type=\"hidden\" name=\"form-MIN_NUM_FORMS\" id=\"id_form-MIN_NUM_FORMS\"><input type=\"hidden\" name=\"form-MAX_NUM_FORMS\" id=\"id_form-MAX_NUM_FORMS\"></td></tr>n"))
                xtest_management_form_invalid_data.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("two") ("form-INITIAL_FORMS") ("one"))
                        xformset.write (((xArticleFormSet)).apply ((xdata)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("ManagementForm data is missing or has been tampered with. Missing fields: form-TOTAL_FORMS, form-INITIAL_FORMS. You may need to file a bug report if the issue persists."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((xstr)).apply ((xformset)))) ("<tr><td colspan=\"2\"><ul class=\"errorlist nonfield\"><li>(Hidden field TOTAL_FORMS) Enter a whole number.</li><li>(Hidden field INITIAL_FORMS) Enter a whole number.</li></ul><input type=\"hidden\" name=\"form-TOTAL_FORMS\" value=\"two\" id=\"id_form-TOTAL_FORMS\"><input type=\"hidden\" name=\"form-INITIAL_FORMS\" value=\"one\" id=\"id_form-INITIAL_FORMS\"><input type=\"hidden\" name=\"form-MIN_NUM_FORMS\" id=\"id_form-MIN_NUM_FORMS\"><input type=\"hidden\" name=\"form-MAX_NUM_FORMS\" id=\"id_form-MAX_NUM_FORMS\"></td></tr>n"))
                xtest_customize_management_form_error.write
                  [xself]
                    memory > xformset
                    seq > @
                      seq
                        xformset.write (((unsupported)).apply ((xArticleFormSet)) ((((unsupported)).apply)) ((((unsupported)).apply ("missing_management_form") ("customized"))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xformset).xis_valid)).apply)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xformset).xnon_form_errors)).apply)) ((((unsupported)).apply ("customized"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset).xerrors)) ((((unsupported)).apply)))
                xtest_with_management_data_attrs_work_fine.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("1") ("form-INITIAL_FORMS") ("0"))
                        xformset.write (((xArticleFormSet)).apply ((xdata)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) (((((xformset).xinitial_form_count)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((((xformset).xtotal_form_count)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xformset).xis_bound)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((unsupported)).apply (((xformset).xforms)) (0)).xis_bound)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((unsupported)).apply (((xformset).xforms)) (0)).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply)))) (((xformset).xcleaned_data)))
                xtest_form_errors_are_caught_by_formset.write
                  [xself]
                    memory > xdata
                    memory > xformset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("2") ("form-INITIAL_FORMS") ("0") ("form-0-title") ("Test") ("form-0-pub_date") ("1904-06-16") ("form-1-title") ("Test") ("form-1-pub_date") (""))
                        xformset.write (((xArticleFormSet)).apply ((xdata)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply ("pub_date") ((((unsupported)).apply ("This field is required."))))))) (((xformset).xerrors)))
                xtest_empty_forms_are_unbound.write
                  [xself]
                    memory > xbound_formset
                    memory > xempty_forms
                    memory > xdata
                    memory > xunbound_formset
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("form-TOTAL_FORMS") ("1") ("form-INITIAL_FORMS") ("0") ("form-0-title") ("Test") ("form-0-pub_date") ("1904-06-16"))
                        xunbound_formset.write (((xArticleFormSet)).apply)
                        xbound_formset.write (((xArticleFormSet)).apply ((xdata)))
                        xempty_forms.write (((unsupported)).apply (((xunbound_formset).xempty_form)) (((xbound_formset).xempty_form)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((unsupported)).apply ((xempty_forms)) (0)).xis_bound)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((unsupported)).apply ((xempty_forms)) (1)).xis_bound)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((((((unsupported)).apply ((xempty_forms)) (0)).xas_p)).apply)) (((((((unsupported)).apply ((xempty_forms)) (1)).xas_p)).apply)))
            (((unsupported)).apply ((xTestIsBoundBehavior)) ((xjinja2_tests)))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_empty_formset_is_valid.write
                  [xself]
                    memory > xformset2
                    memory > xEmptyFsetWontValidateFormset
                    memory > xclean
                    memory > xformset
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xBaseFormSet)))
                          xclean.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((xValidationError)).apply ("Clean method called"))))
                        xEmptyFsetWontValidateFormset.write (((unsupported)).apply ((xformset_factory)) ((xFavoriteDrinkForm)) (0) ((xEmptyFsetWontValidate)))
                        xformset.write (((unsupported)).apply ((xEmptyFsetWontValidateFormset)) ((((unsupported)).apply ("form-INITIAL_FORMS") ("0") ("form-TOTAL_FORMS") ("0"))) ("form"))
                        xformset2.write (((unsupported)).apply ((xEmptyFsetWontValidateFormset)) ((((unsupported)).apply ("form-INITIAL_FORMS") ("0") ("form-TOTAL_FORMS") ("1") ("form-0-name") ("bah"))) ("form"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xformset2).xis_valid)).apply)))
                xtest_empty_formset_media.write
                  [xself]
                    memory > xjs
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xForm)))
                          (((unsupported)).apply)
                            xjs.write (((unsupported)).apply ("some-file.js"))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("some-file.js") ((((xstr)).apply (((((((unsupported)).apply ((xformset_factory)) ((xMediaForm)) (0))).apply).xmedia)))))
                xtest_empty_formset_is_multipart.write
                  [xself]
                    memory > xfile
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xForm)))
                          xfile.write (((xFileField)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((unsupported)).apply ((xformset_factory)) ((xFileForm)) (0))).apply).xis_multipart)).apply)))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_valid.write
                  [xself]
                    memory > xdata
                    memory > xexpected_errors
                    memory > xformset1
                    memory > xformset2
                    memory > xChoiceFormSet
                    seq > @
                      seq
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-0-choice") ("Zero") ("choices-0-votes") ("0") ("choices-1-choice") ("One") ("choices-1-votes") ("1"))
                        xChoiceFormSet.write (((xformset_factory)).apply ((xChoice)))
                        xformset1.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        xformset2.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xall_valid)).apply ((((unsupported)).apply ((xformset1)) ((xformset2)))))) (TRUE))
                        xexpected_errors.write (((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset1).x_errors)) ((xexpected_errors)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset2).x_errors)) ((xexpected_errors)))
                xtest_invalid.write
                  [xself]
                    memory > xdata
                    memory > xexpected_errors
                    memory > xformset1
                    memory > xformset2
                    memory > xChoiceFormSet
                    seq > @
                      seq
                        unsupported
                        xdata.write (((unsupported)).apply ("choices-TOTAL_FORMS") ("2") ("choices-INITIAL_FORMS") ("0") ("choices-MIN_NUM_FORMS") ("0") ("choices-0-choice") ("Zero") ("choices-0-votes") ("") ("choices-1-choice") ("One") ("choices-1-votes") (""))
                        xChoiceFormSet.write (((xformset_factory)).apply ((xChoice)))
                        xformset1.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        xformset2.write (((unsupported)).apply ((xChoiceFormSet)) ((xdata)) ((xfalse)) ("choices"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xall_valid)).apply ((((unsupported)).apply ((xformset1)) ((xformset2)))))) ((xfalse)))
                        xexpected_errors.write (((unsupported)).apply ((((unsupported)).apply ("votes") ((((unsupported)).apply ("This field is required."))))) ((((unsupported)).apply ("votes") ((((unsupported)).apply ("This field is required."))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset1).x_errors)) ((xexpected_errors)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xformset2).x_errors)) ((xexpected_errors)))