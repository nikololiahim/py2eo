memory > xDbcheckError
memory > xAttributeError
memory > xc3
memory > xexpr
memory > xKeyError
memory > xException
memory > xcompile
memory > xkwds
memory > xNameLookupTracer
memory > xSyntaxError
memory > xobject
memory > xC
memory > xMiscDecorators
memory > xopname
memory > xstr
memory > xc2
memory > xNotImplementedError
memory > xeval
memory > xargs
memory > xres
memory > xsetattr
memory > xunittest
memory > xexc
memory > xmap
memory > xNameError
memory > xc1
memory > xdict
memory > xTypeError
memory > x__name__
[] > test_decorators
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_staticmethod_function
        memory > xtest_double
        memory > xcountcalls
        memory > xmemoize
        memory > xtest_argforms
        memory > xtest_simple
        memory > xtest_memoize
        memory > xdbcheck
        memory > xtest_single
        memory > xtest_order
        memory > xfuncattrs
        memory > xtest_dbcheck
        memory > xtest_dotted
        memory > xtest_errors
        memory > xtest_eval_order
        memory > xauthor
        memory > x__init__
        seq > @
          seq
            (((unsupported)).apply)
            xfuncattrs.write
              []
                memory > xdecorate
                seq > @
                  (((unsupported)).apply)
                    xdecorate.write
                      [xfunc]
                        seq > @
                          seq
                            bogusForceDataize.write (((((xfunc).x__dict__).xupdate)).apply ((xkwds)))
                            (((unsupported)).apply ((xfunc)))
                    (((unsupported)).apply ((xdecorate)))
            (((unsupported)).apply ((xobject)))
              xauthor.write
                [xname]
                  memory > xdecorate
                  seq > @
                    (((unsupported)).apply)
                      xdecorate.write
                        [xfunc]
                          seq > @
                            seq
                              (((unsupported)).apply ((((unsupported)).apply (((xfunc).x__dict__)) ("author"))) ((xname)))
                              (((unsupported)).apply ((xfunc)))
                      (((unsupported)).apply ((xdecorate)))
            (((unsupported)).apply ((xException)))
              x__init__.write
                [xself xexprstr xfunc xargs xkwds]
                  seq > @
                    bogusForceDataize.write ((((xException).x__init__)).apply ((xself)) (("dbcheck %r failed (func=%s args=%s kwds=%s)".mod (((unsupported)).apply ((xexprstr)) ((xfunc)) ((xargs)) ((xkwds))))))
            xdbcheck.write
              [xexprstr xglobals xlocals]
                memory > xdecorate
                seq > @
                  (((unsupported)).apply)
                    unsupported
                    xdecorate.write
                      [xfunc]
                        memory > xexpr
                        memory > xcheck
                        seq > @
                          seq
                            xexpr.write (((xcompile)).apply ((xexprstr)) (("dbcheck-%s".mod ((xfunc).x__name__))) ("eval"))
                            xcheck.write
                              []
                                seq > @
                                  (((unsupported)).apply)
                                    ((((xeval)).apply ((xexpr)) ((xglobals)) ((xlocals))).not).if
                                      (((unsupported)).apply ((((xDbcheckError)).apply ((xexprstr)) ((xfunc)) ((xargs)) ((xkwds)))))
                                    (((unsupported)).apply ((((xfunc)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwds)))))))
                            (((unsupported)).apply ((xcheck)))
                    (((unsupported)).apply ((xdecorate)))
            xcountcalls.write
              [xcounts]
                memory > xdecorate
                seq > @
                  seq
                    unsupported
                    xdecorate.write
                      [xfunc]
                        memory > xcall
                        memory > xfunc_name
                        seq > @
                          seq
                            xfunc_name.write ((xfunc).x__name__)
                            (((unsupported)).apply ((((unsupported)).apply ((xcounts)) ((xfunc_name)))) (0))
                            xcall.write
                              []
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply ((xcounts)) ((xfunc_name)))) (1))
                                    (((unsupported)).apply ((((xfunc)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwds)))))))
                            (((unsupported)).apply (((xcall).x__name__)) ((xfunc_name)))
                            (((unsupported)).apply ((xcall)))
                    (((unsupported)).apply ((xdecorate)))
            xmemoize.write
              [xfunc]
                memory > xcall
                memory > xsaved
                seq > @
                  seq
                    xsaved.write (((unsupported)).apply)
                    xcall.write
                      []
                        memory > xres
                        seq > @
                          (((unsupported)).apply)
                            (((unsupported)).apply ((xKeyError)) ((xTypeError)))
                              (((unsupported)).apply ((((unsupported)).apply ((xsaved)) ((xargs)))))
                              seq
                                xres.write (((xfunc)).apply ((((unsupported)).apply ((xargs)))))
                                (((unsupported)).apply ((((unsupported)).apply ((xsaved)) ((xargs)))) ((xres)))
                                (((unsupported)).apply ((xres)))
                              (((unsupported)).apply ((((xfunc)).apply ((((unsupported)).apply ((xargs)))))))
                    (((unsupported)).apply (((xcall).x__name__)) (((xfunc).x__name__)))
                    (((unsupported)).apply ((xcall)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_single.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          xfoo.write
                            []
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC).xfoo)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xC)).apply).xfoo)).apply)) (42))
                xtest_staticmethod_function.write
                  [xself]
                    memory > xnotamethod
                    seq > @
                      seq
                        xnotamethod.write
                          [xx]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xnotamethod)) (1))
                xtest_dotted.write
                  [xself]
                    memory > xdecorators
                    memory > xfoo
                    seq > @
                      seq
                        xdecorators.write (((xMiscDecorators)).apply)
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xfoo)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfoo).xauthor)) ("Cleese"))
                xtest_argforms.write
                  [xself]
                    memory > xf3
                    memory > xnoteargs
                    memory > xf2
                    memory > xkwds
                    memory > xf1
                    memory > xargs
                    seq > @
                      seq
                        xnoteargs.write
                          []
                            memory > xdecorate
                            seq > @
                              (((unsupported)).apply)
                                xdecorate.write
                                  [xfunc]
                                    seq > @
                                      seq
                                        bogusForceDataize.write (((xsetattr)).apply ((xfunc)) ("dbval") ((((unsupported)).apply ((xargs)) ((xkwds)))))
                                        (((unsupported)).apply ((xfunc)))
                                (((unsupported)).apply ((xdecorate)))
                        xargs.write (((unsupported)).apply ("Now") ("is") ("the") ("time"))
                        xkwds.write (((unsupported)).apply ((xdict)) (1) (2))
                        xf1.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xf1)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xf1).xdbval)) ((((unsupported)).apply ((xargs)) ((xkwds)))))
                        xf2.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (84))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xf2)).apply)) (84))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xf2).xdbval)) ((((unsupported)).apply ((((unsupported)).apply ("terry") ("gilliam"))) ((((unsupported)).apply ((xdict)) ("idle") ("cleese"))))))
                        xf3.write
                          []
                            seq > @
                              (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xf3).xdbval)) ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply)))))
                xtest_dbcheck.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write
                          [xa xb]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (((xa).sub (xb))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xf)).apply (1) (2))) (3))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xDbcheckError)) ((xf)) (1) ("None: is there a None literal in the EO language?"))
                xtest_memoize.write
                  [xself]
                    memory > xcounts
                    memory > xdouble
                    seq > @
                      seq
                        xcounts.write (((unsupported)).apply)
                        xdouble.write
                          [xx]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (((xx).mul 2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xdouble).x__name__)) ("double"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcounts)) ((((unsupported)).apply ((xdict)) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdouble)).apply (2))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xcounts)) ("double"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdouble)).apply (2))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xcounts)) ("double"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdouble)).apply (3))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xcounts)) ("double"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdouble)).apply ((((unsupported)).apply (10))))) ((((unsupported)).apply (10) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xcounts)) ("double"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdouble)).apply ((((unsupported)).apply (10))))) ((((unsupported)).apply (10) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xcounts)) ("double"))) (4))
                xtest_errors.write
                  [xself]
                    memory > xcode
                    memory > xcontext
                    memory > xcodestr
                    memory > xunimp
                    seq > @
                      seq
                        (((unsupported)).apply ((xexpr)) ((((unsupported)).apply ("1-2") ("x[3]") ("(1, 2)"))))
                          seq
                            bogusForceDataize.write (((xcompile)).apply ((xexpr)) ("testexpr") ("exec"))
                            xcodestr.write ("@%sndef f(): pass".mod (xexpr))
                            bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSyntaxError)) ((xcompile)) ((xcodestr)) ("test") ("exec"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSyntaxError)) ((xcompile)) ("@f1 @f2ndef f(): pass") ("test") ("exec"))
                        xunimp.write
                          [xfunc]
                            seq > @
                              (((unsupported)).apply ((xNotImplementedError)))
                        xcontext.write (((unsupported)).apply ((xdict)) ("None: is there a None literal in the EO language?") ((xunimp)))
                        (((unsupported)).apply ((((unsupported)).apply ((xexpr)) ((xexc)))) ((((unsupported)).apply ((((unsupported)).apply ("undef") ((xNameError)))) ((((unsupported)).apply ("nullval") ((xTypeError)))) ((((unsupported)).apply ("nullval.attr") ((xAttributeError)))) ((((unsupported)).apply ("unimp") ((xNotImplementedError)))))))
                          seq
                            xcodestr.write ("@%sndef f(): passnassert f() is None".mod (xexpr))
                            xcode.write (((xcompile)).apply ((xcodestr)) ("test") ("exec"))
                            bogusForceDataize.write ((((xself).xassertRaises)).apply ((xexc)) ((xeval)) ((xcode)) ((xcontext)))
                xtest_double.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xC)).apply).xfoo)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC).xfoo).xabc)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC).xfoo).xxyz)) ("haha"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC).xfoo).xbooh)) (42))
                xtest_order.write
                  [xself]
                    memory > xcallnum
                    memory > xfoo
                    seq > @
                      seq
                        xcallnum.write
                          [xnum]
                            memory > xdeco
                            seq > @
                              seq
                                (((unsupported)).apply)
                                xdeco.write
                                  [xfunc]
                                    seq > @
                                      (((unsupported)).apply ((((unsupported)).apply ((xnum)))))
                                (((unsupported)).apply ((xdeco)))
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xfoo)).apply)) (2) ("Application order of decorators is incorrect"))
                xtest_eval_order.write
                  [xself]
                    memory > x__getattr__
                    memory > xbar
                    memory > xmake_decorator
                    memory > xactions
                    memory > x__init__
                    memory > xexpected_actions
                    memory > xfoo
                    seq > @
                      seq
                        xactions.write (((unsupported)).apply)
                        xmake_decorator.write
                          [xtag]
                            memory > xdecorate
                            seq > @
                              seq
                                bogusForceDataize.write ((((xactions).xappend)).apply (("makedec".sub (xtag))))
                                xdecorate.write
                                  [xfunc]
                                    seq > @
                                      seq
                                        bogusForceDataize.write ((((xactions).xappend)).apply (("calldec".sub (xtag))))
                                        (((unsupported)).apply ((xfunc)))
                                (((unsupported)).apply ((xdecorate)))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)).apply (((xself).xindex)) ((xindex)))
                            x__getattr__.write
                              [xself xfname]
                                seq > @
                                  seq
                                    ((xfname).eq "make_decorator").if
                                      (((unsupported)).apply ((((unsupported)).apply ((xopname)) ((xres)))) ((((unsupported)).apply ("evalname") ((xmake_decorator)))))
                                      ((xfname).eq "arg").if
                                        (((unsupported)).apply ((((unsupported)).apply ((xopname)) ((xres)))) ((((unsupported)).apply ("evalargs") ((((xstr)).apply (((xself).xindex)))))))
                                        (((unsupported)).apply (FALSE) (("Unknown attrname %s".mod (xfname))))
                                    bogusForceDataize.write ((((xactions).xappend)).apply (("%s%d".mod (((unsupported)).apply ((xopname)) (((xself).xindex))))))
                                    (((unsupported)).apply ((xres)))
                        (((unsupported)).apply ((((unsupported)).apply ((xc1)) ((xc2)) ((xc3)))) ((((xmap)).apply ((xNameLookupTracer)) ((((unsupported)).apply (1) (2) (3))))))
                        xexpected_actions.write (((unsupported)).apply ("evalname1") ("evalargs1") ("makedec1") ("evalname2") ("evalargs2") ("makedec2") ("evalname3") ("evalargs3") ("makedec3") ("calldec3") ("calldec2") ("calldec1"))
                        xactions.write (((unsupported)).apply)
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xfoo)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xactions)) ((xexpected_actions)))
                        xactions.write (((unsupported)).apply)
                        xbar.write
                          []
                            seq > @
                              (((unsupported)).apply (42))
                        xbar.write ((((((xc1).xmake_decorator)).apply (((xc1).xarg)))).apply (((((((xc2).xmake_decorator)).apply (((xc2).xarg)))).apply (((((((xc3).xmake_decorator)).apply (((xc3).xarg)))).apply ((xbar)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xbar)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xactions)) ((xexpected_actions)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_simple.write
                  [xself]
                    memory > xplain
                    seq > @
                      seq
                        xplain.write
                          [xx]
                            seq > @
                              seq
                                (((unsupported)).apply (((xx).xextra)) ("Hello"))
                                (((unsupported)).apply ((xx)))
                        (((unsupported)).apply ((xobject)) ((xplain)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).xextra)) ("Hello"))
                xtest_double.write
                  [xself]
                    memory > xadd_five
                    memory > xten
                    seq > @
                      seq
                        xten.write
                          [xx]
                            seq > @
                              seq
                                (((unsupported)).apply (((xx).xextra)) (10))
                                (((unsupported)).apply ((xx)))
                        xadd_five.write
                          [xx]
                            seq > @
                              seq
                                (((unsupported)).apply (((xx).xextra)) (5))
                                (((unsupported)).apply ((xx)))
                        (((unsupported)).apply ((xobject)) ((xadd_five)) ((xten)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).xextra)) (15))
                xtest_order.write
                  [xself]
                    memory > xapplied_second
                    memory > xapplied_first
                    seq > @
                      seq
                        xapplied_first.write
                          [xx]
                            seq > @
                              seq
                                (((unsupported)).apply (((xx).xextra)) ("first"))
                                (((unsupported)).apply ((xx)))
                        xapplied_second.write
                          [xx]
                            seq > @
                              seq
                                (((unsupported)).apply (((xx).xextra)) ("second"))
                                (((unsupported)).apply ((xx)))
                        (((unsupported)).apply ((xobject)) ((xapplied_second)) ((xapplied_first)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).xextra)) ("second"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)