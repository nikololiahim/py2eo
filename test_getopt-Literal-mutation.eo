memory > xtypes
memory > xshortopts
memory > xopts
memory > xoption
memory > xverbose
memory > xhas_arg
memory > xEnvironmentVarGuard
memory > xlongopts
memory > xargs
memory > xunittest
memory > xkwargs
memory > x__name__
memory > xgetopt
memory > xobject
memory > xrun_doctest
[] > test_getopt
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_do_shorts
        memory > xsetUp
        memory > xtest_short_has_arg
        memory > xtest_issue4629
        memory > xtest_libref_examples
        memory > xsentinel
        memory > xtest_gnu_getopt
        memory > xassertError
        memory > xtest_long_has_args
        memory > xtest_getopt
        memory > xtearDown
        memory > xtest_do_longs
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xsentinel.write (((xobject)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xenv)) ((((xEnvironmentVarGuard)).apply)))
                        (((unsupported)).apply ("POSIXLY_CORRECT") (((xself).xenv))).if
                          (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xenv)) ("POSIXLY_CORRECT"))))))))
                xtearDown.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xself).xenv).x__exit__)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xenv)))))))
                xassertError.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply (((xgetopt).xGetoptError)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                xtest_short_has_arg.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xgetopt).xshort_has_arg)).apply ("a") ("a:"))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xgetopt).xshort_has_arg)).apply ("a") ("a"))))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xshort_has_arg)) ("a") ("b"))
                xtest_long_has_args.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xhas_arg)) ((xoption)))) (((((xgetopt).xlong_has_args)).apply ("abc") ((((unsupported)).apply ("abc="))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((xhas_arg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoption)) ("abc"))
                        (((unsupported)).apply ((((unsupported)).apply ((xhas_arg)) ((xoption)))) (((((xgetopt).xlong_has_args)).apply ("abc") ((((unsupported)).apply ("abc"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((xhas_arg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoption)) ("abc"))
                        (((unsupported)).apply ((((unsupported)).apply ((xhas_arg)) ((xoption)))) (((((xgetopt).xlong_has_args)).apply ("abc") ((((unsupported)).apply ("abcd"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((xhas_arg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoption)) ("abcd"))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xlong_has_args)) ("abc") ((((unsupported)).apply ("def"))))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xlong_has_args)) ("abc") ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xlong_has_args)) ("abc") ((((unsupported)).apply ("abcd") ("abcde"))))
                xtest_do_shorts.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_shorts)).apply ((((unsupported)).apply)) ("a") ("a") ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") (""))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_shorts)).apply ((((unsupported)).apply)) ("a1") ("a:") ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_shorts)).apply ((((unsupported)).apply)) ("a") ("a:") ((((unsupported)).apply ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_shorts)).apply ((((unsupported)).apply)) ("a") ("a:") ((((unsupported)).apply ("1") ("2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ("2"))))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xdo_shorts)) ((((unsupported)).apply)) ("a1") ("a") ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xdo_shorts)) ((((unsupported)).apply)) ("a") ("a:") ((((unsupported)).apply)))
                xtest_do_longs.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_longs)).apply ((((unsupported)).apply)) ("abc") ((((unsupported)).apply ("abc"))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("--abc") (""))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_longs)).apply ((((unsupported)).apply)) ("abc=1") ((((unsupported)).apply ("abc="))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("--abc") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_longs)).apply ((((unsupported)).apply)) ("abc=1") ((((unsupported)).apply ("abcd="))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("--abcd") ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_longs)).apply ((((unsupported)).apply)) ("abc") ((((unsupported)).apply ("ab") ("abc") ("abcd"))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("--abc") (""))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xdo_longs)).apply ((((unsupported)).apply)) ("foo=42") ((((unsupported)).apply ("foo-bar") ("foo="))) ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("--foo") ("42"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xdo_longs)) ((((unsupported)).apply)) ("abc=1") ((((unsupported)).apply ("abc"))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xdo_longs)) ((((unsupported)).apply)) ("abc") ((((unsupported)).apply ("abc="))) ((((unsupported)).apply)))
                xtest_getopt.write
                  [xself]
                    memory > xcmdline
                    seq > @
                      seq
                        xcmdline.write (((unsupported)).apply ("-a") ("1") ("-b") ("--alpha=2") ("--beta") ("-a") ("3") ("-a") ("") ("--beta") ("arg1") ("arg2"))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xgetopt)).apply ((xcmdline)) ("a:b") ((((unsupported)).apply ("alpha=") ("beta"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") ("1"))) ((((unsupported)).apply ("-b") (""))) ((((unsupported)).apply ("--alpha") ("2"))) ((((unsupported)).apply ("--beta") (""))) ((((unsupported)).apply ("-a") ("3"))) ((((unsupported)).apply ("-a") (""))) ((((unsupported)).apply ("--beta") (""))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ("arg1") ("arg2"))))
                        bogusForceDataize.write ((((xself).xassertError)).apply (((xgetopt).xgetopt)) ((xcmdline)) ("a:b") ((((unsupported)).apply ("alpha") ("beta"))))
                xtest_gnu_getopt.write
                  [xself]
                    memory > xcmdline
                    seq > @
                      seq
                        xcmdline.write (((unsupported)).apply ("-a") ("arg1") ("-b") ("1") ("--alpha") ("--beta=2"))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xgnu_getopt)).apply ((xcmdline)) ("ab:") ((((unsupported)).apply ("alpha") ("beta="))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ("arg1"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") (""))) ((((unsupported)).apply ("-b") ("1"))) ((((unsupported)).apply ("--alpha") (""))) ((((unsupported)).apply ("--beta") ("2"))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xgnu_getopt)).apply ((((unsupported)).apply ("-a") ("-") ("-b") ("-"))) ("ab:") ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ("-"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") (""))) ((((unsupported)).apply ("-b") ("-"))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xgnu_getopt)).apply ((xcmdline)) ("+ab:") ((((unsupported)).apply ("alpha") ("beta="))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") (""))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ("arg1") ("-b") ("1") ("--alpha") ("--beta=2"))))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xenv)) ("POSIXLY_CORRECT"))) ("1"))
                        (((unsupported)).apply ((((unsupported)).apply ((xopts)) ((xargs)))) (((((xgetopt).xgnu_getopt)).apply ((xcmdline)) ("ab:") ((((unsupported)).apply ("alpha") ("beta="))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xopts)) ((((unsupported)).apply ((((unsupported)).apply ("-a") (""))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ("arg1") ("-b") ("1") ("--alpha") ("--beta=2"))))
                xtest_libref_examples.write
                  [xself]
                    memory > xs
                    memory > xm
                    seq > @
                      seq
                        xs.write (((unsupported)).apply)
                        (((unsupported)).apply)
                        xm.write ((((xtypes).xModuleType)).apply ("libreftest") ((xs)))
                        bogusForceDataize.write (((xrun_doctest)).apply ((xm)) ((xverbose)))
                xtest_issue4629.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xlongopts)) ((xshortopts)))) (((((xgetopt).xgetopt)).apply ((((unsupported)).apply ("--help="))) ("") ((((unsupported)).apply ("help="))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlongopts)) ((((unsupported)).apply ((((unsupported)).apply ("--help") (""))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xlongopts)) ((xshortopts)))) (((((xgetopt).xgetopt)).apply ((((unsupported)).apply ("--help=x"))) ("") ((((unsupported)).apply ("help="))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlongopts)) ((((unsupported)).apply ((((unsupported)).apply ("--help") ("x"))))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply (((xgetopt).xGetoptError)) (((xgetopt).xgetopt)) ((((unsupported)).apply ("--help="))) ("") ((((unsupported)).apply ("help"))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)