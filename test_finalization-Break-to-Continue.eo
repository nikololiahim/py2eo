memory > xC
memory > xNonGC
memory > xSuicidalSelfCycle
memory > xwr
memory > xNonGCSimpleBase
memory > xLegacyResurrector
memory > xTestBase
memory > xSuicidalChained
memory > xe
memory > xobject
memory > xImportError
memory > xSimpleSelfCycle
memory > xrange
memory > xChainedBase
memory > xLegacyBase
memory > xNonGCResurrector
memory > xSimple
memory > xSimpleResurrector
memory > xLegacySelfCycle
memory > xException
memory > xSelfCycleBase
memory > xx
memory > xi
memory > xsuper
memory > xs
memory > xsupport
memory > xSimpleChained
memory > xSelfCycleResurrector
memory > xsorted
memory > xcls
memory > xgc
memory > xSimpleBase
memory > xweakref
memory > xid
memory > xChainedResurrector
memory > xunittest
memory > xlen
memory > xLegacy
memory > xisinstance
memory > xTypeError
memory > x__name__
[] > test_finalization
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_homogenous_suicidal
        memory > xassert_garbage
        memory > xassert_del_calls
        memory > xtest_legacy_self_cycle
        memory > xtest_heterogenous_suicidal_two
        memory > x__slots__
        memory > xchain
        memory > xsurvivors
        memory > xbuild_chain
        memory > xtearDown
        memory > x_cleanup
        memory > xside_effect
        memory > xtest_non_gc_resurrect
        memory > xassert_survivors
        memory > xcheck_non_resurrecting_chain
        memory > xcheck_resurrecting_chain
        memory > xclear_survivors
        memory > xwith_tp_del
        memory > xtest_legacy
        memory > xtest_simple_resurrect
        memory > xtest_simple
        memory > xerrors
        memory > xtest_heterogenous_suicidal_one
        memory > xwithout_gc
        memory > xtest_heterogenous_resurrect_three
        memory > x_cleaning
        memory > x__tp_del__
        memory > xtest
        memory > xtest_legacy_resurrect
        memory > xsetUp
        memory > xtest_homogenous
        memory > xdel_calls
        memory > xcheck_sanity
        memory > xtest_heterogenous_resurrect_one
        memory > x__init__
        memory > xtest_simple_suicide
        memory > xassert_tp_del_calls
        memory > xtest_heterogenous_resurrect_two
        memory > xtp_del_calls
        memory > xtest_non_gc
        memory > x__del__
        memory > xtest_homogenous_resurrect
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xImportError)))
              (((unsupported)).apply)
              xwith_tp_del.write
                [xcls]
                  memory > x__new__
                  seq > @
                    seq
                      (((unsupported)).apply ((xobject)))
                        x__new__.write
                          [xcls]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xTypeError)).apply ("requires _testcapi.with_tp_del"))))
                      (((unsupported)).apply ((xC)))
            (((unsupported)).apply ((xImportError)))
              (((unsupported)).apply)
              xwithout_gc.write
                [xcls]
                  memory > x__new__
                  seq > @
                    seq
                      (((unsupported)).apply)
                        x__new__.write
                          [xcls]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xTypeError)).apply ("requires _testcapi.without_gc"))))
                      (((unsupported)).apply ((xC)))
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                (((unsupported)).apply)
                xsurvivors.write (((unsupported)).apply)
                xdel_calls.write (((unsupported)).apply)
                xtp_del_calls.write (((unsupported)).apply)
                xerrors.write (((unsupported)).apply)
                x_cleaning.write FALSE
                x__slots__.write (((unsupported)).apply)
                x_cleanup.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xcls).xsurvivors).xclear)).apply)
                        bogusForceDataize.write (((((xcls).xerrors).xclear)).apply)
                        bogusForceDataize.write (((((xgc).xgarbage).xclear)).apply)
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        bogusForceDataize.write (((((xcls).xdel_calls).xclear)).apply)
                        bogusForceDataize.write (((((xcls).xtp_del_calls).xclear)).apply)
                xtest.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xsupport).xdisable_gc)).apply)))
                          seq
                            bogusForceDataize.write (((((xcls).xdel_calls).xclear)).apply)
                            bogusForceDataize.write (((((xcls).xtp_del_calls).xclear)).apply)
                            (((unsupported)).apply (((xNonGCSimpleBase).x_cleaning)) (FALSE))
                            (((unsupported)).apply)
                              seq
                                (((unsupported)).apply)
                                ((xcls).xerrors).if
                                  (((unsupported)).apply ((((unsupported)).apply (((xcls).xerrors)) (0))))
                              seq
                                (((unsupported)).apply (((xNonGCSimpleBase).x_cleaning)) (TRUE))
                                bogusForceDataize.write ((((xcls).x_cleanup)).apply)
                xcheck_sanity.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                x__del__.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xException)))
                          (((xself).x_cleaning).not).if
                            seq
                              bogusForceDataize.write (((((xself).xdel_calls).xappend)).apply ((((xid)).apply ((xself)))))
                              bogusForceDataize.write ((((xself).xcheck_sanity)).apply)
                              bogusForceDataize.write ((((xself).xside_effect)).apply)
                          bogusForceDataize.write (((((xself).xerrors).xappend)).apply ((xe)))
                xside_effect.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
            (((unsupported)).apply ((xNonGCSimpleBase)))
              seq
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).xid_)) ((((xid)).apply ((xself)))))
                xcheck_sanity.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xself).xid_).eq (((xid)).apply ((xself))))))
            (((unsupported)).apply ((xNonGCSimpleBase)) ((xwithout_gc)))
              x__slots__.write (((unsupported)).apply)
            (((unsupported)).apply ((xNonGCSimpleBase)) ((xwithout_gc)))
              seq
                x__slots__.write (((unsupported)).apply)
                xside_effect.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).xsurvivors).xappend)).apply ((xself)))
            (((unsupported)).apply ((xSimpleBase)))
            (((unsupported)).apply ((xSimpleBase)))
              xside_effect.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)).apply)
                      bogusForceDataize.write (((((xself).xsurvivors).xappend)).apply ((xself)))
            (((unsupported)).apply)
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xold_garbage)) ((((unsupported)).apply (((xgc).xgarbage)) ((((unsupported)).apply)))))
                        (((unsupported)).apply ((((unsupported)).apply (((xgc).xgarbage)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                xtearDown.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgc).xgarbage)) ((((unsupported)).apply)))
                        seq
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xold_garbage)))))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                xassert_del_calls.write
                  [xself xids]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply (((xSimpleBase).xdel_calls)))) ((((xsorted)).apply ((xids)))))
                xassert_tp_del_calls.write
                  [xself xids]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply (((xSimpleBase).xtp_del_calls)))) ((((xsorted)).apply ((xids)))))
                xassert_survivors.write
                  [xself xids]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply ((((unsupported)).apply ((((xid)).apply ((xx)))) ((xx)) (((xSimpleBase).xsurvivors)))))) ((((xsorted)).apply ((xids)))))
                xassert_garbage.write
                  [xself xids]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply ((((unsupported)).apply ((((xid)).apply ((xx)))) ((xx)) (((xgc).xgarbage)))))) ((((xsorted)).apply ((xids)))))
                xclear_survivors.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((((xSimpleBase).xsurvivors).xclear)).apply)
            (((unsupported)).apply ((xTestBase)) (((xunittest).xTestCase)))
              seq
                (((unsupported)).apply)
                xtest_simple.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                        seq
                          xs.write (((xSimple)).apply)
                          xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                          xwr.write ((((xweakref).xref)).apply ((xs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                xtest_simple_resurrect.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      seq
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xs.write (((xSimpleResurrector)).apply)
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                            xwr.write ((((xweakref).xref)).apply ((xs)))
                            (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassertIsNot)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                            bogusForceDataize.write ((((xself).xclear_survivors)).apply)
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                xtest_non_gc.write
                  [xself]
                    memory > xs
                    memory > xids
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xs.write (((xNonGC)).apply)
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xgc).xis_tracked)).apply ((xs)))))
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                            (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                xtest_non_gc_resurrect.write
                  [xself]
                    memory > xs
                    memory > xids
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xs.write (((xNonGCResurrector)).apply)
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xgc).xis_tracked)).apply ((xs)))))
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                            (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xclear_survivors)).apply)
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply (((xids).mul 2)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xids)))
            (((unsupported)).apply)
              seq
                x__init__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                        (((unsupported)).apply (((xself).xref)) ((xself)))
                xcheck_sanity.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xcheck_sanity)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xref)) ((xself)))))
            (((unsupported)).apply ((xSelfCycleBase)) ((xSimple)))
            (((unsupported)).apply ((xSelfCycleBase)) ((xSimpleResurrector)))
            (((unsupported)).apply ((xSelfCycleBase)) ((xSimple)))
              xside_effect.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)).apply)
                      (((unsupported)).apply (((xself).xref)) ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply ((xTestBase)) (((xunittest).xTestCase)))
              seq
                (((unsupported)).apply)
                xtest_simple.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                        seq
                          xs.write (((xSimpleSelfCycle)).apply)
                          xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                          xwr.write ((((xweakref).xref)).apply ((xs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                xtest_simple_resurrect.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                        seq
                          xs.write (((xSelfCycleResurrector)).apply)
                          xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                          xwr.write ((((xweakref).xref)).apply ((xs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xclear_survivors)).apply)
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                xtest_simple_suicide.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                        seq
                          xs.write (((xSuicidalSelfCycle)).apply)
                          xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                          xwr.write ((((xweakref).xref)).apply ((xs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply)
              seq
                xchain.write
                  [xself xleft]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xsuicided)) (FALSE))
                        (((unsupported)).apply (((xself).xleft)) ((xleft)))
                        (((unsupported)).apply (((xleft).xright)) ((xself)))
                xcheck_sanity.write
                  [xself]
                    memory > xleft
                    memory > xright
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xcheck_sanity)).apply)
                        ((xself).xsuicided).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xleft)) ("None: is there a None literal in the EO language?"))))
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xright)) ("None: is there a None literal in the EO language?"))))
                          seq
                            xleft.write ((xself).xleft)
                            ((xleft).xsuicided).if
                              (((unsupported)).apply ((((unsupported)).apply (((xleft).xright)) ("None: is there a None literal in the EO language?"))))
                              (((unsupported)).apply ((((unsupported)).apply (((xleft).xright)) ((xself)))))
                            xright.write ((xself).xright)
                            ((xright).xsuicided).if
                              (((unsupported)).apply ((((unsupported)).apply (((xright).xleft)) ("None: is there a None literal in the EO language?"))))
                              (((unsupported)).apply ((((unsupported)).apply (((xright).xleft)) ((xself)))))
            (((unsupported)).apply ((xChainedBase)) ((xSimple)))
            (((unsupported)).apply ((xChainedBase)) ((xSimpleResurrector)))
            (((unsupported)).apply ((xChainedBase)) ((xSimple)))
              xside_effect.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)).apply)
                      (((unsupported)).apply (((xself).xsuicided)) (TRUE))
                      (((unsupported)).apply (((xself).xleft)) ("None: is there a None literal in the EO language?"))
                      (((unsupported)).apply (((xself).xright)) ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply ((xTestBase)) (((xunittest).xTestCase)))
              seq
                (((unsupported)).apply)
                xbuild_chain.write
                  [xself xclasses]
                    memory > xnodes
                    seq > @
                      seq
                        xnodes.write (((unsupported)).apply ((((xcls)).apply)) ((xcls)) ((xclasses)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((xnodes)))))))
                          bogusForceDataize.write ((((((unsupported)).apply ((xnodes)) ((xi))).xchain)).apply ((((unsupported)).apply ((xnodes)) (((xi).sub 1)))))
                        (((unsupported)).apply ((xnodes)))
                xcheck_non_resurrecting_chain.write
                  [xself xclasses]
                    memory > xN
                    memory > xids
                    memory > xnodes
                    memory > xwrs
                    seq > @
                      seq
                        xN.write (((xlen)).apply ((xclasses)))
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xnodes.write ((((xself).xbuild_chain)).apply ((xclasses)))
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))) ((xs)) ((xnodes)))
                            xwrs.write (((unsupported)).apply (((((xweakref).xref)).apply ((xs)))) ((xs)) ((xnodes)))
                            (((unsupported)).apply ((((unsupported)).apply ((xnodes)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xwr)).apply)) ((xwr)) ((xwrs)))) (((((unsupported)).apply ("None: is there a None literal in the EO language?")).mul (xN))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                xcheck_resurrecting_chain.write
                  [xself xclasses]
                    memory > xids
                    memory > xwrs
                    memory > xsurvivor_ids
                    memory > xnodes
                    memory > xN
                    seq > @
                      seq
                        xN.write (((xlen)).apply ((xclasses)))
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xnodes.write ((((xself).xbuild_chain)).apply ((xclasses)))
                            xN.write (((xlen)).apply ((xnodes)))
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))) ((xs)) ((xnodes)))
                            xsurvivor_ids.write (((unsupported)).apply ((((xid)).apply ((xs)))) ((xs)) ((xnodes)) ((((xisinstance)).apply ((xs)) ((xSimpleResurrector)))))
                            xwrs.write (((unsupported)).apply (((((xweakref).xref)).apply ((xs)))) ((xs)) ((xnodes)))
                            (((unsupported)).apply ((((unsupported)).apply ((xnodes)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xsurvivor_ids)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xwr)).apply)) ((xwr)) ((xwrs)))) (((((unsupported)).apply ("None: is there a None literal in the EO language?")).mul (xN))))
                            bogusForceDataize.write ((((xself).xclear_survivors)).apply)
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                xtest_homogenous.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_non_resurrecting_chain)).apply (((((unsupported)).apply ((xSimpleChained))).mul 3)))
                xtest_homogenous_resurrect.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_resurrecting_chain)).apply (((((unsupported)).apply ((xChainedResurrector))).mul 3)))
                xtest_homogenous_suicidal.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_non_resurrecting_chain)).apply (((((unsupported)).apply ((xSuicidalChained))).mul 3)))
                xtest_heterogenous_suicidal_one.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_non_resurrecting_chain)).apply (((((unsupported)).apply ((xSuicidalChained)) ((xSimpleChained))).mul 2)))
                xtest_heterogenous_suicidal_two.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_non_resurrecting_chain)).apply ((((((unsupported)).apply ((xSuicidalChained))).mul 2).add ((((unsupported)).apply ((xSimpleChained))).mul 2))))
                xtest_heterogenous_resurrect_one.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_resurrecting_chain)).apply (((((unsupported)).apply ((xChainedResurrector)) ((xSimpleChained))).mul 2)))
                xtest_heterogenous_resurrect_two.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_resurrecting_chain)).apply (((((unsupported)).apply ((xChainedResurrector)) ((xSimpleChained)) ((xSuicidalChained))).mul 2)))
                xtest_heterogenous_resurrect_three.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_resurrecting_chain)).apply (((((((unsupported)).apply ((xChainedResurrector))).mul 2).add ((((unsupported)).apply ((xSimpleChained))).mul 2)).add ((((unsupported)).apply ((xSuicidalChained))).mul 2))))
            (((unsupported)).apply ((xSimpleBase)))
              seq
                x__del__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xException)))
                        (((xself).x_cleaning).not).if
                          seq
                            bogusForceDataize.write (((((xself).xdel_calls).xappend)).apply ((((xid)).apply ((xself)))))
                            bogusForceDataize.write ((((xself).xcheck_sanity)).apply)
                        bogusForceDataize.write (((((xself).xerrors).xappend)).apply ((xe)))
                x__tp_del__.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xException)))
                          (((xself).x_cleaning).not).if
                            seq
                              bogusForceDataize.write (((((xself).xtp_del_calls).xappend)).apply ((((xid)).apply ((xself)))))
                              bogusForceDataize.write ((((xself).xcheck_sanity)).apply)
                              bogusForceDataize.write ((((xself).xside_effect)).apply)
                          bogusForceDataize.write (((((xself).xerrors).xappend)).apply ((xe)))
            (((unsupported)).apply ((xLegacyBase)) ((xwith_tp_del)))
            (((unsupported)).apply ((xLegacyBase)) ((xwith_tp_del)))
              xside_effect.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)).apply)
                      bogusForceDataize.write (((((xself).xsurvivors).xappend)).apply ((xself)))
            (((unsupported)).apply ((xSelfCycleBase)) ((xLegacyBase)) ((xwith_tp_del)))
            (((unsupported)).apply ((xTestBase)) (((xunittest).xTestCase)) (((xsupport).xcpython_only)))
              seq
                (((unsupported)).apply)
                xtearDown.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xgc).xgarbage).xclear)).apply)
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).xtearDown)).apply)
                xtest_legacy.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                        seq
                          xs.write (((xLegacy)).apply)
                          xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                          xwr.write ((((xweakref).xref)).apply ((xs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_tp_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xgc).xcollect)).apply)
                          bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                          bogusForceDataize.write ((((xself).xassert_tp_del_calls)).apply ((xids)))
                xtest_legacy_resurrect.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      seq
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xs.write (((xLegacyResurrector)).apply)
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                            xwr.write ((((xweakref).xref)).apply ((xs)))
                            (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_tp_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                            bogusForceDataize.write ((((xself).xclear_survivors)).apply)
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassert_tp_del_calls)).apply (((xids).mul 2)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((xids)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                xtest_legacy_self_cycle.write
                  [xself]
                    memory > xs
                    memory > xwr
                    memory > xids
                    seq > @
                      seq
                        (((unsupported)).apply (((((xSimpleBase).xtest)).apply)))
                          seq
                            xs.write (((xLegacySelfCycle)).apply)
                            xids.write (((unsupported)).apply ((((xid)).apply ((xs)))))
                            xwr.write ((((xweakref).xref)).apply ((xs)))
                            (((unsupported)).apply ((((unsupported)).apply ((xs)))))
                            bogusForceDataize.write ((((xgc).xcollect)).apply)
                            bogusForceDataize.write ((((xself).xassert_del_calls)).apply ((((unsupported)).apply)))
                            bogusForceDataize.write ((((xself).xassert_tp_del_calls)).apply ((((unsupported)).apply)))
                            bogusForceDataize.write ((((xself).xassert_survivors)).apply ((((unsupported)).apply)))
                            bogusForceDataize.write ((((xself).xassert_garbage)).apply ((xids)))
                            bogusForceDataize.write ((((xself).xassertIsNot)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
                            (((unsupported)).apply (((((unsupported)).apply (((xgc).xgarbage)) (0)).xref)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassert_garbage)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xwr)).apply)) ("None: is there a None literal in the EO language?"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)