memory > xDEFAULT_DB_ALIAS
memory > xFileNotFoundError
memory > xBaseCommand
memory > xconnections
memory > xsubprocess
memory > xe
memory > xoptions
memory > xCommandError
[] > dbshell
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xrequires_system_checks
        memory > xadd_arguments
        memory > xhelp2
        memory > xhandle
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xBaseCommand)))
              seq
                xhelp2.write "Runs the command-line client for specified database, or the default database if none is provided."
                xrequires_system_checks.write (((unsupported)).apply)
                xadd_arguments.write
                  [xself xparser]
                    memory > xparameters
                    seq > @
                      seq
                        (((unsupported)).apply (((xparser).xadd_argument)) ("--database") ((xDEFAULT_DB_ALIAS)) ("Nominates a database onto which to open a shell. Defaults to the \"default\" database."))
                        xparameters.write (((unsupported)).apply (((xparser).xadd_argument_group)) ("parameters") ("--"))
                        (((unsupported)).apply (((xparameters).xadd_argument)) ("parameters") ("*"))
                xhandle.write
                  [xself]
                    memory > xconnection
                    seq > @
                      (((unsupported)).apply)
                        xconnection.write (((unsupported)).apply ((xconnections)) ((((unsupported)).apply ((xoptions)) ("database"))))
                        (((unsupported)).apply ((xFileNotFoundError)) (((xsubprocess).xCalledProcessError)))
                          bogusForceDataize.write (((((xconnection).xclient).xrunshell)).apply ((((unsupported)).apply ((xoptions)) ("parameters"))))
                          (((unsupported)).apply ((((xCommandError)).apply (("You appear not to have the %r program installed or on your path.".mod (((xconnection).xclient).xexecutable_name))))))
                          (((unsupported)).apply ((((unsupported)).apply ((xCommandError)) (("\"%s\" returned non-zero exit status %s.".mod (((unsupported)).apply ((((" ".xjoin)).apply (((xe).xcmd)))) (((xe).xreturncode))))) (((xe).xreturncode)))))