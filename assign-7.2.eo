memory > xk
memory > xc
memory > xz
memory > xt
memory > xl
memory > xy
memory > xj
memory > xx
memory > xi
[] > assign-7.2
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xassignTest5
        seq > @
          seq
            xassignTest5.write
              []
                memory > xf
                memory > xa
                memory > xb1
                memory > xb2
                seq > @
                  seq
                    (((unsupported)).apply)
                      xf.write 1
                    xa.write (((unsupported)).apply (10) (11) (12) (13))
                    (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xy)))) ((((unsupported)).apply ((xz)) ((xt)))) (((xc).xf)) ((((unsupported)).apply ((xa)) (0))) ((((unsupported)).apply ((xa)) (1))) ((((unsupported)).apply (7) (8))))
                    (((unsupported)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (2) (1))))) ((((unsupported)).apply (7) (8))))
                    (((unsupported)).apply ((((unsupported)).apply ((xi)) ((((unsupported)).apply ((((unsupported)).apply ((xj)) ((xk)))))) ((xl)))) ((((unsupported)).apply (21) (22) (23) (24))))
                    xb1.write (((((((xx).eq 7).and ((xy).eq 8)).and ((xz).eq 7)).and ((xt).eq 8)).and (((xc).xf).eq (((unsupported)).apply (7) (8)))).and ((xa).eq (((unsupported)).apply ((((unsupported)).apply (7) (8))) ((((unsupported)).apply (7) (8))) (7) (8) (12) (13))))
                    xb2.write (((((xi).eq 21).and ((xj).eq 22)).and ((xk).eq 23)).and ((xl).eq 24))
                    (((unsupported)).apply (((xb1).and (xb2))))
            (((unsupported)).apply ((((xassignTest5)).apply)))