memory > xContext
memory > xfalse
memory > xlist
memory > xHttpRequest
memory > xRenderContext
memory > xEngine
memory > xKeyError
memory > xmock
memory > xTemplate
memory > xobject
memory > xRequestContext
memory > xVariableDoesNotExist
memory > xRequestFactory
memory > xVariable
memory > xlen
memory > xSimpleTestCase
[] > test_context
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_flatten_context_with_context
        memory > xtest_update_context_manager_with_context_object
        memory > xtest_flatten_context
        memory > xtest_update_proper_layering
        memory > xtest_context_comparable
        memory > xtest_set_upward_with_push
        memory > xtest_set_upward
        memory > xtest_push_context_manager_with_context_object
        memory > xtest_push_context_manager
        memory > xtest_resolve_on_context_method
        memory > xtest_update_context_manager
        memory > xtest_push_proper_layering
        memory > xrequest_factory
        memory > xtest_render_context
        memory > xtest_set_upward_empty_context
        memory > xtest_modify_context_and_render
        memory > xtest_include_only
        memory > xtest_stack_size
        memory > xtest_set_upward_with_push_no_match
        memory > xtest_copy_request_context_twice
        memory > xtest_setdefault
        memory > xtest_context
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_context.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1) ("b") ("xyzzy"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xpush)).apply)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xc)) ("a"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xget)).apply ("a"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xpop)).apply)) ((((unsupported)).apply ("a") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xget)).apply ("foo") (42))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xc)) (((xmock).xANY)))
                xtest_push_context_manager.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        (((unsupported)).apply (((((xc).xpush)).apply)))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xc)) ("a"))) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                        (((unsupported)).apply ((((unsupported)).apply (((xc).xpush)) (3))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                xtest_update_context_manager.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        (((unsupported)).apply (((((xc).xupdate)).apply ((((unsupported)).apply)))))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xc)) ("a"))) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                        (((unsupported)).apply (((((xc).xupdate)).apply ((((unsupported)).apply ("a") (3))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                xtest_push_context_manager_with_context_object.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        (((unsupported)).apply (((((xc).xpush)).apply ((((xContext)).apply ((((unsupported)).apply ("a") (3))))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                xtest_update_context_manager_with_context_object.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        (((unsupported)).apply (((((xc).xupdate)).apply ((((xContext)).apply ((((unsupported)).apply ("a") (3))))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("a"))) (1))
                xtest_push_proper_layering.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        bogusForceDataize.write ((((xc).xpush)).apply ((((xContext)).apply ((((unsupported)).apply ("b") (2))))))
                        bogusForceDataize.write ((((xc).xpush)).apply ((((xContext)).apply ((((unsupported)).apply ("c") (3) ("d") ((((unsupported)).apply ("z") ("26"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xdicts)) ((((unsupported)).apply ((((unsupported)).apply ("false") ((xfalse)) ("None") ("None: is there a None literal in the EO language?") ("True") (TRUE))) ((((unsupported)).apply ("a") (1))) ((((unsupported)).apply ("b") (2))) ((((unsupported)).apply ("c") (3) ("d") ((((unsupported)).apply ("z") ("26"))))))))
                xtest_update_proper_layering.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        bogusForceDataize.write ((((xc).xupdate)).apply ((((xContext)).apply ((((unsupported)).apply ("b") (2))))))
                        bogusForceDataize.write ((((xc).xupdate)).apply ((((xContext)).apply ((((unsupported)).apply ("c") (3) ("d") ((((unsupported)).apply ("z") ("26"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xdicts)) ((((unsupported)).apply ((((unsupported)).apply ("false") ((xfalse)) ("None") ("None: is there a None literal in the EO language?") ("True") (TRUE))) ((((unsupported)).apply ("a") (1))) ((((unsupported)).apply ("b") (2))) ((((unsupported)).apply ("c") (3) ("d") ((((unsupported)).apply ("z") ("26"))))))))
                xtest_setdefault.write
                  [xself]
                    memory > xx
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply)
                        xx.write ((((xc).xsetdefault)).apply ("x") (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("x"))) (42))
                        xx.write ((((xc).xsetdefault)).apply ("x") (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xc)) ("x"))) (42))
                xtest_resolve_on_context_method.write
                  [xself]
                    memory > xempty_context
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xempty_context.write (((xContext)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xVariableDoesNotExist)))))
                          bogusForceDataize.write ((((((xVariable)).apply ("no_such_variable")).xresolve)).apply ((xempty_context)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xVariableDoesNotExist)))))
                          bogusForceDataize.write ((((((xVariable)).apply ("new")).xresolve)).apply ((xempty_context)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xVariable)).apply ("new")).xresolve)).apply ((((xContext)).apply ((((unsupported)).apply ("new") ("foo"))))))) ("foo"))
                xtest_render_context.write
                  [xself]
                    memory > xtest_context
                    seq > @
                      seq
                        xtest_context.write (((xRenderContext)).apply ((((unsupported)).apply ("fruit") ("papaya"))))
                        bogusForceDataize.write ((((xtest_context).xpush)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xtest_context)) ("vegetable"))) ("artichoke"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((xtest_context)))) ((((unsupported)).apply ("vegetable"))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("fruit") ((xtest_context)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xKeyError)))))
                          (((unsupported)).apply ((xtest_context)) ("fruit"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xtest_context).xget)).apply ("fruit"))))
                xtest_flatten_context.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xContext)).apply)
                        bogusForceDataize.write ((((xa).xupdate)).apply ((((unsupported)).apply ("a") (2))))
                        bogusForceDataize.write ((((xa).xupdate)).apply ((((unsupported)).apply ("b") (4))))
                        bogusForceDataize.write ((((xa).xupdate)).apply ((((unsupported)).apply ("c") (8))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xflatten)).apply)) ((((unsupported)).apply ("false") ((xfalse)) ("None") ("None: is there a None literal in the EO language?") ("True") (TRUE) ("a") (2) ("b") (4) ("c") (8))))
                xtest_flatten_context_with_context.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xa.write (((xContext)).apply ((((unsupported)).apply ("a") (2))))
                        bogusForceDataize.write ((((xa).xpush)).apply ((((xContext)).apply ((((unsupported)).apply ("z") ("8"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xflatten)).apply)) ((((unsupported)).apply ("false") ((xfalse)) ("None") ("None: is there a None literal in the EO language?") ("True") (TRUE) ("a") (2) ("z") ("8"))))
                xtest_context_comparable.write
                  [xself]
                    memory > xtest_data
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xtest_data.write (((unsupported)).apply ("x") ("y") ("v") ("z") ("d") ((((unsupported)).apply ("o") ((xobject)) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xContext)).apply ((xtest_data)))) ((((xContext)).apply ((xtest_data)))))
                        xa.write (((xContext)).apply)
                        xb.write (((xContext)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xb)))
                        bogusForceDataize.write ((((xa).xupdate)).apply ((((unsupported)).apply ("a") (1))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xa)) ((xb)))
                        bogusForceDataize.write ((((xa).xupdate)).apply ((((unsupported)).apply ("c") (3))))
                        bogusForceDataize.write ((((xb).xupdate)).apply ((((unsupported)).apply ("c") (3))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xa)) ((xb)))
                        bogusForceDataize.write ((((xb).xupdate)).apply ((((unsupported)).apply ("a") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xb)))
                xtest_copy_request_context_twice.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write (((((((((xRequestContext)).apply ((((xHttpRequest)).apply))).xnew)).apply).xnew)).apply)
                xtest_set_upward.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        bogusForceDataize.write ((((xc).xset_upward)).apply ("a") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xget)).apply ("a"))) (2))
                xtest_set_upward_empty_context.write
                  [xself]
                    memory > xempty_context
                    seq > @
                      seq
                        xempty_context.write (((xContext)).apply)
                        bogusForceDataize.write ((((xempty_context).xset_upward)).apply ("a") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xempty_context).xget)).apply ("a"))) (1))
                xtest_set_upward_with_push.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xc.write (((xContext)).apply ((((unsupported)).apply ("a") (1))))
                        bogusForceDataize.write ((((xc).xpush)).apply ((((unsupported)).apply ("a") (2))))
                        bogusForceDataize.write ((((xc).xset_upward)).apply ("a") (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xget)).apply ("a"))) (3))
                        bogusForceDataize.write ((((xc).xpop)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xget)).apply ("a"))) (1))
                xtest_set_upward_with_push_no_match.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xc.write (((xContext)).apply ((((unsupported)).apply ("b") (1))))
                        bogusForceDataize.write ((((xc).xpush)).apply ((((unsupported)).apply ("b") (2))))
                        bogusForceDataize.write ((((xc).xset_upward)).apply ("a") (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xc).xdicts)))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (((xc).xdicts)) ((1.neg)))) ("a"))) (2))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xrequest_factory.write (((xRequestFactory)).apply)
                xtest_include_only.write
                  [xself]
                    memory > xrequest
                    memory > xengine
                    memory > xctx
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xengine.write (((unsupported)).apply ((xEngine)) ((((unsupported)).apply ((((unsupported)).apply ("django.template.loaders.locmem.Loader") ((((unsupported)).apply ("child") ("{{ var|default:\"none\" }}"))))))))
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        xctx.write (((xRequestContext)).apply ((xrequest)) ((((unsupported)).apply ("var") ("parent"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xengine).xfrom_string)).apply ("{% include \"child\" %}")).xrender)).apply ((xctx)))) ("parent"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xengine).xfrom_string)).apply ("{% include \"child\" only %}")).xrender)).apply ((xctx)))) ("none"))
                xtest_stack_size.write
                  [xself]
                    memory > xrequest
                    memory > xctx
                    seq > @
                      seq
                        unsupported
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        xctx.write (((xRequestContext)).apply ((xrequest)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xctx).xdicts)))) (4))
                xtest_context_comparable.write
                  [xself]
                    memory > xtest_data
                    memory > xrequest
                    seq > @
                      seq
                        xtest_data.write (((unsupported)).apply ("x") ("y") ("v") ("z") ("d") ((((unsupported)).apply ("o") ((xobject)) ("a") ("b"))))
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xRequestContext)) ((xrequest)) ((xtest_data)))) ((((unsupported)).apply ((xRequestContext)) ((xrequest)) ((xtest_data)))))
                xtest_modify_context_and_render.write
                  [xself]
                    memory > xrequest
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      seq
                        xtemplate.write (((xTemplate)).apply ("{{ foo }}"))
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        xcontext.write (((xRequestContext)).apply ((xrequest)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xcontext)) ("foo"))) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtemplate).xrender)).apply ((xcontext)))) ("foo"))