83c83
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("db_table 'test_table' is used by multiple models: check_framework.Model1, check_framework.Model2.") ("test_table") ("models.E028"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("db_table 'test_table' is used by multiple models: check_framework.Model1, check_framework.Model2.") ("test_table") ("models.E028"))))))
95c95
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) ("db_table 'test_table' is used by multiple models: check_framework.Model1, check_framework.Model2.") ("You have configured settings.DATABASE_ROUTERS. Verify that check_framework.Model1, check_framework.Model2 are correctly routed to separate databases.") ("test_table") ("models.W035"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) ("db_table 'test_table' is used by multiple models: check_framework.Model1, check_framework.Model2.") ("You have configured settings.DATABASE_ROUTERS. Verify that check_framework.Model1, check_framework.Model2 are correctly routed to separate databases.") ("test_table") ("models.W035"))))))
112c112
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("db_table 'test_table' is used by multiple models: basic.Model1, check_framework.Model2.") ("test_table") ("models.E028"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("db_table 'test_table' is used by multiple models: basic.Model1, check_framework.Model2.") ("test_table") ("models.E028"))))))
129c129
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) ("db_table 'test_table' is used by multiple models: basic.Model1, check_framework.Model2.") ("You have configured settings.DATABASE_ROUTERS. Verify that basic.Model1, check_framework.Model2 are correctly routed to separate databases.") ("test_table") ("models.W035"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) ("db_table 'test_table' is used by multiple models: basic.Model1, check_framework.Model2.") ("You have configured settings.DATABASE_ROUTERS. Verify that basic.Model1, check_framework.Model2 are correctly routed to separate databases.") ("test_table") ("models.W035"))))))
144c144
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
158c158
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
171c171
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique for model check_framework.Model.") ("models.E029"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique for model check_framework.Model.") ("models.E029"))))))
185c185
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E030"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E030"))))))
199c199
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E030"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E030"))))))
216c216
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
235c235
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique among models: basic.Model1, check_framework.Model2.") ("models.E030"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("index name 'foo' is not unique among models: basic.Model1, check_framework.Model2.") ("models.E030"))))))
254c254
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply)))
265c265
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique for model check_framework.Model.") ("models.E031"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique for model check_framework.Model.") ("models.E031"))))))
279c279
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E032"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E032"))))))
293c293
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E032"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique among models: check_framework.Model1, check_framework.Model2.") ("models.E032"))))))
307c307
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
326c326
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique among models: basic.Model1, check_framework.Model2.") ("models.E032"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("constraint name 'foo' is not unique among models: basic.Model1, check_framework.Model2.") ("models.E032"))))))
345c345
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply)))
359c359
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xModel)) ("models.W042"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xModel)) ("models.W042"))))))
368c368
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
377c377
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xModel).xcheck)).apply)) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((xModel).xcheck)) ((((unsupported)).apply)))
386c386
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xAbstract).xcheck)).apply)) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((xAbstract).xcheck)) ((((unsupported)).apply)))
397c397
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
404c404
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xParent)) ("models.W042"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xParent)) ("models.W042"))))))
413c413
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xParent)) ("models.W042"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xParent)) ("models.W042"))))))
423c423
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xChild)) ("models.W042"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (((xself).xmsg)) (((xself).xhint)) ((xChild)) ("models.W042"))))))
429c429
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
437c437
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((((xself).xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) ((((xself).xapps).xget_app_configs)))) ((((unsupported)).apply)))
446c446
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((((xapps).xget_app_configs)).apply)))) ((((unsupported)).apply)))
\ No newline at end of file
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xchecks).xrun_checks)) (((xapps).xget_app_configs)))) ((((unsupported)).apply)))
\ No newline at end of file