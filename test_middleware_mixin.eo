memory > xthreading
memory > xmiddleware
memory > xCacheMiddleware
memory > xGetResponse
memory > xSimpleMiddleWare
memory > xSessionMiddleware
memory > xHttpRequest
memory > xFlatpageFallbackMiddleware
memory > xconnection
memory > xXViewMiddleware
memory > xXFrameOptionsMiddleware
memory > xFetchFromCacheMiddleware
memory > xid
memory > xMiddlewareMixin
memory > xasyncio
memory > xCsrfViewMiddleware
memory > xValueError
memory > xCommonMiddleware
memory > xConditionalGetMiddleware
memory > xBrokenLinkEmailsMiddleware
memory > xUpdateCacheMiddleware
memory > xasync_to_sync
memory > xHttpResponse
memory > xset
memory > xrepr
memory > xSecurityMiddleware
memory > xGZipMiddleware
memory > xMessageMiddleware
memory > xRemoteUserMiddleware
memory > xCurrentSiteMiddleware
memory > xLocaleMiddleware
memory > xlen
memory > xAuthenticationMiddleware
memory > xRedirectFallbackMiddleware
memory > xSimpleTestCase
[] > test_middleware_mixin
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_repr
        memory > xtest_passing_explicit_none
        memory > xmiddlewares
        memory > xtest_sync_to_async_uses_base_thread_and_connection
        memory > xtest_coroutine
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xmiddlewares.write (((unsupported)).apply ((xAuthenticationMiddleware)) ((xBrokenLinkEmailsMiddleware)) ((xCacheMiddleware)) ((xCommonMiddleware)) ((xConditionalGetMiddleware)) ((xCsrfViewMiddleware)) ((xCurrentSiteMiddleware)) ((xFetchFromCacheMiddleware)) ((xFlatpageFallbackMiddleware)) ((xGZipMiddleware)) ((xLocaleMiddleware)) ((xMessageMiddleware)) ((xRedirectFallbackMiddleware)) ((xRemoteUserMiddleware)) ((xSecurityMiddleware)) ((xSessionMiddleware)) ((xUpdateCacheMiddleware)) ((xXFrameOptionsMiddleware)) ((xXViewMiddleware)))
                xtest_repr.write
                  [xself]
                    memory > xget_response
                    memory > x__call__
                    seq > @
                      seq
                        (((unsupported)).apply)
                          x__call__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((xHttpResponse)).apply)))
                        xget_response.write
                          []
                            seq > @
                              (((unsupported)).apply ((((xHttpResponse)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xMiddlewareMixin)).apply ((((xGetResponse)).apply)))))) ("<MiddlewareMixin get_response=GetResponse>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xMiddlewareMixin)).apply ((xget_response)))))) ("<MiddlewareMixin get_response=MiddlewareMixinTests.test_repr.<locals>.get_response>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xCsrfViewMiddleware)).apply ((((xGetResponse)).apply)))))) ("<CsrfViewMiddleware get_response=GetResponse>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xCsrfViewMiddleware)).apply ((xget_response)))))) ("<CsrfViewMiddleware get_response=MiddlewareMixinTests.test_repr.<locals>.get_response>"))
                xtest_passing_explicit_none.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "get_response must be provided."
                        (((unsupported)).apply ((xmiddleware)) (((xself).xmiddlewares)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xmiddleware)))))
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                              bogusForceDataize.write (((xmiddleware)).apply ("None: is there a None literal in the EO language?"))
                xtest_coroutine.write
                  [xself]
                    memory > xsync_get_response
                    memory > xasync_get_response
                    memory > xmiddleware_instance
                    seq > @
                      seq
                        xasync_get_response.write
                          [xrequest]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xHttpResponse)).apply)))
                        xsync_get_response.write
                          [xrequest]
                            seq > @
                              (((unsupported)).apply ((((xHttpResponse)).apply)))
                        (((unsupported)).apply ((xmiddleware)) (((xself).xmiddlewares)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) (((xmiddleware).x__qualname__)))))
                            seq
                              xmiddleware_instance.write (((xmiddleware)).apply ((xasync_get_response)))
                              bogusForceDataize.write ((((xself).xassertIs)).apply (((((xasyncio).xiscoroutinefunction)).apply ((xmiddleware_instance)))) (TRUE))
                              xmiddleware_instance.write (((xmiddleware)).apply ((xsync_get_response)))
                              bogusForceDataize.write ((((xself).xassertIs)).apply (((((xasyncio).xiscoroutinefunction)).apply ((xmiddleware_instance)))) (FALSE))
                xtest_sync_to_async_uses_base_thread_and_connection.write
                  [xself]
                    memory > xprocess_response
                    memory > xrequest
                    memory > xget_response
                    memory > xrequest_lifecycle
                    memory > xprocess_request
                    memory > xthreads_and_connections
                    memory > xresponse
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xrequest_lifecycle.write
                          []
                            seq > @
                              seq
                                unsupported
                                (((unsupported)).apply ((((unsupported)).apply (((((xthreading).xget_ident)).apply)) ((((xid)).apply ((xconnection)))))))
                        xget_response.write
                          [xself]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xHttpResponse)).apply)))
                        (((unsupported)).apply ((xMiddlewareMixin)))
                          seq
                            xprocess_request.write
                              [xself xrequest]
                                seq > @
                                  (((unsupported)).apply (((xrequest).xthread_and_connection)) ((((xrequest_lifecycle)).apply)))
                            xprocess_response.write
                              [xself xrequest xresponse]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xresponse).xthread_and_connection)) ((((xrequest_lifecycle)).apply)))
                                    (((unsupported)).apply ((xresponse)))
                        xthreads_and_connections.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xthreads_and_connections).xappend)).apply ((((xrequest_lifecycle)).apply)))
                        xrequest.write (((xHttpRequest)).apply)
                        xresponse.write (((((xasync_to_sync)).apply ((((xSimpleMiddleWare)).apply ((xget_response)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xthreads_and_connections).xappend)).apply (((xrequest).xthread_and_connection)))
                        bogusForceDataize.write ((((xthreads_and_connections).xappend)).apply (((xresponse).xthread_and_connection)))
                        bogusForceDataize.write ((((xthreads_and_connections).xappend)).apply ((((xrequest_lifecycle)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xthreads_and_connections)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((xset)).apply ((xthreads_and_connections)))))) (1))