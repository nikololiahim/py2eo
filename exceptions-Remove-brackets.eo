memory > xException
memory > xsuper
[] > exceptions
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__init__
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply ((xException)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xmsg xtried xbackend xchain]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xbackend)) ((xbackend)))
                        (((unsupported)).apply ((xtried)) ("None: is there a None literal in the EO language?")).if
                          xtried.write (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xtried)) ((xtried)))
                        (((unsupported)).apply ((xchain)) ("None: is there a None literal in the EO language?")).if
                          xchain.write (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xchain)) ((xchain)))
                        bogusForceDataize.write ((((xsuper).x__init__)).apply ((xmsg)))
            (((unsupported)).apply ((xException)))
              seq
                (((unsupported)).apply)