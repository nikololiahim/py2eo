memory > xAttributeError
memory > xValueError
memory > xstr
memory > xBook
memory > xNotImplementedError
memory > xreversed
memory > xBookSigning
memory > xi
memory > xmonth
memory > xoverride_settings
memory > xsorted
memory > xargs
memory > xday
memory > xTypeError
memory > xpubdate
memory > xPage
memory > xdatetime
memory > xlist
memory > xTestCase
memory > xAuthor
memory > xrange
memory > xTestDataMixin
memory > xArtist
memory > xurl
memory > xImproperlyConfigured
memory > xkwargs
[] > test_dates
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_allow_empty_archive_view
        memory > xtest_year_view_custom_sort_order
        memory > xtest_archive_view
        memory > xtest_empty_archive_view
        memory > xtest_month_view
        memory > xtest_year_view_invalid_pattern
        memory > xtest_year_view_make_object_list
        memory > xtest_month_view_without_month_in_url
        memory > xtest_aware_datetime_day_view
        memory > xtest_archive_view_custom_sorting
        memory > xtest_paginated_archive_view_does_not_load_entire_table
        memory > xtest_archive_view_template_suffix
        memory > xtest_month_view_paginated
        memory > xtest_year_view_empty
        memory > xtest_datetime_month_view
        memory > xtest_archive_view_by_month
        memory > xtest_archive_view_invalid
        memory > xtest_week_view_allow_future
        memory > xtest_week_start_Monday
        memory > xtest_datetime_week_view
        memory > xtest_aware_datetime_date_detail
        memory > xtest_datetime_year_view
        memory > xtest_aware_datetime_archive_view
        memory > xtest_next_prev_context
        memory > xtest_get_dated_items_not_implemented
        memory > xtest_day_view_allow_empty
        memory > xtest_month_view_allow_future
        memory > xtest_get_object_custom_queryset
        memory > xtest_aware_datetime_week_view
        memory > xtest_incompatible_iso_week_format_view
        memory > x_make_books
        memory > xtest_date_detail_allow_future
        memory > xtest_day_view_paginated
        memory > xtest_day_view_invalid_pattern
        memory > xtest_get_context_data_receives_extra_context
        memory > xsetUpTestData
        memory > xtest_year_view
        memory > xtest_day_view
        memory > xtest_aware_datetime_month_view
        memory > xtest_archive_view_without_date_field
        memory > xtest_week_view
        memory > xtest_month_view_invalid_pattern
        memory > xtest_datetime_archive_view
        memory > xtest_archive_view_custom_sorting_dec
        memory > xtest_year_view_allow_future
        memory > xtest_week_view_paginated
        memory > xtest_datetime_day_view
        memory > xtest_invalid_url
        memory > xtest_date_detail_by_slug
        memory > xtest_year_view_paginated
        memory > xtest_get_object_custom_queryset_numqueries
        memory > xtest_archive_view_template
        memory > xtest_day_view_allow_future
        memory > xtest_unknown_week_format
        memory > xtest_month_view_get_month_from_request
        memory > xtest_archive_view_context_object_name
        memory > xtest_date_detail_by_pk
        memory > xtest_month_view_allow_empty
        memory > xtest_custom_month_format
        memory > xtest_week_view_invalid_pattern
        memory > xtest_year_view_two_custom_sort_orders
        memory > xtest_year_out_of_range
        memory > xtest_week_view_allow_empty
        memory > xtest_paginated_archive_view
        memory > xtest_today_view
        memory > xtest_previous_month_without_content
        memory > xtest_datetime_date_detail
        memory > xtest_date_detail_custom_month_format
        memory > xtest_aware_datetime_year_view
        memory > xtest_date_list_order
        memory > xtest_week_iso_format
        memory > xtest_no_duplicate_query
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            x_make_books.write
              [xn xbase_date]
                seq > @
                  (((unsupported)).apply ((xi)) ((((xrange)).apply ((xn)))))
                    (((unsupported)).apply ((((xBook).xobjects).xcreate)) (((xbase_date).sub (((unsupported)).apply (((xdatetime).xtimedelta)) ((xi))))) ((100.add (xi))) (("book-%d".mod (xi))) (("Book %d".mod (xi))))
            (((unsupported)).apply)
              xsetUpTestData.write
                [xcls]
                  seq > @
                    (((unsupported)).apply)
                      (((unsupported)).apply (((xcls).xartist1)) ((((unsupported)).apply ((((xArtist).xobjects).xcreate)) ("Rene Magritte"))))
                      (((unsupported)).apply (((xcls).xauthor1)) ((((unsupported)).apply ((((xAuthor).xobjects).xcreate)) ("Roberto BolaÃ±o") ("roberto-bolano"))))
                      (((unsupported)).apply (((xcls).xauthor2)) ((((unsupported)).apply ((((xAuthor).xobjects).xcreate)) ("Scott Rosenberg") ("scott-rosenberg"))))
                      (((unsupported)).apply (((xcls).xbook1)) ((((unsupported)).apply ((((xBook).xobjects).xcreate)) ("2066") ("2066") (800) (((((xdatetime).xdate)).apply (2008) (10) (1))))))
                      bogusForceDataize.write ((((((xcls).xbook1).xauthors).xadd)).apply (((xcls).xauthor1)))
                      (((unsupported)).apply (((xcls).xbook2)) ((((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Dreaming in Code") ("dreaming-in-code") (300) (((((xdatetime).xdate)).apply (2006) (5) (1))))))
                      (((unsupported)).apply (((xcls).xpage1)) ((((unsupported)).apply ((((xPage).xobjects).xcreate)) ("I was once bitten by a moose.") ("generic_views/page_template.html"))))
            (((unsupported)).apply ((xTestDataMixin)) ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xtest_archive_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply ((((((xBook).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive.html"))
                xtest_archive_view_context_object_name.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/context_object_name/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("thingies"))))) ((((xlist)).apply ((((((xBook).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("latest") (((xres).xcontext)))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive.html"))
                xtest_empty_archive_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((((((xBook).xobjects).xall)).apply).xdelete)).apply)
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_allow_empty_archive_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        bogusForceDataize.write ((((((((xBook).xobjects).xall)).apply).xdelete)).apply)
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive.html"))
                xtest_archive_view_template.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/template_name/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply ((((((xBook).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/list.html"))
                xtest_archive_view_template_suffix.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/template_name_suffix/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply ((((((xBook).xobjects).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_detail.html"))
                xtest_archive_view_invalid.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "BookArchive is missing a QuerySet. Define BookArchive.model, BookArchive.queryset, or override BookArchive.get_queryset()."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/invalid/"))
                xtest_archive_view_by_month.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/by_month/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("month") ("DESC"))))))
                xtest_paginated_archive_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((x_make_books)) (20) ((((((xdatetime).xdate).xtoday)).apply)))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/paginated/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply ((((unsupported)).apply ((((((xBook).xobjects).xall)).apply)) ((((unsupported)).apply (0) (10))))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive.html"))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/paginated/?page=2"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply (((xres).xcontext)) ("page_obj")).xnumber)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply ((((unsupported)).apply ((((((xBook).xobjects).xall)).apply)) ((((unsupported)).apply (10) (20))))))))
                xtest_paginated_archive_view_does_not_load_entire_table.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((x_make_books)) (20) ((((((xdatetime).xdate).xtoday)).apply)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (2))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/"))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (4))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/paginated/"))
                xtest_no_duplicate_query.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertNumQueries)).apply (2))))
                        bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/reverse/"))
                xtest_datetime_archive_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_aware_datetime_archive_view.write
                  [xself]
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_date_list_order.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((x_make_books)) (5) (((((xdatetime).xdate)).apply (2011) (12) (25))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((xreversed)).apply ((((xsorted)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))))))))
                xtest_archive_view_custom_sorting.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Zebras for Dummies") (600) (((((xdatetime).xdate)).apply (2007) (5) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/sortedbyname/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply (((((((((xBook).xobjects).xorder_by)).apply ("name")).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive.html"))
                xtest_archive_view_custom_sorting_dec.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Zebras for Dummies") (600) (((((xdatetime).xdate)).apply (2007) (5) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/sortedbynamedec/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((((xBook).xobjects).xdates)).apply ("pubdate") ("year") ("DESC"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("latest"))))) ((((xlist)).apply (((((((((xBook).xobjects).xorder_by)).apply ("-name")).xall)).apply)))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive.html"))
                xtest_archive_view_without_date_field.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "BookArchiveWithoutDateField.date_field is required."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/without_date_field/"))
            (((unsupported)).apply ((xTestDataMixin)) ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xtest_year_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply (((((xdatetime).xdate)).apply (2008) (10) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("year"))) (((((xdatetime).xdate)).apply (2008) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_year.html"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_year"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_year"))) (((((xdatetime).xdate)).apply (2006) (1) (1))))
                xtest_year_view_make_object_list.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2006/make_object_list/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply (((((xdatetime).xdate)).apply (2006) (5) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_year.html"))
                xtest_year_view_empty.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/1999/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/1999/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_year"))) (((((xdatetime).xdate)).apply (2000) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_year"))) (((((xdatetime).xdate)).apply (1998) (1) (1))))
                xtest_year_view_allow_future.write
                  [xself]
                    memory > xres
                    memory > xyear
                    seq > @
                      seq
                        xyear.write (((((((xdatetime).xdate).xtoday)).apply).xyear).add 1)
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("The New New Testement") (600) (((((xdatetime).xdate)).apply ((xyear)) (1) (1))))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/".mod (xyear))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/allow_empty/".mod (xyear))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply)))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/allow_future/".mod (xyear))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply (((((xdatetime).xdate)).apply ((xyear)) (1) (1))))))
                xtest_year_view_paginated.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2006/paginated/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_year.html"))
                xtest_year_view_custom_sort_order.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Zebras for Dummies") (600) (((((xdatetime).xdate)).apply (2006) (9) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2006/sortedbyname/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply (((((xdatetime).xdate)).apply (2006) (5) (1))) (((((xdatetime).xdate)).apply (2006) (9) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply (((((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006)).xorder_by)).apply ("name"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply (((((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006)).xorder_by)).apply ("name"))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_year.html"))
                xtest_year_view_two_custom_sort_orders.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Zebras for Dummies") (300) (((((xdatetime).xdate)).apply (2006) (9) (1))))
                        (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("Hunting Hippos") (400) (((((xdatetime).xdate)).apply (2006) (3) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2006/sortedbypageandnamedec/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply (((((xdatetime).xdate)).apply (2006) (3) (1))) (((((xdatetime).xdate)).apply (2006) (5) (1))) (((((xdatetime).xdate)).apply (2006) (9) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply (((((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006)).xorder_by)).apply ("pages") ("-name"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply (((((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2006)).xorder_by)).apply ("pages") ("-name"))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_year.html"))
                xtest_year_view_invalid_pattern.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/no_year/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_no_duplicate_query.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertNumQueries)).apply (4))))
                        bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/2008/reverse/"))
                xtest_datetime_year_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_aware_datetime_year_view.write
                  [xself]
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_date_list_order.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((x_make_books)) (10) (((((xdatetime).xdate)).apply (2011) (12) (25))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2011/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((xsorted)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))))))
                xtest_get_context_data_receives_extra_context.write
                  [xself xmock]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ("context must be a dict rather than MagicMock."))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/"))
                        (((unsupported)).apply ((((unsupported)).apply ((xargs)) ((xkwargs)))) (((xmock).xcall_args)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xkwargs)) ("year"))) (((((xdatetime).xdate)).apply (2008) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply ((xkwargs)) ("previous_year"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply ((xkwargs)) ("next_year"))))
                xtest_get_dated_items_not_implemented.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "A DateView must provide an implementation of get_dated_items()"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xNotImplementedError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/BaseDateListViewTest/"))
            (((unsupported)).apply ((xTestDataMixin)) ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xtest_month_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_month.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply (((((xdatetime).xdate)).apply (2008) (10) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (((((xdatetime).xdate)).apply (2008) (10) (1))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("month"))) (((((xdatetime).xdate)).apply (2008) (10) (1))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_month"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (2006) (5) (1))))
                xtest_month_view_allow_empty.write
                  [xself]
                    memory > xres
                    memory > xurl
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2000/jan/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2000/jan/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("month"))) (((((xdatetime).xdate)).apply (2000) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_month"))) (((((xdatetime).xdate)).apply (2000) (2) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (1999) (12) (1))))
                        xurl.write (((((((((((xdatetime).xdate).xtoday)).apply).xstrftime)).apply ("/dates/books/%Y/%b/allow_empty/")).xlower)).apply)
                        xres.write (((((xself).xclient).xget)).apply ((xurl)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_month"))))
                xtest_month_view_allow_future.write
                  [xself]
                    memory > xurlbit
                    memory > xres
                    memory > xb
                    memory > xfuture
                    seq > @
                      seq
                        xfuture.write (((unsupported)).apply ((((((((xdatetime).xdate).xtoday)).apply).add (((unsupported)).apply (((xdatetime).xtimedelta)) (60))).xreplace)) (1))
                        xurlbit.write (((((((xfuture).xstrftime)).apply ("%Y/%b")).xlower)).apply)
                        xb.write (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("The New New Testement") (600) ((xfuture)))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/".mod (xurlbit))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/allow_future/".mod (xurlbit))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))) (0))) (((xb).xpubdate)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply ((xb)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("month"))) ((xfuture)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_month"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (2008) (10) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/allow_future/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_month"))) ((xfuture)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (2006) (5) (1))))
                xtest_month_view_paginated.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/paginated/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2008) (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2008) (10))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_month.html"))
                xtest_custom_month_format.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/10/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_month_view_invalid_pattern.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2007/no_month/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_previous_month_without_content.write
                  [xself]
                    memory > xname
                    memory > xres
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xpubdate_list)) ((((unsupported)).apply (((((xdatetime).xdate)).apply (2010) ((xmonth)) ((xday)))) ((((unsupported)).apply ((xmonth)) ((xday)))) ((((unsupported)).apply ((((unsupported)).apply (9) (1))) ((((unsupported)).apply (10) (2))) ((((unsupported)).apply (11) (3))))))))
                        (((unsupported)).apply ((xpubdate)) (((xself).xpubdate_list)))
                          seq
                            xname.write (((xstr)).apply ((xpubdate)))
                            (((unsupported)).apply ((((xBook).xobjects).xcreate)) ((xname)) ((xname)) (100) ((xpubdate)))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2010/nov/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (2010) (10) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2010/nov/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (2010) (10) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2010/oct/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_month"))) (((((xdatetime).xdate)).apply (2010) (9) (1))))
                xtest_datetime_month_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (2) (1) (12) (0))))
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (6) (3) (12) (0))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/apr/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_month_view_get_month_from_request.write
                  [xself]
                    memory > xres
                    memory > xoct1
                    seq > @
                      seq
                        xoct1.write ((((xdatetime).xdate)).apply (2008) (10) (1))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/without_month/2008/?month=oct"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_month.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((unsupported)).apply ((xoct1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) ((xoct1)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("month"))) ((xoct1)))
                xtest_month_view_without_month_in_url.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/without_month/2008/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("exception"))) ("No month specified"))
                xtest_aware_datetime_month_view.write
                  [xself]
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (2) (1) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (6) (3) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/apr/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_date_list_order.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((x_make_books)) (10) (((((xdatetime).xdate)).apply (2011) (12) (25))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2011/dec/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))) ((((xlist)).apply ((((xsorted)).apply ((((unsupported)).apply (((xres).xcontext)) ("date_list"))))))))
            (((unsupported)).apply ((xTestDataMixin)) ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xtest_week_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/39/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_week.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))) (0))) ((((unsupported)).apply ((((xBook).xobjects).xget)) (((((xdatetime).xdate)).apply (2008) (10) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("week"))) (((((xdatetime).xdate)).apply (2008) (9) (28))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_week"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_week"))) (((((xdatetime).xdate)).apply (2006) (4) (30))))
                xtest_week_view_allow_empty.write
                  [xself]
                    memory > xres
                    memory > xurl
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/12/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/12/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("week"))) (((((xdatetime).xdate)).apply (2008) (3) (23))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_week"))) (((((xdatetime).xdate)).apply (2008) (3) (30))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_week"))) (((((xdatetime).xdate)).apply (2008) (3) (16))))
                        xurl.write (((((((((((xdatetime).xdate).xtoday)).apply).xstrftime)).apply ("/dates/books/%Y/week/%U/allow_empty/")).xlower)).apply)
                        xres.write (((((xself).xclient).xget)).apply ((xurl)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_week"))))
                xtest_week_view_allow_future.write
                  [xself]
                    memory > xfuture_sunday
                    memory > xres
                    memory > xb
                    memory > xfuture
                    seq > @
                      seq
                        xfuture.write ((((xdatetime).xdate)).apply ((((((((xdatetime).xdate).xtoday)).apply).xyear).add 1)) (1) (7))
                        xfuture_sunday.write ((xfuture).sub (((unsupported)).apply (((xdatetime).xtimedelta)) (((((((xfuture).xweekday)).apply).add 1).mod 7))))
                        xb.write (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("The New New Testement") (600) ((xfuture)))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/week/1/".mod ((xfuture).xyear))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/week/1/allow_future/".mod ((xfuture).xyear))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply ((xb)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("week"))) ((xfuture_sunday)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_week"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_week"))) (((((xdatetime).xdate)).apply (2008) (9) (28))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/39/allow_future/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_week"))) ((xfuture_sunday)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_week"))) (((((xdatetime).xdate)).apply (2006) (4) (30))))
                xtest_week_view_paginated.write
                  [xself]
                    memory > xres
                    memory > xweek_start
                    memory > xweek_end
                    seq > @
                      seq
                        xweek_start.write ((((xdatetime).xdate)).apply (2008) (9) (28))
                        xweek_end.write ((xweek_start).add (((unsupported)).apply (((xdatetime).xtimedelta)) (7)))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/39/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) ((xweek_start)) ((xweek_end)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) ((xweek_start)) ((xweek_end)))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_week.html"))
                xtest_week_view_invalid_pattern.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2007/week/no_week/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_week_start_Monday.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/39/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("week"))) (((((xdatetime).xdate)).apply (2008) (9) (28))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/39/monday/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("week"))) (((((xdatetime).xdate)).apply (2008) (9) (29))))
                xtest_week_iso_format.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/40/iso_format/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_week.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply ((((unsupported)).apply ((((xBook).xobjects).xget)) (((((xdatetime).xdate)).apply (2008) (10) (1))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("week"))) (((((xdatetime).xdate)).apply (2008) (9) (29))))
                xtest_unknown_week_format.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "Unknown week format '%T'. Choices are: %U, %V, %W"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/39/unknown_week_format/"))
                xtest_incompatible_iso_week_format_view.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "ISO week directive '%V' is incompatible with the year directive '%Y'. Use the ISO year '%G' instead."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/2008/week/40/invalid_iso_week_year_format/"))
                xtest_datetime_week_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/week/13/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_aware_datetime_week_view.write
                  [xself]
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/week/13/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
            (((unsupported)).apply ((xTestDataMixin)) ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xtest_day_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/01/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_day.html"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (((((xdatetime).xdate)).apply (2008) (10) (1))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("day"))) (((((xdatetime).xdate)).apply (2008) (10) (1))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_day"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_day"))) (((((xdatetime).xdate)).apply (2006) (5) (1))))
                xtest_day_view_allow_empty.write
                  [xself]
                    memory > xres
                    memory > xurl
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2000/jan/1/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2000/jan/1/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("day"))) (((((xdatetime).xdate)).apply (2000) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_day"))) (((((xdatetime).xdate)).apply (2000) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_day"))) (((((xdatetime).xdate)).apply (1999) (12) (31))))
                        xurl.write (((((((((((xdatetime).xdate).xtoday)).apply).xstrftime)).apply ("/dates/books/%Y/%b/%d/allow_empty/")).xlower)).apply)
                        xres.write (((((xself).xclient).xget)).apply ((xurl)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_day"))))
                xtest_day_view_allow_future.write
                  [xself]
                    memory > xtoday
                    memory > xurlbit
                    memory > xb
                    memory > xyesterday
                    memory > xfuture
                    memory > xres
                    seq > @
                      seq
                        xfuture.write ((((((xdatetime).xdate).xtoday)).apply).add (((unsupported)).apply (((xdatetime).xtimedelta)) (60)))
                        xurlbit.write (((((((xfuture).xstrftime)).apply ("%Y/%b/%d")).xlower)).apply)
                        xb.write (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("The New New Testement") (600) ((xfuture)))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/".mod (xurlbit))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/allow_future/".mod (xurlbit))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((unsupported)).apply ((xb)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("day"))) ((xfuture)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_day"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_day"))) (((((xdatetime).xdate)).apply (2008) (10) (1))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/01/allow_future/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_day"))) ((xfuture)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("previous_day"))) (((((xdatetime).xdate)).apply (2006) (5) (1))))
                        xtoday.write (((((xdatetime).xdate).xtoday)).apply)
                        xyesterday.write ((xtoday).sub (((unsupported)).apply (((xdatetime).xtimedelta)) (1)))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/allow_empty_and_future/".mod (((((((xyesterday).xstrftime)).apply ("%Y/%b/%d")).xlower)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("next_day"))) ((xtoday)))
                xtest_day_view_paginated.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/1/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("book_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2008) (10) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xres).xcontext)) ("object_list"))))) ((((xlist)).apply ((((unsupported)).apply ((((xBook).xobjects).xfilter)) (2008) (10) (1))))))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_archive_day.html"))
                xtest_next_prev_context.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/01/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xcontent)) ("Archive for Oct. 1, 2008. Previous day is May 1, 2006n"))
                xtest_custom_month_format.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2008/10/01/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_day_view_invalid_pattern.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2007/oct/no_day/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_today_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/today/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/today/allow_empty/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("day"))) ((((((xdatetime).xdate).xtoday)).apply)))
                xtest_datetime_day_view.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/apr/2/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_aware_datetime_day_view.write
                  [xself]
                    memory > xbs
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        xbs.write (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/apr/2/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        (((unsupported)).apply (((xbs).xevent_date)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (1) (22) (0) ((((xdatetime).xtimezone).xutc)))))
                        bogusForceDataize.write ((((xbs).xsave)).apply)
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/apr/2/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        (((unsupported)).apply (((xbs).xevent_date)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (22) (0) ((((xdatetime).xtimezone).xutc)))))
                        bogusForceDataize.write ((((xbs).xsave)).apply)
                        xres.write (((((xself).xclient).xget)).apply ("/dates/booksignings/2008/apr/2/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
            (((unsupported)).apply ((xTestDataMixin)) ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("generic_views.urls"))))
              seq
                xtest_date_detail_by_pk.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/2008/oct/01/%s/".mod (((xself).xbook1).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("object"))) (((xself).xbook1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("book"))) (((xself).xbook1)))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_detail.html"))
                xtest_date_detail_by_slug.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/2006/may/01/byslug/dreaming-in-code/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("book"))) ((((unsupported)).apply ((((xBook).xobjects).xget)) ("dreaming-in-code"))))
                xtest_date_detail_custom_month_format.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/2008/10/01/%s/".mod (((xself).xbook1).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("book"))) (((xself).xbook1)))
                xtest_date_detail_allow_future.write
                  [xself]
                    memory > xurlbit
                    memory > xres
                    memory > xb
                    memory > xfuture
                    seq > @
                      seq
                        xfuture.write ((((((xdatetime).xdate).xtoday)).apply).add (((unsupported)).apply (((xdatetime).xtimedelta)) (60)))
                        xurlbit.write (((((((xfuture).xstrftime)).apply ("%Y/%b/%d")).xlower)).apply)
                        xb.write (((unsupported)).apply ((((xBook).xobjects).xcreate)) ("The New New Testement") ("new-new") (600) ((xfuture)))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/new-new/".mod (xurlbit))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/%s/%s/allow_future/".mod (((unsupported)).apply ((xurlbit)) (((xb).xid))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("book"))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_detail.html"))
                xtest_year_out_of_range.write
                  [xself]
                    memory > xres
                    memory > xurls
                    seq > @
                      seq
                        xurls.write (((unsupported)).apply ("/dates/books/9999/") ("/dates/books/9999/12/") ("/dates/books/9999/week/52/"))
                        (((unsupported)).apply ((xurl)) ((xurls)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xurl)))))
                            seq
                              xres.write (((((xself).xclient).xget)).apply ((xurl)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("exception"))) ("Date out of range"))
                xtest_invalid_url.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "Generic detail view BookDetail must be called with either an object pk or a slug in the URLconf."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xAttributeError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/2008/oct/01/nopk/"))
                xtest_get_object_custom_queryset.write
                  [xself]
                    memory > xres
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xres.write (((((xself).xclient).xget)).apply (("/dates/books/get_object_custom_queryset/2006/may/01/%s/".mod (((xself).xbook2).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("object"))) (((xself).xbook2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xres).xcontext)) ("book"))) (((xself).xbook2)))
                        bogusForceDataize.write ((((xself).xassertTemplateUsed)).apply ((xres)) ("generic_views/book_detail.html"))
                        xres.write (((((xself).xclient).xget)).apply ("/dates/books/get_object_custom_queryset/2008/oct/01/9999999/"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))
                xtest_get_object_custom_queryset_numqueries.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                        bogusForceDataize.write (((((xself).xclient).xget)).apply ("/dates/books/get_object_custom_queryset/2006/may/01/2/"))
                xtest_datetime_date_detail.write
                  [xself]
                    memory > xbs
                    memory > xres
                    seq > @
                      seq
                        xbs.write (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) (((((xdatetime).xdatetime)).apply (2008) (4) (2) (12) (0))))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/booksignings/2008/apr/2/%d/".mod ((xbs).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                xtest_aware_datetime_date_detail.write
                  [xself]
                    memory > xbs
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        xbs.write (((unsupported)).apply ((((xBookSigning).xobjects).xcreate)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (12) (0) ((((xdatetime).xtimezone).xutc)))))
                        xres.write (((((xself).xclient).xget)).apply (("/dates/booksignings/2008/apr/2/%d/".mod ((xbs).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        (((unsupported)).apply (((xbs).xevent_date)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (1) (22) (0) ((((xdatetime).xtimezone).xutc)))))
                        bogusForceDataize.write ((((xbs).xsave)).apply)
                        xres.write (((((xself).xclient).xget)).apply (("/dates/booksignings/2008/apr/2/%d/".mod ((xbs).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (200))
                        (((unsupported)).apply (((xbs).xevent_date)) ((((unsupported)).apply (((xdatetime).xdatetime)) (2008) (4) (2) (22) (0) ((((xdatetime).xtimezone).xutc)))))
                        bogusForceDataize.write ((((xbs).xsave)).apply)
                        xres.write (((((xself).xclient).xget)).apply (("/dates/booksignings/2008/apr/2/%d/".mod ((xbs).xpk))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xres).xstatus_code)) (404))