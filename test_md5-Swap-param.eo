memory > xMD5
memory > xCharField
memory > xconnection
memory > xregister_lookup
memory > xTestCase
memory > xAuthor
[] > test_md5
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsetUpTestData
        memory > xtest_transform
        memory > xtest_basic
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xAuthor).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xAuthor)) ("John Smith"))) ((((unsupported)).apply ((xAuthor)) ("Jordan Élena"))) ((((unsupported)).apply ((xAuthor)) ("皇帝"))) ((((unsupported)).apply ((xAuthor)) (""))) ((((unsupported)).apply ((xAuthor)) ("None: is there a None literal in the EO language?"))))))
                xtest_basic.write
                  [xself]
                    memory > xauthors
                    seq > @
                      seq
                        xauthors.write ((((((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xannotate)) ((((xMD5)).apply ("alias")))).xvalues_list)) ("md5_alias") (TRUE)).xorder_by)).apply ("pk"))
                        bogusForceDataize.write ((((xself).xassertSequenceEqual)).apply ((xauthors)) ((((unsupported)).apply ("6117323d2cabbc17d44c2b44587f682c") ("ca6d48f6772000141e66591aee49d56c") ("bf2c13bc1154e3d2e7df848cbc8be73d") ("d41d8cd98f00b204e9800998ecf8427e") (((((xconnection).xfeatures).xinterprets_empty_strings_as_nulls).if "d41d8cd98f00b204e9800998ecf8427e" "None: is there a None literal in the EO language?")))))
                xtest_transform.write
                  [xself]
                    memory > xauthors
                    seq > @
                      (((unsupported)).apply ((((xregister_lookup)).apply ((xCharField)) ((xMD5)))))
                        seq
                          xauthors.write (((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xfilter)) ("6117323d2cabbc17d44c2b44587f682c")).xvalues_list)) ("alias") (TRUE))
                          bogusForceDataize.write ((((xself).xassertSequenceEqual)).apply ((xauthors)) ((((unsupported)).apply ("John Smith"))))