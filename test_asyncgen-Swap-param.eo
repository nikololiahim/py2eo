memory > xGeneratorExit
memory > xRuntimeError
memory > xstr
memory > xexec
memory > xrange
memory > xZeroDivisionError
memory > xStopAsyncIteration
memory > xtype
memory > xi
memory > xunittest
memory > xex
memory > xobject
memory > xcm
memory > xinspect
memory > xtypes
memory > xValueError
memory > ximport_module
memory > x_
memory > xGen
memory > xStopIteration
memory > xtask
memory > xException
memory > xAwaitException
memory > xSyntaxError
memory > xTypeError
memory > xFooEr
memory > x__name__
[] > test_asyncgen
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_async_gen_api_01
        memory > xtest_async_gen_exception_07
        memory > xtest_async_gen_aclose_after_exhaustion
        memory > xtest_async_gen_exception_04
        memory > xtest_async_gen_asyncio_athrow_tuple
        memory > xtest_async_gen_syntax_03
        memory > xawaitable
        memory > xtest_async_gen_asyncio_shutdown_01
        memory > xtest_async_gen_syntax_04
        memory > xtest_async_gen_aclose_twice_with_different_coros
        memory > xtest_async_gen_asyncio_anext_tuple
        memory > xtest_async_gen_exception_10
        memory > xtest_async_gen_asyncio_aclose_11
        memory > xtest_async_gen_await_same_anext_coro_twice
        memory > xtest_async_gen_syntax_05
        memory > xtest_async_gen_asyncio_03
        memory > xtest_async_gen_asyncio_athrow_02
        memory > xtest_async_gen_asyncio_anext_04
        memory > xtest_async_gen_iteration_02
        memory > xtest_async_gen_asyncio_asend_01
        memory > xtest_async_gen_exception_09
        memory > xtest_async_gen_exception_06
        memory > xrun_until_complete
        memory > xtest_async_gen_asyncio_anext_stopiteration
        memory > xtest_async_gen_asyncio_aclose_12
        memory > xtest_async_gen_asyncio_athrow_01
        memory > xtest_async_gen_syntax_01
        memory > xsetUp
        memory > xtest_async_gen_exception_08
        memory > xtest_async_gen_asyncio_anext_06
        memory > xtest_async_gen_await_same_aclose_coro_twice
        memory > xtest_async_gen_exception_11
        memory > xtest_async_gen_aclose_compatible_with_get_stack
        memory > xtest_async_gen_syntax_02
        memory > xtest_asyncgen_nonstarted_hooks_are_cancellable
        memory > xtest_async_gen_asyncio_asend_03
        memory > xto_list
        memory > xtest_async_gen_asyncio_aclose_08
        memory > xtest_async_gen_exception_03
        memory > xtest_async_gen_asyncio_asend_02
        memory > xtest_async_gen_asyncio_athrow_stopiteration
        memory > xcompare_generators
        memory > xtest_async_gen_asyncio_01
        memory > xtest_async_gen_asyncio_anext_05
        memory > xtest_async_gen_expression_01
        memory > xtest_async_gen_asyncio_aclose_06
        memory > xtest_async_gen_asyncio_gc_aclose_09
        memory > xtest_async_gen_asyncio_athrow_03
        memory > xtest_async_gen_asyncio_02
        memory > xtest_async_gen_iteration_01
        memory > xtearDown
        memory > xtest_async_gen_expression_02
        memory > xtest_async_gen_asyncio_aclose_07
        memory > xtest_async_gen_exception_05
        memory > xasyncio
        memory > xtest_async_gen_asyncio_aclose_10
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xasyncio.write (((ximport_module)).apply ("asyncio"))
            (((unsupported)).apply ((xException)))
            xawaitable.write
              [xthrow]
                seq > @
                  (((unsupported)).apply)
                    (xthrow).if
                      (((unsupported)).apply ((((unsupported)).apply ("throw"))))
                      (((unsupported)).apply ((((unsupported)).apply ("result"))))
            xrun_until_complete.write
              [xcoro]
                memory > xfut
                memory > xexc
                seq > @
                  seq
                    xexc.write FALSE
                    while.
                      TRUE
                      [unused]
                        seq > @
                          seq
                            (((unsupported)).apply ((xStopIteration)))
                              (xexc).if
                                seq
                                  xexc.write FALSE
                                  xfut.write ((((xcoro).xthrow)).apply ((xAwaitException)))
                                xfut.write ((((xcoro).xsend)).apply ("None: is there a None literal in the EO language?"))
                              (((unsupported)).apply ((((unsupported)).apply (((xex).xargs)) (0))))
                            ((xfut).eq (((unsupported)).apply ("throw"))).if
                              xexc.write TRUE
            xto_list.write
              [xgen]
                memory > xiterate
                seq > @
                  seq
                    xiterate.write
                      []
                        memory > xres
                        seq > @
                          (((unsupported)).apply)
                            xres.write (((unsupported)).apply)
                            (((unsupported)).apply ((xi)) ((xgen)))
                              bogusForceDataize.write ((((xres).xappend)).apply ((xi)))
                            (((unsupported)).apply ((xres)))
                    (((unsupported)).apply ((((xrun_until_complete)).apply ((((xiterate)).apply)))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_async_gen_syntax_01.write
                  [xself]
                    memory > xcode
                    seq > @
                      seq
                        xcode.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSyntaxError)) ("yield from.*inside async"))))
                          bogusForceDataize.write (((xexec)).apply ((xcode)) ((((unsupported)).apply)) ((((unsupported)).apply)))
                xtest_async_gen_syntax_02.write
                  [xself]
                    memory > xcode
                    seq > @
                      seq
                        xcode.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSyntaxError)) ("yield from.*inside async"))))
                          bogusForceDataize.write (((xexec)).apply ((xcode)) ((((unsupported)).apply)) ((((unsupported)).apply)))
                xtest_async_gen_syntax_03.write
                  [xself]
                    memory > xcode
                    seq > @
                      seq
                        xcode.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSyntaxError)) ("return.*value.*async gen"))))
                          bogusForceDataize.write (((xexec)).apply ((xcode)) ((((unsupported)).apply)) ((((unsupported)).apply)))
                xtest_async_gen_syntax_04.write
                  [xself]
                    memory > xcode
                    seq > @
                      seq
                        xcode.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSyntaxError)) ("return.*value.*async gen"))))
                          bogusForceDataize.write (((xexec)).apply ((xcode)) ((((unsupported)).apply)) ((((unsupported)).apply)))
                xtest_async_gen_syntax_05.write
                  [xself]
                    memory > xcode
                    seq > @
                      seq
                        xcode.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSyntaxError)) ("return.*value.*async gen"))))
                          bogusForceDataize.write (((xexec)).apply ((xcode)) ((((unsupported)).apply)) ((((unsupported)).apply)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xcompare_generators.write
                  [xself xsync_gen xasync_gen]
                    memory > xasync_iterate
                    memory > xsync_iterate
                    memory > xsync_gen_result
                    memory > xasync_gen_result
                    seq > @
                      seq
                        xsync_iterate.write
                          [xg]
                            memory > xres
                            seq > @
                              seq
                                xres.write (((unsupported)).apply)
                                while.
                                  TRUE
                                  [unused]
                                    seq > @
                                      (((unsupported)).apply ((xStopIteration)) ((xException)))
                                        bogusForceDataize.write ((((xres).xappend)).apply (((((xg).x__next__)).apply)))
                                        seq
                                          bogusForceDataize.write ((((xres).xappend)).apply ("STOP"))
                                          (((unsupported)).apply)
                                        bogusForceDataize.write ((((xres).xappend)).apply ((((xstr)).apply ((((xtype)).apply ((xex)))))))
                                (((unsupported)).apply ((xres)))
                        xasync_iterate.write
                          [xg]
                            memory > xan
                            memory > xres
                            seq > @
                              seq
                                xres.write (((unsupported)).apply)
                                while.
                                  TRUE
                                  [unused]
                                    seq > @
                                      seq
                                        xan.write ((((xg).x__anext__)).apply)
                                        (((unsupported)).apply ((xStopAsyncIteration)))
                                          while.
                                            TRUE
                                            [unused]
                                              seq > @
                                                (((unsupported)).apply ((xStopIteration)) ((xStopAsyncIteration)) ((xException)))
                                                  bogusForceDataize.write ((((xan).x__next__)).apply)
                                                  ((xex).xargs).if
                                                    seq
                                                      bogusForceDataize.write ((((xres).xappend)).apply ((((unsupported)).apply (((xex).xargs)) (0))))
                                                      (((unsupported)).apply)
                                                    seq
                                                      bogusForceDataize.write ((((xres).xappend)).apply ("EMPTY StopIteration"))
                                                      (((unsupported)).apply)
                                                  (((unsupported)).apply)
                                                  seq
                                                    bogusForceDataize.write ((((xres).xappend)).apply ((((xstr)).apply ((((xtype)).apply ((xex)))))))
                                                    (((unsupported)).apply)
                                          seq
                                            bogusForceDataize.write ((((xres).xappend)).apply ("STOP"))
                                            (((unsupported)).apply)
                                (((unsupported)).apply ((xres)))
                        xsync_gen_result.write (((xsync_iterate)).apply ((xsync_gen)))
                        xasync_gen_result.write (((xasync_iterate)).apply ((xasync_gen)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xsync_gen_result)) ((xasync_gen_result)))
                        (((unsupported)).apply ((xasync_gen_result)))
                xtest_async_gen_iteration_01.write
                  [xself]
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            memory > xa
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xawaitable)).apply)))
                                xa.write (((unsupported)).apply (123))
                                bogusForceDataize.write ((((xself).xassertIs)).apply ((xa)) ("None: is there a None literal in the EO language?"))
                                (((unsupported)).apply ((((xawaitable)).apply)))
                                (((unsupported)).apply (456))
                                (((unsupported)).apply ((((xawaitable)).apply)))
                                (((unsupported)).apply (789))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xto_list)).apply ((((xgen)).apply)))) ((((unsupported)).apply (123) (456) (789))))
                xtest_async_gen_iteration_02.write
                  [xself]
                    memory > xan
                    memory > xai
                    memory > xgen
                    memory > xg
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xawaitable)).apply)))
                                (((unsupported)).apply (123))
                                (((unsupported)).apply ((((xawaitable)).apply)))
                        xg.write (((xgen)).apply)
                        xai.write ((((xg).x__aiter__)).apply)
                        xan.write ((((xai).x__anext__)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xan).x__next__)).apply)) ((((unsupported)).apply ("result"))))
                        (((unsupported)).apply ((xStopIteration)))
                          bogusForceDataize.write ((((xan).x__next__)).apply)
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xex).xargs)) (0))) (123))
                          bogusForceDataize.write ((((xself).xfail)).apply ("StopIteration was not raised"))
                        xan.write ((((xai).x__anext__)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xan).x__next__)).apply)) ((((unsupported)).apply ("result"))))
                        (((unsupported)).apply ((xStopAsyncIteration)))
                          bogusForceDataize.write ((((xan).x__next__)).apply)
                          bogusForceDataize.write ((((xself).xassertFalse)).apply (((xex).xargs)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("StopAsyncIteration was not raised"))
                xtest_async_gen_exception_03.write
                  [xself]
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xawaitable)).apply)))
                                (((unsupported)).apply (123))
                                (((unsupported)).apply ((((unsupported)).apply ((xawaitable)) (TRUE))))
                                (((unsupported)).apply (456))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xAwaitException)))))
                          bogusForceDataize.write (((xto_list)).apply ((((xgen)).apply)))
                xtest_async_gen_exception_04.write
                  [xself]
                    memory > xan
                    memory > xai
                    memory > xgen
                    memory > xg
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xawaitable)).apply)))
                                (((unsupported)).apply (123))
                                unsupported
                        xg.write (((xgen)).apply)
                        xai.write ((((xg).x__aiter__)).apply)
                        xan.write ((((xai).x__anext__)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xan).x__next__)).apply)) ((((unsupported)).apply ("result"))))
                        (((unsupported)).apply ((xStopIteration)))
                          bogusForceDataize.write ((((xan).x__next__)).apply)
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xex).xargs)) (0))) (123))
                          bogusForceDataize.write ((((xself).xfail)).apply ("StopIteration was not raised"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xZeroDivisionError)))))
                          bogusForceDataize.write (((((((xai).x__anext__)).apply).x__next__)).apply)
                xtest_async_gen_exception_05.write
                  [xself]
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (123))
                                (((unsupported)).apply ((xStopAsyncIteration)))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("async generator.*StopAsyncIteration"))))
                          bogusForceDataize.write (((xto_list)).apply ((((xgen)).apply)))
                xtest_async_gen_exception_06.write
                  [xself]
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (123))
                                (((unsupported)).apply ((xStopIteration)))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("async generator.*StopIteration"))))
                          bogusForceDataize.write (((xto_list)).apply ((((xgen)).apply)))
                xtest_async_gen_exception_07.write
                  [xself]
                    memory > xasync_gen
                    memory > xsync_gen
                    seq > @
                      seq
                        xsync_gen.write
                          []
                            seq > @
                              seq
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    unsupported
                                  seq
                                    (((unsupported)).apply (2))
                                    (((unsupported)).apply (3))
                                (((unsupported)).apply (100))
                        xasync_gen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    unsupported
                                  seq
                                    (((unsupported)).apply (2))
                                    (((unsupported)).apply (3))
                                (((unsupported)).apply (100))
                        bogusForceDataize.write ((((xself).xcompare_generators)).apply ((((xsync_gen)).apply)) ((((xasync_gen)).apply)))
                xtest_async_gen_exception_08.write
                  [xself]
                    memory > xasync_gen
                    memory > xsync_gen
                    seq > @
                      seq
                        xsync_gen.write
                          []
                            seq > @
                              seq
                                (((unsupported)).apply)
                                  (((unsupported)).apply (1))
                                  seq
                                    (((unsupported)).apply (2))
                                    unsupported
                                    (((unsupported)).apply (3))
                                (((unsupported)).apply (100))
                        xasync_gen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    (((unsupported)).apply ((((xawaitable)).apply)))
                                  seq
                                    (((unsupported)).apply ((((xawaitable)).apply)))
                                    (((unsupported)).apply (2))
                                    unsupported
                                    (((unsupported)).apply (3))
                                (((unsupported)).apply (100))
                        bogusForceDataize.write ((((xself).xcompare_generators)).apply ((((xsync_gen)).apply)) ((((xasync_gen)).apply)))
                xtest_async_gen_exception_09.write
                  [xself]
                    memory > xasync_gen
                    memory > xsync_gen
                    seq > @
                      seq
                        xsync_gen.write
                          []
                            seq > @
                              seq
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    unsupported
                                  seq
                                    (((unsupported)).apply (2))
                                    (((unsupported)).apply (3))
                                (((unsupported)).apply (100))
                        xasync_gen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply ((((xawaitable)).apply)))
                                    (((unsupported)).apply (1))
                                    unsupported
                                  seq
                                    (((unsupported)).apply (2))
                                    (((unsupported)).apply ((((xawaitable)).apply)))
                                    (((unsupported)).apply (3))
                                (((unsupported)).apply (100))
                        bogusForceDataize.write ((((xself).xcompare_generators)).apply ((((xsync_gen)).apply)) ((((xasync_gen)).apply)))
                xtest_async_gen_exception_10.write
                  [xself]
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (123))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("non-None value .* async generator"))))
                          bogusForceDataize.write (((((((((xgen)).apply).x__anext__)).apply).xsend)).apply (100))
                xtest_async_gen_exception_11.write
                  [xself]
                    memory > xasync_gen
                    memory > xsync_gen_wrapper
                    memory > xasync_gen_wrapper
                    memory > xsync_gen
                    seq > @
                      seq
                        xsync_gen.write
                          []
                            seq > @
                              seq
                                (((unsupported)).apply (10))
                                (((unsupported)).apply (20))
                        xsync_gen_wrapper.write
                          []
                            memory > xsg
                            seq > @
                              seq
                                (((unsupported)).apply (1))
                                xsg.write (((xsync_gen)).apply)
                                bogusForceDataize.write ((((xsg).xsend)).apply ("None: is there a None literal in the EO language?"))
                                (((unsupported)).apply ((xGeneratorExit)))
                                  bogusForceDataize.write ((((xsg).xthrow)).apply ((((xGeneratorExit)).apply)))
                                  (((unsupported)).apply (2))
                                (((unsupported)).apply (3))
                        xasync_gen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (10))
                                (((unsupported)).apply (20))
                        xasync_gen_wrapper.write
                          []
                            memory > xasg
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                xasg.write (((xasync_gen)).apply)
                                (((unsupported)).apply (((((xasg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                (((unsupported)).apply ((xGeneratorExit)))
                                  (((unsupported)).apply (((((xasg).xathrow)).apply ((((xGeneratorExit)).apply)))))
                                  (((unsupported)).apply (2))
                                (((unsupported)).apply (3))
                        bogusForceDataize.write ((((xself).xcompare_generators)).apply ((((xsync_gen_wrapper)).apply)) ((((xasync_gen_wrapper)).apply)))
                xtest_async_gen_api_01.write
                  [xself]
                    memory > xgen
                    memory > xg
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (123))
                        xg.write (((xgen)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).x__name__)) ("gen"))
                        (((unsupported)).apply (((xg).x__name__)) ("123"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).x__name__)) ("123"))
                        bogusForceDataize.write ((((xself).xassertIn)).apply (".gen") (((xg).x__qualname__)))
                        (((unsupported)).apply (((xg).x__qualname__)) ("123"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).x__qualname__)) ("123"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xg).xag_await)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg).xag_frame)) (((xtypes).xFrameType)))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xg).xag_running)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg).xag_code)) (((xtypes).xCodeType)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xinspect).xisawaitable)).apply (((((xg).xaclose)).apply)))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xloop)) (((((xasyncio).xnew_event_loop)).apply)))
                        bogusForceDataize.write ((((xasyncio).xset_event_loop)).apply ("None: is there a None literal in the EO language?"))
                xtearDown.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write (((((xself).xloop).xclose)).apply)
                        (((unsupported)).apply (((xself).xloop)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xasyncio).xset_event_loop_policy)).apply ("None: is there a None literal in the EO language?"))
                xto_list.write
                  [xself xgen]
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        xres.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) ((xgen)))
                          bogusForceDataize.write ((((xres).xappend)).apply ((xi)))
                        (((unsupported)).apply ((xres)))
                xtest_async_gen_asyncio_01.write
                  [xself]
                    memory > xgen
                    memory > xres
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                (((unsupported)).apply (2))
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                (((unsupported)).apply)
                                (((unsupported)).apply (3))
                        xres.write (((((xself).xloop).xrun_until_complete)).apply (((((xself).xto_list)).apply ((((xgen)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xres)) ((((unsupported)).apply (1) (2))))
                xtest_async_gen_asyncio_02.write
                  [xself]
                    memory > xgen
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                (((unsupported)).apply (2))
                                unsupported
                                (((unsupported)).apply (3))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xZeroDivisionError)))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply (((((xself).xto_list)).apply ((((xgen)).apply)))))
                xtest_async_gen_asyncio_03.write
                  [xself]
                    memory > x__aiter__
                    memory > xres
                    memory > xloop
                    seq > @
                      seq
                        xloop.write ((xself).xloop)
                        (((unsupported)).apply)
                          x__aiter__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (1))
                                  (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                  (((unsupported)).apply (2))
                        xres.write ((((xloop).xrun_until_complete)).apply (((((xself).xto_list)).apply ((((xGen)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xres)) ((((unsupported)).apply (1) (2))))
                xtest_async_gen_asyncio_anext_04.write
                  [xself]
                    memory > xrun1
                    memory > xrun2
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                (((unsupported)).apply ((xZeroDivisionError)))
                                  seq
                                    (((unsupported)).apply (2))
                                    (((unsupported)).apply (3))
                                  (((unsupported)).apply (1000))
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                (((unsupported)).apply (4))
                        xrun1.write
                          []
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write ((((((xfoo)).apply).x__aiter__)).apply)
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (1))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (2))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (3))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (4))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xit).x__anext__)).apply)))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xit).x__anext__)).apply)))
                        xrun2.write
                          []
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write ((((((xfoo)).apply).x__aiter__)).apply)
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (1))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (2))
                                (((unsupported)).apply ((xStopIteration)))
                                  bogusForceDataize.write (((((((xit).x__anext__)).apply).xthrow)).apply ((xZeroDivisionError)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xex).xargs)) (0))) (1000))
                                  bogusForceDataize.write ((((xself).xfail)).apply ("StopIteration was not raised"))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (4))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xit).x__anext__)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun1)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun2)).apply)))
                xtest_async_gen_asyncio_anext_05.write
                  [xself]
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xfoo.write
                          []
                            memory > xv
                            seq > @
                              (((unsupported)).apply)
                                xv.write (((unsupported)).apply (1))
                                xv.write (((unsupported)).apply ((xv)))
                                (((unsupported)).apply (((xv).mul 100)))
                        xrun.write
                          []
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write ((((((xfoo)).apply).x__aiter__)).apply)
                                (((unsupported)).apply ((xStopIteration)))
                                  bogusForceDataize.write (((((((xit).x__anext__)).apply).xsend)).apply ("None: is there a None literal in the EO language?"))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xex).xargs)) (0))) (1))
                                  bogusForceDataize.write ((((xself).xfail)).apply ("StopIteration was not raised"))
                                (((unsupported)).apply ((xStopIteration)))
                                  bogusForceDataize.write (((((((xit).x__anext__)).apply).xsend)).apply (10))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xex).xargs)) (0))) (10))
                                  bogusForceDataize.write ((((xself).xfail)).apply ("StopIteration was not raised"))
                                (((unsupported)).apply ((xStopIteration)))
                                  bogusForceDataize.write (((((((xit).x__anext__)).apply).xsend)).apply (12))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xex).xargs)) (0))) (1200))
                                  bogusForceDataize.write ((((xself).xfail)).apply ("StopIteration was not raised"))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xit).x__anext__)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_asyncio_anext_06.write
                  [xself]
                    memory > xg
                    memory > xDONE
                    memory > xrun
                    memory > xgen
                    memory > xfoo
                    seq > @
                      seq
                        xDONE.write 0
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                        xg.write (((xfoo)).apply)
                        bogusForceDataize.write ((((xg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopIteration)))))
                          bogusForceDataize.write ((((xg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        xgen.write
                          []
                            memory > xDONE
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  (((unsupported)).apply)
                                xDONE.write 1
                        xrun.write
                          []
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                (((unsupported)).apply ((xDONE)) (10))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (11))
                xtest_async_gen_asyncio_anext_tuple.write
                  [xself]
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xZeroDivisionError)))
                                  (((unsupported)).apply ((((unsupported)).apply (1))))
                                  (((unsupported)).apply ((((unsupported)).apply (2))))
                        xrun.write
                          []
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write ((((((xfoo)).apply).x__aiter__)).apply)
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) ((((unsupported)).apply (1))))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopIteration)))) ((xcm)))
                                  bogusForceDataize.write (((((((xit).x__anext__)).apply).xthrow)).apply ((xZeroDivisionError)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) ((((unsupported)).apply (2))))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xit).x__anext__)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_asyncio_anext_stopiteration.write
                  [xself]
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xZeroDivisionError)))
                                  (((unsupported)).apply ((((xStopIteration)).apply (1))))
                                  (((unsupported)).apply ((((xStopIteration)).apply (3))))
                        xrun.write
                          []
                            memory > xv
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write ((((((xfoo)).apply).x__aiter__)).apply)
                                xv.write (((unsupported)).apply (((((xit).x__anext__)).apply)))
                                bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xv)) ((xStopIteration)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xv).xvalue)) (1))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopIteration)))) ((xcm)))
                                  bogusForceDataize.write (((((((xit).x__anext__)).apply).xthrow)).apply ((xZeroDivisionError)))
                                xv.write (((unsupported)).apply ((((xcm).xexception).xargs)) (0))
                                bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xv)) ((xStopIteration)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xv).xvalue)) (3))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xit).x__anext__)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_asyncio_aclose_06.write
                  [xself]
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    unsupported
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (12))
                        xrun.write
                          []
                            memory > xgen
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xgen.write (((xfoo)).apply)
                                xit.write ((((xgen).x__aiter__)).apply)
                                (((unsupported)).apply (((((xit).x__anext__)).apply)))
                                (((unsupported)).apply (((((xgen).xaclose)).apply)))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("async generator ignored GeneratorExit"))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_asyncio_aclose_07.write
                  [xself]
                    memory > xDONE
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    unsupported
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply ((xDONE)) (1))
                                (((unsupported)).apply ((xDONE)) (1000))
                        xrun.write
                          []
                            memory > xgen
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xgen.write (((xfoo)).apply)
                                xit.write ((((xgen).x__aiter__)).apply)
                                (((unsupported)).apply (((((xit).x__anext__)).apply)))
                                (((unsupported)).apply (((((xgen).xaclose)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_aclose_08.write
                  [xself]
                    memory > xDONE
                    memory > xfut
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        xfut.write (((unsupported)).apply (((xasyncio).xFuture)) (((xself).xloop)))
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (1))
                                    (((unsupported)).apply ((xfut)))
                                    (((unsupported)).apply ((xDONE)) (1000))
                                    (((unsupported)).apply (2))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply ((xDONE)) (1))
                                (((unsupported)).apply ((xDONE)) (1000))
                        xrun.write
                          []
                            memory > xgen
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xgen.write (((xfoo)).apply)
                                xit.write ((((xgen).x__aiter__)).apply)
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xit).x__anext__)).apply)))) (1))
                                (((unsupported)).apply (((((xgen).xaclose)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                        bogusForceDataize.write ((((xfut).xcancel)).apply)
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply (((((xasyncio).xsleep)).apply (0.01))))
                xtest_async_gen_asyncio_gc_aclose_09.write
                  [xself]
                    memory > xDONE
                    memory > xgen
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        xgen.write
                          []
                            memory > xDONE
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  while.
                                    TRUE
                                    [unused]
                                      seq > @
                                        (((unsupported)).apply (1))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                (((unsupported)).apply (((((xg).x__anext__)).apply)))
                                (((unsupported)).apply (((((xg).x__anext__)).apply)))
                                (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xg)))))))
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.1))))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_aclose_10.write
                  [xself]
                    memory > xg
                    memory > xDONE
                    memory > xrun
                    memory > xgen
                    memory > xfoo
                    seq > @
                      seq
                        xDONE.write 0
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                        xg.write (((xfoo)).apply)
                        bogusForceDataize.write ((((xg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xg).xclose)).apply)
                        xgen.write
                          []
                            memory > xDONE
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  (((unsupported)).apply)
                                xDONE.write 1
                        xrun.write
                          []
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                (((unsupported)).apply (((((xg).xaclose)).apply)))
                                (((unsupported)).apply ((xDONE)) (10))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (11))
                xtest_async_gen_asyncio_aclose_11.write
                  [xself]
                    memory > xg
                    memory > xDONE
                    memory > xrun
                    memory > xgen
                    memory > xfoo
                    seq > @
                      seq
                        xDONE.write 0
                        xfoo.write
                          []
                            seq > @
                              seq
                                (((unsupported)).apply)
                                  (((unsupported)).apply)
                                (((unsupported)).apply)
                        xg.write (((xfoo)).apply)
                        bogusForceDataize.write ((((xg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("ignored GeneratorExit"))))
                          bogusForceDataize.write ((((xg).xclose)).apply)
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply ((xDONE)) (1))
                        xrun.write
                          []
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("ignored GeneratorExit"))))
                                  (((unsupported)).apply (((((xg).xaclose)).apply)))
                                (((unsupported)).apply ((xDONE)) (10))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (10))
                xtest_async_gen_asyncio_aclose_12.write
                  [xself]
                    memory > xtarget
                    memory > xDONE
                    memory > xfoo
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        xtarget.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                unsupported
                        xfoo.write
                          []
                            memory > xDONE
                            memory > xtask
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                xtask.write ((((xasyncio).xcreate_task)).apply ((((xtarget)).apply)))
                                (((unsupported)).apply)
                                  (((unsupported)).apply (1))
                                  (((unsupported)).apply ((xZeroDivisionError)))
                                    (((unsupported)).apply ((xtask)))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xgen
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xgen.write (((xfoo)).apply)
                                xit.write ((((xgen).x__aiter__)).apply)
                                (((unsupported)).apply (((((xit).x__anext__)).apply)))
                                (((unsupported)).apply (((((xgen).xaclose)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_asend_01.write
                  [xself]
                    memory > xsg
                    memory > xsgen
                    memory > xDONE
                    memory > xrun
                    memory > xv
                    memory > xgen
                    seq > @
                      seq
                        xDONE.write 0
                        xsgen.write
                          []
                            memory > xv
                            seq > @
                              seq
                                xv.write (((unsupported)).apply (1))
                                (((unsupported)).apply (((xv).mul 2)))
                        xsg.write (((xsgen)).apply)
                        xv.write ((((xsg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                        xv.write ((((xsg).xsend)).apply (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (200))
                        xgen.write
                          []
                            memory > xDONE
                            memory > xv
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xv.write (((unsupported)).apply (1))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((xv).mul 2)))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply (100))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (200))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_asend_02.write
                  [xself]
                    memory > xDONE
                    memory > xgen
                    memory > xsleep_n_crash
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        xsleep_n_crash.write
                          [xdelay]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply ((xdelay)))))
                                unsupported
                        xgen.write
                          []
                            memory > xDONE
                            memory > xv
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xv.write (((unsupported)).apply (1))
                                    (((unsupported)).apply ((((xsleep_n_crash)).apply (0.01))))
                                    (((unsupported)).apply ((xDONE)) (1000))
                                    (((unsupported)).apply (((xv).mul 2)))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                (((unsupported)).apply (((((xg).xasend)).apply (100))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xZeroDivisionError)))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_asend_03.write
                  [xself]
                    memory > xDONE
                    memory > xgen
                    memory > xsleep_n_crash
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        xsleep_n_crash.write
                          [xdelay]
                            memory > xfut
                            seq > @
                              (((unsupported)).apply)
                                xfut.write (((unsupported)).apply (((xasyncio).xensure_future)) (((((xasyncio).xsleep)).apply ((xdelay)))) (((xself).xloop)))
                                bogusForceDataize.write (((((xself).xloop).xcall_later)).apply (((xdelay).div 2)) ((((unsupported)).apply (((((xfut).xcancel)).apply)))))
                                (((unsupported)).apply ((((unsupported)).apply ((xfut)))))
                        xgen.write
                          []
                            memory > xDONE
                            memory > xv
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xv.write (((unsupported)).apply (1))
                                    (((unsupported)).apply ((((xsleep_n_crash)).apply (0.01))))
                                    (((unsupported)).apply ((xDONE)) (1000))
                                    (((unsupported)).apply (((xv).mul 2)))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                (((unsupported)).apply (((((xg).xasend)).apply (100))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xasyncio).xCancelledError)))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_athrow_01.write
                  [xself]
                    memory > xsg
                    memory > xsgen
                    memory > xDONE
                    memory > xrun
                    memory > xv
                    memory > xgen
                    seq > @
                      seq
                        xDONE.write 0
                        (((unsupported)).apply ((xException)))
                        xsgen.write
                          []
                            memory > xv
                            seq > @
                              seq
                                (((unsupported)).apply ((xFooEr)))
                                  xv.write (((unsupported)).apply (1))
                                  xv.write 1000
                                (((unsupported)).apply (((xv).mul 2)))
                        xsg.write (((xsgen)).apply)
                        xv.write ((((xsg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                        xv.write ((((xsg).xthrow)).apply ((xFooEr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (2000))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopIteration)))))
                          bogusForceDataize.write ((((xsg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        xgen.write
                          []
                            memory > xDONE
                            memory > xv
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply ((xFooEr)))
                                      xv.write (((unsupported)).apply (1))
                                      seq
                                        xv.write 1000
                                        (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((xv).mul 2)))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                xv.write (((unsupported)).apply (((((xg).xathrow)).apply ((xFooEr)))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (2000))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_athrow_02.write
                  [xself]
                    memory > xDONE
                    memory > xgen
                    memory > xsleep_n_crash
                    memory > xrun
                    seq > @
                      seq
                        xDONE.write 0
                        (((unsupported)).apply ((xException)))
                        xsleep_n_crash.write
                          [xdelay]
                            memory > xfut
                            seq > @
                              (((unsupported)).apply)
                                xfut.write (((unsupported)).apply (((xasyncio).xensure_future)) (((((xasyncio).xsleep)).apply ((xdelay)))) (((xself).xloop)))
                                bogusForceDataize.write (((((xself).xloop).xcall_later)).apply (((xdelay).div 2)) ((((unsupported)).apply (((((xfut).xcancel)).apply)))))
                                (((unsupported)).apply ((((unsupported)).apply ((xfut)))))
                        xgen.write
                          []
                            memory > xDONE
                            memory > xv
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply ((xFooEr)))
                                      xv.write (((unsupported)).apply (1))
                                      (((unsupported)).apply ((((xsleep_n_crash)).apply (0.01))))
                                    (((unsupported)).apply (((xv).mul 2)))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    xDONE.write 1
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                (((unsupported)).apply (((xasyncio).xCancelledError)))
                                  (((unsupported)).apply (((((xg).xathrow)).apply ((xFooEr)))))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                                    (((unsupported)).apply)
                                  bogusForceDataize.write ((((xself).xfail)).apply ("CancelledError was not raised"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xasyncio).xCancelledError)))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (1))
                xtest_async_gen_asyncio_athrow_03.write
                  [xself]
                    memory > xg
                    memory > xDONE
                    memory > xrun
                    memory > xgen
                    memory > xfoo
                    seq > @
                      seq
                        xDONE.write 0
                        xfoo.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                        xg.write (((xfoo)).apply)
                        bogusForceDataize.write ((((xg).xsend)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopIteration)))))
                          bogusForceDataize.write ((((xg).xthrow)).apply ((xValueError)))
                        xgen.write
                          []
                            memory > xDONE
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  (((unsupported)).apply)
                                xDONE.write 1
                        xrun.write
                          []
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xg).xathrow)).apply ((xValueError)))))
                                (((unsupported)).apply ((xDONE)) (10))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xDONE)) (11))
                xtest_async_gen_asyncio_athrow_tuple.write
                  [xself]
                    memory > xgen
                    memory > xrun
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xZeroDivisionError)))
                                  (((unsupported)).apply (1))
                                  (((unsupported)).apply ((((unsupported)).apply (2))))
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                xv.write (((unsupported)).apply (((((xg).xathrow)).apply ((xZeroDivisionError)))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) ((((unsupported)).apply (2))))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_asyncio_athrow_stopiteration.write
                  [xself]
                    memory > xgen
                    memory > xrun
                    seq > @
                      seq
                        xgen.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xZeroDivisionError)))
                                  (((unsupported)).apply (1))
                                  (((unsupported)).apply ((((xStopIteration)).apply (2))))
                        xrun.write
                          []
                            memory > xv
                            memory > xg
                            seq > @
                              (((unsupported)).apply)
                                xg.write (((xgen)).apply)
                                xv.write (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) (1))
                                xv.write (((unsupported)).apply (((((xg).xathrow)).apply ((xZeroDivisionError)))))
                                bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xv)) ((xStopIteration)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xv).xvalue)) (2))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xStopAsyncIteration)))))
                                  (((unsupported)).apply (((((xg).xasend)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_asyncio_shutdown_01.write
                  [xself]
                    memory > xwaiter
                    memory > xfinalized
                    memory > xt2
                    memory > xwait
                    memory > xt1
                    seq > @
                      seq
                        xfinalized.write 0
                        xwaiter.write
                          [xtimeout]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply)
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply ((xtimeout)))))
                                    (((unsupported)).apply (1))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0))))
                                    (((unsupported)).apply ((xfinalized)) (1))
                        xwait.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((x_)) ((((xwaiter)).apply (1))))
                        xt1.write (((((xself).xloop).xcreate_task)).apply ((((xwait)).apply)))
                        xt2.write (((((xself).xloop).xcreate_task)).apply ((((xwait)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply (((((xasyncio).xsleep)).apply (0.1))))
                        bogusForceDataize.write ((((xt1).xcancel)).apply)
                        bogusForceDataize.write ((((xt2).xcancel)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xasyncio).xCancelledError)))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((xt1)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xasyncio).xCancelledError)))))
                          bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((xt2)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((((xself).xloop).xshutdown_asyncgens)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xfinalized)) (2))
                xtest_async_gen_expression_01.write
                  [xself]
                    memory > xmake_arange
                    memory > xarange
                    memory > xres
                    memory > xrun
                    seq > @
                      seq
                        xarange.write
                          [xn]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xi)) ((((xrange)).apply ((xn)))))
                                  seq
                                    (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                    (((unsupported)).apply ((xi)))
                        xmake_arange.write
                          [xn]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply (((xi).mul 2)) ((xi)) ((((xarange)).apply ((xn)))))))
                        xrun.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xi)) ((((xmake_arange)).apply (10))))))
                        xres.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xres)) ((((unsupported)).apply (((xi).mul 2)) ((xi)) ((((xrange)).apply (10))))))
                xtest_async_gen_expression_02.write
                  [xself]
                    memory > xwrap
                    memory > xmake_arange
                    memory > xres
                    memory > xrun
                    seq > @
                      seq
                        xwrap.write
                          [xn]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (((((xasyncio).xsleep)).apply (0.01))))
                                (((unsupported)).apply ((xn)))
                        xmake_arange.write
                          [xn]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply (((xi).mul 2)) ((xi)) ((((xrange)).apply ((xn)))) ((((unsupported)).apply ((((xwrap)).apply ((xi)))))))))
                        xrun.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xi)) ((((xmake_arange)).apply (10))))))
                        xres.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xres)) ((((unsupported)).apply (((xi).mul 2)) ((xi)) ((((xrange)).apply (1) (10))))))
                xtest_asyncgen_nonstarted_hooks_are_cancellable.write
                  [xself]
                    memory > xmessages
                    memory > xmain
                    memory > xasync_iterate
                    memory > xexception_handler
                    seq > @
                      seq
                        xmessages.write (((unsupported)).apply)
                        xexception_handler.write
                          [xloop xcontext]
                            seq > @
                              bogusForceDataize.write ((((xmessages).xappend)).apply ((xcontext)))
                        xasync_iterate.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (2))
                        xmain.write
                          []
                            memory > xloop
                            seq > @
                              (((unsupported)).apply)
                                xloop.write ((((xasyncio).xget_running_loop)).apply)
                                bogusForceDataize.write ((((xloop).xset_exception_handler)).apply ((xexception_handler)))
                                (((unsupported)).apply ((xi)) ((((xasync_iterate)).apply)))
                                  (((unsupported)).apply)
                        bogusForceDataize.write ((((xasyncio).xrun)).apply ((((xmain)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply)) ((xmessages)))
                xtest_async_gen_await_same_anext_coro_twice.write
                  [xself]
                    memory > xasync_iterate
                    memory > xrun
                    seq > @
                      seq
                        xasync_iterate.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (2))
                        xrun.write
                          []
                            memory > xnxt
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write (((xasync_iterate)).apply)
                                xnxt.write ((((xit).x__anext__)).apply)
                                (((unsupported)).apply ((xnxt)))
                                (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("cannot reuse already awaited __anext__()/asend()"))))
                                  (((unsupported)).apply ((xnxt)))
                                (((unsupported)).apply (((((xit).xaclose)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_await_same_aclose_coro_twice.write
                  [xself]
                    memory > xasync_iterate
                    memory > xrun
                    seq > @
                      seq
                        xasync_iterate.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (2))
                        xrun.write
                          []
                            memory > xnxt
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write (((xasync_iterate)).apply)
                                xnxt.write ((((xit).xaclose)).apply)
                                (((unsupported)).apply ((xnxt)))
                                (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xRuntimeError)) ("cannot reuse already awaited aclose()/athrow()"))))
                                  (((unsupported)).apply ((xnxt)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_aclose_twice_with_different_coros.write
                  [xself]
                    memory > xasync_iterate
                    memory > xrun
                    seq > @
                      seq
                        xasync_iterate.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (2))
                        xrun.write
                          []
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write (((xasync_iterate)).apply)
                                (((unsupported)).apply (((((xit).xaclose)).apply)))
                                (((unsupported)).apply (((((xit).xaclose)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_aclose_after_exhaustion.write
                  [xself]
                    memory > xasync_iterate
                    memory > xrun
                    seq > @
                      seq
                        xasync_iterate.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (2))
                        xrun.write
                          []
                            memory > xit
                            seq > @
                              (((unsupported)).apply)
                                xit.write (((xasync_iterate)).apply)
                                (((unsupported)).apply ((x_)) ((xit)))
                                (((unsupported)).apply (((((xit).xaclose)).apply)))
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
                xtest_async_gen_aclose_compatible_with_get_stack.write
                  [xself]
                    memory > xrun
                    memory > xasync_generator
                    seq > @
                      seq
                        xasync_generator.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((xobject)).apply)))
                        xrun.write
                          []
                            memory > xag
                            memory > xtasks
                            seq > @
                              (((unsupported)).apply)
                                xag.write (((xasync_generator)).apply)
                                bogusForceDataize.write ((((xasyncio).xcreate_task)).apply (((((xag).xaclose)).apply)))
                                xtasks.write ((((xasyncio).xall_tasks)).apply)
                                (((unsupported)).apply ((xtask)) ((xtasks)))
                                  bogusForceDataize.write ((((xtask).xget_stack)).apply)
                        bogusForceDataize.write (((((xself).xloop).xrun_until_complete)).apply ((((xrun)).apply)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)