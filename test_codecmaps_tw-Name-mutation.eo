memory > xmultibytecodec_support
memory > xunittest
memory > x__name__
[] > test_codecmaps_tw
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xpass_enctest
        memory > xcodectests
        memory > xmapfileurl2
        memory > xencoding
        memory > xmapfileurl
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase_Mapping)) (((xunittest).xTestCase)))
              seq
                xencoding.write "big5"
                xmapfileurl2.write "http://www.pythontest.net/unicode/BIG5.TXT"
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase_Mapping)) (((xunittest).xTestCase)))
              seq
                xencoding.write "cp950"
                xmapfileurl.write "http://www.pythontest.net/unicode/CP950.TXT"
                xpass_enctest.write (((unsupported)).apply ((((unsupported)).apply ("xa2xcc") ("u5341"))) ((((unsupported)).apply ("xa2xce") ("u5345"))))
                xcodectests.write (((unsupported)).apply ((((unsupported)).apply ("xFFxy") ("replace") ("ufffdxy"))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)