memory > xcopy
memory > xFileInput
memory > xDeepCopyWidget
memory > xComplexField
memory > xComplexMultiWidget
memory > xsuper
memory > xForm
memory > xTextInput
memory > xRadioSelect
memory > xMyMultiWidget
memory > xdatetime
memory > xexpected
memory > xdata
memory > xlist
memory > xSelectMultiple
memory > xMultiWidget
memory > xCharField
memory > xSplitDateTimeWidget
memory > xMultiValueField
memory > xMultipleChoiceField
memory > xTestForm
memory > xproperty
memory > xWidgetTest
memory > xSplitDateTimeField
[] > test_multiwidget
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_needs_multipart_false
        memory > xtest_fieldset
        memory > xtest_value_from_datadict_subwidgets_name
        memory > x_get_choices
        memory > xtest_value_omitted_from_data_subwidgets_name
        memory > x_set_choices
        memory > xtest_deepcopy
        memory > xtest_nested_multiwidget
        memory > xdecompress
        memory > xchoices
        memory > xtest_needs_multipart_true
        memory > xcompress
        memory > xtest_text_inputs
        memory > xtest_constructor_attrs
        memory > xtest_no_whitespace_between_widgets
        memory > xtest_subwidgets_name
        memory > xtest_constructor_attrs_with_type
        memory > xtest_value_omitted_from_data
        memory > x__init__
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xMultiWidget)))
              xdecompress.write
                [xself xvalue]
                  seq > @
                    seq
                      (xvalue).if
                        (((unsupported)).apply (((((xvalue).xsplit)).apply ("__"))))
                      (((unsupported)).apply ((((unsupported)).apply ("") (""))))
            (((unsupported)).apply ((xMultiWidget)))
              seq
                x__init__.write
                  [xself xattrs]
                    memory > xwidgets
                    seq > @
                      (((unsupported)).apply)
                        xwidgets.write (((unsupported)).apply ((((xTextInput)).apply)) ((((unsupported)).apply ((xSelectMultiple)) (((xWidgetTest).xbeatles)))) ((((xSplitDateTimeWidget)).apply)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xwidgets)) ((xattrs)))
                xdecompress.write
                  [xself xvalue]
                    memory > xdata
                    seq > @
                      seq
                        (xvalue).if
                          seq
                            xdata.write ((((xvalue).xsplit)).apply (","))
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xdata)) (0))) ((((xlist)).apply ((((unsupported)).apply ((xdata)) (1))))) (((((xdatetime).xstrptime)).apply ((((unsupported)).apply ((xdata)) (2))) ("%Y-%m-%d %H:%M:%S"))))))
                        (((unsupported)).apply ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
            (((unsupported)).apply ((xMultiValueField)))
              seq
                x__init__.write
                  [xself xrequired xwidget xlabel xinitial]
                    memory > xfields
                    seq > @
                      (((unsupported)).apply)
                        xfields.write (((unsupported)).apply ((((xCharField)).apply)) ((((unsupported)).apply ((xMultipleChoiceField)) (((xWidgetTest).xbeatles)))) ((((xSplitDateTimeField)).apply)))
                        (((unsupported)).apply (((((xsuper)).apply).x__init__)) ((xfields)) ((xrequired)) ((xwidget)) ((xlabel)) ((xinitial)))
                xcompress.write
                  [xself xdata_list]
                    seq > @
                      seq
                        (xdata_list).if
                          (((unsupported)).apply (("%s,%s,%s".mod (((unsupported)).apply ((((unsupported)).apply ((xdata_list)) (0))) (((("".xjoin)).apply ((((unsupported)).apply ((xdata_list)) (1))))) ((((unsupported)).apply ((xdata_list)) (2)))))))
                        (((unsupported)).apply ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply ((xMultiWidget)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xchoices]
                    memory > xwidgets
                    seq > @
                      (((unsupported)).apply)
                        xwidgets.write (((unsupported)).apply ((((unsupported)).apply ((xRadioSelect)) ((xchoices)))) ((xTextInput)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xwidgets)))
                x_set_choices.write
                  [xself xchoices]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((unsupported)).apply (((xself).xwidgets)) (0)).xchoices)) ((xchoices)))
                x_get_choices.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((unsupported)).apply (((xself).xwidgets)) (0)).xchoices)))
                xchoices.write (((xproperty)).apply ((x_get_choices)) ((x_set_choices)))
            (((unsupported)).apply ((xWidgetTest)))
              seq
                xtest_subwidgets_name.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMultiWidget)) ((((unsupported)).apply ("") ((((xTextInput)).apply)) ("big") ((((unsupported)).apply ((xTextInput)) ((((unsupported)).apply ("class") ("big"))))) ("small") ((((unsupported)).apply ((xTextInput)) ((((unsupported)).apply ("class") ("small"))))))))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("name") ((((unsupported)).apply ("John") ("George") ("Paul"))) ("<input type=\"text\" name=\"name\" value=\"John\"><input type=\"text\" name=\"name_big\" value=\"George\" class=\"big\"><input type=\"text\" name=\"name_small\" value=\"Paul\" class=\"small\">"))
                xtest_text_inputs.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((((unsupported)).apply ((xTextInput)) ((((unsupported)).apply ("class") ("big"))))) ((((unsupported)).apply ((xTextInput)) ((((unsupported)).apply ("class") ("small"))))))))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("name") ((((unsupported)).apply ("john") ("lennon"))) ("<input type=\"text\" class=\"big\" value=\"john\" name=\"name_0\"><input type=\"text\" class=\"small\" value=\"lennon\" name=\"name_1\">"))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("name") ("john__lennon") ("<input type=\"text\" class=\"big\" value=\"john\" name=\"name_0\"><input type=\"text\" class=\"small\" value=\"lennon\" name=\"name_1\">"))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("name") ("john__lennon") ((((unsupported)).apply ("id") ("foo"))) ("<input id=\"foo_0\" type=\"text\" class=\"big\" value=\"john\" name=\"name_0\"><input id=\"foo_1\" type=\"text\" class=\"small\" value=\"lennon\" name=\"name_1\">"))
                xtest_constructor_attrs.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((((unsupported)).apply ((xTextInput)) ((((unsupported)).apply ("class") ("big"))))) ((((unsupported)).apply ((xTextInput)) ((((unsupported)).apply ("class") ("small"))))))) ((((unsupported)).apply ("id") ("bar"))))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("name") ((((unsupported)).apply ("john") ("lennon"))) ("<input id=\"bar_0\" type=\"text\" class=\"big\" value=\"john\" name=\"name_0\"><input id=\"bar_1\" type=\"text\" class=\"small\" value=\"lennon\" name=\"name_1\">"))
                xtest_constructor_attrs_with_type.write
                  [xself]
                    memory > xwidget
                    memory > xattrs
                    seq > @
                      seq
                        xattrs.write (((unsupported)).apply ("type") ("number"))
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((xTextInput)) ((((xTextInput)).apply)))) ((xattrs)))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("code") ((((unsupported)).apply ("1") ("2"))) ("<input type=\"number\" value=\"1\" name=\"code_0\"><input type=\"number\" value=\"2\" name=\"code_1\">"))
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((((xTextInput)).apply ((xattrs)))) ((((xTextInput)).apply ((xattrs)))))) ((((unsupported)).apply ("class") ("bar"))))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("code") ((((unsupported)).apply ("1") ("2"))) ("<input type=\"number\" value=\"1\" name=\"code_0\" class=\"bar\"><input type=\"number\" value=\"2\" name=\"code_1\" class=\"bar\">"))
                xtest_value_omitted_from_data.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((((xTextInput)).apply)) ((((xTextInput)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xwidget).xvalue_omitted_from_data)).apply ((((unsupported)).apply)) ((((unsupported)).apply)) ("field"))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xwidget).xvalue_omitted_from_data)).apply ((((unsupported)).apply ("field_0") ("x"))) ((((unsupported)).apply)) ("field"))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xwidget).xvalue_omitted_from_data)).apply ((((unsupported)).apply ("field_1") ("y"))) ((((unsupported)).apply)) ("field"))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xwidget).xvalue_omitted_from_data)).apply ((((unsupported)).apply ("field_0") ("x") ("field_1") ("y"))) ((((unsupported)).apply)) ("field"))) (FALSE))
                xtest_value_from_datadict_subwidgets_name.write
                  [xself]
                    memory > xwidget
                    memory > xtests
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMultiWidget)) ((((unsupported)).apply ("x") ((((xTextInput)).apply)) ("") ((((xTextInput)).apply)))))
                        xtests.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ((((unsupported)).apply ("field") ("x"))) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("x"))))) ((((unsupported)).apply ((((unsupported)).apply ("field_x") ("y"))) ((((unsupported)).apply ("y") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ((((unsupported)).apply ("field") ("x") ("field_x") ("y"))) ((((unsupported)).apply ("y") ("x"))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xdata)) ((xexpected)))) ((xtests)))
                          (((unsupported)).apply (((((xself).xsubTest)).apply ((xdata)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xwidget).xvalue_from_datadict)).apply ((xdata)) ((((unsupported)).apply)) ("field"))) ((xexpected)))
                xtest_value_omitted_from_data_subwidgets_name.write
                  [xself]
                    memory > xwidget
                    memory > xtests
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMultiWidget)) ((((unsupported)).apply ("x") ((((xTextInput)).apply)) ("") ((((xTextInput)).apply)))))
                        xtests.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply)) (TRUE))) ((((unsupported)).apply ((((unsupported)).apply ("field") ("x"))) (FALSE))) ((((unsupported)).apply ((((unsupported)).apply ("field_x") ("y"))) (FALSE))) ((((unsupported)).apply ((((unsupported)).apply ("field") ("x") ("field_x") ("y"))) (FALSE))))
                        (((unsupported)).apply ((((unsupported)).apply ((xdata)) ((xexpected)))) ((xtests)))
                          (((unsupported)).apply (((((xself).xsubTest)).apply ((xdata)))))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((((xwidget).xvalue_omitted_from_data)).apply ((xdata)) ((((unsupported)).apply)) ("field"))) ((xexpected)))
                xtest_needs_multipart_true.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((((xTextInput)).apply)) ((((xFileInput)).apply)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xwidget).xneeds_multipart_form)))
                xtest_needs_multipart_false.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((((xTextInput)).apply)) ((((xTextInput)).apply)))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xwidget).xneeds_multipart_form)))
                xtest_nested_multiwidget.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xwidget.write (((xComplexMultiWidget)).apply)
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("name") ("some text,JP,2007-04-25 06:24:00") ((((unsupported)).apply)))
                xtest_no_whitespace_between_widgets.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        xwidget.write (((unsupported)).apply ((xMyMultiWidget)) ((((unsupported)).apply ((xTextInput)) ((((xTextInput)).apply)))))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("code") ("None: is there a None literal in the EO language?") ("<input type=\"text\" name=\"code_0\"><input type=\"text\" name=\"code_1\">") (TRUE))
                xtest_deepcopy.write
                  [xself]
                    memory > xw2
                    memory > xw1
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xw1.write (((unsupported)).apply ((xDeepCopyWidget)) ((((unsupported)).apply (1) (2) (3))))
                        xw2.write ((((xcopy).xdeepcopy)).apply ((xw1)))
                        (((unsupported)).apply (((xw2).xchoices)) ((((unsupported)).apply (4) (5) (6))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xw1).xchoices)) ((((unsupported)).apply (1) (2) (3))))
                xtest_fieldset.write
                  [xself]
                    memory > xfield
                    memory > xtemplate_name
                    memory > xform
                    seq > @
                      seq
                        (((unsupported)).apply ((xForm)))
                          seq
                            xtemplate_name.write "forms_tests/use_fieldset.html"
                            xfield.write (((unsupported)).apply ((xComplexField)) ((xComplexMultiWidget)))
                        xform.write (((xTestForm)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((unsupported)).apply ((xform)) ("field")).xfield).xwidget).xuse_fieldset)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ("<div><fieldset><legend>Field:</legend><input type=\"text\" name=\"field_0\" required id=\"id_field_0\"><select name=\"field_1\" required id=\"id_field_1\" multiple><option value=\"J\">John</option><option value=\"P\">Paul</option><option value=\"G\">George</option><option value=\"R\">Ringo</option></select><input type=\"text\" name=\"field_2_0\" required id=\"id_field_2_0\"><input type=\"text\" name=\"field_2_1\" required id=\"id_field_2_1\"></fieldset></div>") (((((xform).xrender)).apply)))