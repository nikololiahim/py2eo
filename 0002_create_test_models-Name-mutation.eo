memory > xArrayField
memory > xlist
memory > xSearchVectorField
memory > xmigrations
memory > xIntegerRangeField
memory > xHStoreField
memory > xCICharField
memory > xCITextField
memory > xEnumField
memory > xCIEmailField
memory > xmodels
memory > xBigIntegerRangeField
memory > xDateTimeRangeField
memory > xDecimalRangeField
memory > xDateRangeField
memory > xTagField
[] > 0002_create_test_models
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xdependencies
        memory > xoperations2
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xmigrations).xMigration)))
              seq
                xdependencies.write (((unsupported)).apply ((((unsupported)).apply ("postgres_tests") ("0001_setup_extensions"))))
                xoperations2.write (((unsupported)).apply ((((unsupported)).apply (((xmigrations).xCreateModel)) ("CharArrayModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") ((((unsupported)).apply ((xArrayField)) ((((unsupported)).apply (((xmodels).xCharField)) (10))) ("None: is there a None literal in the EO language?"))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("DateTimeArrayModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("datetimes") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xDateTimeField)).apply)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("dates") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xDateField)).apply)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("times") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xTimeField)).apply)) ("None: is there a None literal in the EO language?"))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("HStoreModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") ((((unsupported)).apply ((xHStoreField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("array_field") ((((unsupported)).apply ((xArrayField)) ((((xHStoreField)).apply)) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("OtherTypesArrayModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("ips") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xGenericIPAddressField)).apply)) ("None: is there a None literal in the EO language?") ((xlist)))))) ((((unsupported)).apply ("uuids") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xUUIDField)).apply)) ("None: is there a None literal in the EO language?") ((xlist)))))) ((((unsupported)).apply ("decimals") ((((unsupported)).apply ((xArrayField)) ((((unsupported)).apply (((xmodels).xDecimalField)) (5) (2))) ("None: is there a None literal in the EO language?") ((xlist)))))) ((((unsupported)).apply ("tags") ((((unsupported)).apply ((xArrayField)) ((((xTagField)).apply)) (TRUE) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("json") ((((unsupported)).apply ((xArrayField)) ((((unsupported)).apply (((xmodels).xJSONField)) ((((unsupported)).apply)))) ((((unsupported)).apply)))))) ((((unsupported)).apply ("int_ranges") ((((unsupported)).apply ((xArrayField)) ((((xIntegerRangeField)).apply)) (TRUE) (TRUE))))) ((((unsupported)).apply ("bigint_ranges") ((((unsupported)).apply ((xArrayField)) ((((xBigIntegerRangeField)).apply)) (TRUE) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("IntegerArrayModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xIntegerField)).apply)) ("None: is there a None literal in the EO language?"))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("NestedIntegerArrayModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") ((((unsupported)).apply ((xArrayField)) ((((unsupported)).apply ((xArrayField)) (((((xmodels).xIntegerField)).apply)) ("None: is there a None literal in the EO language?"))) ("None: is there a None literal in the EO language?"))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("NullableIntegerArrayModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") ((((unsupported)).apply ((xArrayField)) (((((xmodels).xIntegerField)).apply)) ("None: is there a None literal in the EO language?") (TRUE) (TRUE))))) ((((unsupported)).apply ("field_nested") ((((unsupported)).apply ((xArrayField)) ((((unsupported)).apply ((xArrayField)) (((((xmodels).xIntegerField)).apply)) ("None: is there a None literal in the EO language?") (TRUE))) ("None: is there a None literal in the EO language?") (TRUE))))) ((((unsupported)).apply ("order") ((((unsupported)).apply (((xmodels).xIntegerField)) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("CharFieldModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") ((((unsupported)).apply (((xmodels).xCharField)) (64))))))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("TextFieldModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("field") (((((xmodels).xTextField)).apply)))))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("SmallAutoFieldModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xSmallAutoField)) ("ID") (FALSE) (TRUE))))))) ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("BigAutoFieldModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xBigAutoField)) ("ID") (FALSE) (TRUE))))))) ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("Scene") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("scene") (((((xmodels).xTextField)).apply)))) ((((unsupported)).apply ("setting") ((((unsupported)).apply (((xmodels).xCharField)) (255))))))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("Character") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("name") ((((unsupported)).apply (((xmodels).xCharField)) (255))))))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("CITestModel") ((((unsupported)).apply ((((unsupported)).apply ("name") ((((unsupported)).apply ((xCICharField)) (TRUE) (255))))) ((((unsupported)).apply ("email") ((((xCIEmailField)).apply)))) ((((unsupported)).apply ("description") ((((xCITextField)).apply)))) ((((unsupported)).apply ("array_field") ((((unsupported)).apply ((xArrayField)) ((((xCITextField)).apply)) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("Line") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("scene") ((((unsupported)).apply (((xmodels).xForeignKey)) ("postgres_tests.Scene") (((xmodels).xSET_NULL)))))) ((((unsupported)).apply ("character") ((((unsupported)).apply (((xmodels).xForeignKey)) ("postgres_tests.Character") (((xmodels).xSET_NULL)))))) ((((unsupported)).apply ("dialogue") ((((unsupported)).apply (((xmodels).xTextField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("dialogue_search_vector") ((((unsupported)).apply ((xSearchVectorField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("dialogue_config") ((((unsupported)).apply (((xmodels).xCharField)) (100) (TRUE) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("LineSavedSearch") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("line") ((((unsupported)).apply (((xmodels).xForeignKey)) ("postgres_tests.Line") (((xmodels).xCASCADE)))))) ((((unsupported)).apply ("query") ((((unsupported)).apply (((xmodels).xCharField)) (100))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("AggregateTestModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("boolean_field") ((((unsupported)).apply (((xmodels).xBooleanField)) (TRUE))))) ((((unsupported)).apply ("char_field") ((((unsupported)).apply (((xmodels).xCharField)) (30) (TRUE))))) ((((unsupported)).apply ("text_field") ((((unsupported)).apply (((xmodels).xTextField)) (TRUE))))) ((((unsupported)).apply ("integer_field") ((((unsupported)).apply (((xmodels).xIntegerField)) (TRUE))))) ((((unsupported)).apply ("json_field") ((((unsupported)).apply (((xmodels).xJSONField)) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("StatTestModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("int1") (((((xmodels).xIntegerField)).apply)))) ((((unsupported)).apply ("int2") (((((xmodels).xIntegerField)).apply)))) ((((unsupported)).apply ("related_field") ((((unsupported)).apply (((xmodels).xForeignKey)) ("postgres_tests.AggregateTestModel") (((xmodels).xSET_NULL)) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("NowTestModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("when") ((((unsupported)).apply (((xmodels).xDateTimeField)) (TRUE) ("None: is there a None literal in the EO language?"))))))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("UUIDTestModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("uuid") ((((unsupported)).apply (((xmodels).xUUIDField)) ("None: is there a None literal in the EO language?") (TRUE))))))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("RangesModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("ints") ((((unsupported)).apply ((xIntegerRangeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("bigints") ((((unsupported)).apply ((xBigIntegerRangeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("decimals") ((((unsupported)).apply ((xDecimalRangeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("timestamps") ((((unsupported)).apply ((xDateTimeRangeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("timestamps_inner") ((((unsupported)).apply ((xDateTimeRangeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("timestamps_closed_bounds") ((((unsupported)).apply ((xDateTimeRangeField)) (TRUE) (TRUE) ("[]"))))) ((((unsupported)).apply ("dates") ((((unsupported)).apply ((xDateRangeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("dates_inner") ((((unsupported)).apply ((xDateRangeField)) (TRUE) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("RangeLookupsModel") ((((unsupported)).apply ((((unsupported)).apply ("parent") ((((unsupported)).apply (((xmodels).xForeignKey)) ("postgres_tests.RangesModel") (((xmodels).xSET_NULL)) (TRUE) (TRUE))))) ((((unsupported)).apply ("integer") ((((unsupported)).apply (((xmodels).xIntegerField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("big_integer") ((((unsupported)).apply (((xmodels).xBigIntegerField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("float") ((((unsupported)).apply (((xmodels).xFloatField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("timestamp") ((((unsupported)).apply (((xmodels).xDateTimeField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("date") ((((unsupported)).apply (((xmodels).xDateField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("small_integer") ((((unsupported)).apply (((xmodels).xSmallIntegerField)) (TRUE) (TRUE))))) ((((unsupported)).apply ("decimal_field") ((((unsupported)).apply (((xmodels).xDecimalField)) (5) (2) (TRUE) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("ArrayEnumModel") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("array_of_enums") ((((unsupported)).apply ((xArrayField)) ((((unsupported)).apply ((xEnumField)) (20))) (TRUE) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))) ((((unsupported)).apply (((xmodels).xModel)))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("Room") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("number") ((((unsupported)).apply (((xmodels).xIntegerField)) (TRUE))))))))) ((((unsupported)).apply (((xmigrations).xCreateModel)) ("HotelReservation") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("room") (((((xmodels).xForeignKey)).apply ("postgres_tests.Room") (((xmodels).xCASCADE)))))) ((((unsupported)).apply ("datespan") ((((xDateRangeField)).apply)))) ((((unsupported)).apply ("start") (((((xmodels).xDateTimeField)).apply)))) ((((unsupported)).apply ("end") (((((xmodels).xDateTimeField)).apply)))) ((((unsupported)).apply ("cancelled") ((((unsupported)).apply (((xmodels).xBooleanField)) (FALSE))))) ((((unsupported)).apply ("requirements") ((((unsupported)).apply (((xmodels).xJSONField)) (TRUE) (TRUE))))))) ((((unsupported)).apply ("required_db_vendor") ("postgresql"))))))