memory > xc
memory > x_lazy_re_compile
memory > xenumerate
memory > xstr
memory > xHTMLParser
memory > xvalue
memory > xRootElement
memory > xi
memory > xsuper
memory > xsorted
memory > xchild
memory > xkey
memory > xException
memory > xhasattr
memory > xElement
memory > xhtml
memory > xname
memory > xParser
memory > xHTMLParseError
memory > xhash
memory > xisinstance
memory > xlen
[] > html
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__str__
        memory > xcount
        memory > xBOOLEAN_ATTRIBUTES
        memory > xerror
        memory > x__contains__
        memory > xformat_position
        memory > xnormalize_whitespace
        memory > xfinalize
        memory > xhandle_data
        memory > x__init__
        memory > xASCII_WHITESPACE
        memory > x__hash__
        memory > x__eq__
        memory > xnormalize_attributes
        memory > x__repr__
        memory > xhandle_endtag
        memory > xhandle_starttag
        memory > x_count
        memory > x__getitem__
        memory > xcurrent
        memory > xappend
        memory > xSELF_CLOSING_TAGS
        memory > xparse_html
        memory > xhandle_startendtag
        seq > @
          seq
            unsupported
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xASCII_WHITESPACE.write (((x_lazy_re_compile)).apply ("[tnfr ]+"))
            xBOOLEAN_ATTRIBUTES.write (((unsupported)).apply ("allowfullscreen") ("async") ("autofocus") ("autoplay") ("checked") ("controls") ("default") ("defer ") ("disabled") ("formnovalidate") ("hidden") ("ismap") ("itemscope") ("loop") ("multiple") ("muted") ("nomodule") ("novalidate") ("open") ("playsinline") ("readonly") ("required") ("reversed") ("selected") ("falsespeed"))
            xnormalize_whitespace.write
              [xstring]
                seq > @
                  (((unsupported)).apply (((((xASCII_WHITESPACE).xsub)).apply (" ") ((xstring)))))
            xnormalize_attributes.write
              [xattributes]
                memory > xvalue
                memory > xnormalized
                seq > @
                  seq
                    xnormalized.write (((unsupported)).apply)
                    (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xvalue)))) ((xattributes)))
                      seq
                        (((xname).eq "class").and (xvalue)).if
                          xvalue.write (((" ".xjoin)).apply ((((xsorted)).apply ((((unsupported)).apply ((xvalue)) ((xvalue)) (((((xASCII_WHITESPACE).xsplit)).apply ((xvalue)))) ((xvalue)))))))
                        (((unsupported)).apply ((xname)) ((xBOOLEAN_ATTRIBUTES))).if
                          (((xvalue).not).or ((xvalue).eq (xname))).if
                            xvalue.write "None: is there a None literal in the EO language?"
                          (((unsupported)).apply ((xvalue)) ("None: is there a None literal in the EO language?")).if
                            xvalue.write ""
                        bogusForceDataize.write ((((xnormalized).xappend)).apply ((((unsupported)).apply ((xname)) ((xvalue)))))
                    (((unsupported)).apply ((xnormalized)))
            (((unsupported)).apply)
              seq
                x__init__.write
                  [xself xname xattributes]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xname)) ((xname)))
                        (((unsupported)).apply (((xself).xattributes)) ((((xsorted)).apply ((xattributes)))))
                        (((unsupported)).apply (((xself).xchildren)) ((((unsupported)).apply)))
                xappend.write
                  [xself xelement]
                    seq > @
                      seq
                        (((xisinstance)).apply ((xelement)) ((xstr))).if
                          seq
                            xelement.write (((xnormalize_whitespace)).apply ((xelement)))
                            (((xself).xchildren).and (((xisinstance)).apply ((((unsupported)).apply (((xself).xchildren)) ((1.neg)))) ((xstr)))).if
                              seq
                                (((unsupported)).apply ((((unsupported)).apply (((xself).xchildren)) ((1.neg)))) ((xelement)))
                                (((unsupported)).apply ((((unsupported)).apply (((xself).xchildren)) ((1.neg)))) ((((xnormalize_whitespace)).apply ((((unsupported)).apply (((xself).xchildren)) ((1.neg)))))))
                                (((unsupported)).apply)
                          ((xself).xchildren).if
                            ((((xisinstance)).apply ((((unsupported)).apply (((xself).xchildren)) ((1.neg)))) ((xstr))).and ((((((unsupported)).apply (((xself).xchildren)) ((1.neg))).xisspace)).apply)).if
                              bogusForceDataize.write (((((xself).xchildren).xpop)).apply)
                        (xelement).if
                          bogusForceDataize.write (((((xself).xchildren).xappend)).apply ((xelement)))
                xfinalize.write
                  [xself]
                    memory > xrstrip_last_element
                    seq > @
                      seq
                        xrstrip_last_element.write
                          [xchildren]
                            seq > @
                              seq
                                ((xchildren).and (((xisinstance)).apply ((((unsupported)).apply ((xchildren)) ((1.neg)))) ((xstr)))).if
                                  seq
                                    (((unsupported)).apply ((((unsupported)).apply ((xchildren)) ((1.neg)))) (((((((unsupported)).apply ((xchildren)) ((1.neg))).xrstrip)).apply)))
                                    ((((unsupported)).apply ((xchildren)) ((1.neg))).not).if
                                      seq
                                        bogusForceDataize.write ((((xchildren).xpop)).apply)
                                        xchildren.write (((xrstrip_last_element)).apply ((xchildren)))
                                (((unsupported)).apply ((xchildren)))
                        bogusForceDataize.write (((xrstrip_last_element)).apply (((xself).xchildren)))
                        (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xchild)))) ((((xenumerate)).apply (((xself).xchildren)))))
                          (((xisinstance)).apply ((xchild)) ((xstr))).if
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xchildren)) ((xi)))) (((((xchild).xstrip)).apply)))
                            (((xhasattr)).apply ((xchild)) ("finalize")).if
                              bogusForceDataize.write ((((xchild).xfinalize)).apply)
                x__eq__.write
                  [xself xelement]
                    seq > @
                      seq
                        (((((xhasattr)).apply ((xelement)) ("name")).not).or (((xself).xname).neq ((xelement).xname))).if
                          (((unsupported)).apply (FALSE))
                        (((xself).xattributes).neq ((xelement).xattributes)).if
                          (((unsupported)).apply (FALSE))
                        (((unsupported)).apply ((((xself).xchildren).eq ((xelement).xchildren))))
                x__hash__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xhash)).apply ((((unsupported)).apply (((xself).xname)) ((((unsupported)).apply (((xself).xattributes)))))))))
                x_count.write
                  [xself xelement xcount]
                    memory > xelem_child_idx
                    memory > xelem_child
                    memory > xi
                    seq > @
                      (((unsupported)).apply)
                        (((((xisinstance)).apply ((xelement)) ((xstr))).not).and ((xself).eq (xelement))).if
                          (((unsupported)).apply (1))
                        ((((xisinstance)).apply ((xelement)) ((xRootElement))).and (((xself).xchildren).eq ((xelement).xchildren))).if
                          (((unsupported)).apply (1))
                        xi.write 0
                        xelem_child_idx.write 0
                        (((unsupported)).apply ((xchild)) (((xself).xchildren)))
                          (((xisinstance)).apply ((xchild)) ((xstr))).if
                            (((xisinstance)).apply ((xelement)) ((xstr))).if
                              (xcount).if
                                (((unsupported)).apply ((xi)) (((((xchild).xcount)).apply ((xelement)))))
                                (((unsupported)).apply ((xelement)) ((xchild))).if
                                  (((unsupported)).apply (1))
                            seq
                              (((unsupported)).apply ((xi)) ((((unsupported)).apply (((xchild).x_count)) ((xelement)) ((xcount)))))
                              (((xcount).not).and (xi)).if
                                (((unsupported)).apply ((xi)))
                              ((((xisinstance)).apply ((xelement)) ((xRootElement))).and ((xelement).xchildren)).if
                                seq
                                  xelem_child.write (((unsupported)).apply (((xelement).xchildren)) ((xelem_child_idx)))
                                  ((xelem_child).eq (xchild)).if
                                    seq
                                      (((unsupported)).apply ((xelem_child_idx)) (1))
                                      ((xelem_child_idx).eq (((xlen)).apply (((xelement).xchildren)))).if
                                        seq
                                          (((unsupported)).apply ((xi)) (1))
                                          xelem_child_idx.write 0
                                    xelem_child_idx.write 0
                        (((unsupported)).apply ((xi)))
                x__contains__.write
                  [xself xelement]
                    seq > @
                      (((unsupported)).apply (((((unsupported)).apply (((xself).x_count)) ((xelement)) (FALSE)).greater 0)))
                xcount.write
                  [xself xelement]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).x_count)) ((xelement)) (TRUE))))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).xchildren)) ((xkey)))))
                x__str__.write
                  [xself]
                    memory > xoutput
                    seq > @
                      seq
                        xoutput.write ("<%s".mod ((xself).xname))
                        (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xvalue)))) (((xself).xattributes)))
                          (((unsupported)).apply ((xvalue)) ("None: is there a None literal in the EO language?")).if
                            (((unsupported)).apply ((xoutput)) ((" %s=\"%s\"".mod (((unsupported)).apply ((xkey)) ((xvalue))))))
                            (((unsupported)).apply ((xoutput)) ((" %s".mod (xkey))))
                        ((xself).xchildren).if
                          seq
                            (((unsupported)).apply ((xoutput)) (">n"))
                            (((unsupported)).apply ((xoutput)) (((("".xjoin)).apply ((((unsupported)).apply (((((xisinstance)).apply ((xc)) ((xstr))).if ((((xhtml).xescape)).apply ((xc))) (((xstr)).apply ((xc))))) ((xc)) (((xself).xchildren)))))))
                            (((unsupported)).apply ((xoutput)) (("n</%s>".mod ((xself).xname))))
                          (((unsupported)).apply ((xoutput)) (">"))
                        (((unsupported)).apply ((xoutput)))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xstr)).apply ((xself)))))
            (((unsupported)).apply ((xElement)))
              seq
                x__init__.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply)))
                x__str__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((("".xjoin)).apply ((((unsupported)).apply (((((xisinstance)).apply ((xc)) ((xstr))).if ((((xhtml).xescape)).apply ((xc))) (((xstr)).apply ((xc))))) ((xc)) (((xself).xchildren)))))))
            (((unsupported)).apply ((xException)))
            (((unsupported)).apply ((xHTMLParser)))
              seq
                xSELF_CLOSING_TAGS.write (((unsupported)).apply ("area") ("base") ("br") ("col") ("embed") ("hr") ("img") ("input") ("link") ("meta") ("param") ("source") ("track") ("wbr") ("frame") ("spacer"))
                x__init__.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                        (((unsupported)).apply (((xself).xroot)) ((((xRootElement)).apply)))
                        (((unsupported)).apply (((xself).xopen_tags)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xself).xelement_positions)) ((((unsupported)).apply)))
                xerror.write
                  [xself xmsg]
                    seq > @
                      (((unsupported)).apply ((((xHTMLParseError)).apply ((xmsg)) (((((xself).xgetpos)).apply)))))
                xformat_position.write
                  [xself xposition xelement]
                    seq > @
                      (((unsupported)).apply)
                        (((xposition).not).and (xelement)).if
                          xposition.write (((unsupported)).apply (((xself).xelement_positions)) ((xelement)))
                        (((unsupported)).apply ((xposition)) ("None: is there a None literal in the EO language?")).if
                          xposition.write ((((xself).xgetpos)).apply)
                        (((xhasattr)).apply ((xposition)) ("lineno")).if
                          xposition.write (((unsupported)).apply (((xposition).xlineno)) (((xposition).xoffset)))
                        (((unsupported)).apply (("Line %d, Column %d".mod (xposition))))
                xcurrent.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        ((xself).xopen_tags).if
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xopen_tags)) ((1.neg)))))
                          (((unsupported)).apply (((xself).xroot)))
                xhandle_startendtag.write
                  [xself xtag xattrs]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xhandle_starttag)).apply ((xtag)) ((xattrs)))
                        (((unsupported)).apply ((xtag)) (((xself).xSELF_CLOSING_TAGS))).if
                          bogusForceDataize.write ((((xself).xhandle_endtag)).apply ((xtag)))
                xhandle_starttag.write
                  [xself xtag xattrs]
                    memory > xelement
                    seq > @
                      seq
                        xattrs.write (((xnormalize_attributes)).apply ((xattrs)))
                        xelement.write (((xElement)).apply ((xtag)) ((xattrs)))
                        bogusForceDataize.write (((((xself).xcurrent).xappend)).apply ((xelement)))
                        (((unsupported)).apply ((xtag)) (((xself).xSELF_CLOSING_TAGS))).if
                          bogusForceDataize.write (((((xself).xopen_tags).xappend)).apply ((xelement)))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xelement_positions)) ((xelement)))) (((((xself).xgetpos)).apply)))
                xhandle_endtag.write
                  [xself xtag]
                    memory > xelement
                    seq > @
                      seq
                        (((xself).xopen_tags).not).if
                          bogusForceDataize.write ((((xself).xerror)).apply (("Unexpected end tag `%s` (%s)".mod (((unsupported)).apply ((xtag)) (((((xself).xformat_position)).apply))))))
                        xelement.write (((((xself).xopen_tags).xpop)).apply)
                        while.
                          (((xelement).xname).neq (xtag))
                          [unused]
                            seq > @
                              seq
                                (((xself).xopen_tags).not).if
                                  bogusForceDataize.write ((((xself).xerror)).apply (("Unexpected end tag `%s` (%s)".mod (((unsupported)).apply ((xtag)) (((((xself).xformat_position)).apply))))))
                                xelement.write (((((xself).xopen_tags).xpop)).apply)
                xhandle_data.write
                  [xself xdata]
                    seq > @
                      bogusForceDataize.write (((((xself).xcurrent).xappend)).apply ((xdata)))
            xparse_html.write
              [xhtml]
                memory > xparser
                memory > xdocument
                seq > @
                  seq
                    (((unsupported)).apply)
                    xparser.write (((xParser)).apply)
                    bogusForceDataize.write ((((xparser).xfeed)).apply ((xhtml)))
                    bogusForceDataize.write ((((xparser).xclose)).apply)
                    xdocument.write ((xparser).xroot)
                    bogusForceDataize.write ((((xdocument).xfinalize)).apply)
                    (((((xlen)).apply (((xdocument).xchildren))).eq 1).and ((((xisinstance)).apply ((((unsupported)).apply (((xdocument).xchildren)) (0))) ((xstr))).not)).if
                      xdocument.write (((unsupported)).apply (((xdocument).xchildren)) (0))
                    (((unsupported)).apply ((xdocument)))