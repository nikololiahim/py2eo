memory > xContentType
memory > xmodelformset_factory
memory > xException
memory > xsuper
memory > xBaseModelFormSet
memory > xsetattr
memory > xmodels
memory > xkwargs
memory > xisinstance
[] > forms
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xget_default_prefix
        memory > xgeneric_inlineformset_factory
        memory > x__init__
        memory > xsave_new
        memory > xinitial_form_count
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xBaseModelFormSet)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xdata xfiles xinstance xsave_as_new xprefix xqueryset]
                    memory > xqs
                    memory > xopts
                    seq > @
                      (((unsupported)).apply)
                        xopts.write (((xself).xmodel).x_meta)
                        (((unsupported)).apply (((xself).xinstance)) ((xinstance)))
                        (((unsupported)).apply (((xself).xrel_name)) (((((((((xopts).xapp_label).sub "-").sub ((xopts).xmodel_name)).sub "-").sub (((xself).xct_field).xname)).sub "-").sub (((xself).xct_fk_field).xname))))
                        (((unsupported)).apply (((xself).xsave_as_new)) ((xsave_as_new)))
                        ((((unsupported)).apply (((xself).xinstance)) ("None: is there a None literal in the EO language?")).or (((unsupported)).apply ((((xself).xinstance).xpk)) ("None: is there a None literal in the EO language?"))).if
                          xqs.write ((((((xself).xmodel).x_default_manager).xnone)).apply)
                          seq
                            (((unsupported)).apply ((xqueryset)) ("None: is there a None literal in the EO language?")).if
                              xqueryset.write (((xself).xmodel).x_default_manager)
                            xqs.write ((((xqueryset).xfilter)).apply ((((unsupported)).apply ((((unsupported)).apply ((((xself).xct_field).xname)) ((((unsupported)).apply ((((xContentType).xobjects).xget_for_model)) (((xself).xinstance)) (((xself).xfor_concrete_model)))) ((((xself).xct_fk_field).xname)) ((((xself).xinstance).xpk)))))))
                        (((unsupported)).apply (((((xsuper)).apply).x__init__)) ((xqs)) ((xdata)) ((xfiles)) ((xprefix)) ((((unsupported)).apply ((xkwargs)))))
                xinitial_form_count.write
                  [xself]
                    seq > @
                      seq
                        ((xself).xsave_as_new).if
                          (((unsupported)).apply (0))
                        (((unsupported)).apply (((((((xsuper)).apply).xinitial_form_count)).apply)))
                xget_default_prefix.write
                  [xcls]
                    memory > xopts
                    seq > @
                      (((unsupported)).apply)
                        xopts.write (((xcls).xmodel).x_meta)
                        (((unsupported)).apply (((((((((xopts).xapp_label).sub "-").sub ((xopts).xmodel_name)).sub "-").sub (((xcls).xct_field).xname)).sub "-").sub (((xcls).xct_fk_field).xname))))
                xsave_new.write
                  [xself xform xcommit]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((xsetattr)).apply (((xform).xinstance)) ((((((xself).xct_field).xget_attname)).apply)) (((((((xContentType).xobjects).xget_for_model)).apply (((xself).xinstance))).xpk)))
                        bogusForceDataize.write (((xsetattr)).apply (((xform).xinstance)) ((((((xself).xct_fk_field).xget_attname)).apply)) ((((xself).xinstance).xpk)))
                        (((unsupported)).apply ((((unsupported)).apply (((xform).xsave)) ((xcommit)))))
            xgeneric_inlineformset_factory.write
              [xmodel xform xformset xct_field xfk_field xfields xexclude xextra xcan_order xcan_delete xmax_num xformfield_callback xvalidate_max xfor_concrete_model xmin_num xvalidate_min xabsolute_max xcan_delete_extra]
                memory > xFormSet
                memory > xopts
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    xopts.write ((xmodel).x_meta)
                    xct_field.write ((((xopts).xget_field)).apply ((xct_field)))
                    (((((xisinstance)).apply ((xct_field)) (((xmodels).xForeignKey))).not).or ((((xct_field).xremote_field).xmodel).neq (xContentType))).if
                      (((unsupported)).apply ((((xException)).apply (("fk_name '%s' is not a ForeignKey to ContentType".mod (xct_field))))))
                    xfk_field.write ((((xopts).xget_field)).apply ((xfk_field)))
                    xexclude.write (((unsupported)).apply ((((unsupported)).apply (((xexclude).or (((unsupported)).apply))))) (((xct_field).xname)) (((xfk_field).xname)))
                    xFormSet.write (((unsupported)).apply ((xmodelformset_factory)) ((xmodel)) ((xform)) ((xformfield_callback)) ((xformset)) ((xextra)) ((xcan_delete)) ((xcan_order)) ((xfields)) ((xexclude)) ((xmax_num)) ((xvalidate_max)) ((xmin_num)) ((xvalidate_min)) ((xabsolute_max)) ((xcan_delete_extra)))
                    (((unsupported)).apply (((xFormSet).xct_field)) ((xct_field)))
                    (((unsupported)).apply (((xFormSet).xct_fk_field)) ((xfk_field)))
                    (((unsupported)).apply (((xFormSet).xfor_concrete_model)) ((xfor_concrete_model)))
                    (((unsupported)).apply ((xFormSet)))