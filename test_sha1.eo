memory > xCharField
memory > xconnection
memory > xSHA1
memory > xregister_lookup
memory > xTestCase
memory > xAuthor
[] > test_sha1
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsetUpTestData
        memory > xtest_transform
        memory > xtest_basic
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xAuthor).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xAuthor)) ("John Smith"))) ((((unsupported)).apply ((xAuthor)) ("Jordan Élena"))) ((((unsupported)).apply ((xAuthor)) ("皇帝"))) ((((unsupported)).apply ((xAuthor)) (""))) ((((unsupported)).apply ((xAuthor)) ("None: is there a None literal in the EO language?"))))))
                xtest_basic.write
                  [xself]
                    memory > xauthors
                    seq > @
                      seq
                        xauthors.write ((((((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xannotate)) ((((xSHA1)).apply ("alias")))).xvalues_list)) ("sha1_alias") (TRUE)).xorder_by)).apply ("pk"))
                        bogusForceDataize.write ((((xself).xassertSequenceEqual)).apply ((xauthors)) ((((unsupported)).apply ("e61a3587b3f7a142b8c7b9263c82f8119398ecb7") ("0781e0745a2503e6ded05ed5bc554c421d781b0c") ("198d15ea139de04060caf95bc3e0ec5883cba881") ("da39a3ee5e6b4b0d3255bfef95601890afd80709") (((((xconnection).xfeatures).xinterprets_empty_strings_as_nulls).if "da39a3ee5e6b4b0d3255bfef95601890afd80709" "None: is there a None literal in the EO language?")))))
                xtest_transform.write
                  [xself]
                    memory > xauthors
                    seq > @
                      (((unsupported)).apply ((((xregister_lookup)).apply ((xCharField)) ((xSHA1)))))
                        seq
                          xauthors.write (((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xfilter)) ("e61a3587b3f7a142b8c7b9263c82f8119398ecb7")).xvalues_list)) ("alias") (TRUE))
                          bogusForceDataize.write ((((xself).xassertSequenceEqual)).apply ((xauthors)) ((((unsupported)).apply ("John Smith"))))