memory > xE001
memory > xcheck_async_unsafe
memory > xSimpleTestCase
[] > test_async_checks
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_no_allowed_async_unsafe
        memory > xtest_allowed_async_unsafe_set
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_no_allowed_async_unsafe.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcheck_async_unsafe)).apply ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply)))
                xtest_allowed_async_unsafe_set.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcheck_async_unsafe)).apply ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ((xE001)))))