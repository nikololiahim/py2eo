memory > xBytesIO
memory > xstr
memory > xContext
memory > xk
memory > xrg
memory > xcopy
memory > xfalse
memory > xext_ring
memory > xfromstr
memory > xmin
memory > xgdal
memory > xpickle
memory > xMultiPoint
memory > xlist
memory > xxmin
memory > xversion_tuple
memory > xValueError
memory > xpoint
memory > xg
memory > xfh
memory > xMultiLineString
memory > xrange
memory > xEngine
memory > xtg
memory > xTestDataMixin
memory > xa2b_hex
memory > xls
memory > xLinearRing
memory > xpnt
memory > xctypes
memory > xtup
memory > xGeometryCollection
memory > xIndexError
memory > xt2
memory > xfromfile
memory > xmax
memory > xerr
memory > xrandom
memory > xp
memory > xring
memory > xsrid
memory > xgeos_version_tuple
memory > xpath
memory > xymax
memory > xtype
memory > xgeom
memory > xr
memory > xExtendedPolygon
memory > xhasattr
memory > xx
memory > xi
memory > xsuper
memory > xt3
memory > xs
memory > xbytes
memory > xm
memory > xtuple
memory > xbg
memory > xint_rings
memory > xmocked
memory > xargs
memory > xLineString
memory > xitertools
memory > xnumpy
memory > xmock
memory > xPoint
memory > xgetattr
memory > xmls
memory > xxmax
memory > xiter
memory > xymin
memory > xformat
memory > xzip
memory > xMultiPolygon
memory > xNotAGeometry
memory > xkwarg_name
memory > xy
memory > xversion_string
memory > xhash
memory > xnext
memory > xjson
memory > xmemoryview
memory > xGEOSException
memory > xpoly
memory > xkwargs
memory > xGEOSGeometry
memory > xline
memory > xlen
memory > xmerged
memory > xmp
memory > xSimpleTestCase
memory > xj
memory > xisinstance
memory > xTypeError
memory > xt1
memory > xPolygon
memory > xrr
[] > test_geos
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_make_valid_geos_version
        memory > xtest_eq_with_srid
        memory > xtest_transform_noop
        memory > xtest_copy
        memory > xtest_linearring_list_assignment
        memory > xtest_errors
        memory > xtest_linearring
        memory > xtest_geometry_collection_list_assignment
        memory > xtest_eq
        memory > xtest_wkb
        memory > xtest_memory_hijinks
        memory > xtest_make_valid
        memory > xtest_collection_dims
        memory > xtest_valid_reason
        memory > xtest_union
        memory > xtest_create_wkb
        memory > xtest_distance
        memory > xtest_threed
        memory > xtest_wkt_invalid
        memory > xtest_prepared
        memory > xtest_pickle
        memory > xtest_subclassing
        memory > xtest_length
        memory > xtest_from_ewkt_empty_string
        memory > xtest_polygon_list_assignment
        memory > xtest_wkt
        memory > xtest_deconstructible
        memory > xtest_linestring
        memory > xtest_multipoints
        memory > xtest_extent
        memory > xtest_gdal
        memory > xtest_from_ewkt_invalid_srid
        memory > xtest_from_ewkt
        memory > x_test_buffer
        memory > xtest_kml
        memory > xtest_hash
        memory > xtest_multilinestring
        memory > xtest_is_counterclockwise
        memory > xtest_emptyCollections
        memory > xtest_linestring_iter
        memory > xtest_create_hex
        memory > xtest_is_counterclockwise_geos_error
        memory > xtest_line_merge
        memory > x_test_is_counterclockwise
        memory > xtest_buffer
        memory > xtest_transform_3d
        memory > xtest_difference
        memory > xtest_empty_point
        memory > xtest_covers
        memory > xtest_from_gml
        memory > xtest_linearref
        memory > xtest_geos_version_tuple
        memory > xtest_fromstr_scientific_wkt
        memory > xtest_transform
        memory > xtest_unary_union
        memory > xtest_hexewkb
        memory > xtest_fromfile
        memory > xtest_hex
        memory > xtest_linestring_reverse
        memory > xtest_linestring_list_assignment
        memory > xtest_collections_of_collections
        memory > xtest_point_list_assignment
        memory > xtest_closed
        memory > xtest_point_reverse
        memory > xtest_json_srid
        memory > xtest_relate_pattern
        memory > xtest_mutable_geometries
        memory > xtest_intersection
        memory > xtest_linearring_json
        memory > xtest_is_counterclockwise_fallback
        memory > xtest_polygons_templates
        memory > xtest_custom_srid
        memory > xtest_polygons_from_bbox
        memory > xtest_symdifference
        memory > xtest_polygon_comparison
        memory > xtest_buffer_with_style
        memory > xtest_multipolygons
        memory > xtest_ewkt
        memory > xtest_coord_seq
        memory > xtest_json
        memory > xtest_normalize
        memory > xtest_transform_nosrid
        memory > xtest_points
        memory > xtest_polygons
        memory > xtest_srid
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)) ((xTestDataMixin)))
              seq
                xtest_wkt.write
                  [xself]
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xwkt_out)))
                          seq
                            xgeom.write (((xfromstr)).apply (((xg).xwkt)))
                            ((xgeom).xhasz).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).xewkt)) (((xgeom).xwkt)))
                xtest_wkt_invalid.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "String input unrecognized as WKT EWKT, and HEXEWKB."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write (((xfromstr)).apply ("POINT(٠٠١ ٠)"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write (((xfromstr)).apply ("SRID=٧٥٨٣;POINT(100 0)"))
                xtest_hex.write
                  [xself]
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xhex_wkt)))
                          seq
                            xgeom.write (((xfromstr)).apply (((xg).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).xhex)) ((((((xgeom).xhex).xdecode)).apply)))
                xtest_hexewkb.write
                  [xself]
                    memory > xogc_hex
                    memory > xpnt_3d
                    memory > xhexewkb_3d
                    memory > xpnt_2d
                    memory > xogc_hex_3d
                    memory > xhexewkb_2d
                    seq > @
                      seq
                        unsupported
                        xogc_hex.write "01010000000000000000000000000000000000F03F"
                        xogc_hex_3d.write "01010000800000000000000000000000000000F03F0000000000000040"
                        xhexewkb_2d.write "0101000020E61000000000000000000000000000000000F03F"
                        xhexewkb_3d.write "01010000A0E61000000000000000000000000000000000F03F0000000000000040"
                        xpnt_2d.write (((unsupported)).apply ((xPoint)) (0) (1) (4326))
                        xpnt_3d.write (((unsupported)).apply ((xPoint)) (0) (1) (2) (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xogc_hex)) (((xpnt_2d).xhex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xogc_hex_3d)) (((xpnt_3d).xhex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xhexewkb_2d)) (((xpnt_2d).xhexewkb)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xhexewkb_3d)) (((xpnt_3d).xhexewkb)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xGEOSGeometry)).apply ((xhexewkb_3d))).xhasz)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xmemoryview)).apply ((((xa2b_hex)).apply ((xhexewkb_2d)))))) (((xpnt_2d).xewkb)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xmemoryview)).apply ((((xa2b_hex)).apply ((xhexewkb_3d)))))) (((xpnt_3d).xewkb)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) (((((xGEOSGeometry)).apply ((xhexewkb_2d))).xsrid)))
                xtest_kml.write
                  [xself]
                    memory > xkml
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xtg)) ((((xself).xgeometries).xwkt_out)))
                          seq
                            xgeom.write (((xfromstr)).apply (((xtg).xwkt)))
                            xkml.write (((xgetattr)).apply ((xtg)) ("kml") ((xfalse)))
                            (xkml).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkml)) (((xgeom).xkml)))
                xtest_errors.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xerr)) ((((xself).xgeometries).xerrors)))
                          (((unsupported)).apply (((((xself).xassertRaises)).apply ((((unsupported)).apply ((xGEOSException)) ((xValueError)))))))
                            bogusForceDataize.write (((xfromstr)).apply (((xerr).xwkt)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          bogusForceDataize.write (((xGEOSGeometry)).apply ((((xmemoryview)).apply ("0"))))
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write (((xGEOSGeometry)).apply ((((xNotAGeometry)).apply)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write (((xGEOSGeometry)).apply ("None: is there a None literal in the EO language?"))
                xtest_wkb.write
                  [xself]
                    memory > xgeom
                    memory > xwkb
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xhex_wkt)))
                          seq
                            xgeom.write (((xfromstr)).apply (((xg).xwkt)))
                            xwkb.write ((xgeom).xwkb)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xwkb).xhex)).apply).xupper)).apply)) (((xg).xhex)))
                xtest_create_hex.write
                  [xself]
                    memory > xgeom_t
                    memory > xgeom_h
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xhex_wkt)))
                          seq
                            xgeom_h.write (((xGEOSGeometry)).apply (((xg).xhex)))
                            xgeom_t.write (((xfromstr)).apply (((xg).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgeom_t).xwkt)) (((xgeom_h).xwkt)))
                xtest_create_wkb.write
                  [xself]
                    memory > xgeom_t
                    memory > xgeom_h
                    memory > xwkb
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xhex_wkt)))
                          seq
                            xwkb.write (((xmemoryview)).apply (((((xbytes).xfromhex)).apply (((xg).xhex)))))
                            xgeom_h.write (((xGEOSGeometry)).apply ((xwkb)))
                            xgeom_t.write (((xfromstr)).apply (((xg).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgeom_t).xwkt)) (((xgeom_h).xwkt)))
                xtest_ewkt.write
                  [xself]
                    memory > xpoly
                    memory > xewkt
                    memory > xsrids
                    seq > @
                      seq
                        unsupported
                        xsrids.write (((unsupported)).apply ((1.neg)) (32140))
                        (((unsupported)).apply ((xsrid)) ((xsrids)))
                          (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpolygons)))
                            seq
                              xewkt.write ("SRID=%d;%s".mod (((unsupported)).apply ((xsrid)) (((xp).xwkt))))
                              xpoly.write (((xfromstr)).apply ((xewkt)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xsrid)) (((xpoly).xsrid)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xsrid)) ((((xpoly).xshell).xsrid)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xsrid)) (((((xfromstr)).apply (((xpoly).xewkt))).xsrid)))
                xtest_json.write
                  [xself]
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xjson_geoms)))
                          seq
                            xgeom.write (((xGEOSGeometry)).apply (((xg).xwkt)))
                            ((((xhasattr)).apply ((xg)) ("not_equal")).not).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xjson).xloads)).apply (((xg).xjson)))) (((((xjson).xloads)).apply (((xgeom).xjson)))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xjson).xloads)).apply (((xg).xjson)))) (((((xjson).xloads)).apply (((xgeom).xgeojson)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xGEOSGeometry)).apply (((xg).xwkt)) (4326))) ((((xGEOSGeometry)).apply (((xgeom).xjson)))))
                xtest_json_srid.write
                  [xself]
                    memory > xgeojson_data
                    seq > @
                      seq
                        xgeojson_data.write (((unsupported)).apply ("type") ("Point") ("coordinates") ((((unsupported)).apply (2) (49))) ("crs") ((((unsupported)).apply ("type") ("name") ("properties") ((((unsupported)).apply ("name") ("urn:ogc:def:crs:EPSG::4322"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xGEOSGeometry)).apply (((((xjson).xdumps)).apply ((xgeojson_data)))))) ((((unsupported)).apply ((xPoint)) (2) (49) (4322))))
                xtest_fromfile.write
                  [xself]
                    memory > xwkb_f
                    memory > xpnt
                    memory > xwkt_f
                    memory > xref_pnt
                    seq > @
                      seq
                        unsupported
                        xref_pnt.write (((xGEOSGeometry)).apply ("POINT(5 23)"))
                        xwkt_f.write (((xBytesIO)).apply)
                        bogusForceDataize.write ((((xwkt_f).xwrite)).apply ((((((xref_pnt).xwkt).xencode)).apply)))
                        xwkb_f.write (((xBytesIO)).apply)
                        bogusForceDataize.write ((((xwkb_f).xwrite)).apply ((((xbytes)).apply (((xref_pnt).xwkb)))))
                        (((unsupported)).apply ((xfh)) ((((unsupported)).apply ((xwkt_f)) ((xwkb_f)))))
                          seq
                            bogusForceDataize.write ((((xfh).xseek)).apply (0))
                            xpnt.write (((xfromfile)).apply ((xfh)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xref_pnt)) ((xpnt)))
                xtest_eq.write
                  [xself]
                    memory > xls
                    memory > xp
                    seq > @
                      seq
                        unsupported
                        xp.write (((xfromstr)).apply ("POINT(5 23)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp)) (((xp).xwkt)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp)) ("foo"))
                        xls.write (((xfromstr)).apply ("LINESTRING(0 0, 1 1, 5 5)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) (((xls).xwkt)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp)) ("bar"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp)) ("POINT(5.0 23.0)"))
                        (((unsupported)).apply ((xg)) ((((unsupported)).apply ((xp)) ((xls)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIsNotNone)).apply ((xg)))
                            bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xg)) ((((unsupported)).apply ("foo") ("bar"))))
                            bogusForceDataize.write ((((xself).xassertIsNot)).apply ((xg)) ((xfalse)))
                xtest_hash.write
                  [xself]
                    memory > xmultipoint_2
                    memory > xpoint_3
                    memory > xmultipoint_1
                    memory > xpoint_2
                    memory > xpoint_1
                    memory > xmultipoint_3
                    seq > @
                      seq
                        xpoint_1.write (((xPoint)).apply (5) (23))
                        xpoint_2.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        xpoint_3.write (((unsupported)).apply ((xPoint)) (5) (23) (32632))
                        xmultipoint_1.write (((unsupported)).apply ((xMultiPoint)) ((xpoint_1)) (4326))
                        xmultipoint_2.write (((xMultiPoint)).apply ((xpoint_2)))
                        xmultipoint_3.write (((xMultiPoint)).apply ((xpoint_3)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xpoint_1)))) ((((xhash)).apply ((xpoint_2)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xpoint_1)))) ((((xhash)).apply ((xpoint_3)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xpoint_2)))) ((((xhash)).apply ((xpoint_3)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xmultipoint_1)))) ((((xhash)).apply ((xmultipoint_2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xmultipoint_2)))) ((((xhash)).apply ((xmultipoint_3)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xmultipoint_1)))) ((((xhash)).apply ((xpoint_1)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xmultipoint_2)))) ((((xhash)).apply ((xpoint_2)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xmultipoint_3)))) ((((xhash)).apply ((xpoint_3)))))
                xtest_eq_with_srid.write
                  [xself]
                    memory > xp1
                    memory > xp0
                    memory > xp2
                    seq > @
                      seq
                        unsupported
                        xp0.write (((xPoint)).apply (5) (23))
                        xp1.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        xp2.write (((unsupported)).apply ((xPoint)) (5) (23) (32632))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp0)) ((xp1)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp1)) ((xp2)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp0)) (((xp1).xewkt)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp1)) (((xp0).xewkt)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp1)) (((xp2).xewkt)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp2)) ((xp2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp2)) (((xp2).xewkt)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp2)) (((xp2).xwkt)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp0)) ("SRID=0;POINT (5 23)"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp1)) ("SRID=0;POINT (5 23)"))
                xtest_points.write
                  [xself]
                    memory > xset_tup2
                    memory > xpnt2
                    memory > xpnt
                    memory > xtup_args
                    memory > xpnt3
                    memory > xprev
                    memory > xset_tup1
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xfromstr)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpoints)))
                          seq
                            xpnt.write (((xfromstr)).apply (((xp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpnt).xgeom_type)) ("Point"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpnt).xgeom_typeid)) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpnt).xdims)) (0))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xx)) (((xpnt).xx)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xy)) (((xpnt).xy)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpnt)) ((((xfromstr)).apply (((xp).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xpnt).eq (xprev))) ((xfalse)))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xp).xx)) ((((unsupported)).apply (((xpnt).xtuple)) (0))) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xp).xy)) ((((unsupported)).apply (((xpnt).xtuple)) (1))) (9))
                            (((xhasattr)).apply ((xp)) ("z")).if
                              seq
                                bogusForceDataize.write ((((xself).xassertIs)).apply (((xpnt).xhasz)) (TRUE))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xz)) (((xpnt).xz)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xz)) ((((unsupported)).apply (((xpnt).xtuple)) (2))) (9))
                                xtup_args.write (((unsupported)).apply (((xp).xx)) (((xp).xy)) (((xp).xz)))
                                xset_tup1.write (((unsupported)).apply (2.71) (3.14) (5.23))
                                xset_tup2.write (((unsupported)).apply (5.23) (2.71) (3.14))
                              seq
                                bogusForceDataize.write ((((xself).xassertIs)).apply (((xpnt).xhasz)) ((xfalse)))
                                bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xpnt).xz)))
                                xtup_args.write (((unsupported)).apply (((xp).xx)) (((xp).xy)))
                                xset_tup1.write (((unsupported)).apply (2.71) (3.14))
                                xset_tup2.write (((unsupported)).apply (3.14) (2.71))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xcentroid)) ((((xpnt).xcentroid).xtuple)))
                            xpnt2.write (((xPoint)).apply ((xtup_args)))
                            xpnt3.write (((xPoint)).apply ((((unsupported)).apply ((xtup_args)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpnt)) ((xpnt2)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpnt)) ((xpnt3)))
                            (((unsupported)).apply (((xpnt).xy)) (3.14))
                            (((unsupported)).apply (((xpnt).xx)) (2.71))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (3.14) (((xpnt).xy)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (2.71) (((xpnt).xx)))
                            (((unsupported)).apply (((xpnt).xtuple)) ((xset_tup1)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xset_tup1)) (((xpnt).xtuple)))
                            (((unsupported)).apply (((xpnt).xcoords)) ((xset_tup2)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xset_tup2)) (((xpnt).xcoords)))
                            xprev.write (xpnt)
                xtest_point_reverse.write
                  [xself]
                    memory > xpoint
                    seq > @
                      seq
                        xpoint.write (((xGEOSGeometry)).apply ("POINT(144.963 -37.8143)") (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoint).xsrid)) (4326))
                        bogusForceDataize.write ((((xpoint).xreverse)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoint).xewkt)) ("SRID=4326;POINT (-37.8143 144.963)"))
                xtest_multipoints.write
                  [xself]
                    memory > xmpnt
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xmp)) ((((xself).xgeometries).xmultipoints)))
                          seq
                            xmpnt.write (((xfromstr)).apply (((xmp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpnt).xgeom_type)) ("MultiPoint"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpnt).xgeom_typeid)) (4))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpnt).xdims)) (0))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xmp).xcentroid)) (0))) ((((unsupported)).apply ((((xmpnt).xcentroid).xtuple)) (0))) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xmp).xcentroid)) (1))) ((((unsupported)).apply ((((xmpnt).xcentroid).xtuple)) (1))) (9))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xmpnt).x__getitem__)).apply ((((xlen)).apply ((xmpnt)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xcentroid)) ((((xmpnt).xcentroid).xtuple)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xcoords)) ((((xtuple)).apply ((((unsupported)).apply (((xm).xtuple)) ((xm)) ((xmpnt)))))))
                            (((unsupported)).apply ((xp)) ((xmpnt)))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xgeom_type)) ("Point"))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xgeom_typeid)) (0))
                                bogusForceDataize.write ((((xself).xassertIs)).apply (((xp).xempty)) ((xfalse)))
                                bogusForceDataize.write ((((xself).xassertIs)).apply (((xp).xvalid)) (TRUE))
                xtest_linestring.write
                  [xself]
                    memory > xls
                    memory > xprev
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xfromstr)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xline)) ((((xself).xgeometries).xlinestrings)))
                          seq
                            xls.write (((xfromstr)).apply (((xline).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xgeom_type)) ("LineString"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xgeom_typeid)) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xdims)) (1))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xls).xempty)) ((xfalse)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xls).xring)) ((xfalse)))
                            (((xhasattr)).apply ((xline)) ("centroid")).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xline).xcentroid)) ((((xls).xcentroid).xtuple)))
                            (((xhasattr)).apply ((xline)) ("tup")).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xline).xtup)) (((xls).xtuple)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xfromstr)).apply (((xline).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xls).eq (xprev))) ((xfalse)))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xls).x__getitem__)).apply ((((xlen)).apply ((xls)))))
                            xprev.write (xls)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLineString)).apply (((xls).xtuple)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLineString)).apply ((((unsupported)).apply (((xls).xtuple)))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLineString)).apply ((((unsupported)).apply ((((xlist)).apply ((xtup)))) ((xtup)) (((xls).xtuple)))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xwkt)) (((((xLineString)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply ((((xPoint)).apply ((xtup)))) ((xtup)) (((xls).xtuple))))))))).xwkt)))
                            (xnumpy).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLineString)).apply (((((xnumpy).xarray)).apply (((xls).xtuple)))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ("Each coordinate should be a sequence (list or tuple)"))))
                          bogusForceDataize.write (((xLineString)).apply ((((unsupported)).apply (0) (0))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("LineString requires at least 2 points, got 1."))))
                          bogusForceDataize.write (((xLineString)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))))))
                        (xnumpy).if
                          (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("LineString requires at least 2 points, got 1."))))
                            bogusForceDataize.write (((xLineString)).apply (((((xnumpy).xarray)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))))))))
                        (((unsupported)).apply (((((xmock).xpatch)).apply ("django.contrib.gis.geos.linestring.numpy") ((xfalse)))))
                          (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ("Invalid initialization input for LineStrings."))))
                            bogusForceDataize.write (((xLineString)).apply ("wrong input"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))))) ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))))
                xtest_linestring_reverse.write
                  [xself]
                    memory > xline
                    seq > @
                      seq
                        xline.write (((xGEOSGeometry)).apply ("LINESTRING(144.963 -37.8143,151.2607 -33.887)") (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xline).xsrid)) (4326))
                        bogusForceDataize.write ((((xline).xreverse)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xline).xewkt)) ("SRID=4326;LINESTRING (151.2607 -33.887, 144.963 -37.8143)"))
                x_test_is_counterclockwise.write
                  [xself]
                    memory > xlr
                    memory > xmsg
                    seq > @
                      seq
                        xlr.write (((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (0) (0))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xlr).xis_counterclockwise)) (TRUE))
                        bogusForceDataize.write ((((xlr).xreverse)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xlr).xis_counterclockwise)) ((xfalse)))
                        xmsg.write "Orientation of an empty LinearRing cannot be determined."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          unsupported
                xtest_is_counterclockwise.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).x_test_is_counterclockwise)).apply)
                xtest_is_counterclockwise_geos_error.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xmock).xpatch)).apply ("django.contrib.gis.geos.prototypes.cs_is_ccw"))) ((xmocked)))
                          seq
                            (((unsupported)).apply (((xmocked).xreturn_value)) (0))
                            (((unsupported)).apply (((xmocked).xfunc_name)) ("GEOSCoordSeq_isCCW"))
                            xmsg.write "Error encountered in GEOS C function \"GEOSCoordSeq_isCCW\"."
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xGEOSException)) ((xmsg)))))
                              unsupported
                xtest_is_counterclockwise_fallback.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).x_test_is_counterclockwise)).apply)
                xtest_multilinestring.write
                  [xself]
                    memory > xml
                    memory > xprev
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xfromstr)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xline)) ((((xself).xgeometries).xmultilinestrings)))
                          seq
                            xml.write (((xfromstr)).apply (((xline).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xml).xgeom_type)) ("MultiLineString"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xml).xgeom_typeid)) (5))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xml).xdims)) (1))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xline).xcentroid)) (0))) ((((xml).xcentroid).xx)) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xline).xcentroid)) (1))) ((((xml).xcentroid).xy)) (9))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xml)) ((((xfromstr)).apply (((xline).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xml).eq (xprev))) ((xfalse)))
                            xprev.write (xml)
                            (((unsupported)).apply ((xls)) ((xml)))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xgeom_type)) ("LineString"))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xgeom_typeid)) (1))
                                bogusForceDataize.write ((((xself).xassertIs)).apply (((xls).xempty)) ((xfalse)))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xml).x__getitem__)).apply ((((xlen)).apply ((xml)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xml).xwkt)) (((((xMultiLineString)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply (((((xs).xclone)).apply)) ((xs)) ((xml))))))))).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xml)) ((((xMultiLineString)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply ((((xLineString)).apply (((xs).xtuple)))) ((xs)) ((xml)))))))))))
                xtest_linearring.write
                  [xself]
                    memory > xlr
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xrr)) ((((xself).xgeometries).xlinearrings)))
                          seq
                            xlr.write (((xfromstr)).apply (((xrr).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlr).xgeom_type)) ("LinearRing"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlr).xgeom_typeid)) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlr).xdims)) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xrr).xn_p)) ((((xlen)).apply ((xlr)))))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xlr).xvalid)) (TRUE))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xlr).xempty)) ((xfalse)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlr)) ((((xLinearRing)).apply (((xlr).xtuple)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlr)) ((((xLinearRing)).apply ((((unsupported)).apply (((xlr).xtuple)))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlr)) ((((xLinearRing)).apply ((((unsupported)).apply ((((xlist)).apply ((xtup)))) ((xtup)) (((xlr).xtuple)))))))
                            (xnumpy).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlr)) ((((xLinearRing)).apply (((((xnumpy).xarray)).apply (((xlr).xtuple)))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("LinearRing requires at least 4 points, got 3."))))
                          bogusForceDataize.write (((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("LinearRing requires at least 4 points, got 1."))))
                          bogusForceDataize.write (((xLinearRing)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))))))
                        (xnumpy).if
                          (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("LinearRing requires at least 4 points, got 1."))))
                            bogusForceDataize.write (((xLinearRing)).apply (((((xnumpy).xarray)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))))))))
                xtest_linearring_json.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertJSONEqual)).apply (((((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0)))).xjson)) ("{\"coordinates\": [[0, 0], [0, 1], [1, 1], [0, 0]], \"type\": \"LineString\"}"))
                xtest_polygons_from_bbox.write
                  [xself]
                    memory > xbbox
                    memory > xx
                    memory > xy
                    memory > xp
                    seq > @
                      seq
                        unsupported
                        xbbox.write (((unsupported)).apply ((180.neg)) ((90.neg)) (180) (90))
                        xp.write ((((xPolygon).xfrom_bbox)).apply ((xbbox)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbbox)) (((xp).xextent)))
                        xx.write 3.14159265358979323
                        xbbox.write (((unsupported)).apply (0) (0) (1) ((xx)))
                        xp.write ((((xPolygon).xfrom_bbox)).apply ((xbbox)))
                        xy.write (((unsupported)).apply (((xp).xextent)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xformat)).apply ((xx)) (".13f"))) ((((xformat)).apply ((xy)) (".13f"))))
                xtest_polygons.write
                  [xself]
                    memory > xpoly
                    memory > xring
                    memory > xring_tuples
                    memory > xprev
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xfromstr)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpolygons)))
                          seq
                            xpoly.write (((xfromstr)).apply (((xp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoly).xgeom_type)) ("Polygon"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoly).xgeom_typeid)) (3))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoly).xdims)) (2))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xpoly).xempty)) ((xfalse)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xpoly).xring)) ((xfalse)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xn_i)) (((xpoly).xnum_interior_rings)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xp).xn_i).add 1)) ((((xlen)).apply ((xpoly)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xn_p)) (((xpoly).xnum_points)))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xp).xarea)) (((xpoly).xarea)) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xp).xcentroid)) (0))) ((((unsupported)).apply ((((xpoly).xcentroid).xtuple)) (0))) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xp).xcentroid)) (1))) ((((unsupported)).apply ((((xpoly).xcentroid).xtuple)) (1))) (9))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpoly)) ((((xfromstr)).apply (((xp).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xpoly).eq (xprev))) ((xfalse)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xpoly).neq (xprev))) (TRUE))
                            xring.write ((xpoly).xexterior_ring)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xring).xgeom_type)) ("LinearRing"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xring).xgeom_typeid)) (2))
                            ((xp).xext_ring_cs).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xext_ring_cs)) (((xring).xtuple)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xext_ring_cs)) (((((unsupported)).apply ((xpoly)) (0)).xtuple)))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xpoly).x__getitem__)).apply ((((xlen)).apply ((xpoly)))))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xpoly).x__setitem__)).apply ((((xlen)).apply ((xpoly)))) ((xfalse)))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xpoly).x__getitem__)).apply ((((1.neg).mul (((xlen)).apply ((xpoly)))).sub 1)))
                            (((unsupported)).apply ((xr)) ((xpoly)))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xr).xgeom_type)) ("LinearRing"))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xr).xgeom_typeid)) (2))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                              bogusForceDataize.write (((xPolygon)).apply (0) ((((unsupported)).apply (1) (2) (3))))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                              bogusForceDataize.write (((xPolygon)).apply ("foo"))
                            (((unsupported)).apply ((((unsupported)).apply ((xext_ring)) ((((unsupported)).apply ((xint_rings)))))) ((xpoly)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpoly)) ((((xPolygon)).apply ((xext_ring)) ((xint_rings)))))
                            xring_tuples.write (((xtuple)).apply ((((unsupported)).apply (((xr).xtuple)) ((xr)) ((xpoly)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpoly)) ((((xPolygon)).apply ((((unsupported)).apply ((xring_tuples)))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoly).xwkt)) (((((xPolygon)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply ((xr)) ((xr)) ((xpoly))))))))).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoly).xwkt)) (((((xPolygon)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply ((((xLinearRing)).apply (((xr).xtuple)))) ((xr)) ((xpoly))))))))).xwkt)))
                xtest_polygons_templates.write
                  [xself]
                    memory > xpolygons
                    memory > xtemplate
                    memory > xengine
                    memory > xcontent
                    seq > @
                      seq
                        xengine.write (((xEngine)).apply)
                        xtemplate.write ((((xengine).xfrom_string)).apply ("{{ polygons.0.wkt }}"))
                        xpolygons.write (((unsupported)).apply ((((xfromstr)).apply (((xp).xwkt)))) ((xp)) ((((unsupported)).apply ((((xself).xgeometries).xmultipolygons)) ((((unsupported)).apply (2))))))
                        xcontent.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("polygons") ((xpolygons)))))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("MULTIPOLYGON (((100") ((xcontent)))
                xtest_polygon_comparison.write
                  [xself]
                    memory > xp1
                    memory > xp4
                    memory > xp3
                    memory > xp2
                    seq > @
                      seq
                        xp1.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))
                        xp2.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertGreater)).apply ((xp1)) ((xp2)))
                        bogusForceDataize.write ((((xself).xassertLess)).apply ((xp2)) ((xp1)))
                        xp3.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (0))) ((((unsupported)).apply (0) (0))))))
                        xp4.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (2) (2))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertGreater)).apply ((xp4)) ((xp3)))
                        bogusForceDataize.write ((((xself).xassertLess)).apply ((xp3)) ((xp4)))
                xtest_multipolygons.write
                  [xself]
                    memory > xmpoly
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write (((xfromstr)).apply ("POINT (0 0)"))
                        (((unsupported)).apply ((xmp)) ((((xself).xgeometries).xmultipolygons)))
                          seq
                            xmpoly.write (((xfromstr)).apply (((xmp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpoly).xgeom_type)) ("MultiPolygon"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpoly).xgeom_typeid)) (6))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpoly).xdims)) (2))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xvalid)) (((xmpoly).xvalid)))
                            ((xmp).xvalid).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xnum_geom)) (((xmpoly).xnum_geom)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xn_p)) (((xmpoly).xnum_coords)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xnum_geom)) ((((xlen)).apply ((xmpoly)))))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                                  bogusForceDataize.write ((((xmpoly).x__getitem__)).apply ((((xlen)).apply ((xmpoly)))))
                                (((unsupported)).apply ((xp)) ((xmpoly)))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xgeom_type)) ("Polygon"))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xgeom_typeid)) (3))
                                    bogusForceDataize.write ((((xself).xassertIs)).apply (((xp).xvalid)) (TRUE))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpoly).xwkt)) (((((xMultiPolygon)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply (((((xpoly).xclone)).apply)) ((xpoly)) ((xmpoly))))))))).xwkt)))
                xtest_memory_hijinks.write
                  [xself]
                    memory > xpoly
                    memory > xring2
                    memory > xring1
                    seq > @
                      seq
                        unsupported
                        xpoly.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xpolygons)) (1)).xwkt)))
                        xring1.write (((unsupported)).apply ((xpoly)) (0))
                        xring2.write (((unsupported)).apply ((xpoly)) (1))
                        (((unsupported)).apply ((((unsupported)).apply ((xring1)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xring2)))))
                        xring1.write (((unsupported)).apply ((xpoly)) (0))
                        xring2.write (((unsupported)).apply ((xpoly)) (1))
                        (((unsupported)).apply ((((unsupported)).apply ((xpoly)))))
                        bogusForceDataize.write (((xstr)).apply ((xring1)))
                        bogusForceDataize.write (((xstr)).apply ((xring2)))
                xtest_coord_seq.write
                  [xself]
                    memory > xtset
                    memory > xc2
                    memory > xcs
                    memory > xpoly
                    memory > xc1
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpolygons)))
                          ((xp).xext_ring_cs).if
                            seq
                              xpoly.write (((xfromstr)).apply (((xp).xwkt)))
                              xcs.write (((xpoly).xexterior_ring).xcoord_seq)
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xext_ring_cs)) (((xcs).xtuple)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xp).xext_ring_cs)))) ((((xlen)).apply ((xcs)))))
                              (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply (((xp).xext_ring_cs)))))))
                                seq
                                  xc1.write (((unsupported)).apply (((xp).xext_ring_cs)) ((xi)))
                                  xc2.write (((unsupported)).apply ((xcs)) ((xi)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((xc1)) ((xc2)))
                                  ((((xlen)).apply ((xc1))).eq 2).if
                                    xtset.write (((unsupported)).apply (5) (23))
                                    xtset.write (((unsupported)).apply (5) (23) (8))
                                  (((unsupported)).apply ((((unsupported)).apply ((xcs)) ((xi)))) ((xtset)))
                                  (((unsupported)).apply ((xj)) ((((xrange)).apply ((((xlen)).apply ((xtset)))))))
                                    seq
                                      (((unsupported)).apply ((((unsupported)).apply ((xcs)) ((xi)))) ((xtset)))
                                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xtset)) ((xj)))) ((((unsupported)).apply ((((unsupported)).apply ((xcs)) ((xi)))) ((xj)))))
                xtest_relate_pattern.write
                  [xself]
                    memory > xa
                    memory > xb
                    memory > xg
                    seq > @
                      seq
                        unsupported
                        xg.write (((xfromstr)).apply ("POINT (0 0)"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          bogusForceDataize.write ((((xg).xrelate_pattern)).apply (0) ("invalid pattern, yo"))
                        (((unsupported)).apply ((xrg)) ((((xself).xgeometries).xrelate_geoms)))
                          seq
                            xa.write (((xfromstr)).apply (((xrg).xwkt_a)))
                            xb.write (((xfromstr)).apply (((xrg).xwkt_b)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xrg).xresult)) (((((xa).xrelate_pattern)).apply ((xb)) (((xrg).xpattern)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xrg).xpattern)) (((((xa).xrelate)).apply ((xb)))))
                xtest_intersection.write
                  [xself]
                    memory > xb
                    memory > xi1
                    memory > xa
                    memory > xi2
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xi1.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xintersect_geoms)) ((xi))).xwkt)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((((xa).xintersects)).apply ((xb)))) (TRUE))
                            xi2.write ((((xa).xintersection)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xi1).xequals)).apply ((xi2)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xi1).xequals)).apply (((xa).and (xb))))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xi1).xequals)).apply ((xa)))))
                xtest_union.write
                  [xself]
                    memory > xu2
                    memory > xb
                    memory > xu1
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xu1.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xunion_geoms)) ((xi))).xwkt)))
                            xu2.write ((((xa).xunion)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xu1).xequals)).apply ((xu2)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xu1).xequals)).apply (((xa).or (xb))))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xu1).xequals)).apply ((xa)))))
                xtest_unary_union.write
                  [xself]
                    memory > xu2
                    memory > xb
                    memory > xu1
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xu1.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xunion_geoms)) ((xi))).xwkt)))
                            xu2.write ((((xGeometryCollection)).apply ((xa)) ((xb))).xunary_union)
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xu1).xequals)).apply ((xu2)))))
                xtest_difference.write
                  [xself]
                    memory > xd1
                    memory > xd2
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xd1.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xdiff_geoms)) ((xi))).xwkt)))
                            xd2.write ((((xa).xdifference)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xd1).xequals)).apply ((xd2)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xd1).xequals)).apply (((xa).sub (xb))))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xd1).xequals)).apply ((xa)))))
                xtest_symdifference.write
                  [xself]
                    memory > xd1
                    memory > xd2
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xd1.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xsdiff_geoms)) ((xi))).xwkt)))
                            xd2.write ((((xa).xsym_difference)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xd1).xequals)).apply ((xd2)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xd1).xequals)).apply ((((unsupported)).apply ((xa)) ((xb)))))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xd1).xequals)).apply ((xa)))))
                xtest_buffer.write
                  [xself]
                    memory > xbg
                    memory > xg
                    seq > @
                      seq
                        xbg.write (((unsupported)).apply ((((xself).xgeometries).xbuffer_geoms)) (0))
                        xg.write (((xfromstr)).apply (((xbg).xwkt)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xctypes).xArgumentError)))))
                          (((unsupported)).apply (((xg).xbuffer)) (((xbg).xwidth)) (1.1))
                        bogusForceDataize.write ((((xself).x_test_buffer)).apply ((((xself).xgeometries).xbuffer_geoms)) ("buffer"))
                xtest_buffer_with_style.write
                  [xself]
                    memory > xbg
                    memory > xg
                    seq > @
                      seq
                        xbg.write (((unsupported)).apply ((((xself).xgeometries).xbuffer_with_style_geoms)) (0))
                        xg.write (((xfromstr)).apply (((xbg).xwkt)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xctypes).xArgumentError)))))
                          (((unsupported)).apply (((xg).xbuffer_with_style)) (((xbg).xwidth)) (1.1))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xctypes).xArgumentError)))))
                          (((unsupported)).apply (((xg).xbuffer_with_style)) (((xbg).xwidth)) (1.2))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          (((unsupported)).apply (((xg).xbuffer_with_style)) (((xbg).xwidth)) (55))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xctypes).xArgumentError)))))
                          (((unsupported)).apply (((xg).xbuffer_with_style)) (((xbg).xwidth)) (1.3))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          (((unsupported)).apply (((xg).xbuffer_with_style)) (((xbg).xwidth)) (66))
                        bogusForceDataize.write ((((xself).x_test_buffer)).apply (((((xitertools).xchain)).apply ((((xself).xgeometries).xbuffer_geoms)) ((((xself).xgeometries).xbuffer_with_style_geoms)))) ("buffer_with_style"))
                x_test_buffer.write
                  [xself xgeometries xbuffer_method_name]
                    memory > xexp_buf
                    memory > xbuf_kwargs
                    memory > xg
                    memory > xexp_ring
                    memory > xbuf
                    memory > xbuf_ring
                    seq > @
                      (((unsupported)).apply ((xbg)) ((xgeometries)))
                        seq
                          xg.write (((xfromstr)).apply (((xbg).xwkt)))
                          xexp_buf.write (((xfromstr)).apply (((xbg).xbuffer_wkt)))
                          xbuf_kwargs.write (((unsupported)).apply ((xkwarg_name)) ((((xgetattr)).apply ((xbg)) ((xkwarg_name)))) ((xkwarg_name)) ((((unsupported)).apply ("width") ("quadsegs") ("end_cap_style") ("join_style") ("mitre_limit"))) ((((xhasattr)).apply ((xbg)) ((xkwarg_name)))))
                          xbuf.write (((((xgetattr)).apply ((xg)) ((xbuffer_method_name)))).apply ((((unsupported)).apply ((xbuf_kwargs)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((xexp_buf).xnum_coords)) (((xbuf).xnum_coords)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xexp_buf)))) ((((xlen)).apply ((xbuf)))))
                          (((unsupported)).apply ((xj)) ((((xrange)).apply ((((xlen)).apply ((xexp_buf)))))))
                            seq
                              xexp_ring.write (((unsupported)).apply ((xexp_buf)) ((xj)))
                              xbuf_ring.write (((unsupported)).apply ((xbuf)) ((xj)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xexp_ring)))) ((((xlen)).apply ((xbuf_ring)))))
                              (((unsupported)).apply ((xk)) ((((xrange)).apply ((((xlen)).apply ((xexp_ring)))))))
                                seq
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xexp_ring)) ((xk)))) (0))) ((((unsupported)).apply ((((unsupported)).apply ((xbuf_ring)) ((xk)))) (0))) (9))
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xexp_ring)) ((xk)))) (1))) ((((unsupported)).apply ((((unsupported)).apply ((xbuf_ring)) ((xk)))) (1))) (9))
                xtest_covers.write
                  [xself]
                    memory > xpoly
                    seq > @
                      seq
                        xpoly.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (10))) ((((unsupported)).apply (10) (10))) ((((unsupported)).apply (10) (0))) ((((unsupported)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpoly).xcovers)).apply ((((xPoint)).apply (5) (5))))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpoly).xcovers)).apply ((((xPoint)).apply (100) (100))))))
                xtest_closed.write
                  [xself]
                    memory > xls_closed
                    memory > xls_not_closed
                    seq > @
                      seq
                        xls_closed.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))
                        xls_not_closed.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((xls_not_closed).xclosed)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xls_closed).xclosed)))
                xtest_srid.write
                  [xself]
                    memory > xp2
                    memory > xpnt_wo_srid
                    memory > xpnt
                    memory > xgc
                    memory > xp3
                    memory > xp1
                    memory > xpoly
                    memory > xhex
                    seq > @
                      seq
                        unsupported
                        xpnt.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) (((xpnt).xsrid)))
                        (((unsupported)).apply (((xpnt).xsrid)) (3084))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3084) (((xpnt).xsrid)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply (((xctypes).xArgumentError)))))
                          (((unsupported)).apply (((xpnt).xsrid)) ("4326"))
                        xpoly.write (((unsupported)).apply ((xfromstr)) (((((unsupported)).apply ((((xself).xgeometries).xpolygons)) (1)).xwkt)) (4269))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4269) (((xpoly).xsrid)))
                        (((unsupported)).apply ((xring)) ((xpoly)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (4269) (((xring).xsrid)))
                        (((unsupported)).apply (((xpoly).xsrid)) (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xpoly).xshell).xsrid)))
                        xgc.write (((unsupported)).apply ((xGeometryCollection)) ((((xPoint)).apply (5) (23))) ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1.5) (1.5))) ((((unsupported)).apply (3) (3))))) (32021))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (32021) (((xgc).xsrid)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((xgc)))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (32021) (((((unsupported)).apply ((xgc)) ((xi))).xsrid)))
                        xhex.write "0101000020E610000000000000000014400000000000003740"
                        xp1.write (((xfromstr)).apply ((xhex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) (((xp1).xsrid)))
                        xp2.write (((xfromstr)).apply (((xp1).xhex)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xp2).xsrid)))
                        xp3.write (((unsupported)).apply ((xfromstr)) (((xp1).xhex)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((1.neg)) (((xp3).xsrid)))
                        xpnt_wo_srid.write (((xPoint)).apply (1) (1))
                        (((unsupported)).apply (((xpnt_wo_srid).xsrid)) (((xpnt_wo_srid).xsrid)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((xGEOSGeometry)) (((xpnt).xewkt)) (((xpnt).xsrid))).xsrid)) (((xpnt).xsrid)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((xGEOSGeometry)) (((xpnt).xewkb)) (((xpnt).xsrid))).xsrid)) (((xpnt).xsrid)))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) (("Input geometry already has SRID: %d.".mod ((xpnt).xsrid))))))
                          (((unsupported)).apply ((xGEOSGeometry)) (((xpnt).xewkt)) (1))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) (("Input geometry already has SRID: %d.".mod ((xpnt).xsrid))))))
                          (((unsupported)).apply ((xGEOSGeometry)) (((xpnt).xewkb)) (1))
                xtest_custom_srid.write
                  [xself]
                    memory > xc2w
                    memory > xpnt
                    memory > xnew_pnt
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xsrid)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") (999999))))
                          seq
                            xpnt.write (((unsupported)).apply ((xPoint)) (111200) (220900) ((xsrid)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xpnt).xewkt).xstartswith)).apply ((((xsrid).if ("SRID=%s;".mod (xsrid)) "").add "POINT (111200")))))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xpnt).xogr)) (((xgdal).xOGRGeometry)))
                            bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xpnt).xsrs)))
                            xc2w.write ((((xgdal).xCoordTransform)).apply (((((xgdal).xSpatialReference)).apply ("+proj=mill +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +R_A +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))) (((((xgdal).xSpatialReference)).apply (4326))))
                            xnew_pnt.write (((unsupported)).apply (((xpnt).xtransform)) ((xc2w)) (TRUE))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xnew_pnt).xsrid)) (4326))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xnew_pnt).xx)) (1) (1))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xnew_pnt).xy)) (2) (1))
                xtest_mutable_geometries.write
                  [xself]
                    memory > xshell_tup
                    memory > xnew
                    memory > xpnt
                    memory > xr
                    memory > xnew_coords
                    memory > xnew_shell
                    memory > xpoly
                    memory > xmp
                    memory > xmpoly
                    memory > xold_poly
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpolygons)))
                          seq
                            xpoly.write (((xfromstr)).apply (((xp).xwkt)))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                              bogusForceDataize.write ((((xpoly).x__setitem__)).apply (0) ((((xLineString)).apply ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))))
                            xshell_tup.write (((xpoly).xshell).xtuple)
                            xnew_coords.write (((unsupported)).apply)
                            (((unsupported)).apply ((xpoint)) ((xshell_tup)))
                              bogusForceDataize.write ((((xnew_coords).xappend)).apply ((((unsupported)).apply (((((unsupported)).apply ((xpoint)) (0)).add 500.0)) (((((unsupported)).apply ((xpoint)) (1)).add 500.0)))))
                            xnew_shell.write (((xLinearRing)).apply ((((unsupported)).apply ((((xtuple)).apply ((xnew_coords)))))))
                            (((unsupported)).apply (((xpoly).xexterior_ring)) ((xnew_shell)))
                            bogusForceDataize.write (((xstr)).apply ((xnew_shell)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xpoly).xexterior_ring)) ((xnew_shell)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xpoly)) (0))) ((xnew_shell)))
                        (((unsupported)).apply ((xtg)) ((((xself).xgeometries).xmultipoints)))
                          seq
                            xmp.write (((xfromstr)).apply (((xtg).xwkt)))
                            (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((xmp)))))))
                              seq
                                xpnt.write (((unsupported)).apply ((xmp)) ((xi)))
                                xnew.write (((xPoint)).apply (((((xrandom).xrandint)).apply (21) (100))) (((((xrandom).xrandint)).apply (21) (100))))
                                (((unsupported)).apply ((((unsupported)).apply ((xmp)) ((xi)))) ((xnew)))
                                bogusForceDataize.write (((xstr)).apply ((xnew)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xmp)) ((xi)))) ((xnew)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((xmp)) ((xi))).xwkt)) (((xnew).xwkt)))
                                bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xpnt)) ((((unsupported)).apply ((xmp)) ((xi)))))
                        (((unsupported)).apply ((xtg)) ((((xself).xgeometries).xmultipolygons)))
                          seq
                            xmpoly.write (((xfromstr)).apply (((xtg).xwkt)))
                            (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((xmpoly)))))))
                              seq
                                xpoly.write (((unsupported)).apply ((xmpoly)) ((xi)))
                                xold_poly.write (((unsupported)).apply ((xmpoly)) ((xi)))
                                (((unsupported)).apply ((xj)) ((((xrange)).apply ((((xlen)).apply ((xpoly)))))))
                                  seq
                                    xr.write (((unsupported)).apply ((xpoly)) ((xj)))
                                    (((unsupported)).apply ((xk)) ((((xrange)).apply ((((xlen)).apply ((xr)))))))
                                      (((unsupported)).apply ((((unsupported)).apply ((xr)) ((xk)))) ((((unsupported)).apply (((((unsupported)).apply ((((unsupported)).apply ((xr)) ((xk)))) (0)).add 500.0)) (((((unsupported)).apply ((((unsupported)).apply ((xr)) ((xk)))) (1)).add 500.0)))))
                                    (((unsupported)).apply ((((unsupported)).apply ((xpoly)) ((xj)))) ((xr)))
                                bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((unsupported)).apply ((xmpoly)) ((xi)))) ((xpoly)))
                                (((unsupported)).apply ((((unsupported)).apply ((xmpoly)) ((xi)))) ((xpoly)))
                                bogusForceDataize.write (((xstr)).apply ((xpoly)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xmpoly)) ((xi)))) ((xpoly)))
                                bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((unsupported)).apply ((xmpoly)) ((xi)))) ((xold_poly)))
                xtest_point_list_assignment.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((xPoint)).apply (0) (0))
                        (((unsupported)).apply ((((unsupported)).apply ((xp)) ((((unsupported)).apply)))) ((((unsupported)).apply (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp)) ((((xPoint)).apply (1) (2) (3))))
                        (((unsupported)).apply ((((unsupported)).apply ((xp)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xwkt)) ((((xPoint)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xp)) ((((unsupported)).apply)))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xwkt)) ((((xPoint)).apply (1) (2))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((((unsupported)).apply ((xp)) ((((unsupported)).apply)))) ((((unsupported)).apply (1))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((((unsupported)).apply ((xp)) ((((unsupported)).apply)))) ((((unsupported)).apply (1) (2) (3) (4) (5))))
                xtest_linestring_list_assignment.write
                  [xself]
                    memory > xls
                    seq > @
                      seq
                        xls.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))
                        (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLineString)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply (1))))
                xtest_linearring_list_assignment.write
                  [xself]
                    memory > xls
                    seq > @
                      seq
                        xls.write (((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))
                        (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLinearRing)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xls)) ((((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))))
                xtest_polygon_list_assignment.write
                  [xself]
                    memory > xpol
                    seq > @
                      seq
                        xpol.write (((xPolygon)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xpol)) ((((unsupported)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpol)) ((((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xpol)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpol)) ((((xPolygon)).apply)))
                xtest_geometry_collection_list_assignment.write
                  [xself]
                    memory > xp
                    memory > xgc
                    seq > @
                      seq
                        xp.write (((xPoint)).apply)
                        xgc.write (((xGeometryCollection)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xgc)) ((((unsupported)).apply)))) ((((unsupported)).apply ((xp)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xgc)) ((((xGeometryCollection)).apply ((xp)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xgc)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xgc)) ((((xGeometryCollection)).apply)))
                xtest_threed.write
                  [xself]
                    memory > xls
                    memory > xpnt
                    seq > @
                      seq
                        unsupported
                        xpnt.write (((xPoint)).apply (2) (3) (8))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (2.0) (3.0) (8.0))) (((xpnt).xcoords)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xpnt).xtuple)) ((((unsupported)).apply (1.0) (2.0))))
                        (((unsupported)).apply (((xpnt).xcoords)) ((((unsupported)).apply (1.0) (2.0) (3.0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1.0) (2.0) (3.0))) (((xpnt).xcoords)))
                        xls.write (((xLineString)).apply ((((unsupported)).apply (2.0) (3.0) (8.0))) ((((unsupported)).apply (50.0) (250.0) ((117.0.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (2.0) (3.0) (8.0))) ((((unsupported)).apply (50.0) (250.0) ((117.0.neg)))))) (((xls).xtuple)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xls).x__setitem__)).apply (0) ((((unsupported)).apply (1.0) (2.0))))
                        (((unsupported)).apply ((((unsupported)).apply ((xls)) (0))) ((((unsupported)).apply (1.0) (2.0) (3.0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1.0) (2.0) (3.0))) ((((unsupported)).apply ((xls)) (0))))
                xtest_distance.write
                  [xself]
                    memory > xpnt
                    memory > xls2
                    memory > xls1
                    seq > @
                      seq
                        unsupported
                        xpnt.write (((xPoint)).apply (0) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0.0) (((((xpnt).xdistance)).apply ((((xPoint)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (1.0) (((((xpnt).xdistance)).apply ((((xPoint)).apply (0) (1))))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (1.41421356237) (((((xpnt).xdistance)).apply ((((xPoint)).apply (1) (1))))) (11))
                        xls1.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (2) (2))))
                        xls2.write (((xLineString)).apply ((((unsupported)).apply (5) (2))) ((((unsupported)).apply (6) (1))) ((((unsupported)).apply (7) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((((xls1).xdistance)).apply ((xls2)))))
                xtest_length.write
                  [xself]
                    memory > xls
                    memory > xpoly
                    memory > xpnt
                    memory > xmpoly
                    seq > @
                      seq
                        unsupported
                        xpnt.write (((xPoint)).apply (0) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0.0) (((xpnt).xlength)))
                        xls.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (1.41421356237) (((xls).xlength)) (11))
                        xpoly.write (((xPolygon)).apply ((((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4.0) (((xpoly).xlength)))
                        xmpoly.write (((xMultiPolygon)).apply (((((xpoly).xclone)).apply)) ((xpoly)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (8.0) (((xmpoly).xlength)))
                xtest_emptyCollections.write
                  [xself]
                    memory > xlr
                    memory > xgeoms
                    seq > @
                      seq
                        unsupported
                        xgeoms.write (((unsupported)).apply ((((xGeometryCollection)).apply ((((unsupported)).apply)))) ((((xfromstr)).apply ("GEOMETRYCOLLECTION EMPTY"))) ((((xGeometryCollection)).apply)) ((((xfromstr)).apply ("POINT EMPTY"))) ((((xPoint)).apply)) ((((xfromstr)).apply ("LINESTRING EMPTY"))) ((((xLineString)).apply)) ((((xfromstr)).apply ("POLYGON EMPTY"))) ((((xPolygon)).apply)) ((((xfromstr)).apply ("MULTILINESTRING EMPTY"))) ((((xMultiLineString)).apply)) ((((xfromstr)).apply ("MULTIPOLYGON EMPTY"))) ((((xMultiPolygon)).apply ((((unsupported)).apply)))) ((((xMultiPolygon)).apply)))
                        (xnumpy).if
                          bogusForceDataize.write ((((xgeoms).xappend)).apply ((((xLineString)).apply (((((xnumpy).xarray)).apply ((((unsupported)).apply)))))))
                        (((unsupported)).apply ((xg)) ((xgeoms)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xg).xempty)) (TRUE))
                            (((xisinstance)).apply ((xg)) ((xPolygon))).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xlen)).apply ((xg)))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((xg).xnum_geom)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xlen)).apply ((((unsupported)).apply ((xg)) (0))))))
                              (((xisinstance)).apply ((xg)) ((((unsupported)).apply ((xPoint)) ((xLineString))))).if
                                seq
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((xg).xnum_geom)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xlen)).apply ((xg)))))
                                seq
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply (0) (((xg).xnum_geom)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xlen)).apply ((xg)))))
                            (((xisinstance)).apply ((xg)) ((xPoint))).if
                              (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                                unsupported
                              (((xisinstance)).apply ((xg)) ((xPolygon))).if
                                seq
                                  xlr.write ((xg).xshell)
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ("LINEARRING EMPTY") (((xlr).xwkt)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xlen)).apply ((xlr)))))
                                  bogusForceDataize.write ((((xself).xassertIs)).apply (((xlr).xempty)) (TRUE))
                                  (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                                    bogusForceDataize.write ((((xlr).x__getitem__)).apply (0))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                                  bogusForceDataize.write ((((xg).x__getitem__)).apply (0))
                xtest_collection_dims.write
                  [xself]
                    memory > xgc
                    seq > @
                      seq
                        xgc.write (((xGeometryCollection)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgc).xdims)) ((1.neg)))
                        xgc.write (((xGeometryCollection)).apply ((((xPoint)).apply (0) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgc).xdims)) (0))
                        xgc.write (((xGeometryCollection)).apply ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))) ((((xPoint)).apply (0) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgc).xdims)) (1))
                        xgc.write (((xGeometryCollection)).apply ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))) ((((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))))) ((((xPoint)).apply (0) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgc).xdims)) (2))
                xtest_collections_of_collections.write
                  [xself]
                    memory > xgc1
                    memory > xcoll
                    memory > xgc_wkt
                    memory > xgc2
                    seq > @
                      seq
                        unsupported
                        xcoll.write (((unsupported)).apply (((xmp).xwkt)) ((xmp)) ((((xself).xgeometries).xmultipolygons)) (((xmp).xvalid)))
                        bogusForceDataize.write ((((xcoll).xextend)).apply ((((unsupported)).apply (((xmls).xwkt)) ((xmls)) ((((xself).xgeometries).xmultilinestrings)))))
                        bogusForceDataize.write ((((xcoll).xextend)).apply ((((unsupported)).apply (((xp).xwkt)) ((xp)) ((((xself).xgeometries).xpolygons)))))
                        bogusForceDataize.write ((((xcoll).xextend)).apply ((((unsupported)).apply (((xmp).xwkt)) ((xmp)) ((((xself).xgeometries).xmultipoints)))))
                        xgc_wkt.write ("GEOMETRYCOLLECTION(%s)".mod (((",".xjoin)).apply ((xcoll))))
                        xgc1.write (((xGEOSGeometry)).apply ((xgc_wkt)))
                        xgc2.write (((xGeometryCollection)).apply ((((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply ((xg)) ((xg)) ((xgc1)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xgc1)) ((xgc2)))
                xtest_gdal.write
                  [xself]
                    memory > xg1_3d
                    memory > xg2
                    memory > xg1
                    seq > @
                      seq
                        unsupported
                        xg1.write (((xfromstr)).apply ("POINT(5 23)"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg1).xogr)) (((xgdal).xOGRGeometry)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xg1).xsrs)))
                        xg1_3d.write (((xfromstr)).apply ("POINT(5 23 8)"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg1_3d).xogr)) (((xgdal).xOGRGeometry)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xg1_3d).xogr).xz)) (8))
                        xg2.write (((unsupported)).apply ((xfromstr)) ("LINESTRING(0 0, 5 5, 23 23)") (4326))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg2).xogr)) (((xgdal).xOGRGeometry)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg2).xsrs)) (((xgdal).xSpatialReference)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg2).xhex)) ((((xg2).xogr).xhex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("WGS 84") ((((xg2).xsrs).xname)))
                xtest_copy.write
                  [xself]
                    memory > xpoly
                    memory > xcpy2
                    memory > xcpy1
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply)
                        xpoly.write (((xGEOSGeometry)).apply ("POLYGON((0 0, 0 23, 23 23, 23 0, 0 0), (5 5, 5 10, 10 10, 10 5, 5 5))"))
                        xcpy1.write ((((xcopy).xcopy)).apply ((xpoly)))
                        xcpy2.write ((((xcopy).xdeepcopy)).apply ((xpoly)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply (((xpoly).x_ptr)) (((xcpy1).x_ptr)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply (((xpoly).x_ptr)) (((xcpy2).x_ptr)))
                xtest_transform.write
                  [xself]
                    memory > xorig
                    memory > xk1
                    memory > xprec
                    memory > xk2
                    memory > xtrans
                    memory > xct
                    seq > @
                      seq
                        unsupported
                        xorig.write (((xGEOSGeometry)).apply ("POINT (-104.609 38.255)") (4326))
                        xtrans.write (((xGEOSGeometry)).apply ("POINT (992385.4472045 481455.4944650)") (2774))
                        (((unsupported)).apply ((((unsupported)).apply ((xt1)) ((xt2)) ((xt3)))) ((((unsupported)).apply (((((xorig).xclone)).apply)) (((((xorig).xclone)).apply)) (((((xorig).xclone)).apply)))))
                        bogusForceDataize.write ((((xt1).xtransform)).apply (((xtrans).xsrid)))
                        bogusForceDataize.write ((((xt2).xtransform)).apply (((((xgdal).xSpatialReference)).apply ("EPSG:2774"))))
                        xct.write ((((xgdal).xCoordTransform)).apply (((((xgdal).xSpatialReference)).apply ("WGS84"))) (((((xgdal).xSpatialReference)).apply (2774))))
                        bogusForceDataize.write ((((xt3).xtransform)).apply ((xct)))
                        xk1.write ((((xorig).xclone)).apply)
                        xk2.write (((unsupported)).apply (((xk1).xtransform)) (((xtrans).xsrid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xk1)) ((xorig)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xk1)) ((xk2)))
                        xprec.write (1.neg)
                        (((unsupported)).apply ((xp)) ((((unsupported)).apply ((xt1)) ((xt2)) ((xt3)) ((xk2)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xtrans).xx)) (((xp).xx)) ((xprec)))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xtrans).xy)) (((xp).xy)) ((xprec)))
                xtest_transform_3d.write
                  [xself]
                    memory > xp3d
                    seq > @
                      seq
                        xp3d.write (((xGEOSGeometry)).apply ("POINT (5 23 100)") (4326))
                        bogusForceDataize.write ((((xp3d).xtransform)).apply (2774))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xp3d).xz)) (100) (3))
                xtest_transform_noop.write
                  [xself]
                    memory > xg1
                    memory > xg
                    memory > xgt
                    seq > @
                      seq
                        unsupported
                        xg.write (((xGEOSGeometry)).apply ("POINT (-104.609 38.255)") (4326))
                        xgt.write ((xg).xtuple)
                        bogusForceDataize.write ((((xg).xtransform)).apply (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).xtuple)) ((xgt)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).xsrid)) (4326))
                        xg.write (((xGEOSGeometry)).apply ("POINT (-104.609 38.255)") (4326))
                        xg1.write (((unsupported)).apply (((xg).xtransform)) (4326) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg1).xtuple)) (((xg).xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg1).xsrid)) (4326))
                        bogusForceDataize.write ((((xself).xassertIsNot)).apply ((xg1)) ((xg)) ("Clone didn't happen"))
                xtest_transform_nosrid.write
                  [xself]
                    memory > xg
                    seq > @
                      seq
                        unsupported
                        xg.write (((unsupported)).apply ((xGEOSGeometry)) ("POINT (-104.609 38.255)") ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          bogusForceDataize.write ((((xg).xtransform)).apply (2774))
                        xg.write (((unsupported)).apply ((xGEOSGeometry)) ("POINT (-104.609 38.255)") ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          (((unsupported)).apply (((xg).xtransform)) (2774) (TRUE))
                        xg.write (((unsupported)).apply ((xGEOSGeometry)) ("POINT (-104.609 38.255)") ((1.neg)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          bogusForceDataize.write ((((xg).xtransform)).apply (2774))
                        xg.write (((unsupported)).apply ((xGEOSGeometry)) ("POINT (-104.609 38.255)") ((1.neg)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGEOSException)))))
                          (((unsupported)).apply (((xg).xtransform)) (2774) (TRUE))
                xtest_extent.write
                  [xself]
                    memory > xpoly
                    memory > xpnt
                    memory > xring
                    memory > xmp
                    seq > @
                      seq
                        unsupported
                        xmp.write (((xMultiPoint)).apply ((((xPoint)).apply (5) (23))) ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (10) (50))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (0.0) (0.0) (10.0) (50.0))) (((xmp).xextent)))
                        xpnt.write (((xPoint)).apply (5.23) (17.8))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (5.23) (17.8) (5.23) (17.8))) (((xpnt).xextent)))
                        xpoly.write (((xfromstr)).apply (((((unsupported)).apply ((((xself).xgeometries).xpolygons)) (3)).xwkt)))
                        xring.write ((xpoly).xshell)
                        (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xy)))) ((((unsupported)).apply (((xring).xx)) (((xring).xy)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xxmin)) ((xymin)))) ((((unsupported)).apply ((((xmin)).apply ((xx)))) ((((xmin)).apply ((xy)))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xxmax)) ((xymax)))) ((((unsupported)).apply ((((xmax)).apply ((xx)))) ((((xmax)).apply ((xy)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xxmin)) ((xymin)) ((xxmax)) ((xymax)))) (((xpoly).xextent)))
                xtest_pickle.write
                  [xself]
                    memory > xs1
                    memory > xg1
                    memory > xtgeoms
                    memory > xget_geoms
                    seq > @
                      seq
                        unsupported
                        xget_geoms.write
                          [xlst xsrid]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((unsupported)).apply ((((xGEOSGeometry)).apply (((xtg).xwkt)) ((xsrid)))) ((xtg)) ((xlst)))))
                        xtgeoms.write (((xget_geoms)).apply ((((xself).xgeometries).xpoints)))
                        bogusForceDataize.write ((((xtgeoms).xextend)).apply ((((xget_geoms)).apply ((((xself).xgeometries).xmultilinestrings)) (4326))))
                        bogusForceDataize.write ((((xtgeoms).xextend)).apply ((((xget_geoms)).apply ((((xself).xgeometries).xpolygons)) (3084))))
                        bogusForceDataize.write ((((xtgeoms).xextend)).apply ((((xget_geoms)).apply ((((xself).xgeometries).xmultipolygons)) (3857))))
                        bogusForceDataize.write ((((xtgeoms).xappend)).apply ((((unsupported)).apply ((xPoint)) (4326))))
                        bogusForceDataize.write ((((xtgeoms).xappend)).apply ((((xPoint)).apply)))
                        (((unsupported)).apply ((xgeom)) ((xtgeoms)))
                          seq
                            xs1.write ((((xpickle).xdumps)).apply ((xgeom)))
                            xg1.write ((((xpickle).xloads)).apply ((xs1)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xgeom)) ((xg1)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xgeom).xsrid)) (((xg1).xsrid)))
                xtest_prepared.write
                  [xself]
                    memory > xpoly
                    memory > xprep
                    memory > xpnts
                    memory > xmpoly
                    seq > @
                      seq
                        unsupported
                        xmpoly.write (((xGEOSGeometry)).apply ("MULTIPOLYGON(((0 0,0 5,5 5,5 0,0 0)),((5 5,5 10,10 10,10 5,5 5)))"))
                        xprep.write ((xmpoly).xprepared)
                        xpnts.write (((unsupported)).apply ((((xPoint)).apply (5) (5))) ((((xPoint)).apply (7.5) (7.5))) ((((xPoint)).apply (2.5) (7.5))))
                        (((unsupported)).apply ((xpnt)) ((xpnts)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmpoly).xcontains)).apply ((xpnt)))) (((((xprep).xcontains)).apply ((xpnt)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmpoly).xintersects)).apply ((xpnt)))) (((((xprep).xintersects)).apply ((xpnt)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmpoly).xcovers)).apply ((xpnt)))) (((((xprep).xcovers)).apply ((xpnt)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xprep).xcrosses)).apply ((((xfromstr)).apply ("LINESTRING(1 1, 15 15)"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xprep).xdisjoint)).apply ((((xPoint)).apply ((5.neg)) ((5.neg)))))))
                        xpoly.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply ((1.neg)) ((1.neg)))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply ((1.neg)) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xprep).xoverlaps)).apply ((xpoly)))))
                        xpoly.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply ((5.neg)) (0))) ((((unsupported)).apply ((5.neg)) (5))) ((((unsupported)).apply (0) (5))) ((((unsupported)).apply ((5.neg)) (0))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xprep).xtouches)).apply ((xpoly)))))
                        xpoly.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply ((1.neg)) ((1.neg)))) ((((unsupported)).apply ((1.neg)) (11))) ((((unsupported)).apply (11) (11))) ((((unsupported)).apply (11) ((1.neg)))) ((((unsupported)).apply ((1.neg)) ((1.neg)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xprep).xwithin)).apply ((xpoly)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xmpoly)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xprep).xcovers)).apply ((((xPoint)).apply (5) (5))))))
                xtest_line_merge.write
                  [xself]
                    memory > xref_merged
                    memory > xref_geoms
                    seq > @
                      seq
                        unsupported
                        xref_geoms.write (((unsupported)).apply ((((xfromstr)).apply ("LINESTRING(1 1, 1 1, 3 3)"))) ((((xfromstr)).apply ("MULTILINESTRING((1 1, 3 3), (3 3, 4 2))"))))
                        xref_merged.write (((unsupported)).apply ((((xfromstr)).apply ("LINESTRING(1 1, 3 3)"))) ((((xfromstr)).apply ("LINESTRING (1 1, 3 3, 4 2)"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xgeom)) ((xmerged)))) ((((xzip)).apply ((xref_geoms)) ((xref_merged)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmerged)) (((xgeom).xmerged)))
                xtest_valid_reason.write
                  [xself]
                    memory > xg
                    seq > @
                      seq
                        unsupported
                        xg.write (((xGEOSGeometry)).apply ("POINT(0 0)"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xg).xvalid)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg).xvalid_reason)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).xvalid_reason)) ("Valid Geometry"))
                        xg.write (((xGEOSGeometry)).apply ("LINESTRING(0 0, 0 0)"))
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((xg).xvalid)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xg).xvalid_reason)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xg).xvalid_reason).xstartswith)).apply ("Too few points in geometry component"))))
                xtest_linearref.write
                  [xself]
                    memory > xls
                    memory > xmls
                    seq > @
                      seq
                        unsupported
                        xls.write (((xfromstr)).apply ("LINESTRING(0 0, 0 10, 10 10, 10 0)"))
                        xmls.write (((xfromstr)).apply ("MULTILINESTRING((0 0, 0 10), (10 0, 10 10))"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xls).xproject)).apply ((((xPoint)).apply (0) (20))))) (10.0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xls).xproject)).apply ((((xPoint)).apply (7) (6))))) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xls).xproject_normalized)).apply ((((xPoint)).apply (0) (20))))) ((1.0.div 3)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xls).xinterpolate)).apply (10))) ((((xPoint)).apply (0) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xls).xinterpolate)).apply (24))) ((((xPoint)).apply (10) (6))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xls).xinterpolate_normalized)).apply ((1.0.div 3)))) ((((xPoint)).apply (0) (10))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmls).xproject)).apply ((((xPoint)).apply (0) (20))))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmls).xproject)).apply ((((xPoint)).apply (7) (6))))) (16))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmls).xinterpolate)).apply (9))) ((((xPoint)).apply (0) (9))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmls).xinterpolate)).apply (17))) ((((xPoint)).apply (10) (7))))
                xtest_deconstructible.write
                  [xself]
                    memory > xp2
                    memory > xpoint
                    memory > xls
                    memory > xls1
                    memory > xlr
                    memory > xmls
                    memory > xext_coords
                    memory > xpoly
                    memory > xmp
                    memory > xp1
                    memory > xgc
                    memory > xls2
                    memory > xint_coords
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xpoint.write (((unsupported)).apply ((xPoint)) (4.337844) (50.827537) (4326))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xpoint).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.point.Point"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply (4.337844) (50.827537))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply ("srid") (4326))))
                        xls.write (((xLineString)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xls).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.linestring.LineString"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                        xls2.write (((unsupported)).apply ((xLineString)) ((((unsupported)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (1) (1))))) (4326))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xls2).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.linestring.LineString"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((((unsupported)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (1) (1))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply ("srid") (4326))))
                        xext_coords.write (((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (0))) ((((unsupported)).apply (0) (0))))
                        xint_coords.write (((unsupported)).apply ((((unsupported)).apply (0.4) (0.4))) ((((unsupported)).apply (0.4) (0.6))) ((((unsupported)).apply (0.6) (0.6))) ((((unsupported)).apply (0.6) (0.4))) ((((unsupported)).apply (0.4) (0.4))))
                        xpoly.write (((xPolygon)).apply ((xext_coords)) ((xint_coords)))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xpoly).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.polygon.Polygon"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((xext_coords)) ((xint_coords)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                        xlr.write (((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xlr).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.linestring.LinearRing"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                        xmp.write (((xMultiPoint)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (1) (1))))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xmp).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.collections.MultiPoint"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (1) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                        xls1.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))
                        xls2.write (((xLineString)).apply ((((unsupported)).apply (2) (2))) ((((unsupported)).apply (3) (3))))
                        xmls.write (((xMultiLineString)).apply ((xls1)) ((xls2)))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xmls).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.collections.MultiLineString"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((xls1)) ((xls2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                        xp1.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))))
                        xp2.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (2) (2))) ((((unsupported)).apply (1) (1))))))
                        xmp.write (((xMultiPolygon)).apply ((xp1)) ((xp2)))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xmp).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.collections.MultiPolygon"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((xp1)) ((xp2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                        xpoly.write (((xPolygon)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))))
                        xgc.write (((xGeometryCollection)).apply ((((xPoint)).apply (0) (0))) ((((xMultiPoint)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (1) (1))))) ((xpoly)))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xargs)) ((xkwargs)))) (((((xgc).xdeconstruct)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ("django.contrib.gis.geos.collections.GeometryCollection"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xargs)) ((((unsupported)).apply ((((xPoint)).apply (0) (0))) ((((xMultiPoint)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (1) (1))))) ((xpoly)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkwargs)) ((((unsupported)).apply)))
                xtest_subclassing.write
                  [xself]
                    memory > xext_poly
                    memory > x__str__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xPolygon)))
                          seq
                            x__init__.write
                              [xself xdata]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                                    (((unsupported)).apply (((xself).x_data)) ((xdata)))
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("EXT_POLYGON - data: %d - %s".mod (((unsupported)).apply (((xself).x_data)) (((xself).xwkt))))))
                        xext_poly.write (((unsupported)).apply ((xExtendedPolygon)) ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (1))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (0) (0))))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((xext_poly)))) ((xExtendedPolygon)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xext_poly)))) ("EXT_POLYGON - data: 3 - POLYGON ((0 0, 0 1, 1 1, 0 0))"))
                        bogusForceDataize.write ((((xself).xassertJSONEqual)).apply (((xext_poly).xjson)) ("{\"coordinates\": [[[0, 0], [0, 1], [1, 1], [0, 0]]], \"type\": \"Polygon\"}"))
                xtest_geos_version_tuple.write
                  [xself]
                    memory > xversions
                    seq > @
                      seq
                        xversions.write (((unsupported)).apply ((((unsupported)).apply ("3.0.0rc4-CAPI-1.3.3") ((((unsupported)).apply (3) (0) (0))))) ((((unsupported)).apply ("3.0.0-CAPI-1.4.1") ((((unsupported)).apply (3) (0) (0))))) ((((unsupported)).apply ("3.4.0dev-CAPI-1.8.0") ((((unsupported)).apply (3) (4) (0))))) ((((unsupported)).apply ("3.4.0dev-CAPI-1.8.0 r0") ((((unsupported)).apply (3) (4) (0))))) ((((unsupported)).apply ("3.6.2-CAPI-1.10.2 4d2925d6") ((((unsupported)).apply (3) (6) (2))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xversion_string)) ((xversion_tuple)))) ((xversions)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xversion_string)))))
                            (((unsupported)).apply (((((xmock).xpatch)).apply ("django.contrib.gis.geos.libgeos.geos_version") ((((unsupported)).apply ((xversion_string)))))))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgeos_version_tuple)).apply)) ((xversion_tuple)))
                xtest_from_gml.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xGEOSGeometry)).apply ("POINT(0 0)"))) (((((xGEOSGeometry).xfrom_gml)).apply ("<gml:Point gml:id=\"p21\" srsName=\"http://www.opengis.net/def/crs/EPSG/0/4326\">    <gml:pos srsDimension=\"2\">0 0</gml:pos></gml:Point>"))))
                xtest_from_ewkt.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xGEOSGeometry).xfrom_ewkt)).apply ("SRID=1;POINT(1 1)"))) ((((unsupported)).apply ((xPoint)) (1) (1) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xGEOSGeometry).xfrom_ewkt)).apply ("POINT(1 1)"))) ((((xPoint)).apply (1) (1))))
                xtest_from_ewkt_empty_string.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "Expected WKT but got an empty string."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write ((((xGEOSGeometry).xfrom_ewkt)).apply (""))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write ((((xGEOSGeometry).xfrom_ewkt)).apply ("SRID=1;"))
                xtest_from_ewkt_invalid_srid.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "EWKT has invalid SRID part."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write ((((xGEOSGeometry).xfrom_ewkt)).apply ("SRUD=1;POINT(1 1)"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write ((((xGEOSGeometry).xfrom_ewkt)).apply ("SRID=WGS84;POINT(1 1)"))
                xtest_fromstr_scientific_wkt.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xGEOSGeometry)).apply ("POINT(1.0e-1 1.0e+1)"))) ((((xPoint)).apply (0.1) (10))))
                xtest_normalize.write
                  [xself]
                    memory > xg
                    seq > @
                      seq
                        xg.write (((xMultiPoint)).apply ((((xPoint)).apply (0) (0))) ((((xPoint)).apply (2) (2))) ((((xPoint)).apply (1) (1))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xg).xnormalize)).apply)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xg).xequals_exact)).apply ((((xMultiPoint)).apply ((((xPoint)).apply (2) (2))) ((((xPoint)).apply (1) (1))) ((((xPoint)).apply (0) (0))))))))
                xtest_make_valid.write
                  [xself]
                    memory > xpoly
                    memory > xvalid_poly2
                    memory > xvalid_poly
                    seq > @
                      (((unsupported)).apply)
                        xpoly.write (((xGEOSGeometry)).apply ("POLYGON((0 0, 0 23, 23 0, 23 23, 0 0))"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xpoly).xvalid)) ((xfalse)))
                        xvalid_poly.write ((((xpoly).xmake_valid)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xvalid_poly).xvalid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xvalid_poly)) ((xpoly)))
                        xvalid_poly2.write ((((xvalid_poly).xmake_valid)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xvalid_poly2).xvalid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xvalid_poly)) ((xvalid_poly2)))
                xtest_make_valid_geos_version.write
                  [xself]
                    memory > xpoly
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "GEOSGeometry.make_valid() requires GEOS >= 3.8.0."
                        xpoly.write (((xGEOSGeometry)).apply ("POLYGON((0 0, 0 23, 23 0, 23 23, 0 0))"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xGEOSException)) ((xmsg)))))
                          bogusForceDataize.write ((((xpoly).xmake_valid)).apply)
                xtest_empty_point.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((unsupported)).apply ((xPoint)) (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xp).xogr).xewkt)) (((xp).xewkt)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xp).xtransform)) (2774) (TRUE))) ((((unsupported)).apply ((xPoint)) (2774))))
                        bogusForceDataize.write ((((xp).xtransform)).apply (2774))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp)) ((((unsupported)).apply ((xPoint)) (2774))))
                xtest_linestring_iter.write
                  [xself]
                    memory > xls
                    memory > xit
                    seq > @
                      seq
                        xls.write (((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))
                        xit.write (((xiter)).apply ((xls)))
                        bogusForceDataize.write (((xnext)).apply ((xit)))
                        (((unsupported)).apply ((((unsupported)).apply ((xls)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                          bogusForceDataize.write (((xnext)).apply ((xit)))