memory > xTemplateSyntaxError
memory > xWithNode
memory > xrepr
memory > xSimpleTestCase
[] > test_with
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_with_error02
        memory > xtest_with01
        memory > xtest_with02
        memory > xtest_legacywith02
        memory > xtest_with03
        memory > xat_least_with_one_msg2
        memory > xtest_repr
        memory > xtest_legacywith01
        memory > xtest_with_error01
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xat_least_with_one_msg2.write "'with' expected at least one variable assignment"
                xtest_with01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("with01") ((((unsupported)).apply ("dict") ((((unsupported)).apply ("key") (50))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50"))
                xtest_legacywith01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("legacywith01") ((((unsupported)).apply ("dict") ((((unsupported)).apply ("key") (50))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50"))
                xtest_with02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("with02") ((((unsupported)).apply ("dict") ((((unsupported)).apply ("key") (50))))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID50-50-50INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50-50-50"))
                xtest_legacywith02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("legacywith02") ((((unsupported)).apply ("dict") ((((unsupported)).apply ("key") (50))))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID50-50-50INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50-50-50"))
                xtest_with03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("with03") ((((unsupported)).apply ("alpha") ("A") ("beta") ("B"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("AB"))
                xtest_with_error01.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) (((xself).xat_least_with_one_msg)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("with-error01") ((((unsupported)).apply ("dict") ((((unsupported)).apply ("key") (50))))))
                xtest_with_error02.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) (((xself).xat_least_with_one_msg)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("with-error02") ((((unsupported)).apply ("dict") ((((unsupported)).apply ("key") (50))))))
            (((unsupported)).apply ((xSimpleTestCase)))
              xtest_repr.write
                [xself]
                  memory > xnode
                  seq > @
                    seq
                      xnode.write (((unsupported)).apply ((xWithNode)) ((((unsupported)).apply)) ("a") ("dict.key"))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xnode)))) ("<WithNode>"))