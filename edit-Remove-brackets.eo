memory > xContextMixin
memory > xwarnings
memory > xBaseFormView
memory > xWarning
memory > xBaseCreateView
memory > xFormMixin
memory > xView
memory > xhasattr
memory > xsuper
memory > xModelFormMixin
memory > xSingleObjectMixin
memory > xDeletionMixin
memory > xSingleObjectTemplateResponseMixin
memory > xTemplateResponseMixin
memory > xBaseDeleteView
memory > xAttributeError
memory > xBaseUpdateView
memory > xstr
memory > xDeleteViewCustomDeleteWarning
memory > xHttpResponseRedirect
memory > xForm
memory > xargs
memory > xProcessFormView
memory > xBaseDetailView
memory > xgetattr
memory > xImproperlyConfigured
memory > xkwargs
[] > edit
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xdelete
        memory > xget_form_kwargs
        memory > xget
        memory > xform_class
        memory > xfields
        memory > xinitial
        memory > xprefix
        memory > xget_context_data
        memory > xget_form
        memory > xget_prefix
        memory > xform_valid
        memory > xtemplate_name_suffix
        memory > x__init__
        memory > xget_form_class
        memory > xsuccess_url
        memory > xget_success_url
        memory > xform_invalid
        memory > xmodel_forms
        memory > xput
        memory > xget_initial
        memory > xpost
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xContextMixin)))
              seq
                unsupported
                xinitial.write (((unsupported)).apply)
                xform_class.write "None: is there a None literal in the EO language?"
                xsuccess_url.write "None: is there a None literal in the EO language?"
                xprefix.write "None: is there a None literal in the EO language?"
                xget_initial.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xself).xinitial).xcopy)))
                xget_prefix.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xprefix)))
                xget_form_class.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xform_class)))
                xget_form.write
                  [xself xform_class]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((xform_class)) ("None: is there a None literal in the EO language?")).if
                          xform_class.write ((xself).xget_form_class)
                        (((unsupported)).apply ((((xform_class)).apply ((((unsupported)).apply (((xself).xget_form_kwargs)))))))
                xget_form_kwargs.write
                  [xself]
                    memory > xkwargs
                    seq > @
                      seq
                        unsupported
                        xkwargs.write (((unsupported)).apply ("initial") (((xself).xget_initial)) ("prefix") (((xself).xget_prefix)))
                        (((unsupported)).apply ((((xself).xrequest).xmethod)) ((((unsupported)).apply ("POST") ("PUT")))).if
                          bogusForceDataize.write ((((xkwargs).xupdate)).apply ((((unsupported)).apply ("data") ((((xself).xrequest).xPOST)) ("files") ((((xself).xrequest).xFILES)))))
                        (((unsupported)).apply ((xkwargs)))
                xget_success_url.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((xself).xsuccess_url).not).if
                          (((unsupported)).apply ((((xImproperlyConfigured)).apply ("No URL to redirect to. Provide a success_url."))))
                        (((unsupported)).apply ((((xstr)).apply (((xself).xsuccess_url)))))
                xform_valid.write
                  [xself xform]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xHttpResponseRedirect)).apply (((xself).xget_success_url)))))
                xform_invalid.write
                  [xself xform]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).xrender_to_response)).apply ((((unsupported)).apply (((xself).xget_context_data)) ((xform)))))))
                xget_context_data.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ("form") ((xkwargs))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xkwargs)) ("form"))) (((xself).xget_form)))
                        (((unsupported)).apply (((((xsuper).xget_context_data)).apply ((((unsupported)).apply ((xkwargs)))))))
            (((unsupported)).apply ((xFormMixin)) ((xSingleObjectMixin)))
              seq
                unsupported
                xfields.write "None: is there a None literal in the EO language?"
                xget_form_class.write
                  [xself]
                    memory > xmodel
                    seq > @
                      seq
                        unsupported
                        ((((unsupported)).apply (((xself).xfields)) ("None: is there a None literal in the EO language?")).and ((xself).xform_class)).if
                          (((unsupported)).apply ((((xImproperlyConfigured)).apply ("Specifying both 'fields' and 'form_class' is not permitted."))))
                        ((xself).xform_class).if
                          (((unsupported)).apply (((xself).xform_class)))
                          seq
                            (((unsupported)).apply (((xself).xmodel)) ("None: is there a None literal in the EO language?")).if
                              xmodel.write ((xself).xmodel)
                              (((unsupported)).apply ((((xgetattr)).apply ((xself)) ("object") ("None: is there a None literal in the EO language?"))) ("None: is there a None literal in the EO language?")).if
                                xmodel.write (((xself).xobject).x__class__)
                                xmodel.write (((xself).xget_queryset).xmodel)
                            (((unsupported)).apply (((xself).xfields)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)).apply ((((xImproperlyConfigured)).apply (("Using ModelFormMixin (base class of %s) without the 'fields' attribute is prohibited.".mod (((xself).x__class__).x__name__))))))
                            (((unsupported)).apply ((((unsupported)).apply (((xmodel_forms).xmodelform_factory)) ((xmodel)) (((xself).xfields)))))
                xget_form_kwargs.write
                  [xself]
                    memory > xkwargs
                    seq > @
                      seq
                        unsupported
                        xkwargs.write ((xsuper).xget_form_kwargs)
                        (((xhasattr)).apply ((xself)) ("object")).if
                          bogusForceDataize.write ((((xkwargs).xupdate)).apply ((((unsupported)).apply ("instance") (((xself).xobject)))))
                        (((unsupported)).apply ((xkwargs)))
                xget_success_url.write
                  [xself]
                    memory > xurl
                    seq > @
                      seq
                        unsupported
                        ((xself).xsuccess_url).if
                          xurl.write (((((xself).xsuccess_url).xformat)).apply ((((unsupported)).apply ((((xself).xobject).x__dict__)))))
                          (((unsupported)).apply ((xAttributeError)))
                            xurl.write (((xself).xobject).xget_absolute_url)
                            (((unsupported)).apply ((((xImproperlyConfigured)).apply ("No URL to redirect to.  Either provide a url or define a get_absolute_url method on the Model."))))
                        (((unsupported)).apply ((xurl)))
                xform_valid.write
                  [xself xform]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xobject)) (((xform).xsave)))
                        (((unsupported)).apply (((((xsuper).xform_valid)).apply ((xform)))))
            (((unsupported)).apply ((xView)))
              seq
                unsupported
                xget.write
                  [xself xrequest]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xself).xrender_to_response)).apply (((xself).xget_context_data)))))
                xpost.write
                  [xself xrequest]
                    memory > xform
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xform.write ((xself).xget_form)
                        ((xform).xis_valid).if
                          (((unsupported)).apply (((((xself).xform_valid)).apply ((xform)))))
                          (((unsupported)).apply (((((xself).xform_invalid)).apply ((xform)))))
                xput.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xpost)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
            (((unsupported)).apply ((xFormMixin)) ((xProcessFormView)))
              unsupported
            (((unsupported)).apply ((xTemplateResponseMixin)) ((xBaseFormView)))
              unsupported
            (((unsupported)).apply ((xModelFormMixin)) ((xProcessFormView)))
              seq
                (((unsupported)).apply)
                xget.write
                  [xself xrequest]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xsuper).xget)).apply ((xrequest)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                xpost.write
                  [xself xrequest]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xsuper).xpost)).apply ((xrequest)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
            (((unsupported)).apply ((xSingleObjectTemplateResponseMixin)) ((xBaseCreateView)))
              seq
                (((unsupported)).apply)
                xtemplate_name_suffix.write "_form"
            (((unsupported)).apply ((xModelFormMixin)) ((xProcessFormView)))
              seq
                (((unsupported)).apply)
                xget.write
                  [xself xrequest]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) (((xself).xget_object)))
                        (((unsupported)).apply (((((xsuper).xget)).apply ((xrequest)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                xpost.write
                  [xself xrequest]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) (((xself).xget_object)))
                        (((unsupported)).apply (((((xsuper).xpost)).apply ((xrequest)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
            (((unsupported)).apply ((xSingleObjectTemplateResponseMixin)) ((xBaseUpdateView)))
              seq
                unsupported
                xtemplate_name_suffix.write "_form"
            (((unsupported)).apply)
              seq
                unsupported
                xsuccess_url.write "None: is there a None literal in the EO language?"
                xdelete.write
                  [xself xrequest]
                    memory > xsuccess_url
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) (((xself).xget_object)))
                        xsuccess_url.write ((xself).xget_success_url)
                        unsupported
                        (((unsupported)).apply ((((xHttpResponseRedirect)).apply ((xsuccess_url)))))
                xpost.write
                  [xself xrequest]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xdelete)).apply ((xrequest)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                xget_success_url.write
                  [xself]
                    seq > @
                      ((xself).xsuccess_url).if
                        (((unsupported)).apply ((((((xself).xsuccess_url).xformat)).apply ((((unsupported)).apply ((((xself).xobject).x__dict__)))))))
                        (((unsupported)).apply ((((xImproperlyConfigured)).apply ("No URL to redirect to. Provide a success_url."))))
            (((unsupported)).apply ((xWarning)))
            (((unsupported)).apply ((xDeletionMixin)) ((xFormMixin)) ((xBaseDetailView)))
              seq
                (((unsupported)).apply)
                xform_class.write (xForm)
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xself).x__class__).xdelete)) (((xDeletionMixin).xdelete))).if
                          (((unsupported)).apply (((xwarnings).xwarn)) ("DeleteView uses FormMixin to handle POST requests. As a consequence, any custom deletion logic in {self.__class__.__name__}.delete handler should be moved to form_valid.") ((xDeleteViewCustomDeleteWarning)) (2))
                        bogusForceDataize.write ((((xsuper).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                xpost.write
                  [xself xrequest]
                    memory > xform
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) (((xself).xget_object)))
                        xform.write ((xself).xget_form)
                        ((xform).xis_valid).if
                          (((unsupported)).apply (((((xself).xform_valid)).apply ((xform)))))
                          (((unsupported)).apply (((((xself).xform_invalid)).apply ((xform)))))
                xform_valid.write
                  [xself xform]
                    memory > xsuccess_url
                    seq > @
                      seq
                        xsuccess_url.write ((xself).xget_success_url)
                        unsupported
                        (((unsupported)).apply ((((xHttpResponseRedirect)).apply ((xsuccess_url)))))
            (((unsupported)).apply ((xSingleObjectTemplateResponseMixin)) ((xBaseDeleteView)))
              seq
                (((unsupported)).apply)
                xtemplate_name_suffix.write "_confirm_delete"