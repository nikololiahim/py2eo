360c360
<                               bogusForceDataize.write ((((xself).xfail)).apply ((((("expected: n'''n".add (xexpected_output)).add "'''nbut got n'''n").add (xoutput)).add "'''")))
---
>                               bogusForceDataize.write ((((xself).xfail)).apply ((((("expected: n'''n".sub (xexpected_output)).sub "'''nbut got n'''n").sub (xoutput)).sub "'''")))
377c377
<                           (((unsupported)).apply (((((xself).xfailureException)).apply ((((("help text failure; expected:n\"".add (xexpected_help)).add "\"; got:n\"").add (xactual_help)).add "\"n")))))
---
>                           (((unsupported)).apply (((((xself).xfailureException)).apply ((((("help text failure; expected:n\"".sub (xexpected_help)).sub "\"; got:n\"").sub (xactual_help)).sub "\"n")))))
627c627
<                 xTYPES.write (((xOption).xTYPES).add (((unsupported)).apply ("duration")))
---
>                 xTYPES.write (((xOption).xTYPES).sub (((unsupported)).apply ("duration")))
708c708
<                             bogusForceDataize.write ((((xself).xassertHelp)).apply ((xparser)) ((((xexpected_usage).add "n").add "Options:n  --version   show program's version number and exitn  -h, --help  show this help message and exitn")))
---
>                             bogusForceDataize.write ((((xself).xassertHelp)).apply ((xparser)) ((((xexpected_usage).sub "n").sub "Options:n  --version   show program's version number and exitn  -h, --help  show this help message and exitn")))
722c722
<                         bogusForceDataize.write ((((xself).xassertHelp)).apply ((xparser)) (((xexpected_usage).add "n")))
---
>                         bogusForceDataize.write ((((xself).xassertHelp)).apply ((xparser)) (((xexpected_usage).sub "n")))
732,733c732,733
<                         (((unsupported)).apply (((xself).xexpected_help_file)) ((((xself).xhelp_prefix).add "  -f FILE, --file=FILE  read from FILE [default: foo.txt]n")))
<                         (((unsupported)).apply (((xself).xexpected_help_none)) ((((xself).xhelp_prefix).add "  -f FILE, --file=FILE  read from FILE [default: none]n")))
---
>                         (((unsupported)).apply (((xself).xexpected_help_file)) ((((xself).xhelp_prefix).sub "  -f FILE, --file=FILE  read from FILE [default: foo.txt]n")))
>                         (((unsupported)).apply (((xself).xexpected_help_none)) ((((xself).xhelp_prefix).sub "  -f FILE, --file=FILE  read from FILE [default: none]n")))
780c780
<                         xexpected_help.write (((xself).xhelp_prefix).add "  -p PROB, --prob=PROB  blow up with probability PROB [default: 0.43]n")
---
>                         xexpected_help.write (((xself).xhelp_prefix).sub "  -p PROB, --prob=PROB  blow up with probability PROB [default: 0.43]n")
796c796
<                         xexpected_help.write (((xself).xhelp_prefix).add "  -f FILE, --file=FILE  read from %default filen")
---
>                         xexpected_help.write (((xself).xhelp_prefix).sub "  -f FILE, --file=FILE  read from %default filen")
1200c1200
<                     xTYPES.write (((xOption).xTYPES).add (((unsupported)).apply ("file")))
---
>                     xTYPES.write (((xOption).xTYPES).sub (((unsupported)).apply ("file")))
1230,1232c1230,1232
<                     xACTIONS.write (((xOption).xACTIONS).add (((unsupported)).apply ("extend")))
<                     xSTORE_ACTIONS.write (((xOption).xSTORE_ACTIONS).add (((unsupported)).apply ("extend")))
<                     xTYPED_ACTIONS.write (((xOption).xTYPED_ACTIONS).add (((unsupported)).apply ("extend")))
---
>                     xACTIONS.write (((xOption).xACTIONS).sub (((unsupported)).apply ("extend")))
>                     xSTORE_ACTIONS.write (((xOption).xSTORE_ACTIONS).sub (((unsupported)).apply ("extend")))
>                     xTYPED_ACTIONS.write (((xOption).xTYPED_ACTIONS).sub (((unsupported)).apply ("extend")))
1642c1642
<                         bogusForceDataize.write ((((xself).xassertHelpEquals)).apply (((xexpect).add "nPlease report bugs to /dev/null.n")))
---
>                         bogusForceDataize.write ((((xself).xassertHelpEquals)).apply (((xexpect).sub "nPlease report bugs to /dev/null.n")))