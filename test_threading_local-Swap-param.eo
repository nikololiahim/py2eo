memory > xthreading
memory > xAttributeError
memory > xall
memory > xThreadLocalTest
memory > xrange
memory > xBaseLocalTest
memory > xi
memory > xgc
memory > xweakref
memory > xDocTestSuite
memory > xunittest
memory > xobject
memory > x_threading_local
memory > xPyThreadingLocalTest
memory > xX
memory > xtime
memory > xLocal
memory > xhasattr
memory > x_thread
memory > xsupport
memory > xsys
memory > xlocal
memory > xMyLocal
memory > xLocalSubclass
memory > xlen
memory > xweak
memory > xTypeError
memory > x__name__
memory > xWeak
[] > test_threading_local
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_local_refs
        memory > x_local_refs
        memory > xtest_derived
        memory > xtest_main
        memory > x_test_one_class
        memory > xtest_dict_attribute_subclass
        memory > xtest_threading_local_subclass
        memory > x_local
        memory > xtarget
        memory > xtest_arguments
        memory > xtest_threading_local
        memory > xtest_dict_attribute
        memory > xtest_cycle_collection
        memory > xtest_derived_cycle_dealloc
        memory > x_test_dict_attribute
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xobject)))
            xtarget.write
              [xlocal xweaklist]
                memory > xweak
                seq > @
                  seq
                    xweak.write (((xWeak)).apply)
                    (((unsupported)).apply (((xlocal).xweak)) ((xweak)))
                    bogusForceDataize.write ((((xweaklist).xappend)).apply (((((xweakref).xref)).apply ((xweak)))))
            (((unsupported)).apply)
              seq
                xtest_local_refs.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).x_local_refs)).apply (20))
                        bogusForceDataize.write ((((xself).x_local_refs)).apply (50))
                        bogusForceDataize.write ((((xself).x_local_refs)).apply (100))
                x_local_refs.write
                  [xself xn]
                    memory > xt
                    memory > xlocal
                    memory > xweaklist
                    memory > xdeadlist
                    seq > @
                      seq
                        xlocal.write ((((xself).x_local)).apply)
                        xweaklist.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((xn)))))
                          seq
                            xt.write (((unsupported)).apply (((xthreading).xThread)) ((xtarget)) ((((unsupported)).apply ((xlocal)) ((xweaklist)))))
                            bogusForceDataize.write ((((xt).xstart)).apply)
                            bogusForceDataize.write ((((xt).xjoin)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xt)))))))
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xweaklist)))) ((xn)))
                        xdeadlist.write (((unsupported)).apply ((xweak)) ((xweak)) ((xweaklist)) ((((unsupported)).apply ((((xweak)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xlen)).apply ((xdeadlist)))) ((((unsupported)).apply (((xn).sub 1)) ((xn)))))
                        (((unsupported)).apply (((xlocal).xsomeothervar)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        xdeadlist.write (((unsupported)).apply ((xweak)) ((xweak)) ((xweaklist)) ((((unsupported)).apply ((((xweak)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xlen)).apply ((xdeadlist)))) ((((unsupported)).apply (((xn).sub 1)) ((xn)))) ((((unsupported)).apply ((xn)) ((((xlen)).apply ((xdeadlist)))))))
                xtest_derived.write
                  [xself]
                    memory > xlocal
                    memory > x__init__
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).x_local)))
                          x__init__.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xtime).xsleep)).apply (0.01))
                        xlocal.write (((xLocal)).apply)
                        xf.write
                          [xi]
                            seq > @
                              seq
                                (((unsupported)).apply (((xlocal).xx)) ((xi)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlocal).xx)) ((xi)))
                        (((unsupported)).apply (((((xsupport).xstart_threads)).apply ((((unsupported)).apply ((((unsupported)).apply (((xthreading).xThread)) ((xf)) ((((unsupported)).apply ((xi)))))) ((xi)) ((((xrange)).apply (10))))))))
                xtest_derived_cycle_dealloc.write
                  [xself]
                    memory > xlocals
                    memory > xt
                    memory > xe1
                    memory > xf
                    memory > xe2
                    memory > xpassed
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_local)))
                        xlocals.write "None: is there a None literal in the EO language?"
                        xpassed.write FALSE
                        xe1.write ((((xthreading).xEvent)).apply)
                        xe2.write ((((xthreading).xEvent)).apply)
                        xf.write
                          []
                            memory > xcycle
                            memory > xpassed
                            seq > @
                              seq
                                (((unsupported)).apply)
                                xcycle.write (((unsupported)).apply ((((xLocal)).apply)))
                                bogusForceDataize.write ((((xcycle).xappend)).apply ((xcycle)))
                                (((unsupported)).apply (((((unsupported)).apply ((xcycle)) (0)).xfoo)) ("bar"))
                                (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xcycle)))))))
                                bogusForceDataize.write ((((xgc).xcollect)).apply)
                                bogusForceDataize.write ((((xe1).xset)).apply)
                                bogusForceDataize.write ((((xe2).xwait)).apply)
                                xpassed.write (((xall)).apply ((((unsupported)).apply (((((xhasattr)).apply ((xlocal)) ("foo")).not)) ((xlocal)) ((xlocals)))))
                        xt.write (((unsupported)).apply (((xthreading).xThread)) ((xf)))
                        bogusForceDataize.write ((((xt).xstart)).apply)
                        bogusForceDataize.write ((((xe1).xwait)).apply)
                        xlocals.write (((unsupported)).apply ((((xLocal)).apply)) ((xi)) ((((xrange)).apply (10))))
                        bogusForceDataize.write ((((xe2).xset)).apply)
                        bogusForceDataize.write ((((xt).xjoin)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((xpassed)))
                xtest_arguments.write
                  [xself]
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_local)))
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply)
                        (((unsupported)).apply ((xMyLocal)) (1))
                        bogusForceDataize.write (((xMyLocal)).apply (1))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xTypeError)) (((xself).x_local)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).x_local)) (1))
                x_test_one_class.write
                  [xself xc]
                    memory > xt2
                    memory > xe2
                    memory > xt1
                    memory > xe1
                    memory > xf2
                    memory > xf1
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_failed)) ("No error message set or cleared."))
                        xobj.write (((xc)).apply)
                        xe1.write ((((xthreading).xEvent)).apply)
                        xe2.write ((((xthreading).xEvent)).apply)
                        xf1.write
                          []
                            seq > @
                              seq
                                (((unsupported)).apply (((xobj).xx)) ("foo"))
                                (((unsupported)).apply (((xobj).xy)) ("bar"))
                                (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xobj).xy)))))))
                                bogusForceDataize.write ((((xe1).xset)).apply)
                                bogusForceDataize.write ((((xe2).xwait)).apply)
                        xf2.write
                          []
                            memory > xfoo
                            seq > @
                              (((unsupported)).apply ((xAttributeError)))
                                xfoo.write ((xobj).xx)
                                (((unsupported)).apply (((xself).x_failed)) (""))
                                seq
                                  (((unsupported)).apply (((xself).x_failed)) (("Incorrectly got value %r from class %rn".mod (((unsupported)).apply ((xfoo)) ((xc))))))
                                  bogusForceDataize.write (((((xsys).xstderr).xwrite)).apply (((xself).x_failed)))
                        xt1.write (((unsupported)).apply (((xthreading).xThread)) ((xf1)))
                        bogusForceDataize.write ((((xt1).xstart)).apply)
                        bogusForceDataize.write ((((xe1).xwait)).apply)
                        xt2.write (((unsupported)).apply (((xthreading).xThread)) ((xf2)))
                        bogusForceDataize.write ((((xt2).xstart)).apply)
                        bogusForceDataize.write ((((xt2).xjoin)).apply)
                        bogusForceDataize.write ((((xe2).xset)).apply)
                        bogusForceDataize.write ((((xt1).xjoin)).apply)
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xself).x_failed)) (((xself).x_failed)))
                xtest_threading_local.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).x_test_one_class)).apply (((xself).x_local)))
                xtest_threading_local_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_local)))
                          unsupported
                        bogusForceDataize.write ((((xself).x_test_one_class)).apply ((xLocalSubclass)))
                x_test_dict_attribute.write
                  [xself xcls]
                    memory > xobj
                    seq > @
                      seq
                        xobj.write (((xcls)).apply)
                        (((unsupported)).apply (((xobj).xx)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xobj).x__dict__)) ((((unsupported)).apply ("x") (5))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xAttributeError)))))
                          (((unsupported)).apply (((xobj).x__dict__)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xAttributeError)))))
                          (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xobj).x__dict__)))))))
                xtest_dict_attribute.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).x_test_dict_attribute)).apply (((xself).x_local)))
                xtest_dict_attribute_subclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_local)))
                          unsupported
                        bogusForceDataize.write ((((xself).x_test_dict_attribute)).apply ((xLocalSubclass)))
                xtest_cycle_collection.write
                  [xself]
                    memory > xx
                    memory > xwr
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xx.write (((xX)).apply)
                        (((unsupported)).apply (((xx).xlocal)) (((((xself).x_local)).apply)))
                        (((unsupported)).apply ((((xx).xlocal).xx)) ((xx)))
                        xwr.write ((((xweakref).xref)).apply ((xx)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xx)))))))
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xwr)).apply)))
            (((unsupported)).apply (((xunittest).xTestCase)) ((xBaseLocalTest)))
              x_local.write ((x_thread).x_local)
            (((unsupported)).apply (((xunittest).xTestCase)) ((xBaseLocalTest)))
              x_local.write ((x_threading_local).xlocal)
            xtest_main.write
              []
                memory > xlocal_orig
                memory > xsetUp
                memory > xsuite
                memory > xtearDown
                seq > @
                  seq
                    xsuite.write ((((xunittest).xTestSuite)).apply)
                    bogusForceDataize.write ((((xsuite).xaddTest)).apply ((((xDocTestSuite)).apply ("_threading_local"))))
                    bogusForceDataize.write ((((xsuite).xaddTest)).apply (((((xunittest).xmakeSuite)).apply ((xThreadLocalTest)))))
                    bogusForceDataize.write ((((xsuite).xaddTest)).apply (((((xunittest).xmakeSuite)).apply ((xPyThreadingLocalTest)))))
                    xlocal_orig.write ((x_threading_local).xlocal)
                    xsetUp.write
                      [xtest]
                        seq > @
                          (((unsupported)).apply (((x_threading_local).xlocal)) (((x_thread).x_local)))
                    xtearDown.write
                      [xtest]
                        seq > @
                          (((unsupported)).apply (((x_threading_local).xlocal)) ((xlocal_orig)))
                    bogusForceDataize.write ((((xsuite).xaddTest)).apply ((((unsupported)).apply ((xDocTestSuite)) ("_threading_local") ((xsetUp)) ((xtearDown)))))
                    bogusForceDataize.write ((((xsupport).xrun_unittest)).apply ((xsuite)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)).apply)