memory > xValueError
memory > xModel
memory > xM2MModel
memory > xImproperlyConfigured
memory > xmodels
memory > xMyBigAutoField
memory > xisolate_apps
memory > xSimpleTestCase
[] > test_default_pk
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_app_default_auto_field_non_auto
        memory > xtest_app_default_auto_field_nonexistent
        memory > xtest_default_auto_field_setting
        memory > xtest_app_default_auto_field
        memory > xtest_m2m_app_default_auto_field
        memory > xtest_m2m_default_auto_field_setting
        memory > xtest_default_auto_field_setting_bigautofield_subclass
        memory > xtest_default_auto_field_setting_none
        memory > xtest_default_auto_field_setting_nonexistent
        memory > xtest_app_default_auto_field_none
        memory > xtest_default_auto_field_setting_non_auto
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xmodels).xBigAutoField)))
            (((unsupported)).apply ((xSimpleTestCase)) ((((xisolate_apps)).apply ("model_options"))))
              seq
                xtest_default_auto_field_setting_nonexistent.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "DEFAULT_AUTO_FIELD refers to the module 'django.db.models.NonexistentAutoField' that could not be imported."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          (((unsupported)).apply (((xmodels).xModel)))
                xtest_app_default_auto_field_nonexistent.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "model_options.apps.ModelPKNonexistentConfig.default_auto_field refers to the module 'django.db.models.NonexistentAutoField' that could not be imported."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          (((unsupported)).apply (((xmodels).xModel)))
                xtest_default_auto_field_setting_non_auto.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "Primary key 'django.db.models.TextField' referred by DEFAULT_AUTO_FIELD must subclass AutoField."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply (((xmodels).xModel)))
                xtest_app_default_auto_field_non_auto.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "Primary key 'django.db.models.TextField' referred by model_options.apps.ModelPKNonAutoConfig.default_auto_field must subclass AutoField."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply (((xmodels).xModel)))
                xtest_default_auto_field_setting_none.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "DEFAULT_AUTO_FIELD must not be empty."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          (((unsupported)).apply (((xmodels).xModel)))
                xtest_app_default_auto_field_none.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "model_options.apps.ModelPKNoneConfig.default_auto_field must not be empty."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          (((unsupported)).apply (((xmodels).xModel)))
                xtest_default_auto_field_setting.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xmodels).xModel)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xModel).x_meta).xpk)) (((xmodels).xSmallAutoField)))
                xtest_default_auto_field_setting_bigautofield_subclass.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xmodels).xModel)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xModel).x_meta).xpk)) ((xMyBigAutoField)))
                xtest_app_default_auto_field.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xmodels).xModel)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xModel).x_meta).xpk)) (((xmodels).xSmallAutoField)))
                xtest_m2m_default_auto_field_setting.write
                  [xself]
                    memory > xm2m_pk
                    memory > xm2m
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xmodels).xModel)))
                          xm2m.write ((((xmodels).xManyToManyField)).apply ("self"))
                        xm2m_pk.write (((((((((xM2MModel).x_meta).xget_field)).apply ("m2m")).xremote_field).xthrough).x_meta).xpk)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xm2m_pk)) (((xmodels).xSmallAutoField)))
                xtest_m2m_app_default_auto_field.write
                  [xself]
                    memory > xm2m_pk
                    memory > xm2m
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xmodels).xModel)))
                          xm2m.write ((((xmodels).xManyToManyField)).apply ("self"))
                        xm2m_pk.write (((((((((xM2MModel).x_meta).xget_field)).apply ("m2m")).xremote_field).xthrough).x_meta).xpk)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xm2m_pk)) (((xmodels).xSmallAutoField)))