memory > xlength_is
memory > xoutput
memory > xSimpleTestCase
[] > test_length_is
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_length_is10
        memory > xtest_length_is07
        memory > xtest_length_is03
        memory > xtest_length_is05
        memory > xtest_length_is06
        memory > xtest_length_is11
        memory > xtest_length_is04
        memory > xtest_length_is09
        memory > xtest_length_is01
        memory > xtest_empty_list
        memory > xtest_length_is08
        memory > xtest_string
        memory > xtest_length_is02
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_length_is01.write
                  [xself]
                    memory > xoutput2
                    seq > @
                      (((unsupported)).apply)
                        xoutput2.write (((((xself).xengine).xrender_to_string)).apply ("length_is01") ((((unsupported)).apply ("some_list") ((((unsupported)).apply ("4") ("None: is there a None literal in the EO language?") (TRUE) ((((unsupported)).apply)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Four"))
                xtest_length_is02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is02") ((((unsupported)).apply ("some_list") ((((unsupported)).apply ("4") ("None: is there a None literal in the EO language?") (TRUE) ((((unsupported)).apply)) (17))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Not Four"))
                xtest_length_is03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is03") ((((unsupported)).apply ("mystring") ("word"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Four"))
                xtest_length_is04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is04") ((((unsupported)).apply ("mystring") ("Python"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Not Four"))
                xtest_length_is05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is05") ((((unsupported)).apply ("mystring") (""))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Not Four"))
                xtest_length_is06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is06") ((((unsupported)).apply ("var") ("django"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("6"))
                xtest_length_is07.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is07") ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Length not 0"))
                xtest_length_is08.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is08") ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Length is 1"))
                xtest_length_is09.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is09") ((((unsupported)).apply ("var") ("django"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_length_is10.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is10") ((((unsupported)).apply ("int") (7))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_length_is11.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("length_is11") ((((unsupported)).apply ("none") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_empty_list.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xlength_is)).apply ((((unsupported)).apply)) (0))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xlength_is)).apply ((((unsupported)).apply)) (1))) (FALSE))
                xtest_string.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xlength_is)).apply ("a") (1))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xlength_is)).apply ("a") (10))) (FALSE))