memory > xd
memory > xpickle_copier
memory > xk
memory > xNode
memory > xSmallCatamaran
memory > xD
memory > xFakeStr
memory > xMyStr
memory > xcm
memory > xhexint
memory > xtypes
memory > xmultimetaclass
memory > xC
memory > xcopy
memory > xBoat
memory > xEditingMixin
memory > xMeta1
memory > xround
memory > xautoproperty
memory > xNasty
memory > xOverrideBoth
memory > xtp
memory > xImportError
memory > xcomplex
memory > xAttributeError
memory > xC3
memory > xDescriptor
memory > xmeta
memory > xEditablePane
memory > xCounted
memory > xFileIO
memory > xpickle
memory > xlist
memory > xRuntimeError
memory > xO
memory > xcls2
memory > xdelattr
memory > xconstructor
memory > xDictSub
memory > xA2
memory > xEngineLess
memory > xa1
memory > xmydict
memory > xPickleCopier
memory > xcistr
memory > xPTypesLongInitTest
memory > xMyComplex
memory > xDDbase
memory > xMroTest
memory > xo
memory > xPerverseMetaType
memory > xdeepcopy
memory > xabc
memory > xC12
memory > xK
memory > xValueError
memory > xDDsub
memory > xfrozenset
memory > xException2
memory > xZ
memory > xstr
memory > xQ
memory > xd2
memory > xio
memory > xSubType
memory > xMM
memory > xHVGrid
memory > xMyTuple
memory > xC0
memory > xBMeta
memory > xwarnings
memory > xDescr
memory > xWorkAlways
memory > xPicklingTests
memory > xBase
memory > xAssertionError
memory > xmadtuple
memory > xC11
memory > xprecfloat
memory > xWorkOnce
memory > xProxy
memory > xB
memory > xexec
memory > xHorizontalGrid
memory > xC4
memory > xOldClass
memory > xautosuper
memory > xS
memory > xrange
memory > xmath
memory > xC15
memory > xexpr
memory > xH
memory > xMyFloat
memory > xb
memory > xvalue
memory > xProvoker
memory > xZeroDivisionError
memory > xWrapper
memory > xOverrideNeither
memory > xT
memory > xMyException
memory > xErrDescr
memory > xG
memory > xOverrideNew
memory > xSharedKeyTests
memory > xModule1
memory > xeval
memory > xZZ
memory > xL
memory > xcase
memory > xStopIteration
memory > xIndexError
memory > xPane
memory > xbytearray
memory > xmsg
memory > xScrollablePane
memory > xDictProxyTests
memory > xANotMeta
memory > xbase
memory > xproto
memory > xC7
memory > xP
memory > xAMeta
memory > xPicky
memory > xmax
memory > xoctlong
memory > xQ1
memory > xbinascii
memory > xDocDescr
memory > xslot
memory > xMyKey
memory > xOperatorsTest
memory > xM2
memory > xEvil
memory > xInt
memory > xPedalWheelBoat
memory > xNumber
memory > xBNotMeta
memory > xFoo
memory > xreversed
memory > xmysuper
memory > xkw
memory > xW
memory > xprint
memory > xtype
memory > xcopyreg
memory > xMyFrozenSet
memory > xException1
memory > xEditableScrollablePane
memory > xrunner
memory > xMyCallable
memory > xPedalo
memory > xC10
memory > xmadstring
memory > xset
memory > xWheelBoat
memory > xrepr
memory > xint
memory > xOverrideInit
memory > xCdict
memory > x_instance
memory > xBase2
memory > xException
memory > xmeth_impl
memory > xX
memory > xhasattr
memory > xChecker
memory > xa2
memory > xproperty
memory > xC14
memory > xx
memory > xC6
memory > xI
memory > xx2
memory > xoperator
memory > xmadunicode
memory > xok
memory > xi
memory > xVerticalGrid
memory > xF
memory > xR
memory > xtrash
memory > xMyInt
memory > xarg
memory > xbuiltins
memory > xsuper
memory > xDerived2
memory > xs
memory > xsupport
memory > xsys
memory > xsomeclass
memory > xkwds
memory > xbool
memory > xissubclass
memory > x_metaclass
memory > xM
memory > xVHGrid
memory > xbytes
memory > xtuple
memory > xMapping
memory > xB1
memory > xNotImplemented
memory > xEvilGetattribute
memory > xd1
memory > xMyBytes
memory > xGridLayout
memory > xDeprecationWarning
memory > xMeta
memory > xM1
memory > xfloat
memory > xchr
memory > xbad
memory > xClassPropertiesAndMethods
memory > xmadcomplex
memory > xcls
memory > xModule2
memory > xRecursionError
memory > xStdoutGuard
memory > xgc
memory > xModuleType
memory > xC1
memory > xSpecialDescr
memory > xSmallMultihull
memory > xargs
memory > xclassic
memory > xitertools
memory > xobj
memory > xdir
memory > xUnrelated
memory > xlongclone
memory > xslice
memory > xweakref
memory > xpow
memory > xitem
memory > xval
memory > xgetattr
memory > xv
memory > xprotocol
memory > xid
memory > xvars
memory > xUnicodeEncodeError
memory > xoct
memory > xDebugHelperMeta
memory > xiter
memory > xMeta2
memory > xformat
memory > xScrollingMixin
memory > xord
memory > xmylist
memory > xsetattr
memory > xC9
memory > xattr
memory > xFrag
memory > xiexpr
memory > xE
memory > xMiscTests
memory > xname
memory > xzip
memory > xunittest
memory > xsublist
memory > xSub
memory > xstaticmethod
memory > xoctetstring
memory > xy
memory > xhash
memory > xY
memory > xmap
memory > xDerived1
memory > xn
memory > xobject
memory > xC16
memory > xA
memory > xA1
memory > xAddressBookEntry
memory > xenv
memory > xcomputed_attribute
memory > xC2
memory > xdynamicmetaclass
memory > xUserLong
memory > xB2
memory > xkwargs
memory > xabs
memory > xN
memory > xhex
memory > xC5
memory > xSubSpam
memory > xop
memory > xNoWeak
memory > xlen
memory > xNewClass
memory > xExceptionType
memory > xclassmethod
memory > xj
memory > xisinstance
memory > xF2
memory > xdict
memory > xMyABC
memory > xC13
memory > x__name__
memory > xkey
memory > xOops
memory > xa
memory > xEllipsis
memory > xDayBoat
memory > xTypeError
memory > xbadarg
memory > xWeak
memory > xJ
[] > test_descr
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_reent_set_bases_on_base
        memory > xtest_staticmethods
        memory > xtest_repr_as_str
        memory > xtest_dynamics
        memory > xtest_slots_descriptor
        memory > xtest_isinst_isclass
        memory > xtest_dict_type_with_metaclass
        memory > xtest_descrdoc
        memory > xtest_binary_operator_override
        memory > xtest_rmul
        memory > xtest_type_lookup_mro_reference
        memory > x__repr__
        memory > xtest_testcapi_no_segfault
        memory > xtest_subclasses
        memory > xtest_properties_plus
        memory > xtest_abstractmethods
        memory > xtest_doc_descriptor
        memory > xtest_newslots
        memory > xtest_carloverre_multi_inherit_invalid
        memory > xtest_iter_keys
        memory > xtest_incomplete_set_bases_on_self
        memory > xtest_set_dict
        memory > xtest_funny_new
        memory > xtest_multiple_inheritance
        memory > xassertNotHasAttr
        memory > xtest_deepcopy_recursive
        memory > xtest_classic_comparisons
        memory > xunop_test
        memory > xtest_pytype_long_ready
        memory > xtest_refleaks_in_staticmethod___init__
        memory > xtest_ints
        memory > xtest_dicts
        memory > xtest_mutable_names
        memory > xtest_getattr_hooks
        memory > xstep_until
        memory > xtest_builtin_function_or_method
        memory > xtest_keyword_arguments
        memory > xtest_mixing_slot_wrappers
        memory > xtest_delete_hook
        memory > xtest_tp_subclasses_cycle_in_update_slots
        memory > xtest_imul_bug
        memory > xtest_set_doc
        memory > xtest_keywords
        memory > xtest_rich_comparisons
        memory > xtest_properties_doc_attrib
        memory > xtest_subtype_resurrection
        memory > xtest_basic_inheritance
        memory > xtest_restored_object_new
        memory > xtest_spam_lists
        memory > xtest_unsubclassable_types
        memory > xtest_wrap_lenfunc_bad_cast
        memory > xtest_main
        memory > xtest_repr
        memory > xtest_buffer_inheritance
        memory > xtest_reent_set_bases_tp_base_cycle
        memory > xtest_slot_shadows_class_variable
        memory > xtest_meth_class_get
        memory > xtest_complexes
        memory > x_testcapi
        memory > xtest_diamond_inheritance
        memory > xtest_slots_special
        memory > xtest_bound_method_repr
        memory > xtest_init
        memory > xtest_dir
        memory > xtest_file_fault
        memory > xtest_mutable_bases
        memory > xtest_evil_type_name
        memory > xsliceop_test
        memory > xtest_issue24097
        memory > xtest_ipow
        memory > xsetUp
        memory > xtest_monotonicity
        memory > xtest_special_method_lookup
        memory > xtest_mutable_bases_catch_mro_conflict
        memory > xtest_object_reduce
        memory > xtest_slots_multiple_inheritance
        memory > xtest_iter_items
        memory > xtest_supers
        memory > xtest_classmethods
        memory > xtest_str_subclass_as_dict_key
        memory > xassertHasAttr
        memory > xtest_slots
        memory > xtest_slots_special2
        memory > xtest_explicit_reverse_methods
        memory > xtest_spam_dicts
        memory > xtest_incomplete_extend
        memory > xtest_staticmethods_in_c
        memory > xtest_wrong_class_slot_wrapper
        memory > xtest_altmro
        memory > xnumber_operators
        memory > xtest_hash_inheritance
        memory > xtest_slots_trash
        memory > xtest_bad_new
        memory > xassertNotOrderable
        memory > xtest_wrapper_segfault
        memory > xbinop_test
        memory > x_generate_pickle_copiers
        memory > xtest_proxy_super
        memory > xtest_type___getattribute__
        memory > xtest_metaclass
        memory > xtest_subclassing_does_not_duplicate_dict_descriptors
        memory > xtest_str_of_str_subclass
        memory > xtest_not_implemented
        memory > xtest_dict_constructors
        memory > xtest_refleaks_in_classmethod___init__
        memory > xtest_overloading
        memory > xtest_method_wrapper
        memory > xtest_module_subclasses
        memory > xtest_reduce
        memory > xtest_lists
        memory > x_assert_is_copy
        memory > xtest_uninitialized_modules
        memory > xtest_methods_in_c
        memory > xtest_special_unbound_method_types
        memory > xtest_object_new
        memory > xtest_weakref_segfault
        memory > xtest_errors
        memory > xtest_object_new_and_init_with_parameters
        memory > xtest_qualname
        memory > xtest_consistency_with_epg
        memory > xtest_compattr
        memory > x__init__
        memory > xtest_ex5_from_c3_switch
        memory > xtest_reduce_copying
        memory > xtest_classic
        memory > xtest_slices
        memory > xtest_weakrefs
        memory > xtest_carloverre
        memory > xtest_python_dicts
        memory > xtest_copy_setstate
        memory > xtest_properties
        memory > xtest_object_class
        memory > xtest_mutable_bases_with_failing_mro
        memory > xtest_subclass_propagation
        memory > xtest_mro_disagreement
        memory > xtest_iter_values
        memory > xsetsliceop_test
        memory > xtest_assign_slice
        memory > xtest_builtin_bases
        memory > xtest_qualname_dict
        memory > xtest_set_and_no_get
        memory > xtest_specials
        memory > x_check_reduce
        memory > xtest_subclass_right_op
        memory > xtest_classmethods_in_c
        memory > xtest_floats
        memory > xtest_python_lists
        memory > xtest_object_class_assignment_between_heaptypes_and_nonheaptypes
        memory > xtest_reent_set_bases_on_direct_base
        memory > xtest_tp_subclasses_cycle_error_return_path
        memory > xtest_str_operations
        memory > xsetop_test
        memory > xtest_pickle_slots
        memory > xtest_methods
        memory > xtest_cycle_through_dict
        memory > x__new__
        memory > xtest_set_class
        memory > xtest_incomplete_super
        memory > xtest_carloverre_multi_inherit_valid
        memory > xtest_bpo25750
        memory > xtest_recursive_call
        memory > xtest_vicious_descriptor_nonsense
        memory > xtest_proxy_call
        memory > xset2op_test
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xImportError)))
              (((unsupported)).apply)
              x_testcapi.write "None: is there a None literal in the EO language?"
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                x__init__.write
                  [xself]
                    memory > xexpr
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xunittest).xTestCase).x__init__)).apply ((xself)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        (((unsupported)).apply (((xself).xbinops)) ((((unsupported)).apply ("add") ("+") ("sub") ("-") ("mul") ("*") ("matmul") ("@") ("falsediv") ("/") ("floordiv") ("//") ("divmod") ("divmod") ("pow") ("**") ("lshift") ("<<") ("rshift") (">>") ("and") ("&") ("xor") ("^") ("or") ("|") ("cmp") ("cmp") ("lt") ("<") ("le") ("<=") ("eq") ("==") ("ne") ("!=") ("gt") (">") ("ge") (">="))))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xexpr)))) ((((xlist)).apply ((((((xself).xbinops).xitems)).apply)))))
                          seq
                            ((((xexpr).xislower)).apply).if
                              xexpr.write ((xexpr).add "(a, b)")
                              xexpr.write ("a %s b".mod (xexpr))
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xbinops)) ((xname)))) ((xexpr)))
                        (((unsupported)).apply (((xself).xunops)) ((((unsupported)).apply ("pos") ("+") ("neg") ("-") ("abs") ("abs") ("invert") ("~") ("int") ("int") ("float") ("float"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xexpr)))) ((((xlist)).apply ((((((xself).xunops).xitems)).apply)))))
                          seq
                            ((((xexpr).xislower)).apply).if
                              xexpr.write ((xexpr).add "(a)")
                              xexpr.write ("%s a".mod (xexpr))
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xunops)) ((xname)))) ((xexpr)))
                xunop_test.write
                  [xself xa xres xexpr xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)).apply)
                        xd.write (((unsupported)).apply ("a") ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xexpr)) ((xd)))) ((xres)))
                        xt.write (((xtype)).apply ((xa)))
                        xm.write (((xgetattr)).apply ((xt)) ((xmeth)))
                        while.
                          (((unsupported)).apply ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)).apply (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetattr)).apply ((xm)) ("im_func") ((xm)))) ((((unsupported)).apply (((xt).x__dict__)) ((xmeth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xm)).apply ((xa)))) ((xres)))
                        xbm.write (((xgetattr)).apply ((xa)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xbm)).apply)) ((xres)))
                xbinop_test.write
                  [xself xa xb xres xexpr xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)).apply)
                        xd.write (((unsupported)).apply ("a") ((xa)) ("b") ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xexpr)) ((xd)))) ((xres)))
                        xt.write (((xtype)).apply ((xa)))
                        xm.write (((xgetattr)).apply ((xt)) ((xmeth)))
                        while.
                          (((unsupported)).apply ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)).apply (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetattr)).apply ((xm)) ("im_func") ((xm)))) ((((unsupported)).apply (((xt).x__dict__)) ((xmeth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xm)).apply ((xa)) ((xb)))) ((xres)))
                        xbm.write (((xgetattr)).apply ((xa)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xbm)).apply ((xb)))) ((xres)))
                xsliceop_test.write
                  [xself xa xb xc xres xexpr xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)).apply)
                        xd.write (((unsupported)).apply ("a") ((xa)) ("b") ((xb)) ("c") ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xexpr)) ((xd)))) ((xres)))
                        xt.write (((xtype)).apply ((xa)))
                        xm.write (((xgetattr)).apply ((xt)) ((xmeth)))
                        while.
                          (((unsupported)).apply ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)).apply (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetattr)).apply ((xm)) ("im_func") ((xm)))) ((((unsupported)).apply (((xt).x__dict__)) ((xmeth)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xm)).apply ((xa)) ((((xslice)).apply ((xb)) ((xc)))))) ((xres)))
                        xbm.write (((xgetattr)).apply ((xa)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xbm)).apply ((((xslice)).apply ((xb)) ((xc)))))) ((xres)))
                xsetop_test.write
                  [xself xa xb xres xstmt xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)).apply)
                        xd.write (((unsupported)).apply ("a") ((((xdeepcopy)).apply ((xa)))) ("b") ((xb)))
                        bogusForceDataize.write (((xexec)).apply ((xstmt)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xres)))
                        xt.write (((xtype)).apply ((xa)))
                        xm.write (((xgetattr)).apply ((xt)) ((xmeth)))
                        while.
                          (((unsupported)).apply ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)).apply (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetattr)).apply ((xm)) ("im_func") ((xm)))) ((((unsupported)).apply (((xt).x__dict__)) ((xmeth)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xd)) ("a"))) ((((xdeepcopy)).apply ((xa)))))
                        bogusForceDataize.write (((xm)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xres)))
                        (((unsupported)).apply ((((unsupported)).apply ((xd)) ("a"))) ((((xdeepcopy)).apply ((xa)))))
                        xbm.write (((xgetattr)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xmeth)))
                        bogusForceDataize.write (((xbm)).apply ((xb)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xres)))
                xset2op_test.write
                  [xself xa xb xc xres xstmt xmeth]
                    memory > xt
                    memory > xd
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)).apply)
                        xd.write (((unsupported)).apply ("a") ((((xdeepcopy)).apply ((xa)))) ("b") ((xb)) ("c") ((xc)))
                        bogusForceDataize.write (((xexec)).apply ((xstmt)) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xres)))
                        xt.write (((xtype)).apply ((xa)))
                        xm.write (((xgetattr)).apply ((xt)) ((xmeth)))
                        while.
                          (((unsupported)).apply ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)).apply (((xt).x__bases__)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetattr)).apply ((xm)) ("im_func") ((xm)))) ((((unsupported)).apply (((xt).x__dict__)) ((xmeth)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xd)) ("a"))) ((((xdeepcopy)).apply ((xa)))))
                        bogusForceDataize.write (((xm)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xb)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xres)))
                        (((unsupported)).apply ((((unsupported)).apply ((xd)) ("a"))) ((((xdeepcopy)).apply ((xa)))))
                        xbm.write (((xgetattr)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xmeth)))
                        bogusForceDataize.write (((xbm)).apply ((xb)) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("a"))) ((xres)))
                xsetsliceop_test.write
                  [xself xa xb xc xd xres xstmt xmeth]
                    memory > xt
                    memory > xdictionary
                    memory > xbm
                    memory > xm
                    seq > @
                      (((unsupported)).apply)
                        xdictionary.write (((unsupported)).apply ("a") ((((xdeepcopy)).apply ((xa)))) ("b") ((xb)) ("c") ((xc)) ("d") ((xd)))
                        bogusForceDataize.write (((xexec)).apply ((xstmt)) ((xdictionary)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((xres)))
                        xt.write (((xtype)).apply ((xa)))
                        while.
                          (((unsupported)).apply ((xmeth)) (((xt).x__dict__)))
                          [unused]
                            seq > @
                              xt.write (((unsupported)).apply (((xt).x__bases__)) (0))
                        xm.write (((xgetattr)).apply ((xt)) ((xmeth)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetattr)).apply ((xm)) ("im_func") ((xm)))) ((((unsupported)).apply (((xt).x__dict__)) ((xmeth)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((((xdeepcopy)).apply ((xa)))))
                        bogusForceDataize.write (((xm)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((((xslice)).apply ((xb)) ((xc)))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((xres)))
                        (((unsupported)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((((xdeepcopy)).apply ((xa)))))
                        xbm.write (((xgetattr)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((xmeth)))
                        bogusForceDataize.write (((xbm)).apply ((((xslice)).apply ((xb)) ((xc)))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xdictionary)) ("a"))) ((xres)))
                xtest_lists.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply (2))) ((((unsupported)).apply (1) (2))) ("a+b") ("__add__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2) (3))) (2) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2) (3))) (4) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2) (3))) (1) (2) ("a[b]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsliceop_test)).apply ((((unsupported)).apply (1) (2) (3))) (0) (2) ((((unsupported)).apply (1) (2))) ("a[b:c]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsetop_test)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply (2))) ((((unsupported)).apply (1) (2))) ("a+=b") ("__iadd__"))
                        bogusForceDataize.write ((((xself).xsetop_test)).apply ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (1) (2) (1) (2) (1) (2))) ("a*=b") ("__imul__"))
                        bogusForceDataize.write ((((xself).xunop_test)).apply ((((unsupported)).apply (1) (2) (3))) (3) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (1) (2) (1) (2) (1) (2))) ("a*b") ("__mul__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (1) (2) (1) (2) (1) (2))) ("b*a") ("__rmul__"))
                        bogusForceDataize.write ((((xself).xset2op_test)).apply ((((unsupported)).apply (1) (2))) (1) (3) ((((unsupported)).apply (1) (3))) ("a[b]=c") ("__setitem__"))
                        bogusForceDataize.write ((((xself).xsetsliceop_test)).apply ((((unsupported)).apply (1) (2) (3) (4))) (1) (3) ((((unsupported)).apply (5) (6))) ((((unsupported)).apply (1) (5) (6) (4))) ("a[b:c]=d") ("__setitem__"))
                xtest_dicts.write
                  [xself]
                    memory > xd
                    memory > xl
                    memory > xl1
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2) (3) (4))) (1) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2) (3) (4))) (2) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((unsupported)).apply (1) (2) (3) (4))) (1) (2) ("a[b]") ("__getitem__"))
                        xd.write (((unsupported)).apply (1) (2) (3) (4))
                        xl1.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) ((((xlist)).apply (((((xd).xkeys)).apply)))))
                          bogusForceDataize.write ((((xl1).xappend)).apply ((xi)))
                        xl.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) ((((xiter)).apply ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)).apply ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xl)) ((xl1)))
                        xl.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) (((((xd).x__iter__)).apply)))
                          bogusForceDataize.write ((((xl).xappend)).apply ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xl)) ((xl1)))
                        xl.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) (((((xdict).x__iter__)).apply ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)).apply ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xl)) ((xl1)))
                        xd.write (((unsupported)).apply (1) (2) (3) (4))
                        bogusForceDataize.write ((((xself).xunop_test)).apply ((xd)) (2) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((((xrepr)).apply ((xd)))) ((((unsupported)).apply)))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (((((xd).x__repr__)).apply)) ((((unsupported)).apply)))) ((xd)))
                        bogusForceDataize.write ((((xself).xset2op_test)).apply ((((unsupported)).apply (1) (2) (3) (4))) (2) (3) ((((unsupported)).apply (1) (2) (2) (3) (3) (4))) ("a[b]=c") ("__setitem__"))
                xnumber_operators.write
                  [xself xa xb xskip]
                    memory > xdict
                    memory > xname
                    memory > xres
                    seq > @
                      (((unsupported)).apply)
                        xdict.write (((unsupported)).apply ("a") ((xa)) ("b") ((xb)))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xexpr)))) ((((((xself).xbinops).xitems)).apply)))
                          (((unsupported)).apply ((xname)) ((xskip))).if
                            seq
                              xname.write ("__%s__".mod (xname))
                              (((xhasattr)).apply ((xa)) ((xname))).if
                                seq
                                  xres.write (((xeval)).apply ((xexpr)) ((xdict)))
                                  bogusForceDataize.write ((((xself).xbinop_test)).apply ((xa)) ((xb)) ((xres)) ((xexpr)) ((xname)))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xexpr)))) ((((xlist)).apply ((((((xself).xunops).xitems)).apply)))))
                          (((unsupported)).apply ((xname)) ((xskip))).if
                            seq
                              xname.write ("__%s__".mod (xname))
                              (((xhasattr)).apply ((xa)) ((xname))).if
                                seq
                                  xres.write (((xeval)).apply ((xexpr)) ((xdict)))
                                  bogusForceDataize.write ((((xself).xunop_test)).apply ((xa)) ((xres)) ((xexpr)) ((xname)))
                xtest_ints.write
                  [xself]
                    memory > x__add__
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xnumber_operators)).apply (100) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((1.x__bool__)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((0.x__bool__)).apply)) (0))
                        (((unsupported)).apply ((xint)))
                          x__add__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply ((xNotImplemented)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC)).apply (5))) (5))
                        (((unsupported)).apply ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("NotImplemented should have caused TypeError"))
                xtest_floats.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xnumber_operators)).apply (100.0) (3.0))
                xtest_complexes.write
                  [xself]
                    memory > x__str__
                    memory > x__repr__
                    memory > x__slots__
                    memory > x__new__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xnumber_operators)) ((((unsupported)).apply)) ((((unsupported)).apply)) ((((unsupported)).apply ("lt") ("le") ("gt") ("ge") ("int") ("float") ("floordiv") ("divmod") ("mod"))))
                        (((unsupported)).apply ((xcomplex)))
                          seq
                            x__slots__.write (((unsupported)).apply ("prec"))
                            x__new__.write
                              [xcls]
                                memory > xresult
                                seq > @
                                  (((unsupported)).apply)
                                    xresult.write ((((xcomplex).x__new__)).apply ((xcls)) ((((unsupported)).apply ((xargs)))))
                                    (((unsupported)).apply (((xresult).xprec)) (((((xkwds).xget)).apply ("prec") (12))))
                                    (((unsupported)).apply ((xresult)))
                            x__repr__.write
                              [xself]
                                memory > xprec
                                seq > @
                                  seq
                                    xprec.write ((xself).xprec)
                                    (((xself).ximag).eq 0.0).if
                                      (((unsupported)).apply (("%.*g".mod (((unsupported)).apply ((xprec)) (((xself).xreal))))))
                                    (((xself).xreal).eq 0.0).if
                                      (((unsupported)).apply (("%.*gj".mod (((unsupported)).apply ((xprec)) (((xself).ximag))))))
                                    (((unsupported)).apply (("(%.*g+%.*gj)".mod (((unsupported)).apply ((xprec)) (((xself).xreal)) ((xprec)) (((xself).ximag))))))
                            x__str__.write (x__repr__)
                        xa.write (((unsupported)).apply ((xNumber)) (3.14) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xa)))) ("3.14"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xprec)) (6))
                        xa.write (((unsupported)).apply ((xNumber)) ((xa)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xa)))) ("3.1"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xprec)) (2))
                        xa.write (((xNumber)).apply (234.5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xa)))) ("234.5"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xprec)) (12))
                xtest_explicit_reverse_methods.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcomplex).x__radd__)).apply ((((unsupported)).apply)) (4.0))) ((((xcomplex)).apply (4.0) (3.0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xfloat).x__rsub__)).apply (3.0) (1))) ((2.0.neg)))
                xtest_spam_lists.write
                  [xself]
                    memory > xspam
                    memory > xspamlist
                    memory > xfoo
                    memory > xa
                    seq > @
                      (((unsupported)).apply)
                        seq
                          (((unsupported)).apply)
                          (((unsupported)).apply)
                        xspamlist.write
                          [xl xmemo]
                            memory > xspam
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                (((unsupported)).apply (((((xspam).xspamlist)).apply ((xl)))))
                        (((unsupported)).apply ((((unsupported)).apply (((xcopy).x_deepcopy_dispatch)) (((xspam).xspamlist)))) ((xspamlist)))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1))))) ((((xspamlist)).apply ((((unsupported)).apply (2))))) ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) ("a+b") ("__add__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (3))))) (2) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (3))))) (4) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (3))))) (1) (2) ("a[b]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsliceop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (3))))) (0) (2) ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) ("a[b:c]") ("__getitem__"))
                        bogusForceDataize.write ((((xself).xsetop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1))))) ((((xspamlist)).apply ((((unsupported)).apply (2))))) ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) ("a+=b") ("__iadd__"))
                        bogusForceDataize.write ((((xself).xsetop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) (3) ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (1) (2) (1) (2))))) ("a*=b") ("__imul__"))
                        bogusForceDataize.write ((((xself).xunop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (3))))) (3) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) (3) ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (1) (2) (1) (2))))) ("a*b") ("__mul__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) (3) ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (1) (2) (1) (2))))) ("b*a") ("__rmul__"))
                        bogusForceDataize.write ((((xself).xset2op_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2))))) (1) (3) ((((xspamlist)).apply ((((unsupported)).apply (1) (3))))) ("a[b]=c") ("__setitem__"))
                        bogusForceDataize.write ((((xself).xsetsliceop_test)).apply ((((xspamlist)).apply ((((unsupported)).apply (1) (2) (3) (4))))) (1) (3) ((((xspamlist)).apply ((((unsupported)).apply (5) (6))))) ((((xspamlist)).apply ((((unsupported)).apply (1) (5) (6) (4))))) ("a[b:c]=d") ("__setitem__"))
                        (((unsupported)).apply (((xspam).xspamlist)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (1))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xfoo)).apply)) (1))
                        bogusForceDataize.write ((((xa).xappend)).apply (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (42))
                xtest_spam_dicts.write
                  [xself]
                    memory > xd
                    memory > xl1
                    memory > xspamdict
                    memory > xl
                    memory > xspamd
                    memory > xspam
                    memory > xstraightd
                    memory > xfoo
                    memory > xa
                    seq > @
                      (((unsupported)).apply)
                        seq
                          (((unsupported)).apply)
                          (((unsupported)).apply)
                        xspamdict.write
                          [xd xmemo]
                            memory > xspam
                            memory > xsd
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply)
                                xsd.write ((((xspam).xspamdict)).apply)
                                (((unsupported)).apply ((((unsupported)).apply ((xk)) ((xv)))) ((((xlist)).apply (((((xd).xitems)).apply)))))
                                  (((unsupported)).apply ((((unsupported)).apply ((xsd)) ((xk)))) ((xv)))
                                (((unsupported)).apply ((xsd)))
                        (((unsupported)).apply ((((unsupported)).apply (((xcopy).x_deepcopy_dispatch)) (((xspam).xspamdict)))) ((xspamdict)))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamdict)).apply ((((unsupported)).apply (1) (2) (3) (4))))) (1) (1) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamdict)).apply ((((unsupported)).apply (1) (2) (3) (4))))) (2) (0) ("b in a") ("__contains__"))
                        bogusForceDataize.write ((((xself).xbinop_test)).apply ((((xspamdict)).apply ((((unsupported)).apply (1) (2) (3) (4))))) (1) (2) ("a[b]") ("__getitem__"))
                        xd.write (((xspamdict)).apply ((((unsupported)).apply (1) (2) (3) (4))))
                        xl1.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) ((((xlist)).apply (((((xd).xkeys)).apply)))))
                          bogusForceDataize.write ((((xl1).xappend)).apply ((xi)))
                        xl.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) ((((xiter)).apply ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)).apply ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xl)) ((xl1)))
                        xl.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) (((((xd).x__iter__)).apply)))
                          bogusForceDataize.write ((((xl).xappend)).apply ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xl)) ((xl1)))
                        xl.write (((unsupported)).apply)
                        (((unsupported)).apply ((xi)) (((((((xtype)).apply ((((xspamdict)).apply ((((unsupported)).apply))))).x__iter__)).apply ((xd)))))
                          bogusForceDataize.write ((((xl).xappend)).apply ((xi)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xl)) ((xl1)))
                        xstraightd.write (((unsupported)).apply (1) (2) (3) (4))
                        xspamd.write (((xspamdict)).apply ((xstraightd)))
                        bogusForceDataize.write ((((xself).xunop_test)).apply ((xspamd)) (2) ("len(a)") ("__len__"))
                        bogusForceDataize.write ((((xself).xunop_test)).apply ((xspamd)) ((((xrepr)).apply ((xstraightd)))) ("repr(a)") ("__repr__"))
                        bogusForceDataize.write ((((xself).xset2op_test)).apply ((((xspamdict)).apply ((((unsupported)).apply (1) (2) (3) (4))))) (2) (3) ((((xspamdict)).apply ((((unsupported)).apply (1) (2) (2) (3) (3) (4))))) ("a[b]=c") ("__setitem__"))
                        (((unsupported)).apply (((xspam).xspamdict)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (1))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xa).xitems)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xfoo)).apply)) (1))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) ("foo"))) ("bar"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xa).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ("foo") ("bar"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)).apply (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (100))
                xtest_wrap_lenfunc_bad_cast.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xrange)).apply (((xsys).xmaxsize))).x__len__)).apply)) (((xsys).xmaxsize)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xassertHasAttr.write
                  [xself xobj xname]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xobj)) ((xname)))) (("%r has no attribute %r".mod (((unsupported)).apply ((xobj)) ((xname))))))
                xassertNotHasAttr.write
                  [xself xobj xname]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xhasattr)).apply ((xobj)) ((xname)))) (("%r has unexpected attribute %r".mod (((unsupported)).apply ((xobj)) ((xname))))))
                xtest_python_dicts.write
                  [xself]
                    memory > xd
                    memory > xa1
                    memory > x__getitem__
                    memory > xa2
                    memory > x__setitem__
                    memory > xsetstate
                    memory > xN
                    memory > xgetstate
                    memory > x__init__
                    memory > xstate
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xissubclass)).apply ((xdict)) ((xdict)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((unsupported)).apply)) ((xdict)))
                        xd.write (((xdict)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xd).x__class__)) ((xdict)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xd)) ((xdict)))
                        (((unsupported)).apply ((xdict)))
                          seq
                            xstate.write (1.neg)
                            x__init__.write
                              [xself_local]
                                seq > @
                                  (((unsupported)).apply)
                                    (xa).if
                                      seq
                                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xa)))) (1))
                                        (((unsupported)).apply (((xself_local).xstate)) ((((unsupported)).apply ((xa)) (0))))
                                    (xkw).if
                                      (((unsupported)).apply ((((unsupported)).apply ((xk)) ((xv)))) ((((xlist)).apply (((((xkw).xitems)).apply)))))
                                        (((unsupported)).apply ((((unsupported)).apply ((xself_local)) ((xv)))) ((xk)))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)).apply (((((xself).xget)).apply ((xkey)) (0))))
                            x__setitem__.write
                              [xself_local xkey xvalue]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xkey)) ((((xtype)).apply (0))))
                                    bogusForceDataize.write ((((xdict).x__setitem__)).apply ((xself_local)) ((xkey)) ((xvalue)))
                            xsetstate.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)).apply (((xself).xstate)) ((xstate)))
                            xgetstate.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).xstate)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xissubclass)).apply ((xC)) ((xdict)))))
                        xa1.write (((xC)).apply (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa1).xstate)) (12))
                        xa2.write (((unsupported)).apply ((xC)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((unsupported)).apply ((xa2)) (1)).eq "foo").and (((unsupported)).apply ((xa2)) (2)))) ("bar"))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xstate)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) ((1.neg)))
                        bogusForceDataize.write ((((xa).xsetstate)).apply (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xstate)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)).apply (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xstate)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (42))) (0))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) (42))) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (42))) (24))
                        xN.write 50
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((xN)))))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xa)) ((xi)))) ((((xC)).apply)))
                            (((unsupported)).apply ((xj)) ((((xrange)).apply ((xN)))))
                              (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xa)) ((xi)))) ((xj)))) (((xi).mul (xj))))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((xN)))))
                          (((unsupported)).apply ((xj)) ((((xrange)).apply ((xN)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xa)) ((xi)))) ((xj)))) (((xi).mul (xj))))
                xtest_python_lists.write
                  [xself]
                    memory > x__getitem__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xlist)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  (((xisinstance)).apply ((xi)) ((xslice))).if
                                    (((unsupported)).apply ((((unsupported)).apply (((xi).xstart)) (((xi).xstop)))))
                                  (((unsupported)).apply ((((((xlist).x__getitem__)).apply ((xself)) ((xi))).add 100)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xa).xextend)).apply ((((unsupported)).apply (0) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (0))) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (1))) (101))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (2))) (102))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (100) (200))))) ((((unsupported)).apply (100) (200))))
                xtest_metaclass.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xcounter
                    memory > xmeth
                    memory > xfunc
                    memory > xspam
                    memory > xprepare_calls
                    memory > xnew_calls
                    memory > x_set_x
                    memory > x__new__
                    memory > xa
                    memory > xmyself
                    memory > x__call__
                    memory > x__prepare__
                    memory > x_get_x
                    memory > xgetstate
                    memory > x__init__
                    memory > xsetstate
                    memory > xmarker
                    seq > @
                      seq
                        (((unsupported)).apply ((xtype)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__state)) (0))
                            xgetstate.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__state)))
                            xsetstate.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)).apply (((xself).x__state)) ((xstate)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)).apply (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (10))
                        (((unsupported)).apply ((xtype)))
                          xmyself.write
                            [xcls]
                              seq > @
                                (((unsupported)).apply ((xcls)))
                        (((unsupported)).apply ((x_metaclass)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xmyself)).apply)) ((xD)))
                        xd.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).x__class__)) ((xD)))
                        (((unsupported)).apply ((xtype)))
                          x__new__.write
                            [xcls xname xbases xdict]
                              seq > @
                                seq
                                  (((unsupported)).apply ((((unsupported)).apply ((xdict)) ("__spam__"))) (1))
                                  (((unsupported)).apply (((((xtype).x__new__)).apply ((xcls)) ((xname)) ((xbases)) ((xdict)))))
                        (((unsupported)).apply ((xM1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).x__spam__)) (1))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).x__spam__)) (1))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__new__.write
                              [xcls xname xbases xdict]
                                memory > xself
                                seq > @
                                  (((unsupported)).apply)
                                    xself.write ((((xobject).x__new__)).apply ((xcls)))
                                    (((unsupported)).apply (((xself).xname)) ((xname)))
                                    (((unsupported)).apply (((xself).xbases)) ((xbases)))
                                    (((unsupported)).apply (((xself).xdict)) ((xdict)))
                                    (((unsupported)).apply ((xself)))
                            x__call__.write
                              [xself]
                                memory > xit
                                seq > @
                                  seq
                                    xit.write (((x_instance)).apply)
                                    (((unsupported)).apply ((xkey)) (((xself).xdict)))
                                      seq
                                        ((((xkey).xstartswith)).apply ("__")).if
                                          (((unsupported)).apply)
                                        bogusForceDataize.write (((xsetattr)).apply ((xit)) ((xkey)) (((((((unsupported)).apply (((xself).xdict)) ((xkey))).x__get__)).apply ((xit)) ((xself)))))
                                    (((unsupported)).apply ((xit)))
                        (((unsupported)).apply ((xM2)))
                          xspam.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).xname)) ("C"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).xbases)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("spam") (((xC).xdict)))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xspam)).apply)) (42))
                        (((unsupported)).apply ((xtype)))
                          x__new__.write
                            [xmetaclass xname xbases xdict]
                              memory > xcls
                              seq > @
                                seq
                                  xcls.write ((((((xsuper)).apply ((xautosuper)) ((xmetaclass))).x__new__)).apply ((xmetaclass)) ((xname)) ((xbases)) ((xdict)))
                                  while.
                                    ((((unsupported)).apply ((xname)) ((((unsupported)).apply (1)))).eq "_")
                                    [unused]
                                      seq > @
                                        xname.write (((unsupported)).apply ((xname)) ((((unsupported)).apply (1))))
                                  (xname).if
                                    xname.write ("_%s__super".mod (xname))
                                    xname.write "__super"
                                  bogusForceDataize.write (((xsetattr)).apply ((xcls)) ((xname)) ((((xsuper)).apply ((xcls)))))
                                  (((unsupported)).apply ((xcls)))
                        (((unsupported)).apply ((xautosuper)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("A"))
                        (((unsupported)).apply ((xA)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("B".add (((((xself).x__super).xmeth)).apply))))
                        (((unsupported)).apply ((xA)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("C".add (((((xself).x__super).xmeth)).apply))))
                        (((unsupported)).apply ((xC)) ((xB)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("D".add (((((xself).x__super).xmeth)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xD)).apply).xmeth)).apply)) ("DCBA"))
                        (((unsupported)).apply ((xB)) ((xC)))
                          xmeth.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("E".add (((((xself).x__super).xmeth)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xE)).apply).xmeth)).apply)) ("EBCA"))
                        (((unsupported)).apply ((xtype)))
                          x__new__.write
                            [xmetaclass xname xbases xdict]
                              memory > xset
                              memory > xhits
                              memory > xkey
                              memory > xget
                              seq > @
                                seq
                                  xhits.write (((unsupported)).apply)
                                  (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xval)))) (((((xdict).xitems)).apply)))
                                    ((((xkey).xstartswith)).apply ("_get_")).if
                                      seq
                                        xkey.write (((unsupported)).apply ((xkey)) ((((unsupported)).apply (5))))
                                        (((unsupported)).apply ((((unsupported)).apply ((xget)) ((xset)))) (((((xhits).xget)).apply ((xkey)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))))
                                        xget.write (xval)
                                        (((unsupported)).apply ((((unsupported)).apply ((xhits)) ((xkey)))) ((((unsupported)).apply ((xget)) ((xset)))))
                                      ((((xkey).xstartswith)).apply ("_set_")).if
                                        seq
                                          xkey.write (((unsupported)).apply ((xkey)) ((((unsupported)).apply (5))))
                                          (((unsupported)).apply ((((unsupported)).apply ((xget)) ((xset)))) (((((xhits).xget)).apply ((xkey)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))))
                                          xset.write (xval)
                                          (((unsupported)).apply ((((unsupported)).apply ((xhits)) ((xkey)))) ((((unsupported)).apply ((xget)) ((xset)))))
                                  (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((((unsupported)).apply ((xget)) ((xset)))))) (((((xhits).xitems)).apply)))
                                    (((unsupported)).apply ((((unsupported)).apply ((xdict)) ((xkey)))) ((((xproperty)).apply ((xget)) ((xset)))))
                                  (((unsupported)).apply (((((((xsuper)).apply ((xautoproperty)) ((xmetaclass))).x__new__)).apply ((xmetaclass)) ((xname)) ((xbases)) ((xdict)))))
                        (((unsupported)).apply ((xautoproperty)))
                          seq
                            x_get_x.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xself).x__x).neg)))
                            x_set_x.write
                              [xself xx]
                                seq > @
                                  (((unsupported)).apply (((xself).x__x)) (((xx).neg)))
                        xa.write (((xA)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("x"))
                        (((unsupported)).apply (((xa).xx)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xx)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x_A__x)) ((12.neg)))
                        (((unsupported)).apply ((xautoproperty)) ((xautosuper)))
                        (((unsupported)).apply ((xmultimetaclass)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("A"))
                        (((unsupported)).apply ((xA)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("B".add (((((xself).x__super).x_get_x)).apply))))
                        (((unsupported)).apply ((xA)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("C".add (((((xself).x__super).x_get_x)).apply))))
                        (((unsupported)).apply ((xC)) ((xB)))
                          x_get_x.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("D".add (((((xself).x__super).x_get_x)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD)).apply).xx)) ("DCBA"))
                        (((unsupported)).apply ((xtype)))
                          seq
                            xcounter.write 0
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xT).xcounter)) (1))
                        (((unsupported)).apply ((xT)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xT).xcounter)) (1))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((xa)))) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xT).xcounter)) (1))
                        (((unsupported)).apply ((xobject)))
                        xc.write (((xC)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xc)).apply)
                          bogusForceDataize.write ((((xself).xfail)).apply ("calling object w/o call method should raise TypeError"))
                        (((unsupported)).apply ((xtype)))
                          x__new__.write
                            []
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (((((xtype).x__new__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)) ((xA)))
                        (((unsupported)).apply ((xB)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xA)) ((((xtype)).apply ((xD)))))
                        xnew_calls.write (((unsupported)).apply)
                        (((unsupported)).apply ((xtype)))
                          seq
                            x__new__.write
                              [xmcls xname xbases xns]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xnew_calls).xappend)).apply ("AMeta"))
                                    (((unsupported)).apply (((((((xsuper)).apply).x__new__)).apply ((xmcls)) ((xname)) ((xbases)) ((xns)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply)))
                        (((unsupported)).apply ((xAMeta)))
                          seq
                            x__new__.write
                              [xmcls xname xbases xns]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xnew_calls).xappend)).apply ("BMeta"))
                                    (((unsupported)).apply (((((((xsuper)).apply).x__new__)).apply ((xmcls)) ((xname)) ((xbases)) ((xns)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                memory > xns
                                seq > @
                                  (((unsupported)).apply)
                                    xns.write ((((((xsuper)).apply).x__prepare__)).apply ((xname)) ((xbases)))
                                    (((unsupported)).apply ((((unsupported)).apply ((xns)) ("BMeta_was_here"))) (TRUE))
                                    (((unsupported)).apply ((xns)))
                        (((unsupported)).apply ((xAMeta)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        (((unsupported)).apply ((xBMeta)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        (((unsupported)).apply ((xA)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("BMeta_was_here") (((xC).x__dict__)))
                        (((unsupported)).apply ((xB)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("BMeta_was_here") (((xC2).x__dict__)))
                        (((unsupported)).apply ((xC)) ((xtype)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("BMeta_was_here") (((xD).x__dict__)))
                        (((unsupported)).apply ((xC)) ((xAMeta)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BMeta") ("AMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("BMeta_was_here") (((xE).x__dict__)))
                        xmarker.write (((xobject)).apply)
                        xfunc.write
                          []
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xmarker)))
                        (((unsupported)).apply ((xfunc)))
                        (((unsupported)).apply ((xobject)) ((xfunc)))
                        (((unsupported)).apply ((xD)) ((xfunc)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xmarker)) ((xX)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xmarker)) ((xY)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xmarker)) ((xZ)))
                        xprepare_calls.write (((unsupported)).apply)
                        (((unsupported)).apply)
                          seq
                            x__new__.write
                              [xmcls]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xnew_calls).xappend)).apply ("ANotMeta"))
                                    (((unsupported)).apply (((((((xsuper)).apply).x__new__)).apply ((xmcls)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xprepare_calls).xappend)).apply ("ANotMeta"))
                                    (((unsupported)).apply ((((unsupported)).apply)))
                        (((unsupported)).apply ((xANotMeta)))
                          seq
                            x__new__.write
                              [xmcls]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xnew_calls).xappend)).apply ("BNotMeta"))
                                    (((unsupported)).apply (((((((xsuper)).apply).x__new__)).apply ((xmcls)))))
                            x__prepare__.write
                              [xmcls xname xbases]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xprepare_calls).xappend)).apply ("BNotMeta"))
                                    (((unsupported)).apply (((((((xsuper)).apply).x__prepare__)).apply ((xname)) ((xbases)))))
                        (((unsupported)).apply ((xANotMeta)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xANotMeta)) ((((xtype)).apply ((xA)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        (((unsupported)).apply ((xBNotMeta)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xBNotMeta)) ((((xtype)).apply ((xB)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        (((unsupported)).apply ((xA)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xBNotMeta)) ((((xtype)).apply ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        (((unsupported)).apply ((xB)) ((xA)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xBNotMeta)) ((((xtype)).apply ((xC2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((xC)) ((xtype)))
                        (((unsupported)).apply ((xC)) ((xANotMeta)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xBNotMeta)) ((((xtype)).apply ((xE)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        (((unsupported)).apply ((((xobject)).apply)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xBNotMeta)) ((((xtype)).apply ((xF)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        (((unsupported)).apply ((xC)) ((((xobject)).apply)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((xBNotMeta)) ((((xtype)).apply ((xF2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xnew_calls)))
                        bogusForceDataize.write ((((xnew_calls).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("BNotMeta") ("ANotMeta"))) ((xprepare_calls)))
                        bogusForceDataize.write ((((xprepare_calls).xclear)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((xC)) ((((xint)).apply)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xint)).apply)) ((xC)))
                xtest_module_subclasses.write
                  [xself]
                    memory > x__getattribute__
                    memory > x__delattr__
                    memory > xx
                    memory > xlog
                    memory > x__init__
                    memory > x__setattr__
                    memory > xMT
                    memory > xa
                    seq > @
                      seq
                        xlog.write (((unsupported)).apply)
                        xMT.write (((xtype)).apply ((xsys)))
                        (((unsupported)).apply ((xMT)))
                          seq
                            x__init__.write
                              [xself xname]
                                seq > @
                                  bogusForceDataize.write ((((xMT).x__init__)).apply ((xself)) ((xname)))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xlog).xappend)).apply ((((unsupported)).apply ("getattr") ((xname)))))
                                    (((unsupported)).apply (((((xMT).x__getattribute__)).apply ((xself)) ((xname)))))
                            x__setattr__.write
                              [xself xname xvalue]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xlog).xappend)).apply ((((unsupported)).apply ("setattr") ((xname)) ((xvalue)))))
                                    bogusForceDataize.write ((((xMT).x__setattr__)).apply ((xself)) ((xname)) ((xvalue)))
                            x__delattr__.write
                              [xself xname]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xlog).xappend)).apply ((((unsupported)).apply ("delattr") ((xname)))))
                                    bogusForceDataize.write ((((xMT).x__delattr__)).apply ((xself)) ((xname)))
                        xa.write (((xMM)).apply ("a"))
                        (((unsupported)).apply (((xa).xfoo)) (12))
                        xx.write ((xa).xfoo)
                        (((unsupported)).apply ((((unsupported)).apply (((xa).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlog)) ((((unsupported)).apply ((((unsupported)).apply ("setattr") ("foo") (12))) ((((unsupported)).apply ("getattr") ("foo"))) ((((unsupported)).apply ("delattr") ("foo"))))))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xtypes).xModuleType)) ((xstr)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("inheriting from ModuleType and str at the same time should fail"))
                xtest_multiple_inheritance.write
                  [xself]
                    memory > xd
                    memory > xsetstate
                    memory > xa
                    memory > xgetstate
                    memory > x__init__
                    memory > x__int__
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__state)) (0))
                            xgetstate.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__state)))
                            xsetstate.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)).apply (((xself).x__state)) ((xstate)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (0))
                        bogusForceDataize.write ((((xa).xsetstate)).apply (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetstate)).apply)) (10))
                        (((unsupported)).apply ((xdict)) ((xC)))
                          x__init__.write
                            [xself]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((((xtype)).apply ((((unsupported)).apply))).x__init__)).apply ((xself)))
                                  bogusForceDataize.write ((((xC).x__init__)).apply ((xself)))
                        xd.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xd).xkeys)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xd)) ("hello"))) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xd).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ("hello") ("world"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ("hello"))) ("world"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xgetstate)).apply)) (0))
                        bogusForceDataize.write ((((xd).xsetstate)).apply (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xgetstate)).apply)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xD).x__mro__)) ((((unsupported)).apply ((xD)) ((xdict)) ((xC)) ((xobject)))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__int__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xint)).apply (((((xself).xfoo)).apply)))))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("23"))
                        (((unsupported)).apply ((xNode)) ((xlist)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("42"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xNode)).apply).x__int__)).apply)) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xNode)).apply)))) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xFrag)).apply).x__int__)).apply)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xFrag)).apply)))) (42))
                xtest_diamond_inheritance.write
                  [xself]
                    memory > xboo
                    memory > xspam
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          xspam.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xA)).apply).xspam)).apply)) ("A"))
                        (((unsupported)).apply ((xA)))
                          seq
                            xboo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("B"))
                            xspam.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xB)).apply).xspam)).apply)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xB)).apply).xboo)).apply)) ("B"))
                        (((unsupported)).apply ((xA)))
                          xboo.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("C"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xC)).apply).xspam)).apply)) ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xC)).apply).xboo)).apply)) ("C"))
                        (((unsupported)).apply ((xB)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xD)).apply).xspam)).apply)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xD)).apply).xboo)).apply)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xD).x__mro__)) ((((unsupported)).apply ((xD)) ((xB)) ((xC)) ((xA)) ((xobject)))))
                        (((unsupported)).apply ((xC)) ((xB)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xE)).apply).xspam)).apply)) ("B"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xE)).apply).xboo)).apply)) ("C"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xE).x__mro__)) ((((unsupported)).apply ((xE)) ((xC)) ((xB)) ((xA)) ((xobject)))))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xD)) ((xE)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("expected MRO order disagreement (F)"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xE)) ((xD)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("expected MRO order disagreement (G)"))
                xtest_ex5_from_c3_switch.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xX)) ((xB)) ((xY)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xZ).x__mro__)) ((((unsupported)).apply ((xZ)) ((xX)) ((xB)) ((xY)) ((xA)) ((xC)) ((xobject)))))
                xtest_monotonicity.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xBoat)))
                        (((unsupported)).apply ((xBoat)))
                        (((unsupported)).apply ((xDayBoat)))
                        (((unsupported)).apply ((xDayBoat)))
                        (((unsupported)).apply ((xEngineLess)) ((xWheelBoat)))
                        (((unsupported)).apply ((xSmallMultihull)))
                        (((unsupported)).apply ((xPedalWheelBoat)) ((xSmallCatamaran)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xPedalWheelBoat).x__mro__)) ((((unsupported)).apply ((xPedalWheelBoat)) ((xEngineLess)) ((xDayBoat)) ((xWheelBoat)) ((xBoat)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xSmallCatamaran).x__mro__)) ((((unsupported)).apply ((xSmallCatamaran)) ((xSmallMultihull)) ((xDayBoat)) ((xBoat)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xPedalo).x__mro__)) ((((unsupported)).apply ((xPedalo)) ((xPedalWheelBoat)) ((xEngineLess)) ((xSmallCatamaran)) ((xSmallMultihull)) ((xDayBoat)) ((xWheelBoat)) ((xBoat)) ((xobject)))))
                xtest_consistency_with_epg.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xPane)) ((xScrollingMixin)))
                        (((unsupported)).apply ((xPane)) ((xEditingMixin)))
                        (((unsupported)).apply ((xScrollablePane)) ((xEditablePane)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xEditableScrollablePane).x__mro__)) ((((unsupported)).apply ((xEditableScrollablePane)) ((xScrollablePane)) ((xEditablePane)) ((xPane)) ((xScrollingMixin)) ((xEditingMixin)) ((xobject)))))
                xtest_mro_disagreement.write
                  [xself]
                    memory > xraises
                    memory > xmro_err_msg
                    seq > @
                      seq
                        xmro_err_msg.write (((unsupported)).apply)
                        xraises.write
                          [xexc xexpected xcallable]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((xexc)))
                                  bogusForceDataize.write (((xcallable)).apply ((((unsupported)).apply ((xargs)))))
                                  ((((xsupport).xcheck_impl_detail)).apply).if
                                    (((((((xstr)).apply ((xmsg))).xstartswith)).apply ((xexpected))).not).if
                                      bogusForceDataize.write ((((xself).xfail)).apply (("Message %r, expected %r".mod (((unsupported)).apply ((((xstr)).apply ((xmsg)))) ((xexpected))))))
                                  bogusForceDataize.write ((((xself).xfail)).apply (("Expected %s".mod (xexc))))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xobject)))
                        bogusForceDataize.write (((xraises)).apply ((xTypeError)) ("duplicate base class A") ((xtype)) ("X") ((((unsupported)).apply ((xA)) ((xA)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xraises)).apply ((xTypeError)) ((xmro_err_msg)) ((xtype)) ("X") ((((unsupported)).apply ((xA)) ((xB)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xraises)).apply ((xTypeError)) ((xmro_err_msg)) ((xtype)) ("X") ((((unsupported)).apply ((xA)) ((xC)) ((xB)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xGridLayout)))
                        (((unsupported)).apply ((xGridLayout)))
                        (((unsupported)).apply ((xHorizontalGrid)) ((xVerticalGrid)))
                        (((unsupported)).apply ((xVerticalGrid)) ((xHorizontalGrid)))
                        bogusForceDataize.write (((xraises)).apply ((xTypeError)) ((xmro_err_msg)) ((xtype)) ("ConfusedGrid") ((((unsupported)).apply ((xHVGrid)) ((xVHGrid)))) ((((unsupported)).apply)))
                xtest_object_class.write
                  [xself]
                    memory > xx
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xobject)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x__class__)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((xa)))) ((xobject)))
                        xb.write (((xobject)).apply)
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xa)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("foo"))
                        (((unsupported)).apply ((((unsupported)).apply ((xAttributeError)) ((xTypeError)))))
                          (((unsupported)).apply (((xa).xfoo)) (12))
                          bogusForceDataize.write ((((xself).xfail)).apply ("object() should not allow setting a foo attribute"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((((xobject)).apply)) ("__dict__"))
                        (((unsupported)).apply ((xobject)))
                        xx.write (((xCdict)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).x__dict__)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xx).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).x__dict__)) ((((unsupported)).apply ("foo") (1))))
                xtest_object_class_assignment_between_heaptypes_and_nonheaptypes.write
                  [xself]
                    memory > x__slots__
                    memory > xm
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply (((xtypes).xModuleType)))
                          xa.write 1
                        xm.write ((((xtypes).xModuleType)).apply ("m"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xm).x__class__)) (((xtypes).xModuleType)))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xhasattr)).apply ((xm)) ("a"))))
                        (((unsupported)).apply (((xm).x__class__)) ((xSubType)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xm).x__class__)) ((xSubType)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xm)) ("a"))))
                        (((unsupported)).apply (((xm).x__class__)) (((xtypes).xModuleType)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xm).x__class__)) (((xtypes).xModuleType)))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xhasattr)).apply ((xm)) ("a"))))
                        (((unsupported)).apply ((xint)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((1.x__class__)) ((xMyInt)))
                        (((unsupported)).apply ((xfloat)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((1.0.x__class__)) ((xMyFloat)))
                        (((unsupported)).apply ((xcomplex)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((1.add (((unsupported)).apply)).x__class__)) ((xMyComplex)))
                        (((unsupported)).apply ((xstr)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (("a".x__class__)) ((xMyStr)))
                        (((unsupported)).apply ((xbytes)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (("a".x__class__)) ((xMyBytes)))
                        (((unsupported)).apply ((xtuple)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((((unsupported)).apply).x__class__)) ((xMyTuple)))
                        (((unsupported)).apply ((xfrozenset)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((((xfrozenset)).apply).x__class__)) ((xMyFrozenSet)))
                xtest_slots.write
                  [xself]
                    memory > xnew_objects
                    memory > xg
                    memory > xh
                    memory > xslots
                    memory > xorig_objects
                    memory > xs
                    memory > x__init__
                    memory > x__del__
                    memory > x__eq__
                    memory > xc
                    memory > xcounter
                    memory > xget
                    memory > xx
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply)
                        xx.write (((xC0)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("foo"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a"))
                        xx.write (((xC1)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("a"))
                        (((unsupported)).apply (((xx).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xa)) (1))
                        (((unsupported)).apply (((xx).xa)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xa)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((((unsupported)).apply (((xx).xa)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("a"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("b") ("c"))
                        xx.write (((xC3)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("a"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("b"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("c"))
                        (((unsupported)).apply (((xx).xa)) (1))
                        (((unsupported)).apply (((xx).xb)) (2))
                        (((unsupported)).apply (((xx).xc)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xb)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xc)) (3))
                        (((unsupported)).apply ((xobject)))
                          seq
                            unsupported
                            x__slots__.write (((unsupported)).apply ("__a"))
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply (((xself).x__a)) ((xvalue)))
                            xget.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__a)))
                        xx.write (((xC4)).apply (5))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xx)) ("__a"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xx).xget)).apply)) (5))
                        (((unsupported)).apply ((xAttributeError)))
                          (((unsupported)).apply (((xx).x__a)) (6))
                          bogusForceDataize.write ((((xself).xfail)).apply ("Double underscored names not mangled"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("[None] slots not caught"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply ("foo bar"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("['foo bar'] slots not caught"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply ("foo0bar"))
                          bogusForceDataize.write ((((xself).xfail)).apply ((((unsupported)).apply)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply ("1"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("['1'] slots not caught"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply (""))
                          bogusForceDataize.write ((((xself).xfail)).apply ("[''] slots not caught"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("a_b") ("_a") ("A0123456789Z"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write "abc"
                        xc.write (((xC)).apply)
                        (((unsupported)).apply (((xc).xabc)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xabc)) (5))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write "abc"
                        xc.write (((xC)).apply)
                        (((unsupported)).apply (((xc).xabc)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xabc)) (5))
                        xslots.write (((unsupported)).apply ("foo") ("bar"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (xslots)
                        xx.write (((xC)).apply)
                        (((unsupported)).apply (((xx).xfoo)) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xfoo)) (5))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((((unsupported)).apply ((xslots)) (0))))) ((xstr)))
                        (((unsupported)).apply ((((unsupported)).apply ((xTypeError)) ((xUnicodeEncodeError)))))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply ((((xchr)).apply (128))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("[chr(128)] slots not caught"))
                        (((unsupported)).apply ((xobject)))
                          seq
                            xcounter.write 0
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xCounted).xcounter)) (1))
                            x__del__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xCounted).xcounter)) (1))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("b") ("c"))
                        xx.write (((xC)).apply)
                        (((unsupported)).apply (((xx).xa)) ((((xCounted)).apply)))
                        (((unsupported)).apply (((xx).xb)) ((((xCounted)).apply)))
                        (((unsupported)).apply (((xx).xc)) ((((xCounted)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (3))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (0))
                        (((unsupported)).apply ((xC)))
                        xx.write (((xD)).apply)
                        (((unsupported)).apply (((xx).xa)) ((((xCounted)).apply)))
                        (((unsupported)).apply (((xx).xz)) ((((xCounted)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (2))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (0))
                        (((unsupported)).apply ((xD)))
                          x__slots__.write (((unsupported)).apply ("e"))
                        xx.write (((xE)).apply)
                        (((unsupported)).apply (((xx).xa)) ((((xCounted)).apply)))
                        (((unsupported)).apply (((xx).xz)) ((((xCounted)).apply)))
                        (((unsupported)).apply (((xx).xe)) ((((xCounted)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (3))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (0))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("b"))
                        xs.write (((xF)).apply)
                        (((unsupported)).apply (((xs).xa)) ((((unsupported)).apply ((((xCounted)).apply)) ((xs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (1))
                        xs.write "None: is there a None literal in the EO language?"
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xCounted).xcounter)) (0))
                        (((xhasattr)).apply ((xgc)) ("get_objects")).if
                          seq
                            (((unsupported)).apply ((xobject)))
                              x__eq__.write
                                [xself xother]
                                  seq > @
                                    (((unsupported)).apply (FALSE))
                            xg.write (((xG)).apply)
                            xorig_objects.write (((xlen)).apply (((((xgc).xget_objects)).apply)))
                            (((unsupported)).apply ((xi)) ((((xrange)).apply (10))))
                              unsupported
                            xnew_objects.write (((xlen)).apply (((((xgc).xget_objects)).apply)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xorig_objects)) ((xnew_objects)))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__slots__.write (((unsupported)).apply ("a") ("b"))
                            x__init__.write
                              [xself]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xa)) (1))
                                    (((unsupported)).apply (((xself).xb)) (2))
                            x__del__.write
                              [xself_]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((xself_).xa)) (1))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((xself_).xb)) (2))
                        (((unsupported)).apply (((((xsupport).xcaptured_output)).apply ("stderr"))) ((xs)))
                          seq
                            xh.write (((xH)).apply)
                            (((unsupported)).apply ((((unsupported)).apply ((xh)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xgetvalue)).apply)) (""))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write "a"
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xAttributeError)))))
                          (((unsupported)).apply ((((unsupported)).apply (((((xX)).apply).xa)))))
                xtest_slots_special.write
                  [xself]
                    memory > x__slots__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("__dict__"))
                        xa.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xa)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("__weakref__"))
                        (((unsupported)).apply (((xa).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x__dict__)) ((((unsupported)).apply ("foo") (42))))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("__weakref__"))
                        xa.write (((xW)).apply)
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xa)) ("__weakref__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("__dict__"))
                        (((unsupported)).apply ((xAttributeError)))
                          (((unsupported)).apply (((xa).xfoo)) (42))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't be allowed to set a.foo"))
                        (((unsupported)).apply ((xW)) ((xD)))
                          x__slots__.write (((unsupported)).apply)
                        xa.write (((xC1)).apply)
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xa)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xa)) ("__weakref__"))
                        (((unsupported)).apply (((xa).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x__dict__)) ((((unsupported)).apply ("foo") (42))))
                        (((unsupported)).apply ((xD)) ((xW)))
                          x__slots__.write (((unsupported)).apply)
                        xa.write (((xC2)).apply)
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xa)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xa)) ("__weakref__"))
                        (((unsupported)).apply (((xa).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x__dict__)) ((((unsupported)).apply ("foo") (42))))
                xtest_slots_special2.write
                  [xself]
                    memory > xc
                    memory > x__qualname__
                    memory > xq
                    memory > x__slots__
                    memory > x__init__
                    memory > x__new__
                    memory > x__classcell__
                    seq > @
                      seq
                        (((unsupported)).apply ((xtype)))
                          x__new__.write
                            [xcls xname xbases xnamespace xattr]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xself).xassertIn)).apply ((xattr)) ((xnamespace)))
                                  (((unsupported)).apply (((((((xsuper)).apply).x__new__)).apply ((xcls)) ((xname)) ((xbases)) ((xnamespace)))))
                        (((unsupported)).apply)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (((xself).xb)) (42))
                        (((unsupported)).apply ((xC1)) ((xMeta)) ("__classcell__"))
                          seq
                            x__slots__.write (((unsupported)).apply ("__classcell__"))
                            x__init__.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((unsupported)).apply (((xC2).x__dict__)) ("__classcell__"))) (((xtypes).xMemberDescriptorType)))
                        xc.write (((xC2)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xb)) (42))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xc)) ("__classcell__"))
                        (((unsupported)).apply (((xc).x__classcell__)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).x__classcell__)) (42))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply)
                            seq
                              x__classcell__.write 42
                              x__slots__.write (((unsupported)).apply ("__classcell__"))
                        (((unsupported)).apply ((xMeta)) ("__qualname__"))
                          x__slots__.write (((unsupported)).apply ("__qualname__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xQ1).x__qualname__)) (((((unsupported)).apply (((xC1).x__qualname__)) ((((unsupported)).apply ((2.neg))))).add "Q1")))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((unsupported)).apply (((xQ1).x__dict__)) ("__qualname__"))) (((xtypes).xMemberDescriptorType)))
                        xq.write (((xQ1)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xq)) ("__qualname__"))
                        (((unsupported)).apply (((xq).x__qualname__)) ("q"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xq).x__qualname__)) ("q"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply)
                            seq
                              x__qualname__.write (((xobject)).apply)
                              x__slots__.write (((unsupported)).apply ("__qualname__"))
                xtest_slots_descriptor.write
                  [xself]
                    memory > x__slots__
                    memory > xu
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xabc).xABCMeta)))
                          x__slots__.write "a"
                        (((unsupported)).apply ((xobject)))
                        bogusForceDataize.write ((((xMyABC).xregister)).apply ((xUnrelated)))
                        xu.write (((xUnrelated)).apply)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xu)) ((xMyABC)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((xMyABC).xa).x__set__)) ((xu)) (3))
                xtest_dynamics.write
                  [xself]
                    memory > xd
                    memory > xmysetattr
                    memory > xmygetattr
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xD)))
                        (((unsupported)).apply ((xD)))
                        (((unsupported)).apply (((xD).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xD).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xE).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xF).xfoo)) (1))
                        (((unsupported)).apply ((xobject)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("foobar"))
                        (((unsupported)).apply (((xC).xfoobar)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xfoobar)) (2))
                        (((unsupported)).apply (((xC).xmethod)) ((((unsupported)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xmethod)).apply)) (42))
                        (((unsupported)).apply (((xC).x__repr__)) ((((unsupported)).apply ("C()"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xa)))) ("C()"))
                        (((unsupported)).apply (((xC).x__int__)) ((((unsupported)).apply (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xa)))) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xfoobar)) (2))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("spam"))
                        xmygetattr.write
                          [xself xname]
                            seq > @
                              seq
                                ((xname).eq "spam").if
                                  (((unsupported)).apply ("spam"))
                                (((unsupported)).apply ((xAttributeError)))
                        (((unsupported)).apply (((xC).x__getattr__)) ((xmygetattr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xspam)) ("spam"))
                        (((unsupported)).apply (((xa).xnew)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xnew)) (12))
                        xmysetattr.write
                          [xself xname xvalue]
                            seq > @
                              seq
                                ((xname).eq "spam").if
                                  (((unsupported)).apply ((xAttributeError)))
                                (((unsupported)).apply (((((xobject).x__setattr__)).apply ((xself)) ((xname)) ((xvalue)))))
                        (((unsupported)).apply (((xC).x__setattr__)) ((xmysetattr)))
                        (((unsupported)).apply ((xAttributeError)))
                          (((unsupported)).apply (((xa).xspam)) ("not spam"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("expected AttributeError"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xspam)) ("spam"))
                        (((unsupported)).apply ((xC)))
                        xd.write (((xD)).apply)
                        (((unsupported)).apply (((xd).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (1))
                        (((unsupported)).apply ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (("a".mul (((xI)).apply (2)))) ("aa"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xI)).apply (2)).mul "a")) ("aa"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((2.mul (((xI)).apply (3)))) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xI)).apply (3)).mul 2)) (6))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xI)).apply (3)).mul (((xI)).apply (2)))) (6))
                        (((unsupported)).apply ((xtype)))
                        (((unsupported)).apply ((xdynamicmetaclass)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xsomeclass)) ((xobject)))
                xtest_errors.write
                  [xself]
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xlist)) ((xdict)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("inheritance from both list and dict should be illegal"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)) ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("inheritance from non-type should be illegal"))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((((xtype)).apply ((xlen)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("inheritance from CFunction should be illegal"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write 1
                          bogusForceDataize.write ((((xself).xfail)).apply ("__slots__ = 1 should be illegal"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xobject)))
                            x__slots__.write (((unsupported)).apply (1))
                          bogusForceDataize.write ((((xself).xfail)).apply ("__slots__ = [1] should be illegal"))
                        (((unsupported)).apply ((xtype)))
                        (((unsupported)).apply ((xtype)))
                        (((unsupported)).apply ((xobject)) ((xM1)))
                        (((unsupported)).apply ((xobject)) ((xM2)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xA1)) ((xA2)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("finding the most derived metaclass should have failed"))
                xtest_classmethods.write
                  [xself]
                    memory > xc
                    memory > xmeth
                    memory > xgoo
                    memory > xfoo
                    memory > xd
                    memory > xcm
                    memory > xf
                    memory > xff
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            xfoo.write
                              []
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xa)))
                            xgoo.write (((xclassmethod)).apply ((xfoo)))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC).xgoo)).apply (1))) ((((unsupported)).apply ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xgoo)).apply (1))) ((((unsupported)).apply ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xfoo)).apply (1))) ((((unsupported)).apply ((xc)) (1))))
                        (((unsupported)).apply ((xC)))
                        xd.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xgoo)).apply (1))) ((((unsupported)).apply ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xgoo)).apply (1))) ((((unsupported)).apply ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xfoo)).apply (1))) ((((unsupported)).apply ((xd)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xfoo)).apply ((xd)) (1))) ((((unsupported)).apply ((xd)) (1))))
                        xf.write
                          [xcls xarg]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply ((xcls)) ((xarg)))))
                        xff.write (((xclassmethod)).apply ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xff).x__get__)).apply (0) ((xint)))).apply (42))) ((((unsupported)).apply ((xint)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xff).x__get__)).apply (0))).apply (42))) ((((unsupported)).apply ((xint)) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC).xgoo).x__self__)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xD).xgoo).x__self__)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xsuper)).apply ((xD)) ((xD))).xgoo).x__self__)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xsuper)).apply ((xD)) ((xd))).xgoo).x__self__)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xsuper)).apply ((xD)) ((xD))).xgoo)).apply)) ((((unsupported)).apply ((xD)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xsuper)).apply ((xD)) ((xd))).xgoo)).apply)) ((((unsupported)).apply ((xD)))))
                        xmeth.write ((((((xclassmethod)).apply (1)).x__get__)).apply (1))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xmeth)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((xclassmethod)) ((xf)) (1))
                          bogusForceDataize.write ((((xself).xfail)).apply ("classmethod shouldn't accept keyword args"))
                        xcm.write (((xclassmethod)).apply ((xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xcm).x__dict__)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xcm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xcm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xcm).x__dict__)) ((((unsupported)).apply ("x") (42))))
                        (((unsupported)).apply ((((unsupported)).apply (((xcm).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xcm)) ("x"))
                xtest_refleaks_in_classmethod___init__.write
                  [xself]
                    memory > xcm
                    memory > xgettotalrefcount
                    memory > xrefs_before
                    seq > @
                      (((unsupported)).apply)
                        xgettotalrefcount.write ((((xsupport).xget_attribute)).apply ((xsys)) ("gettotalrefcount"))
                        xcm.write (((xclassmethod)).apply ("None: is there a None literal in the EO language?"))
                        xrefs_before.write (((xgettotalrefcount)).apply)
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (100))))
                          bogusForceDataize.write ((((xcm).x__init__)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xself).xassertAlmostEqual)) (((((xgettotalrefcount)).apply).sub (xrefs_before))) (0) (10))
                xtest_classmethods_in_c.write
                  [xself]
                    memory > xd
                    memory > xspam
                    memory > xspam_cm
                    memory > xexpected_errmsg
                    memory > xa
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xa.write (((unsupported)).apply (1) (2) (3))
                        xd.write (((unsupported)).apply ("abc") (123))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xa1)) ((xd1)))) ((((((xspam).xspamlist).xclassmeth)).apply ((((unsupported)).apply ((xa)))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) (((xspam).xspamlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((xd1)))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xa1)) ((xd1)))) ((((((((xspam).xspamlist)).apply).xclassmeth)).apply ((((unsupported)).apply ((xa)))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) (((xspam).xspamlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((xd1)))
                        xspam_cm.write (((unsupported)).apply ((((xspam).xspamlist).x__dict__)) ("classmeth"))
                        (((unsupported)).apply ((((unsupported)).apply ((xx2)) ((xa2)) ((xd2)))) ((((xspam_cm)).apply (((xspam).xspamlist)) ((((unsupported)).apply ((xa)))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx2)) (((xspam).xspamlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa2)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd2)) ((xd1)))
                        (((unsupported)).apply (((xspam).xspamlist)))
                        (((unsupported)).apply ((((unsupported)).apply ((xx2)) ((xa2)) ((xd2)))) ((((xspam_cm)).apply ((xSubSpam)) ((((unsupported)).apply ((xa)))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx2)) ((xSubSpam)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa2)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd2)) ((xd1)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xspam_cm)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xcm).xexception)))) ("descriptor 'classmeth' of 'xxsubtype.spamlist' object needs an argument"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xspam_cm)).apply (((((xspam).xspamlist)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xcm).xexception)))) ("descriptor 'classmeth' requires a type but received a 'xxsubtype.spamlist' instance"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xspam_cm)).apply ((xlist)))
                        xexpected_errmsg.write "descriptor 'classmeth' requires a subtype of 'xxsubtype.spamlist' but received 'list'"
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xcm).xexception)))) ((xexpected_errmsg)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((xspam_cm).x__get__)).apply ("None: is there a None literal in the EO language?") ((xlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xcm).xexception)))) ((xexpected_errmsg)))
                xtest_staticmethods.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xsm
                    memory > xgoo
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            xfoo.write
                              []
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xa)))
                            xgoo.write (((xstaticmethod)).apply ((xfoo)))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC).xgoo)).apply (1))) ((((unsupported)).apply (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xgoo)).apply (1))) ((((unsupported)).apply (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xfoo)).apply (1))) ((((unsupported)).apply ((xc)) (1))))
                        (((unsupported)).apply ((xC)))
                        xd.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xgoo)).apply (1))) ((((unsupported)).apply (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xgoo)).apply (1))) ((((unsupported)).apply (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xfoo)).apply (1))) ((((unsupported)).apply ((xd)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xfoo)).apply ((xd)) (1))) ((((unsupported)).apply ((xd)) (1))))
                        xsm.write (((xstaticmethod)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsm).x__dict__)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xsm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsm).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsm).x__dict__)) ((((unsupported)).apply ("x") (42))))
                        (((unsupported)).apply ((((unsupported)).apply (((xsm).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xsm)) ("x"))
                xtest_refleaks_in_staticmethod___init__.write
                  [xself]
                    memory > xsm
                    memory > xgettotalrefcount
                    memory > xrefs_before
                    seq > @
                      (((unsupported)).apply)
                        xgettotalrefcount.write ((((xsupport).xget_attribute)).apply ((xsys)) ("gettotalrefcount"))
                        xsm.write (((xstaticmethod)).apply ("None: is there a None literal in the EO language?"))
                        xrefs_before.write (((xgettotalrefcount)).apply)
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (100))))
                          bogusForceDataize.write ((((xsm).x__init__)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xself).xassertAlmostEqual)) (((((xgettotalrefcount)).apply).sub (xrefs_before))) (0) (10))
                xtest_staticmethods_in_c.write
                  [xself]
                    memory > xd
                    memory > xspam
                    memory > xa
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xa.write (((unsupported)).apply (1) (2) (3))
                        xd.write (((unsupported)).apply ("abc") (123))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xa1)) ((xd1)))) ((((((xspam).xspamlist).xstaticmeth)).apply ((((unsupported)).apply ((xa)))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((xd1)))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xa1)) ((xd2)))) ((((((((xspam).xspamlist)).apply).xstaticmeth)).apply ((((unsupported)).apply ((xa)))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xa1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((xd1)))
                xtest_classic.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xfoo
                    memory > xgoo
                    seq > @
                      seq
                        (((unsupported)).apply)
                          seq
                            xfoo.write
                              []
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xa)))
                            xgoo.write (((xclassmethod)).apply ((xfoo)))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC).xgoo)).apply (1))) ((((unsupported)).apply ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xgoo)).apply (1))) ((((unsupported)).apply ((xC)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc).xfoo)).apply (1))) ((((unsupported)).apply ((xc)) (1))))
                        (((unsupported)).apply ((xC)))
                        xd.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xgoo)).apply (1))) ((((unsupported)).apply ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xgoo)).apply (1))) ((((unsupported)).apply ((xD)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xfoo)).apply (1))) ((((unsupported)).apply ((xd)) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xfoo)).apply ((xd)) (1))) ((((unsupported)).apply ((xd)) (1))))
                        (((unsupported)).apply)
                          xfoo.write ((xC).xfoo)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xE)).apply).xfoo).x__func__)) (((xC).xfoo)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((xrepr)).apply ((((((xC).xfoo).x__get__)).apply ((((xC)).apply))))).xstartswith)).apply ("<bound method "))))
                xtest_compattr.write
                  [xself]
                    memory > x__set_x
                    memory > x__get__
                    memory > x__init__
                    memory > x__get_x
                    memory > x__delete__
                    memory > xa
                    memory > xx
                    memory > x__delete_x
                    memory > x__set__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            (((unsupported)).apply ((xobject)))
                              seq
                                x__init__.write
                                  [xself xget xset xdelete]
                                    seq > @
                                      (((unsupported)).apply)
                                        (((unsupported)).apply (((xself).x__get)) ((xget)))
                                        (((unsupported)).apply (((xself).x__set)) ((xset)))
                                        (((unsupported)).apply (((xself).x__delete)) ((xdelete)))
                                x__get__.write
                                  [xself xobj xtype]
                                    seq > @
                                      (((unsupported)).apply)
                                        (((unsupported)).apply (((((xself).x__get)).apply ((xobj)))))
                                x__set__.write
                                  [xself xobj xvalue]
                                    seq > @
                                      (((unsupported)).apply (((((xself).x__set)).apply ((xobj)) ((xvalue)))))
                                x__delete__.write
                                  [xself xobj]
                                    seq > @
                                      (((unsupported)).apply (((((xself).x__delete)).apply ((xobj)))))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__x)) (0))
                            x__get_x.write
                              [xself]
                                memory > xx
                                seq > @
                                  seq
                                    xx.write ((xself).x__x)
                                    (((unsupported)).apply (((xself).x__x)) (((xx).add 1)))
                                    (((unsupported)).apply ((xx)))
                            x__set_x.write
                              [xself xx]
                                seq > @
                                  (((unsupported)).apply (((xself).x__x)) ((xx)))
                            x__delete_x.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply (((xself).x__x)))))
                            xx.write (((xcomputed_attribute)).apply ((x__get_x)) ((x__set_x)) ((x__delete_x)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xx)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xx)) (1))
                        (((unsupported)).apply (((xa).xx)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xx)) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xx)) (11))
                        (((unsupported)).apply ((((unsupported)).apply (((xa).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("x"))
                xtest_newslots.write
                  [xself]
                    memory > x__new__
                    memory > xa
                    memory > x__init__
                    memory > xb
                    seq > @
                      seq
                        (((unsupported)).apply ((xlist)))
                          seq
                            x__new__.write
                              [xcls]
                                memory > xself
                                seq > @
                                  seq
                                    xself.write ((((xlist).x__new__)).apply ((xcls)))
                                    (((unsupported)).apply (((xself).xfoo)) (1))
                                    (((unsupported)).apply ((xself)))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).xfoo)) ((((xself).xfoo).add 2)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x__class__)) ((xC)))
                        (((unsupported)).apply ((xC)))
                        xb.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).x__class__)) ((xD)))
                xtest_bad_new.write
                  [xself]
                    memory > x__new__
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__new__)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__new__)) (""))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xlist).x__new__)) ((xobject)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__new__)) ((xlist)))
                        (((unsupported)).apply ((xobject)))
                          x__new__.write ((xlist).x__new__)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xC)))
                        (((unsupported)).apply ((xlist)))
                          x__new__.write ((xobject).x__new__)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xC)))
                xtest_object_new.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        bogusForceDataize.write ((((xobject).x__new__)).apply ((xA)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)).apply ((((xA)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__init__)) ((((xA)).apply)) (5))
                        (((unsupported)).apply ((xobject)))
                          x__init__.write
                            [xself xfoo]
                              seq > @
                                (((unsupported)).apply (((xself).xfoo)) ((xfoo)))
                        bogusForceDataize.write ((((xobject).x__new__)).apply ((xA)))
                        bogusForceDataize.write ((((xobject).x__new__)).apply ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)).apply ((((xA)).apply (3))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__init__)) ((((xA)).apply (3))) (5))
                        (((unsupported)).apply ((xobject)))
                          x__new__.write
                            [xcls xfoo]
                              seq > @
                                (((unsupported)).apply (((((xobject).x__new__)).apply ((xcls)))))
                        bogusForceDataize.write ((((xobject).x__new__)).apply ((xA)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)).apply ((((xA)).apply (3))))
                        bogusForceDataize.write ((((xobject).x__init__)).apply ((((xA)).apply (3))) (5))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__new__.write
                              [xcls xfoo]
                                seq > @
                                  (((unsupported)).apply (((((xobject).x__new__)).apply ((xcls)))))
                            x__init__.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)).apply (((xself).xfoo)) ((xfoo)))
                        bogusForceDataize.write ((((xobject).x__new__)).apply ((xA)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__new__)) ((xA)) (5))
                        bogusForceDataize.write ((((xobject).x__init__)).apply ((((xA)).apply (3))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xobject).x__init__)) ((((xA)).apply (3))) (5))
                xtest_restored_object_new.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    memory > xb
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xobject)))
                          x__new__.write
                            [xcls]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply ((xAssertionError)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAssertionError)) ((xA)))
                        (((unsupported)).apply ((xA)))
                          seq
                            x__new__.write ((xobject).x__new__)
                            x__init__.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)).apply (((xself).xfoo)) ((xfoo)))
                        (((unsupported)).apply (((((xwarnings).xcatch_warnings)).apply)))
                          seq
                            bogusForceDataize.write ((((xwarnings).xsimplefilter)).apply ("error") ((xDeprecationWarning)))
                            xb.write (((xB)).apply (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).x__class__)) ((xB)))
                        (((unsupported)).apply ((((unsupported)).apply (((xB).x__new__)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAssertionError)) ((xB)))
                        (((unsupported)).apply ((((unsupported)).apply (((xA).x__new__)))))
                        (((unsupported)).apply (((((xwarnings).xcatch_warnings)).apply)))
                          seq
                            bogusForceDataize.write ((((xwarnings).xsimplefilter)).apply ("error") ((xDeprecationWarning)))
                            xb.write (((xB)).apply (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).xfoo)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).x__class__)) ((xB)))
                xtest_altmro.write
                  [xself]
                    memory > xx
                    memory > xmro
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("A"))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("C"))
                        (((unsupported)).apply ((xB)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xA).xmro)).apply)) ((((unsupported)).apply ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xA).x__mro__)) ((((unsupported)).apply ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xB).xmro)).apply)) ((((unsupported)).apply ((xB)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xB).x__mro__)) ((((unsupported)).apply ((xB)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC).xmro)).apply)) ((((unsupported)).apply ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).x__mro__)) ((((unsupported)).apply ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xD).xmro)).apply)) ((((unsupported)).apply ((xD)) ((xB)) ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xD).x__mro__)) ((((unsupported)).apply ((xD)) ((xB)) ((xC)) ((xA)) ((xobject)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xD)).apply).xf)).apply)) ("C"))
                        (((unsupported)).apply ((xtype)))
                          xmro.write
                            [xcls]
                              memory > xL
                              seq > @
                                seq
                                  xL.write ((((xtype).xmro)).apply ((xcls)))
                                  bogusForceDataize.write ((((xL).xreverse)).apply)
                                  (((unsupported)).apply ((xL)))
                        (((unsupported)).apply ((xD)) ((xB)) ((xC)) ((xA)) ((xPerverseMetaType)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xX).x__mro__)) ((((unsupported)).apply ((xobject)) ((xA)) ((xC)) ((xB)) ((xD)) ((xX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xX)).apply).xf)).apply)) ("A"))
                        (((unsupported)).apply ((xTypeError)))
                          seq
                            (((unsupported)).apply ((xtype)))
                              xmro.write
                                [xself]
                                  seq > @
                                    (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xdict)) ((xobject)))))
                            (((unsupported)).apply ((xobject)) ((x_metaclass)))
                            xx.write ((((xobject).x__new__)).apply ((xX)))
                            (((unsupported)).apply ((((unsupported)).apply ((xx)) (5))) (6))
                          bogusForceDataize.write ((((xself).xfail)).apply ("devious mro() return not caught"))
                        (((unsupported)).apply ((xTypeError)))
                          seq
                            (((unsupported)).apply ((xtype)))
                              xmro.write
                                [xself]
                                  seq > @
                                    (((unsupported)).apply ((((unsupported)).apply (1))))
                            (((unsupported)).apply ((xobject)) ((x_metaclass)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("non-class mro() return not caught"))
                        (((unsupported)).apply ((xTypeError)))
                          seq
                            (((unsupported)).apply ((xtype)))
                              xmro.write
                                [xself]
                                  seq > @
                                    (((unsupported)).apply (1))
                            (((unsupported)).apply ((xobject)) ((x_metaclass)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("non-sequence mro() return not caught"))
                xtest_overloading.write
                  [xself]
                    memory > x__getattr__
                    memory > x__getitem__
                    memory > x__delitem__
                    memory > x__delattr__
                    memory > x__setitem__
                    memory > x__setattr__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          unsupported
                        (((unsupported)).apply ((xB)))
                          seq
                            x__getattr__.write
                              [xself xname]
                                seq > @
                                  ((xname).eq "foo").if
                                    (((unsupported)).apply ((((unsupported)).apply ("getattr") ((xname)))))
                                    (((unsupported)).apply ((xAttributeError)))
                            x__setattr__.write
                              [xself xname xvalue]
                                seq > @
                                  ((xname).eq "foo").if
                                    (((unsupported)).apply (((xself).xsetattr)) ((((unsupported)).apply ((xname)) ((xvalue)))))
                                    (((unsupported)).apply (((((xB).x__setattr__)).apply ((xself)) ((xname)) ((xvalue)))))
                            x__delattr__.write
                              [xself xname]
                                seq > @
                                  ((xname).eq "foo").if
                                    (((unsupported)).apply (((xself).xdelattr)) ((xname)))
                                    (((unsupported)).apply (((((xB).x__delattr__)).apply ((xself)) ((xname)))))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply ("getitem") ((xkey)))))
                            x__setitem__.write
                              [xself xkey xvalue]
                                seq > @
                                  (((unsupported)).apply (((xself).xsetitem)) ((((unsupported)).apply ((xkey)) ((xvalue)))))
                            x__delitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)).apply (((xself).xdelitem)) ((xkey)))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xfoo)) ((((unsupported)).apply ("getattr") ("foo"))))
                        (((unsupported)).apply (((xa).xfoo)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xsetattr)) ((((unsupported)).apply ("foo") (12))))
                        (((unsupported)).apply ((((unsupported)).apply (((xa).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xdelattr)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (12))) ((((unsupported)).apply ("getitem") (12))))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) (12))) (21))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xsetitem)) ((((unsupported)).apply (12) (21))))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xa)) (12))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xdelitem)) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (0) (10))))) ((((unsupported)).apply ("getitem") ((((xslice)).apply (0) (10))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (0) (10))))) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xsetitem)) ((((unsupported)).apply ((((xslice)).apply (0) (10))) ("foo"))))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (0) (10))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xdelitem)) ((((xslice)).apply (0) (10))))
                xtest_methods.write
                  [xself]
                    memory > xd2
                    memory > xboo
                    memory > xgoo
                    memory > x__init__
                    memory > xfoo
                    memory > xc1
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)).apply (((xself).xx)) ((xx)))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).xx)))
                        xc1.write (((xC)).apply (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xc1).xfoo)).apply)) (1))
                        (((unsupported)).apply ((xC)))
                          seq
                            xboo.write ((xC).xfoo)
                            xgoo.write ((xc1).xfoo)
                        xd2.write (((xD)).apply (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd2).xfoo)).apply)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd2).xboo)).apply)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd2).xgoo)).apply)) (1))
                        (((unsupported)).apply ((xobject)))
                          xfoo.write ((xC).xfoo)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xE)).apply).xfoo).x__func__)) (((xC).xfoo)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((xrepr)).apply ((((((xC).xfoo).x__get__)).apply ((((xC)).apply (1)))))).xstartswith)).apply ("<bound method "))))
                xtest_methods_in_c.write
                  [xself]
                    memory > xexpected_errmsg
                    memory > xset_add
                    seq > @
                      (((unsupported)).apply)
                        xset_add.write ((xset).xadd)
                        xexpected_errmsg.write "descriptor 'add' of 'set' object needs an argument"
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xset_add)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) ((xexpected_errmsg)))
                        xexpected_errmsg.write "descriptor 'add' for 'set' objects doesn't apply to a 'int' object"
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write (((xset_add)).apply (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) ((xexpected_errmsg)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((xset_add).x__get__)).apply (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) ((xexpected_errmsg)))
                xtest_special_method_lookup.write
                  [xself]
                    memory > x__getattr__
                    memory > xswallow
                    memory > xformat_impl
                    memory > xstop
                    memory > xspecials
                    memory > xsome_number
                    memory > xdo_issubclass
                    memory > x__init__
                    memory > xiden
                    memory > xrun_context
                    memory > xempty_seq
                    memory > x__getattribute__
                    memory > xrecord
                    memory > xdo_isinstance
                    memory > xreturn_false
                    memory > xcomplex_num
                    memory > xhello
                    memory > x__get__
                    memory > xdo_dict_missing
                    memory > xzero
                    seq > @
                      seq
                        xrun_context.write
                          [xmanager]
                            seq > @
                              (((unsupported)).apply ((xmanager)))
                        xiden.write
                          [xself]
                            seq > @
                              (((unsupported)).apply ((xself)))
                        xhello.write
                          [xself]
                            seq > @
                              (((unsupported)).apply ("hello"))
                        xempty_seq.write
                          [xself]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply)))
                        xzero.write
                          [xself]
                            seq > @
                              (((unsupported)).apply (0))
                        xcomplex_num.write
                          [xself]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply)))
                        xstop.write
                          [xself]
                            seq > @
                              (((unsupported)).apply ((xStopIteration)))
                        xreturn_false.write
                          [xself xthing]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply (TRUE))
                        xdo_isinstance.write
                          [xobj]
                            seq > @
                              (((unsupported)).apply ((((xisinstance)).apply ((xint)) ((xobj)))))
                        xdo_issubclass.write
                          [xobj]
                            seq > @
                              (((unsupported)).apply ((((xissubclass)).apply ((xint)) ((xobj)))))
                        xdo_dict_missing.write
                          [xchecker]
                            seq > @
                              seq
                                (((unsupported)).apply (((xchecker).x__class__)) ((xdict)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xDictSub)).apply)) ("hi"))) (4))
                        xsome_number.write
                          [xself_ xkey]
                            seq > @
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkey)) ("hi"))
                                (((unsupported)).apply (4))
                        xswallow.write
                          []
                            seq > @
                              (((unsupported)).apply)
                        xformat_impl.write
                          [xself xspec]
                            seq > @
                              (((unsupported)).apply ("hello"))
                        xspecials.write (((unsupported)).apply ((((unsupported)).apply ("__bytes__") ((xbytes)) ((xhello)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__reversed__") ((xreversed)) ((xempty_seq)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__length_hint__") ((xlist)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply ("__iter__") ((xiden)) ("__next__") ((xstop)))))) ((((unsupported)).apply ("__sizeof__") (((xsys).xgetsizeof)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__instancecheck__") ((xdo_isinstance)) ((xreturn_false)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__missing__") ((xdo_dict_missing)) ((xsome_number)) ((((xset)).apply ((((unsupported)).apply ("__class__"))))) ((((unsupported)).apply)))) ((((unsupported)).apply ("__subclasscheck__") ((xdo_issubclass)) ((xreturn_false)) ((((xset)).apply ((((unsupported)).apply ("__bases__"))))) ((((unsupported)).apply)))) ((((unsupported)).apply ("__enter__") ((xrun_context)) ((xiden)) ((((xset)).apply)) ((((unsupported)).apply ("__exit__") ((xswallow)))))) ((((unsupported)).apply ("__exit__") ((xrun_context)) ((xswallow)) ((((xset)).apply)) ((((unsupported)).apply ("__enter__") ((xiden)))))) ((((unsupported)).apply ("__complex__") ((xcomplex)) ((xcomplex_num)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__format__") ((xformat)) ((xformat_impl)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__floor__") (((xmath).xfloor)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__trunc__") (((xmath).xtrunc)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__trunc__") ((xint)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__ceil__") (((xmath).xceil)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__dir__") ((xdir)) ((xempty_seq)) ((((xset)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ("__round__") ((xround)) ((xzero)) ((((xset)).apply)) ((((unsupported)).apply)))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__getattr__.write
                              [xself xattr xtest]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((xtest).xfail)).apply (((("__getattr__ called with {0}".xformat)).apply ((xattr)))))
                            x__getattribute__.write
                              [xself xattr xtest]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xattr)) ((xok))).if
                                      bogusForceDataize.write ((((xtest).xfail)).apply (((("__getattribute__ called with {0}".xformat)).apply ((xattr)))))
                                    (((unsupported)).apply (((((xobject).x__getattribute__)).apply ((xself)) ((xattr)))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself ximpl]
                                seq > @
                                  (((unsupported)).apply (((xself).ximpl)) ((ximpl)))
                            x__get__.write
                              [xself xobj xowner]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xrecord).xappend)).apply (1))
                                    (((unsupported)).apply ((((((xself).ximpl).x__get__)).apply ((xobj)) ((xowner)))))
                        (((unsupported)).apply ((xException)))
                        (((unsupported)).apply ((xobject)))
                          x__get__.write
                            [xself xobj xowner]
                              seq > @
                                (((unsupported)).apply ((xMyException)))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xrunner)) ((xmeth_impl)) ((xok)) ((xenv)))) ((xspecials)))
                          seq
                            (((unsupported)).apply ((xChecker)))
                            (((unsupported)).apply ((((unsupported)).apply ((xattr)) ((xobj)))) (((((xenv).xitems)).apply)))
                              bogusForceDataize.write (((xsetattr)).apply ((xX)) ((xattr)) ((xobj)))
                            bogusForceDataize.write (((xsetattr)).apply ((xX)) ((xname)) ((xmeth_impl)))
                            bogusForceDataize.write (((xrunner)).apply ((((xX)).apply)))
                            xrecord.write (((unsupported)).apply)
                            (((unsupported)).apply ((xChecker)))
                            (((unsupported)).apply ((((unsupported)).apply ((xattr)) ((xobj)))) (((((xenv).xitems)).apply)))
                              bogusForceDataize.write (((xsetattr)).apply ((xX)) ((xattr)) ((xobj)))
                            bogusForceDataize.write (((xsetattr)).apply ((xX)) ((xname)) ((((xSpecialDescr)).apply ((xmeth_impl)))))
                            bogusForceDataize.write (((xrunner)).apply ((((xX)).apply)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xrecord)) ((((unsupported)).apply (1))) ((xname)))
                            (((unsupported)).apply ((xChecker)))
                            (((unsupported)).apply ((((unsupported)).apply ((xattr)) ((xobj)))) (((((xenv).xitems)).apply)))
                              bogusForceDataize.write (((xsetattr)).apply ((xX)) ((xattr)) ((xobj)))
                            bogusForceDataize.write (((xsetattr)).apply ((xX)) ((xname)) ((((xErrDescr)).apply)))
                            bogusForceDataize.write ((((xself).xassertRaises)).apply ((xMyException)) ((xrunner)) ((((xX)).apply)))
                xtest_specials.write
                  [xself]
                    memory > x__str__
                    memory > x__contains__
                    memory > x__getitem__
                    memory > x__ne__
                    memory > x__gt__
                    memory > xd1
                    memory > xp0
                    memory > x__init__
                    memory > x__hash__
                    memory > x__bool__
                    memory > x__eq__
                    memory > x__repr__
                    memory > xp_1
                    memory > xd2
                    memory > xc2
                    memory > x__le__
                    memory > x__lt__
                    memory > xc1
                    memory > xp10
                    memory > xp1
                    memory > x__ge__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  (((unsupported)).apply (0) ((xi)) (10)).if
                                    (((unsupported)).apply ((xi)))
                                  (((unsupported)).apply ((xIndexError)))
                        xc1.write (((xC)).apply)
                        xc2.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xc1).not)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xid)).apply ((xc1)))) ((((xid)).apply ((xc2)))))
                        bogusForceDataize.write (((xhash)).apply ((xc1)))
                        bogusForceDataize.write (((xhash)).apply ((xc2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xc1)) ((xc1)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xc1).neq (xc2))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xc1).neq (xc1))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xc1).eq (xc2))))
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)).apply (((((((xstr)).apply ((xc1))).xfind)).apply ("C object at "))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xc1)))) ((((xrepr)).apply ((xc1)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ((1.neg)) ((xc1)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (10))))
                          bogusForceDataize.write ((((xself).xassertIn)).apply ((xi)) ((xc1)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply (10) ((xc1)))
                        (((unsupported)).apply ((xobject)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                seq
                                  (((unsupported)).apply (0) ((xi)) (10)).if
                                    (((unsupported)).apply ((xi)))
                                  (((unsupported)).apply ((xIndexError)))
                        xd1.write (((xD)).apply)
                        xd2.write (((xD)).apply)
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xd1).not)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xid)).apply ((xd1)))) ((((xid)).apply ((xd2)))))
                        bogusForceDataize.write (((xhash)).apply ((xd1)))
                        bogusForceDataize.write (((xhash)).apply ((xd2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd1)) ((xd1)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xd1)) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xd1).neq (xd1))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xd1).eq (xd2))))
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)).apply (((((((xstr)).apply ((xd1))).xfind)).apply ("D object at "))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xd1)))) ((((xrepr)).apply ((xd1)))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ((1.neg)) ((xd1)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (10))))
                          bogusForceDataize.write ((((xself).xassertIn)).apply ((xi)) ((xd1)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply (10) ((xd1)))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)).apply (((xself).xx)) ((xx)))
                            x__bool__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((((xself).xx).not).not)))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xhash)).apply (((xself).xx)))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xself).xx).eq (xother))))
                            x__ne__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xself).xx).neq (xother))))
                            x__ge__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xself).xx).geq (xother))))
                            x__gt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xself).xx).greater (xother))))
                            x__le__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xself).xx).leq (xother))))
                            x__lt__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xself).xx).less (xother))))
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("Proxy:%s".mod ((xself).xx))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("Proxy(%r)".mod ((xself).xx))))
                            x__contains__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply ((xvalue)) (((xself).xx)))))
                        xp0.write (((xProxy)).apply (0))
                        xp1.write (((xProxy)).apply (1))
                        xp_1.write (((xProxy)).apply ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((xp0)))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xp1).not)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xp0)))) ((((xhash)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xp0)) ((xp0)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xp0)) ((xp1)))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xp0).neq (xp0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp0).not)) ((xp1)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xp0).less (xp1))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xp0).leq (xp1))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xp1).greater (xp0))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xp1).geq (xp0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xp0)))) ("Proxy:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xp0)))) ("Proxy(0)"))
                        xp10.write (((xProxy)).apply ((((xrange)).apply (10))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ((1.neg)) ((xp10)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (10))))
                          bogusForceDataize.write ((((xself).xassertIn)).apply ((xi)) ((xp10)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply (10) ((xp10)))
                xtest_weakrefs.write
                  [xself]
                    memory > xc
                    memory > x__slots__
                    memory > xno
                    memory > xyes
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xobject)))
                        xc.write (((xC)).apply)
                        xr.write ((((xweakref).xref)).apply ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xr)).apply)) ((xc)))
                        (((unsupported)).apply ((((unsupported)).apply ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xr)).apply)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((((unsupported)).apply ((xr)))))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("foo"))
                        xno.write (((xNoWeak)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xweakref).xref)).apply ((xno)))
                          bogusForceDataize.write ((((xself).xassertIn)).apply ("weak reference") ((((xstr)).apply ((xmsg)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("weakref.ref(no) should be illegal"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("foo") ("__weakref__"))
                        xyes.write (((xWeak)).apply)
                        xr.write ((((xweakref).xref)).apply ((xyes)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xr)).apply)) ((xyes)))
                        (((unsupported)).apply ((((unsupported)).apply ((xyes)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xr)).apply)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((((unsupported)).apply ((xr)))))
                xtest_properties.write
                  [xself]
                    memory > xdelx
                    memory > x__getitem__
                    memory > xgetx
                    memory > xraw
                    memory > xsetx
                    memory > xx
                    memory > xa
                    memory > xd
                    memory > xattrs
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            xgetx.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__x)))
                            xsetx.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply (((xself).x__x)) ((xvalue)))
                            xdelx.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply (((xself).x__x)))))
                            xx.write (((unsupported)).apply ((xproperty)) ((xgetx)) ((xsetx)) ((xdelx)) ("I'm the x property."))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("x"))
                        (((unsupported)).apply (((xa).xx)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x_C__x)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xx)) (42))
                        (((unsupported)).apply ((((unsupported)).apply (((xa).xx)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("x"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("_C__x"))
                        bogusForceDataize.write (((((xC).xx).x__set__)).apply ((xa)) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xC).xx).x__get__)).apply ((xa)))) (100))
                        bogusForceDataize.write (((((xC).xx).x__delete__)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xa)) ("x"))
                        xraw.write (((unsupported)).apply (((xC).x__dict__)) ("x"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xraw)) ((xproperty)))
                        xattrs.write (((xdir)).apply ((xraw)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("__doc__") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("fget") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("fset") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("fdel") ((xattrs)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xraw).x__doc__)) ("I'm the x property."))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xraw).xfget)) ((((unsupported)).apply (((xC).x__dict__)) ("getx"))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xraw).xfset)) ((((unsupported)).apply (((xC).x__dict__)) ("setx"))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xraw).xfdel)) ((((unsupported)).apply (((xC).x__dict__)) ("delx"))))
                        (((unsupported)).apply ((xattr)) ((((unsupported)).apply ("fget") ("fset") ("fdel"))))
                          (((unsupported)).apply ((xAttributeError)))
                            bogusForceDataize.write (((xsetattr)).apply ((xraw)) ((xattr)) (42))
                            (((((((xstr)).apply ((xmsg))).xfind)).apply ("readonly")).less 0).if
                              bogusForceDataize.write ((((xself).xfail)).apply (("when setting readonly attr %r on a property, got unexpected AttributeError msg %r".mod (((unsupported)).apply ((xattr)) ((((xstr)).apply ((xmsg))))))))
                            bogusForceDataize.write ((((xself).xfail)).apply (("expected AttributeError from trying to set readonly %r attr on a property".mod (xattr))))
                        (((unsupported)).apply (((xraw).x__doc__)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xraw).x__doc__)) (42))
                        (((unsupported)).apply ((xobject)))
                          x__getitem__.write (((xproperty)).apply ((((unsupported)).apply ((1.div 0)))))
                        xd.write (((xD)).apply)
                        (((unsupported)).apply ((xZeroDivisionError)))
                          (((unsupported)).apply ((xi)) ((xd)))
                            bogusForceDataize.write (((xstr)).apply ((xi)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("expected ZeroDivisionError from bad property"))
                xtest_properties_doc_attrib.write
                  [xself]
                    memory > xgetter
                    memory > xsetter
                    memory > xprop2
                    memory > xprop
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xobject)))
                          seq
                            xgetter.write
                              [xself]
                                seq > @
                                  seq
                                    unsupported
                                    (((unsupported)).apply (0))
                            xsetter.write
                              [xself_ xvalue]
                                seq > @
                                  seq
                                    unsupported
                            xprop.write (((xproperty)).apply ((xgetter)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xprop).x__doc__)) ("getter method"))
                            xprop2.write (((unsupported)).apply ((xproperty)) ((xsetter)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xprop2).x__doc__)) ("None: is there a None literal in the EO language?"))
                xtest_testcapi_no_segfault.write
                  [xself]
                    memory > xp
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xImportError)))
                          (((unsupported)).apply)
                          (((unsupported)).apply ((xobject)))
                            xp.write (((xproperty)).apply (((x_testcapi).xtest_with_docstring)))
                xtest_properties_plus.write
                  [xself]
                    memory > xd
                    memory > xc
                    memory > xf
                    memory > xe
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            xfoo.write (((unsupported)).apply ((xproperty)) ("hello"))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).x_foo)))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).x_foo)) ((((xabs)).apply ((xvalue)))))
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply (((xself).x_foo)))))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC).xfoo).x__doc__)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xc)) ("foo"))
                        (((unsupported)).apply (((xc).xfoo)) ((42.neg)))
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xc)) ("_foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).x_foo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xfoo)) (42))
                        (((unsupported)).apply ((((unsupported)).apply (((xc).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xc)) ("_foo"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xc)) ("foo"))
                        (((unsupported)).apply ((xC)))
                          xfoo.write
                            [xself]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply ((xAttributeError)))
                                    (((unsupported)).apply ((((unsupported)).apply (((xself).x_foo)))))
                        xd.write (((xD)).apply)
                        (((unsupported)).apply (((xd).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (24))
                        (((unsupported)).apply ((((unsupported)).apply (((xd).xfoo)))))
                        (((unsupported)).apply ((((unsupported)).apply (((xd).xfoo)))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).x_foo)))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xRuntimeError)))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).x_foo)) ((((xabs)).apply ((xvalue)))))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply (((xself).x_foo)))))
                        xe.write (((xE)).apply)
                        (((unsupported)).apply (((xe).xfoo)) ((42.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xe).xfoo)) (42))
                        (((unsupported)).apply ((((unsupported)).apply (((xe).xfoo)))))
                        (((unsupported)).apply ((xE)))
                          seq
                            xfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply (((xself).x_foo)))))
                            xfoo.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).x_foo)) ((((xmax)).apply (0) ((xvalue)))))
                        xf.write (((xF)).apply)
                        (((unsupported)).apply (((xf).xfoo)) ((10.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xf).xfoo)) (0))
                        (((unsupported)).apply ((((unsupported)).apply (((xf).xfoo)))))
                xtest_dict_constructors.write
                  [xself]
                    memory > xdict
                    memory > xd
                    memory > x__init__
                    memory > x__iter__
                    seq > @
                      seq
                        xd.write (((xdict)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply)))
                        xd.write (((xdict)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply)))
                        xd.write (((xdict)).apply ((((unsupported)).apply (1) (2) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply (1) (2) ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((xdict)).apply ((((xlist)).apply (((((xd).xitems)).apply)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((xdict)).apply ((((xiter)).apply (((((xd).xitems)).apply)))))))
                        xd.write (((xdict)).apply ((((unsupported)).apply ("one") (1) ("two") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply ((xdict)) (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((xdict)).apply ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply ((xdict)) ((((unsupported)).apply ("one") (1))) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply ((xdict)) ((((unsupported)).apply ((((unsupported)).apply ("two") (2))))) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((xdict)).apply ((((unsupported)).apply ((((unsupported)).apply ("one") (100))) ((((unsupported)).apply ("two") (200))))) ((((unsupported)).apply ((xd)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((xdict)).apply ((((unsupported)).apply ((xd)))))))
                        (((unsupported)).apply ((xbadarg)) ((((unsupported)).apply (0) (0) ((((unsupported)).apply)) ("0") ((((unsupported)).apply (0))) ((((unsupported)).apply (0))))))
                          (((unsupported)).apply ((xTypeError)) ((xValueError)))
                            bogusForceDataize.write (((xdict)).apply ((xbadarg)))
                            ((xbadarg).eq "0").if
                              bogusForceDataize.write ((((xself).xfail)).apply (("no TypeError from dict(%r)".mod (xbadarg))))
                            bogusForceDataize.write ((((xself).xfail)).apply (("no TypeError from dict(%r)".mod (xbadarg))))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xdict)).apply ((((unsupported)).apply)) ((((unsupported)).apply)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("no TypeError from dict({}, {})"))
                        (((unsupported)).apply)
                          xdict.write (((unsupported)).apply (1) (2) (3) (4) ("a") ((((unsupported)).apply)))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xdict)).apply ((((xMapping)).apply)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("no TypeError from dict(incomplete mapping)"))
                        (((unsupported)).apply (((xMapping).xkeys)) ((((unsupported)).apply ((((xlist)).apply ((((((xself).xdict).xkeys)).apply)))))))
                        (((unsupported)).apply (((xMapping).x__getitem__)) ((((unsupported)).apply ((((unsupported)).apply (((xself).xdict)) ((xi)))))))
                        xd.write (((xdict)).apply ((((xMapping)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) (((xMapping).xdict)))
                        (((unsupported)).apply)
                          seq
                            x__init__.write
                              [xself xfirst xlast]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xfirst)) ((xfirst)))
                                    (((unsupported)).apply (((xself).xlast)) ((xlast)))
                            x__iter__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xiter)).apply ((((unsupported)).apply (((xself).xfirst)) (((xself).xlast)))))))
                        xd.write (((xdict)).apply ((((unsupported)).apply ((((xAddressBookEntry)).apply ("Tim") ("Warsaw"))) ((((xAddressBookEntry)).apply ("Barry") ("Peters"))) ((((xAddressBookEntry)).apply ("Tim") ("Peters"))) ((((xAddressBookEntry)).apply ("Barry") ("Warsaw"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((unsupported)).apply ("Barry") ("Warsaw") ("Tim") ("Peters"))))
                        xd.write (((xdict)).apply ((((xzip)).apply ((((xrange)).apply (4))) ((((xrange)).apply (1) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xd)) ((((xdict)).apply ((((unsupported)).apply ((((unsupported)).apply ((xi)) (((xi).add 1)))) ((xi)) ((((xrange)).apply (4))))))))
                        (((unsupported)).apply ((xbad)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ("tooshort"))))) ((((unsupported)).apply ((((unsupported)).apply ("too") ("long") ("by 1"))))))))
                          (((unsupported)).apply ((xValueError)))
                            bogusForceDataize.write (((xdict)).apply ((xbad)))
                            bogusForceDataize.write ((((xself).xfail)).apply (("no ValueError from dict(%r)".mod (xbad))))
                xtest_dir.write
                  [xself]
                    memory > x__getattr__
                    memory > xjunk
                    memory > x__class__
                    memory > xCmethod
                    memory > xgetdict
                    memory > xastuff
                    memory > xnames
                    memory > xAmethod
                    memory > x__init__
                    memory > x__getclass
                    memory > xc
                    memory > x__repr__
                    memory > xinteresting
                    memory > xminstance
                    memory > xAdata
                    memory > x__getitem__
                    memory > x__len__
                    memory > xm2instance
                    memory > xdefault_attributes
                    memory > xCdata
                    memory > x__dict__
                    memory > xcstuff
                    memory > xa
                    seq > @
                      seq
                        xjunk.write 12
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdir)).apply)) ((((unsupported)).apply ("junk") ("self"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xjunk)))))
                        (((unsupported)).apply ((xarg)) ((((unsupported)).apply (2) (2) ((((unsupported)).apply)) ((((unsupported)).apply)) ((((unsupported)).apply (2))) ("2") ("2") ((((unsupported)).apply (2))) ((((unsupported)).apply (2) (2))) ((xtype)) (((xself).xtest_dir)))))
                          bogusForceDataize.write (((xdir)).apply ((xarg)))
                        xinteresting.write
                          [xstrings]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply ((xs)) ((xs)) ((xstrings)) ((((((xs).xstartswith)).apply ("_")).not)))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            xCdata.write 1
                            xCmethod.write
                              [xself]
                                seq > @
                        xcstuff.write (((unsupported)).apply ("Cdata") ("Cmethod"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xinteresting)).apply ((((xdir)).apply ((xC)))))) ((xcstuff)))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xinteresting)).apply ((((xdir)).apply ((xc)))))) ((xcstuff)))
                        (((unsupported)).apply (((xc).xcdata)) (2))
                        (((unsupported)).apply (((xc).xcmethod)) ((((unsupported)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xinteresting)).apply ((((xdir)).apply ((xc)))))) (((xcstuff).add (((unsupported)).apply ("cdata") ("cmethod")))))
                        (((unsupported)).apply ((xC)))
                          seq
                            xAdata.write 1
                            xAmethod.write
                              [xself]
                                seq > @
                        xastuff.write ((((unsupported)).apply ("Adata") ("Amethod")).add (xcstuff))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xinteresting)).apply ((((xdir)).apply ((xA)))))) ((xastuff)))
                        xa.write (((xA)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xinteresting)).apply ((((xdir)).apply ((xa)))))) ((xastuff)))
                        (((unsupported)).apply (((xa).xadata)) (42))
                        (((unsupported)).apply (((xa).xamethod)) ((((unsupported)).apply (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xinteresting)).apply ((((xdir)).apply ((xa)))))) (((xastuff).add (((unsupported)).apply ("adata") ("amethod")))))
                        (((unsupported)).apply ((((xtype)).apply ((xsys)))))
                        xminstance.write (((xM)).apply ("m"))
                        (((unsupported)).apply (((xminstance).xb)) (2))
                        (((unsupported)).apply (((xminstance).xa)) (1))
                        xdefault_attributes.write (((unsupported)).apply ("__name__") ("__doc__") ("__package__") ("__loader__") ("__spec__"))
                        xnames.write (((unsupported)).apply ((xx)) ((xx)) ((((xdir)).apply ((xminstance)))) ((((unsupported)).apply ((xx)) ((xdefault_attributes)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xnames)) ((((unsupported)).apply ("a") ("b"))))
                        (((unsupported)).apply ((xM)))
                          seq
                            xgetdict.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("Not a dict!"))
                            x__dict__.write (((xproperty)).apply ((xgetdict)))
                        xm2instance.write (((xM2)).apply ("m2"))
                        (((unsupported)).apply (((xm2instance).xb)) (2))
                        (((unsupported)).apply (((xm2instance).xa)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xm2instance).x__dict__)) ("Not a dict!"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xdir)).apply ((xm2instance)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdir)).apply ((xNotImplemented)))) ((((xdir)).apply ((xEllipsis)))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)).apply (((xself).x__obj)) ((xobj)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("Wrapper(%s)".mod (((xrepr)).apply (((xself).x__obj))))))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)).apply ((((xWrapper)).apply ((((unsupported)).apply (((xself).x__obj)) ((xkey)))))))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xlen)).apply (((xself).x__obj)))))
                            x__getattr__.write
                              [xself xname]
                                seq > @
                                  (((unsupported)).apply ((((xWrapper)).apply ((((xgetattr)).apply (((xself).x__obj)) ((xname)))))))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__getclass.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xWrapper)).apply ((((xtype)).apply ((xself)))))))
                            x__class__.write (((xproperty)).apply ((x__getclass)))
                        bogusForceDataize.write (((xdir)).apply ((((xC)).apply)))
                xtest_supers.write
                  [xself]
                    memory > xtest
                    memory > xgetx
                    memory > xdd
                    memory > xx
                    memory > x__init__
                    memory > xmeth
                    memory > xaProp
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)).apply (("A(%r)".mod (xa))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xA)).apply).xmeth)).apply (1))) ("A(1)"))
                        (((unsupported)).apply ((xA)))
                          seq
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__super)) ((((xsuper)).apply ((xB)) ((xself)))))
                            xmeth.write
                              [xself xa]
                                seq > @
                                  (((unsupported)).apply ((("B(%r)".mod (xa)).add (((((xself).x__super).xmeth)).apply ((xa))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xB)).apply).xmeth)).apply (2))) ("B(2)A(2)"))
                        (((unsupported)).apply ((xA)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)).apply ((("C(%r)".mod (xa)).add (((((xself).x__super).xmeth)).apply ((xa))))))
                        (((unsupported)).apply (((xC).x_C__super)) ((((xsuper)).apply ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xC)).apply).xmeth)).apply (3))) ("C(3)A(3)"))
                        (((unsupported)).apply ((xC)) ((xB)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)).apply ((("D(%r)".mod (xa)).add ((((((xsuper)).apply ((xD)) ((xself))).xmeth)).apply ((xa))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xD)).apply).xmeth)).apply (4))) ("D(4)C(4)B(4)A(4)"))
                        (((unsupported)).apply ((xsuper)))
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (((((((xsuper)).apply ((xmysuper)) ((xself))).x__init__)).apply ((((unsupported)).apply ((xargs)))))))
                        (((unsupported)).apply ((xD)))
                          xmeth.write
                            [xself xa]
                              seq > @
                                (((unsupported)).apply ((("E(%r)".mod (xa)).add ((((((xmysuper)).apply ((xE)) ((xself))).xmeth)).apply ((xa))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xE)).apply).xmeth)).apply (5))) ("E(5)D(5)C(5)B(5)A(5)"))
                        (((unsupported)).apply ((xE)))
                          xmeth.write
                            [xself xa]
                              memory > xs
                              seq > @
                                seq
                                  xs.write ((xself).x__super)
                                  (((unsupported)).apply ((("F(%r)[%s]".mod (((unsupported)).apply ((xa)) ((((xs).x__class__).x__name__)))).add ((((xs).xmeth)).apply ((xa))))))
                        (((unsupported)).apply (((xF).x_F__super)) ((((xmysuper)).apply ((xF)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xF)).apply).xmeth)).apply (6))) ("F(6)[mysuper]E(6)D(6)C(6)B(6)A(6)"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xsuper)).apply ((xD)) (42))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't allow super(D, 42)"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xsuper)).apply ((xD)) ((((xC)).apply)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't allow super(D, C())"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((((xsuper)).apply ((xD))).x__get__)).apply (12))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't allow super(D).__get__(12)"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((((xsuper)).apply ((xD))).x__get__)).apply ((((xC)).apply)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't allow super(D).__get__(C())"))
                        (((unsupported)).apply ((xobject)))
                          seq
                            xgetx.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (42))
                            xx.write (((xproperty)).apply ((xgetx)))
                        (((unsupported)).apply ((xDDbase)))
                          seq
                            xgetx.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("hello"))
                            xx.write (((xproperty)).apply ((xgetx)))
                        xdd.write (((xDDsub)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xdd).xx)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xsuper)).apply ((xDDsub)) ((xdd))).xx)) (42))
                        (((unsupported)).apply ((xobject)))
                          xaProp.write (((xproperty)).apply ((((unsupported)).apply ("foo"))))
                        (((unsupported)).apply ((xBase)))
                          xtest.write
                            [xklass]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (((((xsuper)).apply ((xSub)) ((xklass))).xaProp)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xSub).xtest)).apply)) (((xBase).xaProp)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((xsuper)) ((xBase)) (1))
                xtest_basic_inheritance.write
                  [xself]
                    memory > xidentitytab
                    memory > xt
                    memory > xbase
                    memory > x__slots__
                    memory > xs
                    memory > xrev
                    memory > x__add__
                    memory > xa
                    memory > x__str__
                    memory > xu
                    memory > x__radd__
                    memory > x_rev
                    memory > x__repr__
                    memory > x__init__
                    memory > xv
                    seq > @
                      seq
                        (((unsupported)).apply ((xint)))
                          seq
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xhex)).apply ((xself)))))
                            x__add__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xhexint)).apply (((((xint).x__add__)).apply ((xself)) ((xother)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply (((((xhexint)).apply (7)).add 9)))) ("0x10"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply (((((xhexint)).apply (1000)).add 7)))) ("0x3ef"))
                        xa.write (((xhexint)).apply (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xa)))) (12345))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xint)).apply ((xa))).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xa)))) ((((xhash)).apply (12345))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((((xhexint)).apply (0))) (12)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((((xhexint)).apply (0))) (12)).x__class__)) ((xint)))
                        (((unsupported)).apply ((xint)))
                          seq
                            x__slots__.write (((unsupported)).apply)
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xoct)).apply ((xself)))))
                            x__add__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply (((((xself).x__class__)).apply (((((((xsuper)).apply ((xoctlong)) ((xself))).x__add__)).apply ((xother)))))))
                            x__radd__.write (x__add__)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((((xoctlong)).apply (3)).add 5)))) ("0o10"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((5.add (((xoctlong)).apply (3000)))))) ("0o5675"))
                        xa.write (((xoctlong)).apply (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xa)))) (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xa)))) ((((xhash)).apply (12345))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xint)).apply ((xa))).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).neg).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xoctlong)).apply (0)).neg).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).sub 0).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).mul 1).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (1)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (1)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((1.mul (xa)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).or 0).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) (0)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).and (1.neg)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((((xoctlong)).apply (0))) (12)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((((xoctlong)).apply (0))) (12)).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xabs)).apply ((((xoctlong)).apply (0)))).x__class__)) ((xint)))
                        (((unsupported)).apply ((xint)))
                        xa.write (((xlongclone)).apply (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).add 0).x__class__)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((0.add (xa)).x__class__)) ((xint)))
                        xa.write (((xlongclone)).apply ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).x__dict__)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xa)))) ((1.neg)))
                        (((unsupported)).apply ((xfloat)))
                          seq
                            x__slots__.write (((unsupported)).apply ("prec"))
                            x__init__.write
                              [xself xvalue xprec]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).xprec)) ((((xint)).apply ((xprec)))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("%.*g".mod (((unsupported)).apply (((xself).xprec)) ((xself))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xprecfloat)).apply (1.1))))) ("1.1"))
                        xa.write (((xprecfloat)).apply (12345))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) (12345.0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xfloat)).apply ((xa)))) (12345.0))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xfloat)).apply ((xa))).x__class__)) ((xfloat)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xa)))) ((((xhash)).apply (12345.0))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa)).x__class__)) ((xfloat)))
                        (((unsupported)).apply ((xcomplex)))
                          x__repr__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (("%.17gj%+.17g".mod (((unsupported)).apply (((xself).ximag)) (((xself).xreal))))))
                        xa.write (((xmadcomplex)).apply ((3.neg)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xa)))) ("4j-3"))
                        xbase.write (((xcomplex)).apply ((3.neg)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xbase).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcomplex)).apply ((xa)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcomplex)).apply ((xa))).x__class__)) ((xcomplex)))
                        xa.write (((xmadcomplex)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xa)))) ("4j-3"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcomplex)).apply ((xa)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcomplex)).apply ((xa))).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xa)))) ((((xhash)).apply ((xbase)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xa)).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xa).add 0).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).add 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xa).sub 0).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).sub 0)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xa).mul 1).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).mul 1)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xa).div 1).x__class__)) ((xcomplex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).div 1)) ((xbase)))
                        (((unsupported)).apply ((xtuple)))
                          seq
                            x_rev.write "None: is there a None literal in the EO language?"
                            xrev.write
                              [xself]
                                memory > xL
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).x_rev)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)).apply (((xself).x_rev)))
                                    xL.write (((xlist)).apply ((xself)))
                                    bogusForceDataize.write ((((xL).xreverse)).apply)
                                    (((unsupported)).apply (((xself).x_rev)) (((((xself).x__class__)).apply ((xL)))))
                                    (((unsupported)).apply (((xself).x_rev)))
                        xa.write (((xmadtuple)).apply ((((unsupported)).apply (1) (2) (3) (4) (5) (6) (7) (8) (9) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply (1) (2) (3) (4) (5) (6) (7) (8) (9) (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xrev)).apply)) ((((xmadtuple)).apply ((((unsupported)).apply (0) (9) (8) (7) (6) (5) (4) (3) (2) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xa).xrev)).apply).xrev)).apply)) ((((xmadtuple)).apply ((((unsupported)).apply (1) (2) (3) (4) (5) (6) (7) (8) (9) (0))))))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (512))))
                          seq
                            xt.write (((xmadtuple)).apply ((((xrange)).apply ((xi)))))
                            xu.write ((((xt).xrev)).apply)
                            xv.write ((((xu).xrev)).apply)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xv)) ((xt)))
                        xa.write (((xmadtuple)).apply ((((unsupported)).apply (1) (2) (3) (4) (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtuple)).apply ((xa)))) ((((unsupported)).apply (1) (2) (3) (4) (5))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xtuple)).apply ((xa))).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xa)))) ((((xhash)).apply ((((unsupported)).apply (1) (2) (3) (4) (5))))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) ((((unsupported)).apply))).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).mul 1).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).mul 0).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).add (((unsupported)).apply)).x__class__)) ((xtuple)))
                        xa.write (((xmadtuple)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtuple)).apply ((xa)))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xtuple)).apply ((xa))).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).add (xa)).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).mul 0).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).mul 1).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xa).mul 2).x__class__)) ((xtuple)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xa)) ((((unsupported)).apply))).x__class__)) ((xtuple)))
                        (((unsupported)).apply ((xstr)))
                          seq
                            x_rev.write "None: is there a None literal in the EO language?"
                            xrev.write
                              [xself]
                                memory > xL
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).x_rev)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)).apply (((xself).x_rev)))
                                    xL.write (((xlist)).apply ((xself)))
                                    bogusForceDataize.write ((((xL).xreverse)).apply)
                                    (((unsupported)).apply (((xself).x_rev)) (((((xself).x__class__)).apply (((("".xjoin)).apply ((xL)))))))
                                    (((unsupported)).apply (((xself).x_rev)))
                        xs.write (((xmadstring)).apply ("abcdefghijklmnopqrstuvwxyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xs)) ("abcdefghijklmnopqrstuvwxyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xrev)).apply)) ((((xmadstring)).apply ("zyxwvutsrqponmlkjihgfedcba"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xs).xrev)).apply).xrev)).apply)) ((((xmadstring)).apply ("abcdefghijklmnopqrstuvwxyz"))))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (256))))
                          seq
                            xs.write (((xmadstring)).apply (((("".xjoin)).apply ((((xmap)).apply ((xchr)) ((((xrange)).apply ((xi)))))))))
                            xt.write ((((xs).xrev)).apply)
                            xu.write ((((xt).xrev)).apply)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) ((xs)))
                        xs.write (((xmadstring)).apply ("12345"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xs)))) ("12345"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xstr)).apply ((xs))).x__class__)) ((xstr)))
                        xbase.write ("x00".mul 5)
                        xs.write (((xmadstring)).apply ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xs)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xs)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xstr)).apply ((xs))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xs)))) ((((xhash)).apply ((xbase)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xs)) (1))) ((xbase)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xbase)) (1))) ((xs)))) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xs).add "").x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).add "")) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((("".add (xs)).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (("".add (xs))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xs).mul 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).mul 0)) (""))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xs).mul 1).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).mul 1)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xs).mul 2).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).mul 2)) (((xbase).add (xbase))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xs)) ((((unsupported)).apply))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xs)) ((((unsupported)).apply)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xs)) ((((unsupported)).apply (0) (0)))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xs)) ((((unsupported)).apply (0) (0))))) (""))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xstrip)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xstrip)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xlstrip)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xlstrip)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xrstrip)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xrstrip)).apply)) ((xbase)))
                        xidentitytab.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xtranslate)).apply ((xidentitytab))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xtranslate)).apply ((xidentitytab)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xreplace)).apply ("x") ("x")).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xreplace)).apply ("x") ("x"))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xljust)).apply ((((xlen)).apply ((xs))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xljust)).apply ((((xlen)).apply ((xs)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xrjust)).apply ((((xlen)).apply ((xs))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xrjust)).apply ((((xlen)).apply ((xs)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xcenter)).apply ((((xlen)).apply ((xs))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xcenter)).apply ((((xlen)).apply ((xs)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xs).xlower)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xlower)).apply)) ((xbase)))
                        (((unsupported)).apply ((xstr)))
                          seq
                            x_rev.write "None: is there a None literal in the EO language?"
                            xrev.write
                              [xself]
                                memory > xL
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).x_rev)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)).apply (((xself).x_rev)))
                                    xL.write (((xlist)).apply ((xself)))
                                    bogusForceDataize.write ((((xL).xreverse)).apply)
                                    (((unsupported)).apply (((xself).x_rev)) (((((xself).x__class__)).apply (((("".xjoin)).apply ((xL)))))))
                                    (((unsupported)).apply (((xself).x_rev)))
                        xu.write (((xmadunicode)).apply ("ABCDEF"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) ("ABCDEF"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xrev)).apply)) ((((xmadunicode)).apply ("FEDCBA"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xu).xrev)).apply).xrev)).apply)) ((((xmadunicode)).apply ("ABCDEF"))))
                        xbase.write "12345"
                        xu.write (((xmadunicode)).apply ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xu)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xstr)).apply ((xu))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xu)))) ((((xhash)).apply ((xbase)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xu)) (1))) ((xbase)))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xbase)) (1))) ((xu)))) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xstrip)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xstrip)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xlstrip)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xlstrip)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xrstrip)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xrstrip)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xreplace)).apply ("x") ("x")).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xreplace)).apply ("x") ("x"))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xreplace)).apply ("xy") ("xy")).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xreplace)).apply ("xy") ("xy"))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xcenter)).apply ((((xlen)).apply ((xu))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xcenter)).apply ((((xlen)).apply ((xu)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xljust)).apply ((((xlen)).apply ((xu))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xljust)).apply ((((xlen)).apply ((xu)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xrjust)).apply ((((xlen)).apply ((xu))))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xrjust)).apply ((((xlen)).apply ((xu)))))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xlower)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xlower)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xupper)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xupper)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xcapitalize)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xcapitalize)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xu).xtitle)).apply).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu).xtitle)).apply)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xu).add "").x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xu).add "")) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((("".add (xu)).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (("".add (xu))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xu).mul 0).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xu).mul 0)) (""))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xu).mul 1).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xu).mul 1)) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xu).mul 2).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xu).mul 2)) (((xbase).add (xbase))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xu)) ((((unsupported)).apply))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply)))) ((xbase)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((unsupported)).apply ((xu)) ((((unsupported)).apply (0) (0)))).x__class__)) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply (0) (0))))) (""))
                        (((unsupported)).apply ((xlist)))
                        xa.write (((xsublist)).apply ((((xrange)).apply (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((xlist)).apply ((((xrange)).apply (5))))))
                        bogusForceDataize.write ((((xa).xappend)).apply ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) (((((xlist)).apply ((((xrange)).apply (5)))).add (((unsupported)).apply ("hello")))))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) (5))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((xlist)).apply ((((xrange)).apply (6))))))
                        bogusForceDataize.write ((((xa).xextend)).apply ((((xrange)).apply (6) (20))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((xlist)).apply ((((xrange)).apply (20))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply ((5.neg)))))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((xlist)).apply ((((xrange)).apply (15))))))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (10) (15))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xa)))) (10))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((xlist)).apply ((((xrange)).apply (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((xa)))) ((((xlist)).apply ((((xrange)).apply (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) (9))) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) ((10.neg)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) ((1.neg)))) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xa)) ((((unsupported)).apply (5))))) ((((xlist)).apply ((((xrange)).apply (5))))))
                xtest_keywords.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xint)) (1))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xfloat)) (2))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xbool)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xcomplex)) (42) (666))) ((((xcomplex)).apply (666) (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xstr)) (500))) ("500"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xstr)) ("abc") ("strict"))) ("abc"))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xtuple)) ((((xrange)).apply (3))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xlist)) ((((unsupported)).apply (0) (1) (2))))
                        (((unsupported)).apply ((xconstructor)) ((((unsupported)).apply ((xint)) ((xfloat)) ((xint)) ((xcomplex)) ((xstr)) ((xstr)) ((xtuple)) ((xlist)))))
                          (((unsupported)).apply ((xTypeError)))
                            (((unsupported)).apply ((xconstructor)) (1))
                            bogusForceDataize.write ((((xself).xfail)).apply (("expected TypeError from bogus keyword argument to %r".mod (xconstructor))))
                xtest_str_subclass_as_dict_key.write
                  [xself]
                    memory > xd
                    memory > x__eq__
                    memory > x__hash__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xstr)))
                          seq
                            (((unsupported)).apply)
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xcanonical)) (((((xvalue).xlower)).apply)))
                                    (((unsupported)).apply (((xself).xhashcode)) ((((xhash)).apply (((xself).xcanonical)))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    ((((xisinstance)).apply ((xother)) ((xcistr))).not).if
                                      xother.write (((xcistr)).apply ((xother)))
                                    (((unsupported)).apply ((((xself).xcanonical).eq ((xother).xcanonical))))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).xhashcode)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcistr)).apply ("ABC"))) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("aBc") ((((xcistr)).apply ("ABC"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((xcistr)).apply ("ABC"))))) ("ABC"))
                        xd.write (((unsupported)).apply ((((xcistr)).apply ("one"))) (1) ((((xcistr)).apply ("two"))) (2) ((((xcistr)).apply ("tHree"))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ((((xcistr)).apply ("one"))))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ((((xcistr)).apply ("tWo"))))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) ((((xcistr)).apply ("THrEE"))))) (3))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xcistr)).apply ("ONe"))) ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xget)).apply ((((xcistr)).apply ("thrEE"))))) (3))
                xtest_classic_comparisons.write
                  [xself]
                    memory > xc3
                    memory > xc2
                    memory > x__ne__
                    memory > x__gt__
                    memory > x__init__
                    memory > xc1
                    memory > x__ge__
                    memory > x__eq__
                    memory > xc
                    memory > x__le__
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xbase)) ((((unsupported)).apply ((xclassic)) ((xint)) ((xobject)))))
                          seq
                            (((unsupported)).apply ((xbase)))
                              seq
                                x__init__.write
                                  [xself xvalue]
                                    seq > @
                                      (((unsupported)).apply (((xself).xvalue)) ((((xint)).apply ((xvalue)))))
                                x__eq__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).eq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).eq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__ne__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).neq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).neq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__lt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).less ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).less (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__le__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).leq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).leq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__gt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).greater ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).greater (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__ge__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).geq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).geq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                            xc1.write (((xC)).apply (1))
                            xc2.write (((xC)).apply (2))
                            xc3.write (((xC)).apply (3))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xc1)) (1))
                            xc.write (((unsupported)).apply (1) ((xc1)) (2) ((xc2)) (3) ((xc3)))
                            (((unsupported)).apply ((xx)) ((((unsupported)).apply (1) (2) (3))))
                              (((unsupported)).apply ((xy)) ((((unsupported)).apply (1) (2) (3))))
                                (((unsupported)).apply ((xop)) ((((unsupported)).apply ("<") ("<=") ("==") ("!=") (">") (">="))))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("c[x] %s c[y]".mod (xop))))) ((((xeval)).apply (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)).apply ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("c[x] %s y".mod (xop))))) ((((xeval)).apply (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)).apply ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("x %s c[y]".mod (xop))))) ((((xeval)).apply (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)).apply ((xx)) ((xy))))))
                xtest_rich_comparisons.write
                  [xself]
                    memory > xc3
                    memory > xz
                    memory > xc2
                    memory > x__ne__
                    memory > x__gt__
                    memory > x__cmp__
                    memory > x__init__
                    memory > xzz
                    memory > xc1
                    memory > x__ge__
                    memory > x__eq__
                    memory > xc
                    memory > x__le__
                    memory > x__lt__
                    seq > @
                      seq
                        (((unsupported)).apply ((xcomplex)))
                        xz.write (((xZ)).apply (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xz)) ((1.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((1.add (((unsupported)).apply))) ((xz)))
                        (((unsupported)).apply ((xcomplex)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (((((xabs)).apply (((xself).sub (xother)))).leq (((unsupported)).apply))))
                                  (((unsupported)).apply ((xNotImplemented)))
                        xzz.write (((xZZ)).apply (1.0000003))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xzz)) ((1.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((1.add (((unsupported)).apply))) ((xzz)))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xbase)) ((((unsupported)).apply ((xclassic)) ((xint)) ((xobject)) ((xlist)))))
                          seq
                            (((unsupported)).apply ((xbase)))
                              seq
                                x__init__.write
                                  [xself xvalue]
                                    seq > @
                                      (((unsupported)).apply (((xself).xvalue)) ((((xint)).apply ((xvalue)))))
                                x__cmp__.write
                                  [xself_ xother]
                                    seq > @
                                      bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't call __cmp__"))
                                x__eq__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).eq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).eq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__ne__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).neq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).neq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__lt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).less ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).less (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__le__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).leq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).leq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__gt__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).greater ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).greater (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                                x__ge__.write
                                  [xself xother]
                                    seq > @
                                      seq
                                        (((xisinstance)).apply ((xother)) ((xC))).if
                                          (((unsupported)).apply ((((xself).xvalue).geq ((xother).xvalue))))
                                        ((((xisinstance)).apply ((xother)) ((xint))).or (((xisinstance)).apply ((xother)) ((xint)))).if
                                          (((unsupported)).apply ((((xself).xvalue).geq (xother))))
                                        (((unsupported)).apply ((xNotImplemented)))
                            xc1.write (((xC)).apply (1))
                            xc2.write (((xC)).apply (2))
                            xc3.write (((xC)).apply (3))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xc1)) (1))
                            xc.write (((unsupported)).apply (1) ((xc1)) (2) ((xc2)) (3) ((xc3)))
                            (((unsupported)).apply ((xx)) ((((unsupported)).apply (1) (2) (3))))
                              (((unsupported)).apply ((xy)) ((((unsupported)).apply (1) (2) (3))))
                                (((unsupported)).apply ((xop)) ((((unsupported)).apply ("<") ("<=") ("==") ("!=") (">") (">="))))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("c[x] %s c[y]".mod (xop))))) ((((xeval)).apply (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)).apply ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("c[x] %s y".mod (xop))))) ((((xeval)).apply (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)).apply ((xx)) ((xy))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("x %s c[y]".mod (xop))))) ((((xeval)).apply (("x %s y".mod (xop))))) (("x=%d, y=%d".mod (((unsupported)).apply ((xx)) ((xy))))))
                xtest_descrdoc.write
                  [xself]
                    memory > xcheck
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xcheck.write
                          [xdescr xwhat]
                            seq > @
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xdescr).x__doc__)) ((xwhat)))
                        bogusForceDataize.write (((xcheck)).apply (((xFileIO).xclosed)) ("True if the file is closed"))
                        bogusForceDataize.write (((xcheck)).apply (((xcomplex).xreal)) ("the real part of a complex number"))
                xtest_doc_descriptor.write
                  [xself]
                    memory > x__doc__
                    memory > x__get__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__get__.write
                            [xself xobject xotype]
                              seq > @
                                seq
                                  (xobject).if
                                    xobject.write ((((xobject).x__class__).x__name__).add " instance")
                                  (xotype).if
                                    xotype.write ((xotype).x__name__)
                                  (((unsupported)).apply (("object=%s; type=%s".mod (((unsupported)).apply ((xobject)) ((xotype))))))
                        (((unsupported)).apply)
                          x__doc__.write (((xDocDescr)).apply)
                        (((unsupported)).apply ((xobject)))
                          x__doc__.write (((xDocDescr)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xOldClass).x__doc__)) ("object=None; type=OldClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xOldClass)).apply).x__doc__)) ("object=OldClass instance; type=OldClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xNewClass).x__doc__)) ("object=None; type=NewClass"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xNewClass)).apply).x__doc__)) ("object=NewClass instance; type=NewClass"))
                xtest_set_class.write
                  [xself]
                    memory > xo
                    memory > xcant
                    memory > xl
                    memory > x__del__
                    memory > xx
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xD)) ((xE)))
                        (((unsupported)).apply ((xcls)) ((((unsupported)).apply ((xC)) ((xD)) ((xE)) ((xF)))))
                          (((unsupported)).apply ((xcls2)) ((((unsupported)).apply ((xC)) ((xD)) ((xE)) ((xF)))))
                            seq
                              xx.write (((xcls)).apply)
                              (((unsupported)).apply (((xx).x__class__)) ((xcls2)))
                              bogusForceDataize.write ((((xself).xassertIs)).apply (((xx).x__class__)) ((xcls2)))
                              (((unsupported)).apply (((xx).x__class__)) ((xcls)))
                              bogusForceDataize.write ((((xself).xassertIs)).apply (((xx).x__class__)) ((xcls)))
                        xcant.write
                          [xx xC]
                            seq > @
                              seq
                                (((unsupported)).apply ((xTypeError)))
                                  (((unsupported)).apply (((xx).x__class__)) ((xC)))
                                  bogusForceDataize.write ((((xself).xfail)).apply (("shouldn't allow %r.__class__ = %r".mod (((unsupported)).apply ((xx)) ((xC))))))
                                (((unsupported)).apply ((((unsupported)).apply ((xTypeError)) ((xAttributeError)))))
                                  bogusForceDataize.write (((xdelattr)).apply ((xx)) ("__class__"))
                                  bogusForceDataize.write ((((xself).xfail)).apply (("shouldn't allow del %r.__class__".mod (xx))))
                        bogusForceDataize.write (((xcant)).apply ((((xC)).apply)) ((xlist)))
                        bogusForceDataize.write (((xcant)).apply ((((xlist)).apply)) ((xC)))
                        bogusForceDataize.write (((xcant)).apply ((((xC)).apply)) (1))
                        bogusForceDataize.write (((xcant)).apply ((((xC)).apply)) ((xobject)))
                        bogusForceDataize.write (((xcant)).apply ((((xobject)).apply)) ((xlist)))
                        bogusForceDataize.write (((xcant)).apply ((((xlist)).apply)) ((xobject)))
                        (((unsupported)).apply ((xint)))
                          x__slots__.write (((unsupported)).apply)
                        bogusForceDataize.write (((xcant)).apply (TRUE) ((xint)))
                        bogusForceDataize.write (((xcant)).apply (2) ((xbool)))
                        xo.write (((xobject)).apply)
                        bogusForceDataize.write (((xcant)).apply ((xo)) ((((xtype)).apply (1))))
                        bogusForceDataize.write (((xcant)).apply ((xo)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xo)))))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("b"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("b") ("a"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("b"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("c") ("b"))
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply ("a") ("b") ("d"))
                        (((unsupported)).apply ((xH)))
                          x__slots__.write (((unsupported)).apply ("e"))
                        (((unsupported)).apply ((xI)))
                          x__slots__.write (((unsupported)).apply ("e"))
                        (((unsupported)).apply ((xJ)))
                          x__slots__.write (((unsupported)).apply ("__weakref__"))
                        (((unsupported)).apply ((xJ)))
                          x__slots__.write (((unsupported)).apply ("__dict__"))
                        (((unsupported)).apply ((xJ)))
                        (((unsupported)).apply ((xJ)))
                          x__slots__.write (((unsupported)).apply ("__dict__") ("__weakref__"))
                        (((unsupported)).apply ((((unsupported)).apply ((xcls)) ((xcls2)))) ((((unsupported)).apply ((((unsupported)).apply ((xG)) ((xH)))) ((((unsupported)).apply ((xG)) ((xI)))) ((((unsupported)).apply ((xI)) ((xH)))) ((((unsupported)).apply ((xQ)) ((xR)))) ((((unsupported)).apply ((xR)) ((xQ)))))))
                          seq
                            xx.write (((xcls)).apply)
                            (((unsupported)).apply (((xx).xa)) (1))
                            (((unsupported)).apply (((xx).x__class__)) ((xcls2)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xx).x__class__)) ((xcls2)) (("assigning %r as __class__ for %r silently failed".mod (((unsupported)).apply ((xcls2)) ((xx))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xa)) (1))
                            (((unsupported)).apply (((xx).x__class__)) ((xcls)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((xx).x__class__)) ((xcls)) (("assigning %r as __class__ for %r silently failed".mod (((unsupported)).apply ((xcls)) ((xx))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xa)) (1))
                        (((unsupported)).apply ((xcls)) ((((unsupported)).apply ((xG)) ((xJ)) ((xK)) ((xL)) ((xM)) ((xN)) ((xP)) ((xR)) ((xlist)) ((xInt)))))
                          (((unsupported)).apply ((xcls2)) ((((unsupported)).apply ((xG)) ((xJ)) ((xK)) ((xL)) ((xM)) ((xN)) ((xP)) ((xR)) ((xlist)) ((xInt)))))
                            seq
                              (((unsupported)).apply ((xcls)) ((xcls2))).if
                                (((unsupported)).apply)
                              bogusForceDataize.write (((xcant)).apply ((((xcls)).apply)) ((xcls2)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                          x__del__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (((xself).x__class__)) ((xO)))
                        xl.write (((unsupported)).apply ((((xA)).apply)) ((xx)) ((((xrange)).apply (100))))
                        (((unsupported)).apply ((((unsupported)).apply ((xl)))))
                xtest_set_dict.write
                  [xself]
                    memory > xcan_delete_dict
                    memory > xcant
                    memory > xclass_dict
                    memory > xverify_dict_readonly
                    memory > xmod
                    memory > xe
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        xa.write (((xC)).apply)
                        (((unsupported)).apply (((xa).x__dict__)) ((((unsupported)).apply ("b") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xb)) (1))
                        xcant.write
                          [xx xdict]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply ((xAttributeError)) ((xTypeError)))))
                                (((unsupported)).apply (((xx).x__dict__)) ((xdict)))
                                bogusForceDataize.write ((((xself).xfail)).apply (("shouldn't allow %r.__dict__ = %r".mod (((unsupported)).apply ((xx)) ((xdict))))))
                        bogusForceDataize.write (((xcant)).apply ((xa)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write (((xcant)).apply ((xa)) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xcant)).apply ((xa)) (1))
                        (((unsupported)).apply ((((unsupported)).apply (((xa).x__dict__)))))
                        (((unsupported)).apply ((xobject)))
                        xverify_dict_readonly.write
                          [xx]
                            memory > xdict_descr
                            seq > @
                              seq
                                (((unsupported)).apply)
                                bogusForceDataize.write (((xcant)).apply ((xx)) ((((unsupported)).apply)))
                                (((unsupported)).apply ((((unsupported)).apply ((xAttributeError)) ((xTypeError)))))
                                  (((unsupported)).apply ((((unsupported)).apply (((xx).x__dict__)))))
                                  bogusForceDataize.write ((((xself).xfail)).apply (("shouldn't allow del %r.__dict__".mod (xx))))
                                xdict_descr.write (((unsupported)).apply (((xBase).x__dict__)) ("__dict__"))
                                (((unsupported)).apply ((((unsupported)).apply ((xAttributeError)) ((xTypeError)))))
                                  bogusForceDataize.write ((((xdict_descr).x__set__)).apply ((xx)) ((((unsupported)).apply)))
                                  bogusForceDataize.write ((((xself).xfail)).apply (("dict_descr allowed access to %r's dict".mod (xx))))
                        (((unsupported)).apply ((xtype)) ((xBase)))
                        (((unsupported)).apply ((xBase)) ((xtype)))
                        (((unsupported)).apply ((xobject)) ((xMeta1)))
                        (((unsupported)).apply ((xobject)) ((xMeta2)))
                        (((unsupported)).apply ((xcls)) ((((unsupported)).apply ((xC)) ((xD)) ((xE)))))
                          seq
                            bogusForceDataize.write (((xverify_dict_readonly)).apply ((xcls)))
                            xclass_dict.write ((xcls).x__dict__)
                            (((unsupported)).apply ((xTypeError)))
                              (((unsupported)).apply ((((unsupported)).apply ((xclass_dict)) ("spam"))) ("eggs"))
                              bogusForceDataize.write ((((xself).xfail)).apply (("%r's __dict__ can be modified".mod (xcls))))
                        (((unsupported)).apply (((xtypes).xModuleType)) ((xBase)))
                        (((unsupported)).apply ((xBase)) (((xtypes).xModuleType)))
                        (((unsupported)).apply ((xModuleType)) ((((unsupported)).apply ((xModule1)) ((xModule2)))))
                          seq
                            xmod.write (((xModuleType)).apply ("spam"))
                            bogusForceDataize.write (((xverify_dict_readonly)).apply ((xmod)))
                            (((unsupported)).apply ((((unsupported)).apply (((xmod).x__dict__)) ("spam"))) ("eggs"))
                        xcan_delete_dict.write
                          [xe]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply ((xTypeError)) ((xAttributeError)))))
                                (((unsupported)).apply ((((unsupported)).apply (((xe).x__dict__)))))
                                (((unsupported)).apply (FALSE))
                                (((unsupported)).apply (TRUE))
                        (((unsupported)).apply ((xException)) ((xBase)))
                        (((unsupported)).apply ((xBase)) ((xException)))
                        (((unsupported)).apply ((xExceptionType)) ((((unsupported)).apply ((xException)) ((xException1)) ((xException2)))))
                          seq
                            xe.write (((xExceptionType)).apply)
                            (((unsupported)).apply (((xe).x__dict__)) ((((unsupported)).apply ("a") (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xe).xa)) (1))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcan_delete_dict)).apply ((xe)))) ((((xcan_delete_dict)).apply ((((xValueError)).apply)))))
                xtest_binary_operator_override.write
                  [xself]
                    memory > x__pow__
                    memory > x__add__
                    memory > x__rpow__
                    memory > x__radd__
                    memory > x__eq__
                    memory > x__repr__
                    seq > @
                      seq
                        (((unsupported)).apply ((xint)))
                          seq
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("I(%r)".mod (((xint)).apply ((xself))))))
                            x__add__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ((((xI)).apply (((((xint)).apply ((xself))).add (((xint)).apply ((xother))))))))
                            x__radd__.write (x__add__)
                            x__pow__.write
                              [xself xother xmod]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xmod)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)).apply ((((xI)).apply ((((xpow)).apply ((((xint)).apply ((xself)))) ((((xint)).apply ((xother)))))))))
                                      (((unsupported)).apply ((((xI)).apply ((((xpow)).apply ((((xint)).apply ((xself)))) ((((xint)).apply ((xother)))) ((((xint)).apply ((xmod)))))))))
                            x__rpow__.write
                              [xself xother xmod]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((xmod)) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)).apply ((((xI)).apply ((((xpow)).apply ((((xint)).apply ((xother)))) ((((xint)).apply ((xself)))) ((xmod)))))))
                                      (((unsupported)).apply ((((xI)).apply ((((xpow)).apply ((((xint)).apply ((xother)))) ((((xint)).apply ((xself)))) ((((xint)).apply ((xmod)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply (((((xI)).apply (1)).add (((xI)).apply (2)))))) ("I(3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply (((((xI)).apply (1)).add 2)))) ("I(3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((1.add (((xI)).apply (2)))))) ("I(3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((unsupported)).apply ((((xI)).apply (2))) ((((xI)).apply (3))))))) ("I(8)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((unsupported)).apply (2) ((((xI)).apply (3))))))) ("I(8)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((unsupported)).apply ((((xI)).apply (2))) (3))))) ("I(8)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xpow)).apply ((((xI)).apply (2))) ((((xI)).apply (3))) ((((xI)).apply (5))))))) ("I(3)"))
                        (((unsupported)).apply ((xstr)))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply ((((((xself).xlower)).apply).eq ((((xother).xlower)).apply))))
                xtest_subclass_propagation.write
                  [xself]
                    memory > xd
                    memory > x__getattribute__
                    memory > x__getattr__
                    memory > xorig_hash
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xB)) ((xC)))
                        xd.write (((xD)).apply)
                        xorig_hash.write (((xhash)).apply ((xd)))
                        (((unsupported)).apply (((xA).x__hash__)) ((((unsupported)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (42))
                        (((unsupported)).apply (((xC).x__hash__)) ((((unsupported)).apply (314))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (314))
                        (((unsupported)).apply (((xB).x__hash__)) ((((unsupported)).apply (144))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (144))
                        (((unsupported)).apply (((xD).x__hash__)) ((((unsupported)).apply (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (100))
                        (((unsupported)).apply (((xD).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)).apply ((((unsupported)).apply (((xD).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (144))
                        (((unsupported)).apply (((xB).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)).apply ((((unsupported)).apply (((xB).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (314))
                        (((unsupported)).apply (((xC).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)).apply ((((unsupported)).apply (((xC).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) (42))
                        (((unsupported)).apply (((xA).x__hash__)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xhash)) ((xd)))
                        (((unsupported)).apply ((((unsupported)).apply (((xA).x__hash__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xd)))) ((xorig_hash)))
                        (((unsupported)).apply (((xd).xfoo)) (42))
                        (((unsupported)).apply (((xd).xbar)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xbar)) (42))
                        x__getattribute__.write
                          [xself xname]
                            seq > @
                              seq
                                ((xname).eq "foo").if
                                  (((unsupported)).apply (24))
                                (((unsupported)).apply (((((xobject).x__getattribute__)).apply ((xself)) ((xname)))))
                        (((unsupported)).apply (((xA).x__getattribute__)) ((x__getattribute__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xbar)) (42))
                        x__getattr__.write
                          [xself xname]
                            seq > @
                              seq
                                (((unsupported)).apply ((xname)) ((((unsupported)).apply ("spam") ("foo") ("bar")))).if
                                  (((unsupported)).apply ("hello"))
                                (((unsupported)).apply ((((xAttributeError)).apply ((xname)))))
                        (((unsupported)).apply (((xB).x__getattr__)) ((x__getattr__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xspam)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xbar)) (42))
                        (((unsupported)).apply ((((unsupported)).apply (((xA).x__getattribute__)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (42))
                        (((unsupported)).apply ((((unsupported)).apply (((xd).xfoo)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xbar)) (42))
                        (((unsupported)).apply ((((unsupported)).apply (((xB).x__getattr__)))))
                        (((unsupported)).apply ((xAttributeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("d.foo should be undefined now"))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((((unsupported)).apply ((xB)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        (((unsupported)).apply (((xA).x__setitem__)) ((((unsupported)).apply ("None: is there a None literal in the EO language?"))))
                xtest_buffer_inheritance.write
                  [xself]
                    memory > xbase
                    memory > xm
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xbytes)))
                        xbase.write "abc"
                        xm.write (((xMyBytes)).apply ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xbinascii).xb2a_hex)).apply ((xm)))) (((((xbinascii).xb2a_hex)).apply ((xbase)))))
                        (((unsupported)).apply ((xint)))
                        xm.write (((xMyInt)).apply (42))
                        (((unsupported)).apply ((xTypeError)))
                          seq
                            bogusForceDataize.write ((((xbinascii).xb2a_hex)).apply ((xm)))
                            bogusForceDataize.write ((((xself).xfail)).apply ("subclass of int should not have a buffer interface"))
                xtest_str_of_str_subclass.write
                  [xself]
                    memory > xo
                    memory > x__str__
                    memory > xcapture
                    memory > x__repr__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xstr)))
                          seq
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((((((xbinascii).xb2a_hex)).apply (((((xself).xencode)).apply ("ascii")))).xdecode)).apply ("ascii"))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).add " repr")))
                        xo.write (((xoctetstring)).apply ("A"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((xo)))) ((xoctetstring)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((((xstr)).apply ((xo)))))) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((((xrepr)).apply ((xo)))))) ((xstr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xord)).apply ((xo)))) (65))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xo)))) ("41"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xo)))) ("A repr"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xo).x__str__)).apply)) ("41"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xo).x__repr__)).apply)) ("A repr"))
                        xcapture.write ((((xio).xStringIO)).apply)
                        (((unsupported)).apply ((xprint)) ((xo)) ((xcapture)))
                        (((unsupported)).apply ((xprint)) ((((xstr)).apply ((xo)))) ((xcapture)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcapture).xgetvalue)).apply)) ("41n41n"))
                        bogusForceDataize.write ((((xcapture).xclose)).apply)
                xtest_keyword_arguments.write
                  [xself]
                    memory > xf
                    memory > xba
                    seq > @
                      seq
                        xf.write
                          [xa]
                            seq > @
                              (((unsupported)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xf).x__call__)) (42))) (42))
                        xba.write (((xbytearray)).apply)
                        (((unsupported)).apply (((xbytearray).x__init__)) ((xba)) ("abcxbdu20ac") ("latin1") ("replace"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xba)) ("abcxbd?"))
                xtest_recursive_call.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply (((xA).x__call__)) ((((xA)).apply)))
                        (((unsupported)).apply ((xRecursionError)))
                          bogusForceDataize.write (((((xA)).apply)).apply)
                          bogusForceDataize.write ((((xself).xfail)).apply ("Recursion limit should have been reached for __call__()"))
                xtest_delete_hook.write
                  [xself]
                    memory > xc
                    memory > xlog
                    memory > xd
                    memory > x__del__
                    seq > @
                      seq
                        xlog.write (((unsupported)).apply)
                        (((unsupported)).apply ((xobject)))
                          x__del__.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xlog).xappend)).apply (1))
                        xc.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlog)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlog)) ((((unsupported)).apply (1))))
                        (((unsupported)).apply ((xobject)))
                        xd.write (((xD)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xd)) (0))))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("invalid del() didn't raise TypeError"))
                xtest_hash_inheritance.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)).apply ((xdict)))
                        xd.write (((xmydict)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xhash)).apply ((xd)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("hash() of dict subclass should fail"))
                        (((unsupported)).apply ((xlist)))
                        xd.write (((xmylist)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xhash)).apply ((xd)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("hash() of list subclass should fail"))
                xtest_str_operations.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'' + 5 doesn't raise TypeError"))
                        (((unsupported)).apply ((xValueError)))
                          bogusForceDataize.write ((("".xsplit)).apply (""))
                          bogusForceDataize.write ((((xself).xfail)).apply ("''.split('') doesn't raise ValueError"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((("".xjoin)).apply ((((unsupported)).apply (0))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("''.join([0]) doesn't raise TypeError"))
                        (((unsupported)).apply ((xValueError)))
                          bogusForceDataize.write ((("".xrindex)).apply ("5"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("''.rindex('5') doesn't raise ValueError"))
                        (((unsupported)).apply ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'%(n)s' % None doesn't raise TypeError"))
                        (((unsupported)).apply ((xValueError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'%(n' % {} '' doesn't raise ValueError"))
                        (((unsupported)).apply ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'%*s' % ('abc') doesn't raise TypeError"))
                        (((unsupported)).apply ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'%*.*s' % ('abc', 5) doesn't raise TypeError"))
                        (((unsupported)).apply ((xTypeError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'%s' % (1, 2) doesn't raise TypeError"))
                        (((unsupported)).apply ((xValueError)))
                          unsupported
                          bogusForceDataize.write ((((xself).xfail)).apply ("'%' % None doesn't raise ValueError"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((("534253".xisdigit)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((("534253x".xisdigit)).apply)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (("%c".mod 5)) ("x05"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (("%c".mod "5")) ("5"))
                xtest_deepcopy_recursive.write
                  [xself]
                    memory > xz
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xa.write (((xNode)).apply)
                        xb.write (((xNode)).apply)
                        (((unsupported)).apply (((xa).xb)) ((xb)))
                        (((unsupported)).apply (((xb).xa)) ((xa)))
                        xz.write (((xdeepcopy)).apply ((xa)))
                xtest_uninitialized_modules.write
                  [xself]
                    memory > xm
                    memory > xM
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xm.write ((((xM).x__new__)).apply ((xM)))
                        bogusForceDataize.write (((xstr)).apply ((xm)))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xm)) ("__name__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xm)) ("__file__"))
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xm)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xm).x__dict__)))
                        (((unsupported)).apply (((xm).xfoo)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xm).x__dict__)) ((((unsupported)).apply ("foo") (1))))
                xtest_funny_new.write
                  [xself]
                    memory > xd
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__new__.write
                            [xcls xarg]
                              seq > @
                                (((xisinstance)).apply ((xarg)) ((xstr))).if
                                  (((unsupported)).apply ((((unsupported)).apply (1) (2) (3))))
                                  (((xisinstance)).apply ((xarg)) ((xint))).if
                                    (((unsupported)).apply (((((xobject).x__new__)).apply ((xD)))))
                                    (((unsupported)).apply (((((xobject).x__new__)).apply ((xcls)))))
                        (((unsupported)).apply ((xC)))
                          x__init__.write
                            [xself xarg]
                              seq > @
                                (((unsupported)).apply (((xself).xfoo)) ((xarg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC)).apply ("1"))) ((((unsupported)).apply (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xD)).apply ("1"))) ((((unsupported)).apply (1) (2) (3))))
                        xd.write (((xD)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) ("None: is there a None literal in the EO language?"))
                        xd.write (((xC)).apply (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xd)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (1))
                        xd.write (((xD)).apply (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xd)) ((xD)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xfoo)) (1))
                        (((unsupported)).apply ((xobject)))
                          x__new__.write
                            []
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply ((xargs)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC)).apply (1) (2))) ((((unsupported)).apply ((xC)) (1) (2))))
                        (((unsupported)).apply ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xD)).apply (1) (2))) ((((unsupported)).apply ((xD)) (1) (2))))
                        (((unsupported)).apply ((xobject)))
                          x__new__.write
                            []
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply ((xargs)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xC)).apply (1) (2))) ((((unsupported)).apply ((xC)) ((xC)) (1) (2))))
                        (((unsupported)).apply ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xD)).apply (1) (2))) ((((unsupported)).apply ((xD)) ((xD)) (1) (2))))
                xtest_imul_bug.write
                  [xself]
                    memory > xx
                    memory > xy
                    memory > x__imul__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__imul__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xother)))))
                        xx.write (((xC)).apply)
                        xy.write (xx)
                        (((unsupported)).apply ((xy)) (1.0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) ((((unsupported)).apply ((xx)) (1.0))))
                        xy.write (xx)
                        (((unsupported)).apply ((xy)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) ((((unsupported)).apply ((xx)) (2))))
                        xy.write (xx)
                        (((unsupported)).apply ((xy)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) ((((unsupported)).apply ((xx)) (3))))
                        xy.write (xx)
                        (((unsupported)).apply ((xy)) ((((unsupported)).apply (1) (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) ((((unsupported)).apply ((xx)) ((((unsupported)).apply (1) (100))))))
                        xy.write (xx)
                        (((unsupported)).apply ((xy)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) ((((unsupported)).apply ((xx)) ("None: is there a None literal in the EO language?"))))
                        xy.write (xx)
                        (((unsupported)).apply ((xy)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) ((((unsupported)).apply ((xx)) ("foo"))))
                xtest_copy_setstate.write
                  [xself]
                    memory > x__setstate__
                    memory > xb
                    memory > x__getstate__
                    memory > x__init__
                    memory > xgetfoo
                    memory > xsetfoo
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).xfoo)) ((xfoo)))
                                    (((unsupported)).apply (((xself).x__foo)) ((xfoo)))
                            xsetfoo.write
                              [xself xfoo]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xself).xfoo)) ((xfoo)))
                            xgetfoo.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).x__foo)))
                            x__getstate__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply (((xself).xfoo)))))
                            x__setstate__.write
                              [xself_ xlst]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xlst)))) (1))
                                    (((unsupported)).apply (((xself_).x__foo)) (((xself_).xfoo)) ((((unsupported)).apply ((xlst)) (0))))
                        xa.write (((xC)).apply (42))
                        bogusForceDataize.write ((((xa).xsetfoo)).apply (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xa).xgetfoo)).apply)) (42))
                        xb.write ((((xcopy).xcopy)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xb).xgetfoo)).apply)) (24))
                        xb.write ((((xcopy).xdeepcopy)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xb).xfoo)) (24))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xb).xgetfoo)).apply)) (24))
                xtest_slices.write
                  [xself]
                    memory > x__getitem__
                    memory > xa
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("hello") ((((unsupported)).apply (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("hello") ((((xslice)).apply (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xstr).x__getitem__)).apply ("hello") ((((xslice)).apply (4))))) ("hell"))
                        (((unsupported)).apply ((xstr)))
                          x__getitem__.write
                            [xself xx]
                              seq > @
                                (((unsupported)).apply (((((xstr).x__getitem__)).apply ((xself)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xS)).apply ("hello"))) ((((unsupported)).apply (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xS)).apply ("hello"))) ((((xslice)).apply (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xS)).apply ("hello")).x__getitem__)).apply ((((xslice)).apply (4))))) ("hell"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2) (3))) ((((unsupported)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2) (3))) ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtuple).x__getitem__)).apply ((((unsupported)).apply (1) (2) (3))) ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        (((unsupported)).apply ((xtuple)))
                          x__getitem__.write
                            [xself xx]
                              seq > @
                                (((unsupported)).apply (((((xtuple).x__getitem__)).apply ((xself)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xT)).apply ((((unsupported)).apply (1) (2) (3))))) ((((unsupported)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xT)).apply ((((unsupported)).apply (1) (2) (3))))) ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xT)).apply ((((unsupported)).apply (1) (2) (3)))).x__getitem__)).apply ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2) (3))) ((((unsupported)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2) (3))) ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xlist).x__getitem__)).apply ((((unsupported)).apply (1) (2) (3))) ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        (((unsupported)).apply ((xlist)))
                          x__getitem__.write
                            [xself xx]
                              seq > @
                                (((unsupported)).apply (((((xlist).x__getitem__)).apply ((xself)) ((xx)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xL)).apply ((((unsupported)).apply (1) (2) (3))))) ((((unsupported)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xL)).apply ((((unsupported)).apply (1) (2) (3))))) ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xL)).apply ((((unsupported)).apply (1) (2) (3)))).x__getitem__)).apply ((((xslice)).apply (2))))) ((((unsupported)).apply (1) (2))))
                        xa.write (((xL)).apply ((((unsupported)).apply (1) (2) (3))))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) ((((xslice)).apply (1) (3))))) ((((unsupported)).apply (3) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply (1) (3) (2))))
                        (((unsupported)).apply ((((unsupported)).apply ((xa)) ((((xslice)).apply (0) (2) (1))))) ((((unsupported)).apply (3) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply (3) (1) (2))))
                        bogusForceDataize.write ((((xa).x__setitem__)).apply ((((xslice)).apply (1) (3))) ((((unsupported)).apply (2) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply (3) (2) (1))))
                        bogusForceDataize.write ((((xa).x__setitem__)).apply ((((xslice)).apply (0) (2) (1))) ((((unsupported)).apply (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xa)) ((((unsupported)).apply (2) (3) (1))))
                xtest_subtype_resurrection.write
                  [xself]
                    memory > x__del__
                    memory > xc
                    memory > xcontainer
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            xcontainer.write (((unsupported)).apply)
                            x__del__.write
                              [xself]
                                seq > @
                                  bogusForceDataize.write (((((xC).xcontainer).xappend)).apply ((xself)))
                        xc.write (((xC)).apply)
                        (((unsupported)).apply (((xc).xattr)) (42))
                        (((unsupported)).apply ((((unsupported)).apply ((xc)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xC).xcontainer)))) (1))
                        (((unsupported)).apply ((((unsupported)).apply (((xC).x__del__)))))
                xtest_slots_trash.write
                  [xself]
                    memory > xo
                    memory > x__slots__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__slots__.write (((unsupported)).apply ("x"))
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)).apply (((xself).xx)) ((xx)))
                        xo.write "None: is there a None literal in the EO language?"
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (50000))))
                          xo.write (((xtrash)).apply ((xo)))
                        (((unsupported)).apply ((((unsupported)).apply ((xo)))))
                xtest_slots_multiple_inheritance.write
                  [xself]
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__slots__.write (((unsupported)).apply)
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xA)) ((xB)))
                          x__slots__.write (((unsupported)).apply)
                        ((((xsupport).xcheck_impl_detail)).apply).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).x__basicsize__)) (((xB).x__basicsize__)))
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xC)) ("__dict__"))
                        bogusForceDataize.write ((((xself).xassertHasAttr)).apply ((xC)) ("__weakref__"))
                        (((unsupported)).apply (((((xC)).apply).xx)) (2))
                xtest_rmul.write
                  [xself]
                    memory > x__rmul__
                    memory > x__mul__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__mul__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("mul"))
                            x__rmul__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("rmul"))
                        xa.write (((xC)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).mul 2)) ("mul"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).mul 2.2)) ("mul"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((2.mul (xa))) ("rmul"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((2.2.mul (xa))) ("rmul"))
                xtest_ipow.write
                  [xself]
                    memory > x__ipow__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__ipow__.write
                            [xself xother]
                              seq > @
                        xa.write (((xC)).apply)
                        (((unsupported)).apply ((xa)) (2))
                xtest_mutable_bases.write
                  [xself]
                    memory > x__getattribute__
                    memory > xmeth
                    memory > xd
                    memory > xe
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__getattribute__.write
                              [xself xattr]
                                seq > @
                                  ((xattr).eq "a").if
                                    (((unsupported)).apply (2))
                                    (((unsupported)).apply (((((((xsuper)).apply ((xC2)) ((xself))).x__getattribute__)).apply ((xattr)))))
                            xmeth.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (1))
                        (((unsupported)).apply ((xC)))
                        (((unsupported)).apply ((xD)))
                        xd.write (((xD)).apply)
                        xe.write (((xE)).apply)
                        (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xC)))))
                        (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xC2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xd).xmeth)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xe).xmeth)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).xa)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xe).xa)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC2).x__subclasses__)).apply)) ((((unsupported)).apply ((xD)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xTypeError)) ((xAttributeError)))))
                          (((unsupported)).apply ((((unsupported)).apply (((xD).x__bases__)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't be able to delete .__bases__"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply)))
                          ((((xstr)).apply ((xmsg))).eq "a new-style class can't have only classic bases").if
                            bogusForceDataize.write ((((xself).xfail)).apply ("wrong error message for .__bases__ = ()"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't be able to set .__bases__ to ()"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xD)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't be able to create inheritance cycles"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xC)) ((xC)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("didn't detect repeated base classes"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xE)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't be able to create inheritance cycles"))
                xtest_builtin_bases.write
                  [xself]
                    memory > xbuiltin_types
                    seq > @
                      seq
                        xbuiltin_types.write (((unsupported)).apply ((xtp)) ((xtp)) ((((((xbuiltins).x__dict__).xvalues)).apply)) ((((xisinstance)).apply ((xtp)) ((xtype)))))
                        (((unsupported)).apply ((xtp)) ((xbuiltin_types)))
                          seq
                            bogusForceDataize.write ((((xobject).x__getattribute__)).apply ((xtp)) ("__bases__"))
                            (((unsupported)).apply ((xtp)) ((xobject))).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xtp).x__bases__)))) (1) ((xtp)))
                        (((unsupported)).apply ((xlist)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xC)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xL).x__bases__)) ((((unsupported)).apply ((xdict)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't turn list subclass into dict subclass"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xlist).x__bases__)) ((((unsupported)).apply ((xdict)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't be able to assign to list.__bases__"))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xC)) ((xlist)))))
                          (((unsupported)).apply (0) ("best_base calculation found wanting"))
                xtest_unsubclassable_types.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xtype)).apply ("None: is there a None literal in the EO language?"))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((xobject)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xtype)).apply ("None: is there a None literal in the EO language?"))) ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((xO)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xtype)).apply ("None: is there a None literal in the EO language?"))) ((xO)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xX).x__bases__)) ((((unsupported)).apply ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xX).x__bases__)) ((((unsupported)).apply ((xobject)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xX).x__bases__)) ((((unsupported)).apply ((((xtype)).apply ("None: is there a None literal in the EO language?"))) ((xobject)))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xX).x__bases__)) ((((unsupported)).apply ((xO)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xX).x__bases__)) ((((unsupported)).apply ((((xtype)).apply ("None: is there a None literal in the EO language?"))) ((xO)))))
                xtest_mutable_bases_with_failing_mro.write
                  [xself]
                    memory > xD_mro_before
                    memory > x__new__
                    memory > xmro
                    memory > xE_mro_before
                    seq > @
                      seq
                        (((unsupported)).apply ((xtype)))
                          seq
                            x__new__.write
                              [xself xname xbases xns]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xflag)) (0))
                                    (((unsupported)).apply (((((((xsuper)).apply ((xWorkOnce)) ((xself))).x__new__)).apply ((xWorkOnce)) ((xname)) ((xbases)) ((xns)))))
                            xmro.write
                              [xself]
                                seq > @
                                  (((xself).xflag).greater 0).if
                                    (((unsupported)).apply ((((xRuntimeError)).apply ("bozo"))))
                                    seq
                                      (((unsupported)).apply (((xself).xflag)) (1))
                                      (((unsupported)).apply (((((xtype).xmro)).apply ((xself)))))
                        (((unsupported)).apply ((xtype)))
                          xmro.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (((((xtype).xmro)).apply ((xself)))))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xC)))
                        (((unsupported)).apply ((xD)))
                        (((unsupported)).apply ((xD)) ((xWorkOnce)))
                        (((unsupported)).apply ((xD)) ((xWorkAlways)))
                        xE_mro_before.write ((xE).x__mro__)
                        xD_mro_before.write ((xD).x__mro__)
                        (((unsupported)).apply ((xRuntimeError)))
                          (((unsupported)).apply (((xD).x__bases__)) ((((unsupported)).apply ((xC2)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xE).x__mro__)) ((xE_mro_before)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xD).x__mro__)) ((xD_mro_before)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("exception not propagated"))
                xtest_mutable_bases_catch_mro_conflict.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xA)) ((xB)))
                        (((unsupported)).apply ((xA)) ((xB)))
                        (((unsupported)).apply ((xC)) ((xD)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB)) ((xA)))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("didn't catch MRO conflict"))
                xtest_mutable_names.write
                  [xself]
                    memory > xmod
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        xmod.write ((xC).x__module__)
                        (((unsupported)).apply (((xC).x__name__)) ("D"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xC).x__module__)) (((xC).x__name__)))) ((((unsupported)).apply ((xmod)) ("D"))))
                        (((unsupported)).apply (((xC).x__name__)) ("D.E"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xC).x__module__)) (((xC).x__name__)))) ((((unsupported)).apply ((xmod)) ("D.E"))))
                xtest_evil_type_name.write
                  [xself]
                    memory > x__del__
                    seq > @
                      seq
                        (((unsupported)).apply ((xstr)))
                          x__del__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (((xC).x__name__)) ("other"))
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xC).x__name__)) ((((xNasty)).apply ("abc"))))
                        (((unsupported)).apply (((xC).x__name__)) ("normal"))
                xtest_subclass_right_op.write
                  [xself]
                    memory > x__rfloordiv__
                    memory > x__floordiv__
                    seq > @
                      seq
                        (((unsupported)).apply ((xint)))
                          seq
                            x__floordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("B.__floordiv__"))
                            x__rfloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("B.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xB)).apply (1))) (1))) ("B.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1) ((((xB)).apply (1))))) ("B.__rfloordiv__"))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__floordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("C.__floordiv__"))
                            x__rfloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("C.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xC)).apply)) (1))) ("C.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1) ((((xC)).apply)))) ("C.__rfloordiv__"))
                        (((unsupported)).apply ((xC)))
                          seq
                            x__floordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("D.__floordiv__"))
                            x__rfloordiv__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply ("D.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xD)).apply)) ((((xC)).apply)))) ("D.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xC)).apply)) ((((xD)).apply)))) ("D.__rfloordiv__"))
                        (((unsupported)).apply ((xC)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xE).x__rfloordiv__)) (((xC).x__rfloordiv__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xE)).apply)) (1))) ("C.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1) ((((xE)).apply)))) ("C.__rfloordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xE)).apply)) ((((xC)).apply)))) ("C.__floordiv__"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xC)).apply)) ((((xE)).apply)))) ("C.__floordiv__"))
                xtest_meth_class_get.write
                  [xself]
                    memory > xres
                    memory > xarg
                    memory > xdescr
                    seq > @
                      (((unsupported)).apply)
                        xarg.write (((unsupported)).apply (1) (2) (3))
                        xres.write (((unsupported)).apply (1) ("None: is there a None literal in the EO language?") (2) ("None: is there a None literal in the EO language?") (3) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xdict).xfromkeys)).apply ((xarg)))) ((xres)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply).xfromkeys)).apply ((xarg)))) ((xres)))
                        xdescr.write (((unsupported)).apply (((xdict).x__dict__)) ("fromkeys"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xdescr).x__get__)).apply ("None: is there a None literal in the EO language?") ((xdict)))).apply ((xarg)))) ((xres)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xdescr).x__get__)).apply ((((unsupported)).apply)))).apply ((xarg)))) ((xres)))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't have allowed descr.__get__(None, None)"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)).apply (42))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't have allowed descr.__get__(42)"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)).apply ("None: is there a None literal in the EO language?") (42))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't have allowed descr.__get__(None, 42)"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xdescr).x__get__)).apply ("None: is there a None literal in the EO language?") ((xint)))
                          bogusForceDataize.write ((((xself).xfail)).apply ("shouldn't have allowed descr.__get__(None, int)"))
                xtest_isinst_isclass.write
                  [xself]
                    memory > x__getattribute__
                    memory > x__init__
                    memory > xpa
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)).apply (((xself).x__obj)) ((xobj)))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  ((((xname).xstartswith)).apply ("_Proxy__")).if
                                    (((unsupported)).apply (((((xobject).x__getattribute__)).apply ((xself)) ((xname)))))
                                    (((unsupported)).apply ((((xgetattr)).apply (((xself).x__obj)) ((xname)))))
                        (((unsupported)).apply)
                        xa.write (((xC)).apply)
                        xpa.write (((xProxy)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xpa)) ((xC)))
                        (((unsupported)).apply ((xC)))
                        xa.write (((xD)).apply)
                        xpa.write (((xProxy)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xpa)) ((xC)))
                        (((unsupported)).apply ((xobject)))
                        xa.write (((xC)).apply)
                        xpa.write (((xProxy)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xpa)) ((xC)))
                        (((unsupported)).apply ((xC)))
                        xa.write (((xD)).apply)
                        xpa.write (((xProxy)).apply ((xa)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xa)) ((xC)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xpa)) ((xC)))
                xtest_proxy_super.write
                  [xself]
                    memory > x__getattribute__
                    memory > xp
                    memory > xf
                    memory > xobj
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)).apply (((xself).x__obj)) ((xobj)))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  ((((xname).xstartswith)).apply ("_Proxy__")).if
                                    (((unsupported)).apply (((((xobject).x__getattribute__)).apply ((xself)) ((xname)))))
                                    (((unsupported)).apply ((((xgetattr)).apply (((xself).x__obj)) ((xname)))))
                        (((unsupported)).apply ((xobject)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("B.f"))
                        (((unsupported)).apply ((xB)))
                          xf.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((((((xsuper)).apply ((xC)) ((xself))).xf)).apply).add "->C.f")))
                        xobj.write (((xC)).apply)
                        xp.write (((xProxy)).apply ((xobj)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((unsupported)).apply (((xC).x__dict__)) ("f"))).apply ((xp)))) ("B.f->C.f"))
                xtest_carloverre.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xobject).x__setattr__)).apply ((xstr)) ("foo") (42))
                          bogusForceDataize.write ((((xself).xfail)).apply ("Carlo Verre __setattr__ succeeded!"))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write ((((xobject).x__delattr__)).apply ((xstr)) ("lower"))
                          bogusForceDataize.write ((((xself).xfail)).apply ("Carlo Verre __delattr__ succeeded!"))
                xtest_carloverre_multi_inherit_valid.write
                  [xself]
                    memory > x__setattr__
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply ((xtype)))
                          x__setattr__.write
                            [xcls xkey xvalue]
                              seq > @
                                bogusForceDataize.write ((((xtype).x__setattr__)).apply ((xcls)) ((xkey)) ((xvalue)))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xB)) ((xA)))
                        xobj.write (((xC)).apply ("D") ((((unsupported)).apply ((xobject)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xobj).xtest)) (TRUE))
                          bogusForceDataize.write ((((xself).xfail)).apply ("setattr through direct base types should be legal"))
                xtest_carloverre_multi_inherit_invalid.write
                  [xself]
                    memory > x__setattr__
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply ((xtype)))
                          x__setattr__.write
                            [xcls xkey xvalue]
                              seq > @
                                bogusForceDataize.write ((((xobject).x__setattr__)).apply ((xcls)) ((xkey)) ((xvalue)))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xB)) ((xA)))
                        xobj.write (((xC)).apply ("D") ((((unsupported)).apply ((xobject)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply (((xobj).xtest)) (TRUE))
                          bogusForceDataize.write ((((xself).xfail)).apply ("setattr through indirect base types should be rejected"))
                xtest_weakref_segfault.write
                  [xself]
                    memory > x__del__
                    memory > xo
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                          seq
                            x__init__.write
                              [xself xreferrent]
                                seq > @
                                  (((unsupported)).apply (((xself).xref)) (((((xweakref).xref)).apply ((xreferrent)))))
                            x__del__.write
                              [xself]
                                memory > xx
                                seq > @
                                  xx.write ((((xself).xref)).apply)
                        (((unsupported)).apply ((xobject)))
                        xo.write (((xOops)).apply)
                        (((unsupported)).apply (((xo).xwhatever)) ((((xProvoker)).apply ((xo)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xo)))))
                xtest_wrapper_segfault.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (1000000))))
                          xf.write ((xf).x__call__)
                        xf.write "None: is there a None literal in the EO language?"
                xtest_file_fault.write
                  [xself]
                    memory > x__getattr__
                    memory > xtest_stdout
                    seq > @
                      seq
                        xtest_stdout.write ((xsys).xstdout)
                        (((unsupported)).apply)
                          x__getattr__.write
                            [xself xattr]
                              seq > @
                                seq
                                  (((unsupported)).apply (((xsys).xstdout)) (((xsys).x__stdout__)))
                                  (((unsupported)).apply ((((xRuntimeError)).apply (("Premature access to sys.stdout.%s".mod (xattr))))))
                        (((unsupported)).apply (((xsys).xstdout)) ((((xStdoutGuard)).apply)))
                        (((unsupported)).apply ((xRuntimeError)))
                          bogusForceDataize.write (((xprint)).apply ("Oops!"))
                          (((unsupported)).apply (((xsys).xstdout)) ((xtest_stdout)))
                xtest_vicious_descriptor_nonsense.write
                  [xself]
                    memory > x__get__
                    memory > x__eq__
                    memory > xc
                    memory > x__hash__
                    memory > xattr
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xhash)).apply ("attr"))))
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  seq
                                    (((unsupported)).apply ((xAttributeError)))
                                      (((unsupported)).apply ((((unsupported)).apply (((xC).xattr)))))
                                    (((unsupported)).apply (0))
                        (((unsupported)).apply ((xobject)))
                          x__get__.write
                            [xself xob xtype]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (1))
                        (((unsupported)).apply ((xobject)))
                          xattr.write (((xDescr)).apply)
                        xc.write (((xC)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xc).x__dict__)) ((((xEvil)).apply)))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xattr)) (1))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertNotHasAttr)).apply ((xc)) ("attr"))
                xtest_init.write
                  [xself]
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (10))
                        (((unsupported)).apply ((xTypeError)))
                          bogusForceDataize.write (((xFoo)).apply)
                          bogusForceDataize.write ((((xself).xfail)).apply ("did not test __init__() for None return"))
                xassertNotOrderable.write
                  [xself xa xb]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                xtest_method_wrapper.write
                  [xself]
                    memory > xl
                    seq > @
                      seq
                        xl.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xl).x__add__).eq ((xl).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xl).x__add__).neq ((xl).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xl).x__add__).eq ((((unsupported)).apply).x__add__))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xl).x__add__).neq ((((unsupported)).apply).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xl).x__add__).eq ((xl).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xl).x__add__).neq ((xl).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)).apply (((xl).x__add__)) (((xl).x__add__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xl).x__add__).x__name__)) ("__add__"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xl).x__add__).x__self__)) ((xl)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xl).x__add__).x__objclass__)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xl).x__add__).x__doc__)) ((((xlist).x__add__).x__doc__)))
                        bogusForceDataize.write (((xhash)).apply (((xl).x__add__)))
                xtest_builtin_function_or_method.write
                  [xself]
                    memory > xl
                    seq > @
                      seq
                        xl.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xl).xappend).eq ((xl).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xl).xappend).neq ((xl).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xl).xappend).eq ((((unsupported)).apply).xappend))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xl).xappend).neq ((((unsupported)).apply).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xl).xappend).eq ((xl).xpop))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xl).xappend).neq ((xl).xpop))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)).apply (((xl).xappend)) (((xl).xappend)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xl).xappend).x__name__)) ("append"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xl).xappend).x__self__)) ((xl)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xl).xappend).x__doc__)) ((((xlist).xappend).x__doc__)))
                        bogusForceDataize.write (((xhash)).apply (((xl).xappend)))
                xtest_special_unbound_method_types.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xlist).x__add__).eq ((xlist).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xlist).x__add__).neq ((xlist).x__add__))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xlist).x__add__).eq ((xlist).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xlist).x__add__).neq ((xlist).x__mul__))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)).apply (((xlist).x__add__)) (((xlist).x__add__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist).x__add__).x__name__)) ("__add__"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xlist).x__add__).x__objclass__)) ((xlist)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xlist).xappend).eq ((xlist).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xlist).xappend).neq ((xlist).xappend))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xlist).xappend).eq ((xlist).xpop))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xlist).xappend).neq ((xlist).xpop))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)).apply (((xlist).xappend)) (((xlist).xappend)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist).xappend).x__name__)) ("append"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xlist).xappend).x__objclass__)) ((xlist)))
                xtest_not_implemented.write
                  [xself]
                    memory > xc
                    memory > xN2
                    memory > xA
                    memory > xa
                    memory > xC
                    memory > xspecialmethod
                    memory > xiname
                    memory > xcheck
                    memory > xN1
                    memory > xrname
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xspecialmethod.write
                          [xself xother]
                            seq > @
                              (((unsupported)).apply ((xNotImplemented)))
                        xcheck.write
                          [xexpr xx xy]
                            seq > @
                              (((unsupported)).apply ((xTypeError)))
                                bogusForceDataize.write (((xexec)).apply ((xexpr)) ((((unsupported)).apply ("x") ((xx)) ("y") ((xy)) ("operator") ((xoperator)))))
                                bogusForceDataize.write ((((xself).xfail)).apply (("no TypeError from %r".mod (((unsupported)).apply ((xexpr))))))
                        xN1.write (((xsys).xmaxsize).add 1)
                        xN2.write ((xsys).xmaxsize)
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xexpr)) ((xiexpr)))) ((((unsupported)).apply ((((unsupported)).apply ("__add__") ("x + y") ("x += y"))) ((((unsupported)).apply ("__sub__") ("x - y") ("x -= y"))) ((((unsupported)).apply ("__mul__") ("x * y") ("x *= y"))) ((((unsupported)).apply ("__matmul__") ("x @ y") ("x @= y"))) ((((unsupported)).apply ("__falsediv__") ("x / y") ("x /= y"))) ((((unsupported)).apply ("__floordiv__") ("x // y") ("x //= y"))) ((((unsupported)).apply ("__mod__") ("x % y") ("x %= y"))) ((((unsupported)).apply ("__divmod__") ("divmod(x, y)") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("__pow__") ("x ** y") ("x **= y"))) ((((unsupported)).apply ("__lshift__") ("x << y") ("x <<= y"))) ((((unsupported)).apply ("__rshift__") ("x >> y") ("x >>= y"))) ((((unsupported)).apply ("__and__") ("x & y") ("x &= y"))) ((((unsupported)).apply ("__or__") ("x | y") ("x |= y"))) ((((unsupported)).apply ("__xor__") ("x ^ y") ("x ^= y"))))))
                          seq
                            xrname.write ("__r".add (((unsupported)).apply ((xname)) ((((unsupported)).apply (2)))))
                            xA.write (((xtype)).apply ("A") ((((unsupported)).apply)) ((((unsupported)).apply ((xname)) ((xspecialmethod)))))
                            xa.write (((xA)).apply)
                            bogusForceDataize.write (((xcheck)).apply ((xexpr)) ((xa)) ((xa)))
                            bogusForceDataize.write (((xcheck)).apply ((xexpr)) ((xa)) ((xN1)))
                            bogusForceDataize.write (((xcheck)).apply ((xexpr)) ((xa)) ((xN2)))
                            (xiexpr).if
                              seq
                                bogusForceDataize.write (((xcheck)).apply ((xiexpr)) ((xa)) ((xa)))
                                bogusForceDataize.write (((xcheck)).apply ((xiexpr)) ((xa)) ((xN1)))
                                bogusForceDataize.write (((xcheck)).apply ((xiexpr)) ((xa)) ((xN2)))
                                xiname.write ("__i".add (((unsupported)).apply ((xname)) ((((unsupported)).apply (2)))))
                                xC.write (((xtype)).apply ("C") ((((unsupported)).apply)) ((((unsupported)).apply ((xiname)) ((xspecialmethod)))))
                                xc.write (((xC)).apply)
                                bogusForceDataize.write (((xcheck)).apply ((xiexpr)) ((xc)) ((xa)))
                                bogusForceDataize.write (((xcheck)).apply ((xiexpr)) ((xc)) ((xN1)))
                                bogusForceDataize.write (((xcheck)).apply ((xiexpr)) ((xc)) ((xN2)))
                xtest_assign_slice.write
                  [xself]
                    memory > x__setitem__
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__setitem__.write
                            [xself xidx xvalue]
                              seq > @
                                (((unsupported)).apply (((xself).xvalue)) ((xvalue)))
                        xc.write (((xC)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xc)) ((((unsupported)).apply (1) (2))))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xvalue)) (3))
                xtest_set_and_no_get.write
                  [xself]
                    memory > xdescr
                    memory > x__init__
                    memory > xa
                    memory > xx
                    memory > x__set__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xname]
                                seq > @
                                  (((unsupported)).apply (((xself).xname)) ((xname)))
                            x__set__.write
                              [xself xobj xvalue]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply (((xobj).x__dict__)) (((xself).xname)))) ((xvalue)))
                        xdescr.write (((xDescr)).apply ("a"))
                        (((unsupported)).apply ((xobject)))
                          xa.write (xdescr)
                        xx.write (((xX)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xx).xa)) ((xdescr)))
                        (((unsupported)).apply (((xx).xa)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).xa)) (42))
                        (((unsupported)).apply ((xtype)))
                        (((unsupported)).apply ((xMeta)))
                        (((unsupported)).apply (((xX).xa)) (42))
                        (((unsupported)).apply (((xMeta).xa)) ((((xDescr)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xX).xa)) (42))
                xtest_getattr_hooks.write
                  [xself]
                    memory > xcounter
                    memory > x__getattribute__
                    memory > x__getattr__
                    memory > xdescr
                    memory > x__get__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            xcounter.write 0
                            x__get__.write
                              [xself xobj xobjtype]
                                memory > xgetter
                                seq > @
                                  (((unsupported)).apply)
                                    xgetter.write
                                      [xname]
                                        seq > @
                                          seq
                                            (((unsupported)).apply (((xself).xcounter)) (1))
                                            (((unsupported)).apply ((((xAttributeError)).apply ((xname)))))
                                    (((unsupported)).apply ((xgetter)))
                        xdescr.write (((xDescriptor)).apply)
                        (((unsupported)).apply ((xobject)))
                          x__getattribute__.write (xdescr)
                        (((unsupported)).apply ((xobject)))
                          x__getattr__.write (xdescr)
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__getattribute__.write (xdescr)
                            x__getattr__.write (xdescr)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAttributeError)) ((xgetattr)) ((((xA)).apply)) ("attr"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xdescr).xcounter)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAttributeError)) ((xgetattr)) ((((xB)).apply)) ("attr"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xdescr).xcounter)) (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAttributeError)) ((xgetattr)) ((((xC)).apply)) ("attr"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xdescr).xcounter)) (4))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__getattr__.write
                              [xself xname]
                                seq > @
                                  (((unsupported)).apply ((((xAttributeError)).apply ((xname)))))
                            x__getattribute__.write
                              [xself xname]
                                seq > @
                                  seq
                                    (((unsupported)).apply ((((unsupported)).apply (((xEvilGetattribute).x__getattr__)))))
                                    (((unsupported)).apply ((xi)) ((((xrange)).apply (5))))
                                      bogusForceDataize.write ((((xgc).xcollect)).apply)
                                    (((unsupported)).apply ((((xAttributeError)).apply ((xname)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAttributeError)) ((xgetattr)) ((((xEvilGetattribute)).apply)) ("attr"))
                xtest_type___getattribute__.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xtype).x__getattribute__)) ((xlist)) ((xtype)))
                xtest_abstractmethods.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAttributeError)) ((xgetattr)) ((xtype)) ("__abstractmethods__"))
                        (((unsupported)).apply ((xtype)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xAttributeError)) ((xgetattr)) ((xmeta)) ("__abstractmethods__"))
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xAttributeError)))))
                          (((unsupported)).apply ((((unsupported)).apply (((xX).x__abstractmethods__)))))
                xtest_proxy_call.write
                  [xself]
                    memory > x__class__
                    memory > xfake_str
                    seq > @
                      seq
                        (((unsupported)).apply)
                          x__class__.write (xstr)
                        xfake_str.write (((xFakeStr)).apply)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xfake_str)) ((xstr)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xstr).xsplit)).apply ((xfake_str)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xstr).x__add__)).apply ((xfake_str)) ("abc"))
                xtest_repr_as_str.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xFoo).x__repr__)) (((xFoo).x__str__)))
                        xfoo.write (((xFoo)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xRecursionError)) ((xstr)) ((xfoo)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xRecursionError)) ((xrepr)) ((xfoo)))
                xtest_mixing_slot_wrappers.write
                  [xself]
                    memory > x__neg__
                    memory > xx
                    memory > x__setattr__
                    seq > @
                      seq
                        (((unsupported)).apply ((xdict)))
                          seq
                            x__setattr__.write ((xdict).x__setitem__)
                            x__neg__.write ((xdict).xcopy)
                        xx.write (((xX)).apply)
                        (((unsupported)).apply (((xx).xy)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xx)) ("y"))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) (((xx).neg)))
                xtest_wrong_class_slot_wrapper.write
                  [xself]
                    memory > x__eq__
                    memory > x__add__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply ((xint)))
                          seq
                            x__eq__.write ((xstr).x__eq__)
                            x__add__.write ((xstr).x__add__)
                        xa.write (((xA)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                xtest_slot_shadows_class_variable.write
                  [xself]
                    memory > x__slots__
                    memory > xm
                    memory > xfoo
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))) ((xcm)))
                          (((unsupported)).apply)
                            seq
                              x__slots__.write (((unsupported)).apply ("foo"))
                              xfoo.write "None: is there a None literal in the EO language?"
                        xm.write (((xstr)).apply (((xcm).xexception)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("'foo' in __slots__ conflicts with class variable") ((xm)))
                xtest_set_doc.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                          unsupported
                        (((unsupported)).apply (((xX).x__doc__)) ("banana"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xX).x__doc__)) ("banana"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((((unsupported)).apply (((((xtype)).apply ((xlist))).x__dict__)) ("__doc__")).x__set__)).apply ((xlist)) ("blah"))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("can't set list.__doc__") ((((xstr)).apply (((xcm).xexception)))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))) ((xcm)))
                          bogusForceDataize.write ((((((unsupported)).apply (((((xtype)).apply ((xX))).x__dict__)) ("__doc__")).x__delete__)).apply ((xX)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("can't delete X.__doc__") ((((xstr)).apply (((xcm).xexception)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xX).x__doc__)) ("banana"))
                xtest_qualname.write
                  [xself]
                    memory > xqualname
                    memory > xdescriptors
                    memory > xtypes
                    seq > @
                      seq
                        xdescriptors.write (((unsupported)).apply (((xstr).xlower)) (((xcomplex).xreal)) (((xfloat).xreal)) (((xint).x__add__)))
                        xtypes.write (((unsupported)).apply ("method") ("member") ("getset") ("wrapper"))
                        (((unsupported)).apply ((((unsupported)).apply ((xd)) ((xn)))) ((((xzip)).apply ((xdescriptors)) ((xtypes)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtype)).apply ((xd))).x__name__)) (((xn).add "_descriptor")))
                        (((unsupported)).apply ((xd)) ((xdescriptors)))
                          seq
                            xqualname.write (((((xd).x__objclass__).x__qualname__).add ".").add ((xd).x__name__))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xd).x__qualname__)) ((xqualname)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr).xlower).x__qualname__)) ("str.lower"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcomplex).xreal).x__qualname__)) ("complex.real"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xfloat).xreal).x__qualname__)) ("float.real"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint).x__add__).x__qualname__)) ("int.__add__"))
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((unsupported)).apply (((xX).x__qualname__)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((((unsupported)).apply (((xtype).x__dict__)) ("__qualname__")).x__set__)) ((xstr)) ("Oink"))
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                          (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xY).x__qualname__)) ("Y"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xY).xInside).x__qualname__)) ("Y.Inside"))
                xtest_qualname_dict.write
                  [xself]
                    memory > xtp
                    memory > xns
                    seq > @
                      seq
                        xns.write (((unsupported)).apply ("__qualname__") ("some.name"))
                        xtp.write (((xtype)).apply ("Foo") ((((unsupported)).apply)) ((xns)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xtp).x__qualname__)) ("some.name"))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("__qualname__") (((xtp).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xns)) ((((unsupported)).apply ("__qualname__") ("some.name"))))
                        xns.write (((unsupported)).apply ("__qualname__") (1))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xtype)) ("Foo") ((((unsupported)).apply)) ((xns)))
                xtest_cycle_through_dict.write
                  [xself]
                    memory > xx
                    memory > xwr
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xdict)))
                          x__init__.write
                            [xself]
                              seq > @
                                seq
                                  bogusForceDataize.write ((((xdict).x__init__)).apply ((xself)))
                                  (((unsupported)).apply (((xself).x__dict__)) ((xself)))
                        xx.write (((xX)).apply)
                        (((unsupported)).apply (((xx).xattr)) (42))
                        xwr.write ((((xweakref).xref)).apply ((xx)))
                        (((unsupported)).apply ((((unsupported)).apply ((xx)))))
                        bogusForceDataize.write ((((xsupport).xgc_collect)).apply)
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xwr)).apply)))
                        (((unsupported)).apply ((xo)) (((((xgc).xget_objects)).apply)))
                          bogusForceDataize.write ((((xself).xassertIsNot)).apply ((((xtype)).apply ((xo)))) ((xX)))
                xtest_object_new_and_init_with_parameters.write
                  [xself]
                    memory > x__new__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xOverrideNeither)) (1))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xTypeError)) ((xOverrideNeither)) (1))
                        (((unsupported)).apply)
                          x__new__.write
                            [xcls xfoo xkw]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (((((xobject).x__new__)).apply ((xcls)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwds)))))))
                        (((unsupported)).apply)
                          x__init__.write
                            [xself xfoo xkw]
                              seq > @
                                (((unsupported)).apply)
                                  (((unsupported)).apply (((((xobject).x__init__)).apply ((xself)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                        (((unsupported)).apply ((xOverrideNew)) ((xOverrideInit)))
                        (((unsupported)).apply ((xcase)) ((((unsupported)).apply ((xOverrideNew)) ((xOverrideInit)) ((xOverrideBoth)))))
                          seq
                            bogusForceDataize.write (((xcase)).apply (1))
                            (((unsupported)).apply ((xcase)) (1) (2))
                            bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xcase)) (1) (2) (3))
                            (((unsupported)).apply (((xself).xassertRaises)) ((xTypeError)) ((xcase)) (1) (2) (3))
                xtest_subclassing_does_not_duplicate_dict_descriptors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xBase)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("__dict__") (((xBase).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ("__dict__") (((xSub).x__dict__)))
                xtest_bound_method_repr.write
                  [xself]
                    memory > x__call__
                    memory > xsuper_d2
                    memory > xfunc
                    memory > xbase
                    memory > xinstance
                    memory > xderived1
                    memory > xfoo
                    memory > xderived2
                    memory > xmethod
                    seq > @
                      seq
                        (((unsupported)).apply)
                          xmethod.write
                            [xself]
                              seq > @
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((((xFoo)).apply).xmethod)))) ("<bound method .*Foo.method of <.*Foo object at .*>>"))
                        (((unsupported)).apply)
                          xmethod.write
                            [xself]
                              seq > @
                        (((unsupported)).apply ((xBase)))
                        (((unsupported)).apply ((xBase)))
                          xmethod.write
                            [xself]
                              seq > @
                        xbase.write (((xBase)).apply)
                        xderived1.write (((xDerived1)).apply)
                        xderived2.write (((xDerived2)).apply)
                        xsuper_d2.write (((xsuper)).apply ((xDerived2)) ((xderived2)))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((xbase).xmethod)))) ("<bound method .*Base.method of <.*Base object at .*>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((xderived1).xmethod)))) ("<bound method .*Base.method of <.*Derived1 object at .*>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((xderived2).xmethod)))) ("<bound method .*Derived2.method of <.*Derived2 object at .*>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((xsuper_d2).xmethod)))) ("<bound method .*Base.method of <.*Derived2 object at .*>>"))
                        (((unsupported)).apply)
                          xmethod.write
                            [xcls]
                              seq > @
                                (((unsupported)).apply)
                        xfoo.write (((xFoo)).apply)
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((xfoo).xmethod)))) ("<bound method .*Foo.method of <class '.*Foo'>>"))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply (((xFoo).xmethod)))) ("<bound method .*Foo.method of <class '.*Foo'>>"))
                        (((unsupported)).apply)
                          x__call__.write
                            [xself xarg]
                              seq > @
                        xfunc.write (((xMyCallable)).apply)
                        xinstance.write (((xobject)).apply)
                        xmethod.write ((((xtypes).xMethodType)).apply ((xfunc)) ((xinstance)))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply ((xmethod)))) ("<bound method ? of <object object at .*>>"))
                        (((unsupported)).apply (((xfunc).x__name__)) ("name"))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply ((xmethod)))) ("<bound method name of <object object at .*>>"))
                        (((unsupported)).apply (((xfunc).x__qualname__)) ("qualname"))
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((xrepr)).apply ((xmethod)))) ("<bound method qualname of <object object at .*>>"))
                xtest_bpo25750.write
                  [xself]
                    memory > x__new__
                    memory > x__get__
                    memory > xdescr
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                          x__get__.write ((x_testcapi).xbad_get)
                        (((unsupported)).apply)
                          seq
                            xdescr.write (((xDescr)).apply)
                            x__new__.write
                              [xcls]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xcls).xdescr)) ("None: is there a None literal in the EO language?"))
                                    (((unsupported)).apply (((xcls).xlst)) ((((unsupported)).apply ((((unsupported)).apply (2) ((xi)))) ((xi)) ((((xrange)).apply (10000))))))
                        unsupported
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    memory > xmeth
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          xmeth.write
                            [xself]
                              seq > @
                        (((unsupported)).apply (((xself).xC)) ((xC)))
                xtest_iter_keys.write
                  [xself]
                    memory > xkeys
                    memory > xit
                    seq > @
                      (((unsupported)).apply)
                        xit.write ((((((xself).xC).x__dict__).xkeys)).apply)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)).apply ((xit)) ((xlist)))
                        xkeys.write (((xlist)).apply ((xit)))
                        bogusForceDataize.write ((((xkeys).xsort)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkeys)) ((((unsupported)).apply ("__dict__") ("__doc__") ("__module__") ("__weakref__") ("meth"))))
                xtest_iter_values.write
                  [xself]
                    memory > xvalues
                    memory > xit
                    seq > @
                      (((unsupported)).apply)
                        xit.write ((((((xself).xC).x__dict__).xvalues)).apply)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)).apply ((xit)) ((xlist)))
                        xvalues.write (((xlist)).apply ((xit)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xvalues)))) (5))
                xtest_iter_items.write
                  [xself]
                    memory > xkeys
                    memory > xit
                    seq > @
                      (((unsupported)).apply)
                        xit.write ((((((xself).xC).x__dict__).xitems)).apply)
                        bogusForceDataize.write ((((xself).xassertNotIsInstance)).apply ((xit)) ((xlist)))
                        xkeys.write (((unsupported)).apply ((((unsupported)).apply ((xitem)) (0))) ((xitem)) ((xit)))
                        bogusForceDataize.write ((((xkeys).xsort)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xkeys)) ((((unsupported)).apply ("__dict__") ("__doc__") ("__module__") ("__weakref__") ("meth"))))
                xtest_dict_type_with_metaclass.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                        (((unsupported)).apply ((xtype)))
                        (((unsupported)).apply ((xM)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply (((xC).x__dict__)))) ((((xtype)).apply (((xB).x__dict__)))))
                xtest_repr.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        xr.write (((xrepr)).apply ((((xself).xC).x__dict__)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xr).xstartswith)).apply ("mappingproxy("))) ((xr)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xr).xendswith)).apply (")"))) ((xr)))
                        (((unsupported)).apply ((((unsupported)).apply ((xk)) ((xv)))) (((((((xself).xC).x__dict__).xitems)).apply)))
                          bogusForceDataize.write ((((xself).xassertIn)).apply (((("{!r}: {!r}".xformat)).apply ((xk)) ((xv)))) ((xr)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              xtest_pytype_long_ready.write
                [xself]
                  memory > x__pow__
                  seq > @
                    seq
                      (((unsupported)).apply ((xobject)))
                        x__pow__.write
                          [xself]
                            seq > @
                              (((unsupported)).apply)
                      (((unsupported)).apply)
                        bogusForceDataize.write (((xpow)).apply (0) ((((xUserLong)).apply)) (0))
                      bogusForceDataize.write ((((xtype).xmro)).apply ((xtuple)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              xtest_type_lookup_mro_reference.write
                [xself]
                  memory > x__eq__
                  memory > xmykey
                  memory > xX
                  memory > x__hash__
                  memory > xmykey2
                  seq > @
                    seq
                      (((unsupported)).apply ((xobject)))
                        seq
                          x__hash__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((xhash)).apply ("mykey"))))
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply (((xX).x__bases__)) ((((unsupported)).apply ((xBase2)))))
                      (((unsupported)).apply ((xobject)))
                        seq
                          xmykey.write "from Base"
                          xmykey2.write "from Base"
                      (((unsupported)).apply ((xobject)))
                        seq
                          xmykey.write "from Base2"
                          xmykey2.write "from Base2"
                      xX.write (((xtype)).apply ("X") ((((unsupported)).apply ((xBase)))) ((((unsupported)).apply ((((xMyKey)).apply)) (5))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((xX).xmykey)) ("from Base"))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((xX).xmykey2)) ("from Base2"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                x_check_reduce.write
                  [xself xproto xobj xargs xkwargs xstate xlistitems xdictitems]
                    memory > xreduce_value
                    memory > xbase_type
                    seq > @
                      (((unsupported)).apply)
                        ((xproto).geq 2).if
                          seq
                            xreduce_value.write ((((xobj).x__reduce_ex__)).apply ((xproto)))
                            (xkwargs).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xreduce_value)) (0))) (((xcopyreg).x__newobj_ex__)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xreduce_value)) (1))) ((((unsupported)).apply ((((xtype)).apply ((xobj)))) ((xargs)) ((xkwargs)))))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xreduce_value)) (0))) (((xcopyreg).x__newobj__)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xreduce_value)) (1))) (((((unsupported)).apply ((((xtype)).apply ((xobj))))).add (xargs))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xreduce_value)) (2))) ((xstate)))
                            (((unsupported)).apply ((xlistitems)) ("None: is there a None literal in the EO language?")).if
                              bogusForceDataize.write ((((xself).xassertListEqual)).apply ((((xlist)).apply ((((unsupported)).apply ((xreduce_value)) (3))))) ((xlistitems)))
                              bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply ((xreduce_value)) (3))))
                            (((unsupported)).apply ((xdictitems)) ("None: is there a None literal in the EO language?")).if
                              bogusForceDataize.write ((((xself).xassertDictEqual)).apply ((((xdict)).apply ((((unsupported)).apply ((xreduce_value)) (4))))) ((xdictitems)))
                              bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply ((xreduce_value)) (4))))
                          seq
                            xbase_type.write ((((xtype)).apply ((xobj))).x__base__)
                            xreduce_value.write (((unsupported)).apply (((xcopyreg).x_reconstructor)) ((((unsupported)).apply ((((xtype)).apply ((xobj)))) ((xbase_type)) (((((unsupported)).apply ((xbase_type)) ((xobject))).if "None: is there a None literal in the EO language?" (((xbase_type)).apply ((xobj))))))))
                            (((unsupported)).apply ((xstate)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)).apply ((xreduce_value)) ((((unsupported)).apply ((xstate)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xobj).x__reduce_ex__)).apply ((xproto)))) ((xreduce_value)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xobj).x__reduce__)).apply)) ((xreduce_value)))
                xtest_reduce.write
                  [xself]
                    memory > xprotocols
                    memory > x__getstate__
                    memory > x__slots__
                    memory > x__init__
                    memory > xkwargs
                    memory > xstate
                    memory > x__getnewargs_ex__
                    memory > x__getnewargs__
                    memory > xargs
                    memory > xobj
                    seq > @
                      seq
                        xprotocols.write (((xrange)).apply ((((xpickle).xHIGHEST_PROTOCOL).add 1)))
                        xargs.write (((unsupported)).apply ((101.neg)) ("spam"))
                        xkwargs.write (((unsupported)).apply ("bacon") ((201.neg)) ("fish") ((301.neg)))
                        xstate.write (((unsupported)).apply ("cheese") ((401.neg)))
                        (((unsupported)).apply)
                          x__getnewargs__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((xargs)))
                        xobj.write (((xC1)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          bogusForceDataize.write ((((xself).x_check_reduce)).apply ((xproto)) ((xobj)) ((xargs)))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xvalue)))) (((((xstate).xitems)).apply)))
                          bogusForceDataize.write (((xsetattr)).apply ((xobj)) ((xname)) ((xvalue)))
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          (((unsupported)).apply (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xargs)) ((xstate)))
                        (((unsupported)).apply)
                          x__getnewargs__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("bad args"))
                        xobj.write (((xC2)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                              bogusForceDataize.write ((((xobj).x__reduce_ex__)).apply ((xproto)))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ((xargs)) ((xkwargs)))))
                        xobj.write (((xC3)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            bogusForceDataize.write ((((xself).x_check_reduce)).apply ((xproto)) ((xobj)) ((xargs)) ((xkwargs)))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ((xargs)) ("bad dict"))))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ("bad tuple") ((xkwargs)))))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply)))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("bad args"))
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          (((unsupported)).apply ((xcls)) ((((unsupported)).apply ((xC4)) ((xC5)) ((xC6)) ((xC7)))))
                            seq
                              xobj.write (((xcls)).apply)
                              ((xproto).geq 2).if
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((((unsupported)).apply ((xTypeError)) ((xValueError)))))))
                                  bogusForceDataize.write ((((xobj).x__reduce_ex__)).apply ((xproto)))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply ((xargs)) ((((unsupported)).apply)))))
                        xobj.write (((xC9)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          bogusForceDataize.write ((((xself).x_check_reduce)).apply ((xproto)) ((xobj)) ((xargs)))
                        (((unsupported)).apply)
                          x__getnewargs_ex__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((xIndexError)))
                        xobj.write (((xC10)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xobj).x__reduce_ex__)).apply ((xproto)))
                        (((unsupported)).apply)
                          x__getstate__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((xstate)))
                        xobj.write (((xC11)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          (((unsupported)).apply (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((xstate)))
                        (((unsupported)).apply)
                          x__getstate__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ("not dict"))
                        xobj.write (((xC12)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          (((unsupported)).apply (((xself).x_check_reduce)) ((xproto)) ((xobj)) ("not dict"))
                        (((unsupported)).apply)
                          x__getstate__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((xIndexError)))
                        xobj.write (((xC13)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          seq
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                              bogusForceDataize.write ((((xobj).x__reduce_ex__)).apply ((xproto)))
                            ((xproto).less 2).if
                              (((unsupported)).apply (((((xself).xassertRaises)).apply ((xIndexError)))))
                                bogusForceDataize.write ((((xobj).x__reduce__)).apply)
                        (((unsupported)).apply)
                          seq
                            x__slots__.write (((xtuple)).apply ((xstate)))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xvalue)))) (((((xstate).xitems)).apply)))
                                    bogusForceDataize.write (((xsetattr)).apply ((xself)) ((xname)) ((xvalue)))
                        xobj.write (((xC14)).apply)
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          ((xproto).geq 2).if
                            (((unsupported)).apply (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ((xstate)))))
                            seq
                              (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                                bogusForceDataize.write ((((xobj).x__reduce_ex__)).apply ((xproto)))
                              (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                                bogusForceDataize.write ((((xobj).x__reduce__)).apply)
                        (((unsupported)).apply ((xdict)))
                        xobj.write (((xC15)).apply ((((unsupported)).apply ("quebec") ((601.neg)))))
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          (((unsupported)).apply (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((((xdict)).apply ((xobj)))))
                        (((unsupported)).apply ((xlist)))
                        xobj.write (((xC16)).apply ((((unsupported)).apply ("yukon"))))
                        (((unsupported)).apply ((xproto)) ((xprotocols)))
                          (((unsupported)).apply (((xself).x_check_reduce)) ((xproto)) ((xobj)) ((((xlist)).apply ((xobj)))))
                xtest_special_method_lookup.write
                  [xself]
                    memory > x__getstate__
                    memory > xstate
                    memory > x__getattr__
                    memory > xprotocols
                    seq > @
                      seq
                        xprotocols.write (((xrange)).apply ((((xpickle).xHIGHEST_PROTOCOL).add 1)))
                        (((unsupported)).apply)
                          seq
                            x__getstate__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply)))
                            x__getattr__.write
                              [xself xattr]
                                seq > @
                                  seq
                                    (((unsupported)).apply ((xattr)) ((((unsupported)).apply ("__getnewargs__") ("__getnewargs_ex__")))).if
                                      (((unsupported)).apply ((((xAssertionError)).apply ((xattr)))))
                                    (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((xprotocol)) ((xprotocols)))
                          seq
                            xstate.write (((xprotocol).geq 2).if (((unsupported)).apply) "None: is there a None literal in the EO language?")
                            (((unsupported)).apply (((xself).x_check_reduce)) ((xprotocol)) ((((xPicky)).apply)) ((xstate)))
                x_assert_is_copy.write
                  [xself xobj xobjcopy xmsg]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xmsg)) ("None: is there a None literal in the EO language?")).if
                          xmsg.write ((("{!r} is not a copy of {!r}".xformat)).apply ((xobj)) ((xobjcopy)))
                        (((unsupported)).apply (((((xtype)).apply ((xobj))).x__repr__)) (((xobject).x__repr__))).if
                          (((unsupported)).apply ((((xValueError)).apply (("object passed to _assert_is_copy must ".add "override the __repr__ method.")))))
                        (((unsupported)).apply (((xself).xassertIsNot)) ((xobj)) ((xobjcopy)) ((xmsg)))
                        (((unsupported)).apply (((xself).xassertIs)) ((((xtype)).apply ((xobj)))) ((((xtype)).apply ((xobjcopy)))) ((xmsg)))
                        (((xhasattr)).apply ((xobj)) ("__dict__")).if
                          seq
                            (((unsupported)).apply (((xself).xassertDictEqual)) (((xobj).x__dict__)) (((xobjcopy).x__dict__)) ((xmsg)))
                            (((unsupported)).apply (((xself).xassertIsNot)) (((xobj).x__dict__)) (((xobjcopy).x__dict__)) ((xmsg)))
                        (((xhasattr)).apply ((xobj)) ("__slots__")).if
                          seq
                            (((unsupported)).apply (((xself).xassertListEqual)) (((xobj).x__slots__)) (((xobjcopy).x__slots__)) ((xmsg)))
                            (((unsupported)).apply ((xslot)) (((xobj).x__slots__)))
                              seq
                                (((unsupported)).apply (((xself).xassertEqual)) ((((xhasattr)).apply ((xobj)) ((xslot)))) ((((xhasattr)).apply ((xobjcopy)) ((xslot)))) ((xmsg)))
                                (((unsupported)).apply (((xself).xassertEqual)) ((((xgetattr)).apply ((xobj)) ((xslot)) ("None: is there a None literal in the EO language?"))) ((((xgetattr)).apply ((xobjcopy)) ((xslot)) ("None: is there a None literal in the EO language?"))) ((xmsg)))
                        (((unsupported)).apply (((xself).xassertEqual)) ((((xrepr)).apply ((xobj)))) ((((xrepr)).apply ((xobjcopy)))) ((xmsg)))
                x_generate_pickle_copiers.write
                  []
                    memory > xcopy
                    memory > x__init__
                    memory > x__repr__
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                          seq
                            unsupported
                            x__init__.write
                              [xself xproto xdumps xloads]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xproto)) ((xproto)))
                                    (((unsupported)).apply (((xself).xdumps)) ((xdumps)))
                                    (((unsupported)).apply (((xself).xloads)) ((xloads)))
                            xcopy.write
                              [xself xobj]
                                seq > @
                                  (((unsupported)).apply (((((xself).xloads)).apply (((((xself).xdumps)).apply ((xobj)) (((xself).xproto)))))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((("PickleCopier(proto={}, dumps={}.{}, loads={}.{})".xformat)).apply (((xself).xproto)) ((((xself).xdumps).x__module__)) ((((xself).xdumps).x__qualname__)) ((((xself).xloads).x__module__)) ((((xself).xloads).x__qualname__)))))
                        (((unsupported)).apply ((((unsupported)).apply ((((xPickleCopier)).apply ((((unsupported)).apply ((xargs)))))) ((xargs)) (((((xitertools).xproduct)).apply ((((xrange)).apply ((((xpickle).xHIGHEST_PROTOCOL).add 1)))) ((((unsupported)).apply (((xpickle).xdumps)) (((xpickle).x_dumps)))) ((((unsupported)).apply (((xpickle).xloads)) (((xpickle).x_loads)))))))))
                xtest_pickle_slots.write
                  [xself]
                    memory > x__getstate__
                    memory > xy
                    memory > x__setstate__
                    memory > x__repr__
                    memory > xx
                    memory > x__slots__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                          x__slots__.write (((unsupported)).apply ("a"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xpickle).xdumps)).apply ((((xC)).apply)) (0))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xC)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xpickle).xdumps)).apply ((((xD)).apply)) (0))
                        (((unsupported)).apply)
                          seq
                            unsupported
                            x__slots__.write (((unsupported)).apply ("a"))
                            x__getstate__.write
                              [xself]
                                memory > xstate
                                seq > @
                                  seq
                                    xstate.write ((((((xgetattr)).apply ((xself)) ("__dict__") ((((unsupported)).apply))).xcopy)).apply)
                                    (((unsupported)).apply ((xcls)) (((((xtype)).apply ((xself))).x__mro__)))
                                      (((unsupported)).apply ((xslot)) ((((((xcls).x__dict__).xget)).apply ("__slots__") ((((unsupported)).apply)))))
                                        (((unsupported)).apply ((xAttributeError)))
                                          (((unsupported)).apply ((((unsupported)).apply ((xstate)) ((xslot)))) ((((xgetattr)).apply ((xself)) ((xslot)))))
                                    (((unsupported)).apply ((xstate)))
                            x__setstate__.write
                              [xself xstate]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply ((xk)) ((xv)))) (((((xstate).xitems)).apply)))
                                    bogusForceDataize.write (((xsetattr)).apply ((xself)) ((xk)) ((xv)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("%s()<%r>".mod (((unsupported)).apply (((((xtype)).apply ((xself))).x__name__)) (((((xself).x__getstate__)).apply))))))
                        (((unsupported)).apply ((xC)))
                          seq
                            unsupported
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xC)))
                          seq
                            unsupported
                            x__slots__.write (((unsupported)).apply ("b"))
                        (((unsupported)).apply ((xpickle_copier)) (((((xself).x_generate_pickle_copiers)).apply)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xpickle_copier)))))
                            seq
                              xx.write (((xC)).apply)
                              xy.write ((((xpickle_copier).xcopy)).apply ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xx)) ((xy)))
                              (((unsupported)).apply (((xx).xa)) (42))
                              xy.write ((((xpickle_copier).xcopy)).apply ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xx)) ((xy)))
                              xx.write (((xD)).apply)
                              (((unsupported)).apply (((xx).xa)) (42))
                              (((unsupported)).apply (((xx).xb)) (100))
                              xy.write ((((xpickle_copier).xcopy)).apply ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xx)) ((xy)))
                              xx.write (((xE)).apply)
                              (((unsupported)).apply (((xx).xa)) (42))
                              (((unsupported)).apply (((xx).xb)) ("foo"))
                              xy.write ((((xpickle_copier).xcopy)).apply ((xx)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xx)) ((xy)))
                xtest_reduce_copying.write
                  [xself]
                    memory > xobjcopy
                    memory > xtest_classes
                    memory > xARGS
                    memory > xproto
                    memory > xKWARGS
                    memory > x__getstate__
                    memory > xobj
                    memory > x__init__
                    memory > xobjcopy2
                    memory > xpickle_copiers
                    memory > xkwargs
                    memory > x__new__
                    memory > xNEED_DICT_COPYING
                    memory > x__setstate__
                    memory > x__repr__
                    memory > x__getnewargs_ex__
                    memory > x__getnewargs__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                          seq
                            unsupported
                            xARGS.write (((unsupported)).apply (1) (2))
                            xNEED_DICT_COPYING.write TRUE
                            x__init__.write
                              [xself xa xb]
                                seq > @
                                  seq
                                    bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                                    (((unsupported)).apply (((xself).xa)) ((xa)))
                                    (((unsupported)).apply (((xself).xb)) ((xb)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("C1(%r, %r)".mod (((unsupported)).apply (((xself).xa)) (((xself).xb))))))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xlist)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)).apply (1) (2))
                            xNEED_DICT_COPYING.write FALSE
                            x__new__.write
                              [xcls xa xb]
                                memory > xself
                                seq > @
                                  seq
                                    xself.write ((((((xsuper)).apply).x__new__)).apply ((xcls)))
                                    (((unsupported)).apply (((xself).xa)) ((xa)))
                                    (((unsupported)).apply (((xself).xb)) ((xb)))
                                    (((unsupported)).apply ((xself)))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                                    bogusForceDataize.write ((((xself).xappend)).apply ("cheese"))
                            x__getnewargs__.write
                              [xcls]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xcls).xARGS)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("C2(%r, %r)<%r>".mod (((unsupported)).apply (((xself).xa)) (((xself).xb)) ((((xlist)).apply ((xself))))))))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xlist)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)).apply (1) (2))
                            xNEED_DICT_COPYING.write FALSE
                            x__init__.write
                              [xself xa xb]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xa)) ((xa)))
                                    (((unsupported)).apply (((xself).xb)) ((xb)))
                                    bogusForceDataize.write ((((xself).xappend)).apply ("cheese"))
                            x__getstate__.write
                              [xcls]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xcls).xARGS)))
                            x__setstate__.write
                              [xself xstate]
                                seq > @
                                  seq
                                    (((unsupported)).apply ((((unsupported)).apply ((xa)) ((xb)))) ((xstate)))
                                    (((unsupported)).apply (((xself).xa)) ((xa)))
                                    (((unsupported)).apply (((xself).xb)) ((xb)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("C3(%r, %r)<%r>".mod (((unsupported)).apply (((xself).xa)) (((xself).xb)) ((((xlist)).apply ((xself))))))))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xint)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)).apply ("hello") ("world") (1))
                            xNEED_DICT_COPYING.write FALSE
                            x__new__.write
                              [xcls xa xb xvalue]
                                memory > xself
                                seq > @
                                  seq
                                    xself.write ((((((xsuper)).apply).x__new__)).apply ((xcls)) ((xvalue)))
                                    (((unsupported)).apply (((xself).xa)) ((xa)))
                                    (((unsupported)).apply (((xself).xb)) ((xb)))
                                    (((unsupported)).apply ((xself)))
                            x__getnewargs__.write
                              [xcls]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply (((xcls).xARGS)))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("C4(%r, %r)<%r>".mod (((unsupported)).apply (((xself).xa)) (((xself).xb)) ((((xint)).apply ((xself))))))))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xint)))
                          seq
                            unsupported
                            xARGS.write (((unsupported)).apply (1) (2))
                            xKWARGS.write (((unsupported)).apply ("value") (3))
                            xNEED_DICT_COPYING.write FALSE
                            x__new__.write
                              [xcls xa xb xvalue]
                                memory > xself
                                seq > @
                                  (((unsupported)).apply)
                                    xself.write ((((((xsuper)).apply).x__new__)).apply ((xcls)) ((xvalue)))
                                    (((unsupported)).apply (((xself).xa)) ((xa)))
                                    (((unsupported)).apply (((xself).xb)) ((xb)))
                                    (((unsupported)).apply ((xself)))
                            x__getnewargs_ex__.write
                              [xcls]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply (((xcls).xARGS)) (((xcls).xKWARGS)))))
                            x__repr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (("C5(%r, %r)<%r>".mod (((unsupported)).apply (((xself).xa)) (((xself).xb)) ((((xint)).apply ((xself))))))))
                        xtest_classes.write (((unsupported)).apply ((xC1)) ((xC2)) ((xC3)) ((xC4)) ((xC5)))
                        xpickle_copiers.write ((((xself).x_generate_pickle_copiers)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xcls)) ((xpickle_copier)))) (((((xitertools).xproduct)).apply ((xtest_classes)) ((xpickle_copiers)))))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xcls)) ((xpickle_copier)))))
                            seq
                              xkwargs.write (((xgetattr)).apply ((xcls)) ("KWARGS") ((((unsupported)).apply)))
                              xobj.write (((xcls)).apply ((((unsupported)).apply (((xcls).xARGS)))) ((((unsupported)).apply ((xkwargs)))))
                              xproto.write ((xpickle_copier).xproto)
                              xobjcopy.write ((((xpickle_copier).xcopy)).apply ((xobj)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xobj)) ((xobjcopy)))
                              (((xproto).geq 2).and (((xcls).xNEED_DICT_COPYING).not)).if
                                seq
                                  bogusForceDataize.write (((((xobjcopy).x__dict__).xclear)).apply)
                                  xobjcopy2.write ((((xpickle_copier).xcopy)).apply ((xobjcopy)))
                                  bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xobj)) ((xobjcopy2)))
                        (((unsupported)).apply ((xcls)) ((xtest_classes)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xcls)))))
                            seq
                              xkwargs.write (((xgetattr)).apply ((xcls)) ("KWARGS") ((((unsupported)).apply)))
                              xobj.write (((xcls)).apply ((((unsupported)).apply (((xcls).xARGS)))) ((((unsupported)).apply ((xkwargs)))))
                              xobjcopy.write (((xdeepcopy)).apply ((xobj)))
                              bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xobj)) ((xobjcopy)))
                              (((xcls).xNEED_DICT_COPYING).not).if
                                seq
                                  bogusForceDataize.write (((((xobjcopy).x__dict__).xclear)).apply)
                                  xobjcopy2.write (((xdeepcopy)).apply ((xobjcopy)))
                                  bogusForceDataize.write ((((xself).x_assert_is_copy)).apply ((xobj)) ((xobjcopy2)))
                xtest_issue24097.write
                  [xself]
                    memory > x__getattr__
                    memory > xexpected
                    memory > x__slotnames__
                    seq > @
                      seq
                        (((unsupported)).apply ((xstr)))
                        (((unsupported)).apply)
                          seq
                            x__slotnames__.write (((unsupported)).apply ((((xS)).apply ("spam"))))
                            x__getattr__.write
                              [xself xattr]
                                seq > @
                                  ((xattr).eq "spam").if
                                    seq
                                      (((unsupported)).apply ((((unsupported)).apply (((xA).x__slotnames__)) ((((unsupported)).apply)))) ((((unsupported)).apply ((((xS)).apply ("spam"))))))
                                      (((unsupported)).apply (42))
                                    (((unsupported)).apply ((xAttributeError)))
                        (((unsupported)).apply)
                        xexpected.write (((unsupported)).apply (((xcopyreg).x__newobj__)) ((((unsupported)).apply ((xA)))) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("spam") (42))))) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xA)).apply).x__reduce_ex__)).apply (2))) ((xexpected)))
                xtest_object_reduce.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xobject)).apply).x__reduce__)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((((xobject)).apply).x__reduce__)).apply (0))
                        bogusForceDataize.write ((((((xobject)).apply).x__reduce_ex__)).apply (0))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((((xobject)).apply).x__reduce_ex__)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((((xobject)).apply).x__reduce_ex__)).apply ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              xtest_subclasses.write
                [xself]
                  memory > xa2
                  seq > @
                    (((unsupported)).apply)
                      (((unsupported)).apply)
                      (((unsupported)).apply ((xA)))
                      (((unsupported)).apply ((((unsupported)).apply ((xa)) ((xb)))) ((((unsupported)).apply ((((xA)).apply)) ((((xB)).apply)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xa)))))) (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xb)))))))
                      bogusForceDataize.write ((((xself).xassertLess)).apply (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xa)))))) (((((xsys).xgetsizeof)).apply ((((unsupported)).apply ("a") (1))))))
                      (((unsupported)).apply ((((unsupported)).apply (((xa).xx)) (((xa).xy)) (((xa).xz)) (((xa).xw)) (((xa).xv)) (((xa).xu)))) ((((xrange)).apply (6))))
                      bogusForceDataize.write ((((xself).xassertNotEqual)).apply (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xa)))))) (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xb)))))))
                      xa2.write (((xA)).apply)
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xa)))))) (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xa2)))))))
                      bogusForceDataize.write ((((xself).xassertLess)).apply (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xa)))))) (((((xsys).xgetsizeof)).apply ((((unsupported)).apply ("a") (1))))))
                      (((unsupported)).apply ((((unsupported)).apply (((xb).xu)) (((xb).xv)) (((xb).xw)) (((xb).xt)) (((xb).xs)) (((xb).xr)))) ((((xrange)).apply (6))))
                      bogusForceDataize.write ((((xself).xassertLess)).apply (((((xsys).xgetsizeof)).apply ((((xvars)).apply ((xb)))))) (((((xsys).xgetsizeof)).apply ((((unsupported)).apply ("a") (1))))))
            (((unsupported)).apply ((xtype)))
              seq
                (((unsupported)).apply)
                x__new__.write
                  [xmcls xname xbases xattrs]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xattrs).xget)).apply ("__doc__"))) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((unsupported)).apply ((xattrs)) ("__doc__"))) ((xname)))
                        (((unsupported)).apply (((((xtype).x__new__)).apply ((xmcls)) ((xname)) ((xbases)) ((xattrs)))))
                x__repr__.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply ((((xrepr)).apply (((xcls).x__name__)))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                (((unsupported)).apply)
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xstep)) (0))
                        (((unsupported)).apply (((xself).xready)) (FALSE))
                xstep_until.write
                  [xself xlimit]
                    memory > xret
                    seq > @
                      seq
                        xret.write (((xself).xstep).less (xlimit))
                        (xret).if
                          (((unsupported)).apply (((xself).xstep)) (1))
                        (((unsupported)).apply ((xret)))
                xtest_incomplete_set_bases_on_self.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((((xself).xstep_until)).apply (1)).if
                                    seq
                                      (((unsupported)).apply ((((unsupported)).apply (((xcls).x__mro__)) ("None: is there a None literal in the EO language?"))))
                                      (((unsupported)).apply (((xcls).x__bases__)) ((((unsupported)).apply)))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                xtest_reent_set_bases_on_base.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((((unsupported)).apply (((xcls).x__mro__)) ("None: is there a None literal in the EO language?")).and (((xcls).x__name__).eq "B")).if
                                    ((((xself).xstep_until)).apply (10)).if
                                      (((unsupported)).apply (((xA).x__bases__)) ((((unsupported)).apply)))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply (((xB).x__bases__)) ((((unsupported)).apply)))
                xtest_reent_set_bases_on_direct_base.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              memory > xbase
                              seq > @
                                seq
                                  xbase.write (((unsupported)).apply (((xcls).x__bases__)) (0))
                                  (((unsupported)).apply ((xbase)) ((xobject))).if
                                    ((((xself).xstep_until)).apply (5)).if
                                      (((unsupported)).apply (((xbase).x__bases__)) ((((unsupported)).apply)))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xB)))
                xtest_reent_set_bases_tp_base_cycle.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((xself).xready).if
                                    seq
                                      (((xcls).x__name__).eq "B1").if
                                        (((unsupported)).apply (((xB2).x__bases__)) ((((unsupported)).apply ((xB1)))))
                                      (((xcls).x__name__).eq "B2").if
                                        (((unsupported)).apply (((xB1).x__bases__)) ((((unsupported)).apply ((xB2)))))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply (((xself).xready)) (TRUE))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xB1).x__bases__)) ((((unsupported)).apply)))
                xtest_tp_subclasses_cycle_in_update_slots.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  (((xself).xready).and (((xcls).x__name__).eq "C")).if
                                    seq
                                      (((unsupported)).apply (((xself).xready)) (FALSE))
                                      (((unsupported)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB2)))))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply (((xself).xready)) (TRUE))
                        (((unsupported)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB1)))))
                        (((unsupported)).apply (((xB1).x__bases__)) ((((unsupported)).apply ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xB2).x__subclasses__)).apply)) ((((unsupported)).apply ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xB1).x__subclasses__)).apply)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xB1).x__bases__)) ((((unsupported)).apply ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xC).x__subclasses__)).apply)) ((((unsupported)).apply ((xB1)))))
                xtest_tp_subclasses_cycle_error_return_path.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xException)))
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  (((xself).xready).and (((xcls).x__name__).eq "C")).if
                                    (((xC).x__bases__).eq (((unsupported)).apply ((xB2)))).if
                                      (((unsupported)).apply (((xself).xready)) (FALSE))
                                      seq
                                        (((unsupported)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB2)))))
                                        (((unsupported)).apply ((xE)))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply ((xA)))
                        (((unsupported)).apply (((xself).xready)) (TRUE))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xE)))))
                          (((unsupported)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB1)))))
                        (((unsupported)).apply (((xB1).x__bases__)) ((((unsupported)).apply ((xC)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).x__bases__)) ((((unsupported)).apply ((xB2)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xC).x__mro__)) ((((xtuple)).apply (((((xtype).xmro)).apply ((xC)))))))
                xtest_incomplete_extend.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  ((((unsupported)).apply (((xcls).x__mro__)) ("None: is there a None literal in the EO language?")).and (((xcls).x__name__).neq "X")).if
                                    (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                                      (((unsupported)).apply ((xcls)))
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
                xtest_incomplete_super.write
                  [xself]
                    memory > xmro
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xDebugHelperMeta)))
                          xmro.write
                            [xcls]
                              seq > @
                                seq
                                  (((unsupported)).apply (((xcls).x__mro__)) ("None: is there a None literal in the EO language?")).if
                                    (((unsupported)).apply (((((xself).xassertRaises)).apply ((xAttributeError)))))
                                      unsupported
                                  (((unsupported)).apply (((((xtype).xmro)).apply ((xcls)))))
                        (((unsupported)).apply ((xM)))
            xtest_main.write
              []
                seq > @
                  bogusForceDataize.write ((((xsupport).xrun_unittest)).apply ((xPTypesLongInitTest)) ((xOperatorsTest)) ((xClassPropertiesAndMethods)) ((xDictProxyTests)) ((xMiscTests)) ((xPicklingTests)) ((xSharedKeyTests)) ((xMroTest)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)).apply)