memory > xContext
memory > xfalse
memory > xmin
memory > xxmin
memory > xstr
memory > xg
memory > xls
memory > xmax
memory > xymax
memory > xt3
memory > xGDALException
memory > xy
memory > xtmp
memory > xpickle
memory > xrange
memory > xEngine
memory > xTestDataMixin
memory > xIndexError
memory > xt2
memory > xp
memory > xring
memory > xr
memory > xhasattr
memory > xx
memory > xi
memory > xtmpy
memory > xCoordTransform
memory > xmls
memory > xxmax
memory > xymin
memory > xjson
memory > xOGRGeomType
memory > xSpatialReference
memory > xpoly
memory > xlen
memory > xmp
memory > xSimpleTestCase
memory > xOGRGeometry
memory > xt1
memory > xtmpx
memory > xrr
[] > test_geom
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_pickle
        memory > xtest_within
        memory > xtest_srs
        memory > xtest_add
        memory > xtest_difference
        memory > xtest_from_gml
        memory > xtest_contains
        memory > xtest_equals
        memory > xtest_polygons_templates
        memory > xtest_symdifference
        memory > xtest_wkb
        memory > xtest_touches
        memory > xtest_geomtype
        memory > xtest_union
        memory > xtest_wkt
        memory > xtest_linestring
        memory > xtest_multipoints
        memory > xtest_srs_transform
        memory > xtest_extent
        memory > xtest_gml
        memory > xtest_multilinestring
        memory > xtest_hex
        memory > xtest_transform_dim
        memory > xtest_closepolygons
        memory > xtest_disjoint
        memory > xtest_ogrgeometry_transform_workaround
        memory > xtest_intersection
        memory > xtest_multipolygons
        memory > xtest_empty
        memory > xtest_ewkt
        memory > xtest_json
        memory > xtest_empty_point_to_geos
        memory > xtest_25D
        memory > xtest_geomtype_25d
        memory > xtest_points
        memory > xtest_polygons
        memory > xtest_crosses
        memory > xtest_equivalence_regression
        memory > xtest_linearring
        memory > xtest_intersects
        memory > xtest_overlaps
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)) ((xTestDataMixin)))
              seq
                unsupported
                xtest_geomtype.write
                  [xself]
                    memory > xgt
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write (((xOGRGeomType)).apply (1))
                        bogusForceDataize.write (((xOGRGeomType)).apply (7))
                        bogusForceDataize.write (((xOGRGeomType)).apply ("point"))
                        bogusForceDataize.write (((xOGRGeomType)).apply ("GeometrycollectioN"))
                        bogusForceDataize.write (((xOGRGeomType)).apply ("LINearrING"))
                        bogusForceDataize.write (((xOGRGeomType)).apply ("Unknown"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGDALException)))))
                          bogusForceDataize.write (((xOGRGeomType)).apply (23))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGDALException)))))
                          bogusForceDataize.write (((xOGRGeomType)).apply ("fooD"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGDALException)))))
                          bogusForceDataize.write (((xOGRGeomType)).apply (9))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply (1))) ((((xOGRGeomType)).apply (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply (7))) ("GeometryCollection"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply ("point"))) ("POINT"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xOGRGeomType)).apply ("point"))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply ("unknown"))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply (6))) ("MULtiPolyGON"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply (1))) ((((xOGRGeomType)).apply ("point"))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xOGRGeomType)).apply ("POINT"))) ((((xOGRGeomType)).apply (6))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("PointField") (((((xOGRGeomType)).apply ("Point")).xdjango)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("GeometryField") (((((xOGRGeomType)).apply ("Geometry")).xdjango)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("GeometryField") (((((xOGRGeomType)).apply ("Unknown")).xdjango)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xOGRGeomType)).apply ("none")).xdjango)))
                        xgt.write (((xOGRGeomType)).apply ("Geometry"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) (((xgt).xnum)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Unknown") (((xgt).xname)))
                xtest_geomtype_25d.write
                  [xself]
                    memory > xwkb25bit
                    seq > @
                      seq
                        unsupported
                        xwkb25bit.write ((xOGRGeomType).xwkb25bit)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply (((xwkb25bit).add 1)))) ("Point25D"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeomType)).apply ("MultiLineString25D"))) ((5.add (xwkb25bit))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("GeometryCollectionField") (((((xOGRGeomType)).apply ("GeometryCollection25D")).xdjango)))
                xtest_wkt.write
                  [xself]
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xwkt_out)))
                          seq
                            xgeom.write (((xOGRGeometry)).apply (((xg).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xg).xwkt)) (((xgeom).xwkt)))
                xtest_ewkt.write
                  [xself]
                    memory > xgeom
                    memory > xewkt_val
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xewkt_val)) ((((unsupported)).apply ("POINT (1 2 3)") ("LINEARRING (0 0,1 1,2 1,0 0)"))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xewkt_val)) (((((xOGRGeometry)).apply ((xewkt_val))).xewkt)))
                            xewkt_val.write ("SRID=4326;%s".mod (xewkt_val))
                            xgeom.write (((xOGRGeometry)).apply ((xewkt_val)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xewkt_val)) (((xgeom).xewkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xgeom).xsrs).xsrid)))
                xtest_gml.write
                  [xself]
                    memory > xexp_gml
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xwkt_out)))
                          seq
                            xgeom.write (((xOGRGeometry)).apply (((xg).xwkt)))
                            xexp_gml.write ((xg).xgml)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xexp_gml)) (((xgeom).xgml)))
                xtest_hex.write
                  [xself]
                    memory > xgeom1
                    memory > xgeom2
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xhex_wkt)))
                          seq
                            xgeom1.write (((xOGRGeometry)).apply (((xg).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xg).xhex).xencode)).apply)) (((xgeom1).xhex)))
                            xgeom2.write (((xOGRGeometry)).apply (((xg).xhex)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xgeom1)) ((xgeom2)))
                xtest_wkb.write
                  [xself]
                    memory > xgeom1
                    memory > xgeom2
                    memory > xwkb
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xhex_wkt)))
                          seq
                            xgeom1.write (((xOGRGeometry)).apply (((xg).xwkt)))
                            xwkb.write ((xgeom1).xwkb)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xwkb).xhex)).apply).xupper)).apply)) (((xg).xhex)))
                            xgeom2.write (((xOGRGeometry)).apply ((xwkb)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xgeom1)) ((xgeom2)))
                xtest_json.write
                  [xself]
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xg)) ((((xself).xgeometries).xjson_geoms)))
                          seq
                            xgeom.write (((xOGRGeometry)).apply (((xg).xwkt)))
                            ((((xhasattr)).apply ((xg)) ("not_equal")).not).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xjson).xloads)).apply (((xg).xjson)))) (((((xjson).xloads)).apply (((xgeom).xjson)))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xjson).xloads)).apply (((xg).xjson)))) (((((xjson).xloads)).apply (((xgeom).xgeojson)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeometry)).apply (((xg).xwkt)))) ((((xOGRGeometry)).apply (((xgeom).xjson)))))
                        xgeom.write (((xOGRGeometry)).apply ("{\"type\": \"Point\", \"coordinates\": [ 100.0, 0.0 ], \"other\": \"<test>\"}"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xgeom)) ((xOGRGeometry)))
                xtest_points.write
                  [xself]
                    memory > xpnt
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write (((xOGRGeometry)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpoints)))
                          ((((xhasattr)).apply ((xp)) ("z")).not).if
                            seq
                              xpnt.write (((xOGRGeometry)).apply (((xp).xwkt)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((xpnt).xgeom_type)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ("POINT") (((xpnt).xgeom_name)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xx)) (((xpnt).xx)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xy)) (((xpnt).xy)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xp).xx)) (((xp).xy)))) (((xpnt).xtuple)))
                xtest_multipoints.write
                  [xself]
                    memory > xmgeom2
                    memory > xmgeom1
                    memory > xmgeom3
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xmp)) ((((xself).xgeometries).xmultipoints)))
                          seq
                            xmgeom1.write (((xOGRGeometry)).apply (((xmp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (4) (((xmgeom1).xgeom_type)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("MULTIPOINT") (((xmgeom1).xgeom_name)))
                            xmgeom2.write (((xOGRGeometry)).apply ("MULTIPOINT"))
                            xmgeom3.write (((xOGRGeometry)).apply ("MULTIPOINT"))
                            (((unsupported)).apply ((xg)) ((xmgeom1)))
                              seq
                                bogusForceDataize.write ((((xmgeom2).xadd)).apply ((xg)))
                                bogusForceDataize.write ((((xmgeom3).xadd)).apply (((xg).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmgeom1)) ((xmgeom2)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmgeom1)) ((xmgeom3)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xcoords)) (((xmgeom2).xcoords)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xn_p)) (((xmgeom2).xpoint_count)))
                xtest_linestring.write
                  [xself]
                    memory > xmsg
                    memory > xlinestr
                    memory > xx
                    memory > xprev
                    memory > xy
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xOGRGeometry)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xls)) ((((xself).xgeometries).xlinestrings)))
                          seq
                            xlinestr.write (((xOGRGeometry)).apply (((xls).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (2) (((xlinestr).xgeom_type)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("LINESTRING") (((xlinestr).xgeom_name)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xn_p)) (((xlinestr).xpoint_count)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xls).xcoords)) (((xlinestr).xtuple)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlinestr)) ((((xOGRGeometry)).apply (((xls).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xlinestr)) ((xprev)))
                            xmsg.write "Index out of range when accessing points of a line string: %s."
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xIndexError)) (((xmsg).mod (((xlen)).apply ((xlinestr))))))))
                              bogusForceDataize.write ((((xlinestr).x__getitem__)).apply ((((xlen)).apply ((xlinestr)))))
                            xprev.write (xlinestr)
                            xx.write (((unsupported)).apply ((xtmpx)) ((((unsupported)).apply ((xtmpx)) ((xtmpy)))) (((xls).xcoords)))
                            xy.write (((unsupported)).apply ((xtmpy)) ((((unsupported)).apply ((xtmpx)) ((xtmpy)))) (((xls).xcoords)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xx)) (((xlinestr).xx)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xy)) (((xlinestr).xy)))
                xtest_multilinestring.write
                  [xself]
                    memory > xmlinestr
                    memory > xmsg
                    memory > xprev
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xOGRGeometry)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xmls)) ((((xself).xgeometries).xmultilinestrings)))
                          seq
                            xmlinestr.write (((xOGRGeometry)).apply (((xmls).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (5) (((xmlinestr).xgeom_type)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("MULTILINESTRING") (((xmlinestr).xgeom_name)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmls).xn_p)) (((xmlinestr).xpoint_count)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmls).xcoords)) (((xmlinestr).xtuple)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmlinestr)) ((((xOGRGeometry)).apply (((xmls).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xmlinestr)) ((xprev)))
                            xprev.write (xmlinestr)
                            (((unsupported)).apply ((xls)) ((xmlinestr)))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (2) (((xls).xgeom_type)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ("LINESTRING") (((xls).xgeom_name)))
                            xmsg.write "Index out of range when accessing geometry in a collection: %s."
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xIndexError)) (((xmsg).mod (((xlen)).apply ((xmlinestr))))))))
                              bogusForceDataize.write ((((xmlinestr).x__getitem__)).apply ((((xlen)).apply ((xmlinestr)))))
                xtest_linearring.write
                  [xself]
                    memory > xlr
                    memory > xprev
                    seq > @
                      seq
                        unsupported
                        xprev.write (((xOGRGeometry)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xrr)) ((((xself).xgeometries).xlinearrings)))
                          seq
                            xlr.write (((xOGRGeometry)).apply (((xrr).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("LINEARRING") (((xlr).xgeom_name)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xrr).xn_p)) ((((xlen)).apply ((xlr)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xlr)) ((((xOGRGeometry)).apply (((xrr).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xlr)) ((xprev)))
                            xprev.write (xlr)
                xtest_polygons.write
                  [xself]
                    memory > xbbox
                    memory > xmsg
                    memory > xprev
                    memory > xpoly
                    memory > xp
                    memory > xring
                    seq > @
                      seq
                        unsupported
                        xbbox.write (((unsupported)).apply ((180.neg)) ((90.neg)) (180) (90))
                        xp.write ((((xOGRGeometry).xfrom_bbox)).apply ((xbbox)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbbox)) (((xp).xextent)))
                        xprev.write (((xOGRGeometry)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xp)) ((((xself).xgeometries).xpolygons)))
                          seq
                            xpoly.write (((xOGRGeometry)).apply (((xp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((xpoly).xgeom_type)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("POLYGON") (((xpoly).xgeom_name)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xn_p)) (((xpoly).xpoint_count)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xp).xn_i).add 1)) ((((xlen)).apply ((xpoly)))))
                            xmsg.write "Index out of range when accessing rings of a polygon: %s."
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xIndexError)) (((xmsg).mod (((xlen)).apply ((xpoly))))))))
                              bogusForceDataize.write ((((xpoly).x__getitem__)).apply ((((xlen)).apply ((xpoly)))))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xp).xarea)) (((xpoly).xarea)) (9))
                            (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xy)))) ((((xpoly).xcentroid).xtuple)))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xp).xcentroid)) (0))) ((xx)) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xp).xcentroid)) (1))) ((xy)) (9))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpoly)) ((((xOGRGeometry)).apply (((xp).xwkt)))))
                            bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xpoly)) ((xprev)))
                            ((xp).xext_ring_cs).if
                              seq
                                xring.write (((unsupported)).apply ((xpoly)) (0))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xext_ring_cs)) (((xring).xtuple)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xp).xext_ring_cs)) (((((unsupported)).apply ((xpoly)) (0)).xtuple)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xp).xext_ring_cs)))) (((xring).xpoint_count)))
                            (((unsupported)).apply ((xr)) ((xpoly)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ("LINEARRING") (((xr).xgeom_name)))
                xtest_polygons_templates.write
                  [xself]
                    memory > xpolygons
                    memory > xtemplate
                    memory > xengine
                    memory > xcontent
                    seq > @
                      seq
                        xengine.write (((xEngine)).apply)
                        xtemplate.write ((((xengine).xfrom_string)).apply ("{{ polygons.0.wkt }}"))
                        xpolygons.write (((unsupported)).apply ((((xOGRGeometry)).apply (((xp).xwkt)))) ((xp)) ((((unsupported)).apply ((((xself).xgeometries).xmultipolygons)) ((((unsupported)).apply (2))))))
                        xcontent.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("polygons") ((xpolygons)))))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("MULTIPOLYGON (((100") ((xcontent)))
                xtest_closepolygons.write
                  [xself]
                    memory > xpoly
                    seq > @
                      seq
                        unsupported
                        xpoly.write (((xOGRGeometry)).apply ("POLYGON((0 0, 5 0, 5 5, 0 5), (1 1, 2 1, 2 2, 2 1))"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (8) (((xpoly).xpoint_count)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGDALException)))))
                          unsupported
                        bogusForceDataize.write ((((xpoly).xclose_rings)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (10) (((xpoly).xpoint_count)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeometry)).apply ("POINT(2.5 2.5)"))) (((xpoly).xcentroid)))
                xtest_multipolygons.write
                  [xself]
                    memory > xmsg
                    memory > xmpoly
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write (((xOGRGeometry)).apply ("POINT(0 0)"))
                        (((unsupported)).apply ((xmp)) ((((xself).xgeometries).xmultipolygons)))
                          seq
                            xmpoly.write (((xOGRGeometry)).apply (((xmp).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (6) (((xmpoly).xgeom_type)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("MULTIPOLYGON") (((xmpoly).xgeom_name)))
                            ((xmp).xvalid).if
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xn_p)) (((xmpoly).xpoint_count)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmp).xnum_geom)) ((((xlen)).apply ((xmpoly)))))
                                xmsg.write "Index out of range when accessing geometry in a collection: %s."
                                (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xIndexError)) (((xmsg).mod (((xlen)).apply ((xmpoly))))))))
                                  bogusForceDataize.write ((((xmpoly).x__getitem__)).apply ((((xlen)).apply ((xmpoly)))))
                                (((unsupported)).apply ((xp)) ((xmpoly)))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ("POLYGON") (((xp).xgeom_name)))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((xp).xgeom_type)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmpoly).xwkt)) (((((xOGRGeometry)).apply (((xmp).xwkt))).xwkt)))
                xtest_srs.write
                  [xself]
                    memory > xmpoly
                    memory > xdiff
                    memory > xb
                    memory > xunion
                    memory > xklone
                    memory > xsr
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xmp)) ((((xself).xgeometries).xmultipolygons)))
                          seq
                            xsr.write (((xSpatialReference)).apply ("WGS84"))
                            xmpoly.write (((xOGRGeometry)).apply (((xmp).xwkt)) ((xsr)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsr).xwkt)) ((((xmpoly).xsrs).xwkt)))
                            xklone.write ((((xmpoly).xclone)).apply)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsr).xwkt)) ((((xklone).xsrs).xwkt)))
                            (((unsupported)).apply ((xpoly)) ((xmpoly)))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsr).xwkt)) ((((xpoly).xsrs).xwkt)))
                                (((unsupported)).apply ((xring)) ((xpoly)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsr).xwkt)) ((((xring).xsrs).xwkt)))
                            xa.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) (0)).xwkt_a)) ((xsr)))
                            xb.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) (0)).xwkt_b)) ((xsr)))
                            xdiff.write ((((xa).xdifference)).apply ((xb)))
                            xunion.write ((((xa).xunion)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsr).xwkt)) ((((xdiff).xsrs).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsr).xsrid)) ((((xunion).xsrs).xsrid)))
                            xmpoly.write (((xOGRGeometry)).apply (((xmp).xwkt)) (4326))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) (((xmpoly).xsrid)))
                            (((unsupported)).apply (((xmpoly).xsrs)) ((((xSpatialReference)).apply (4269))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (4269) (((xmpoly).xsrid)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("NAD83") ((((xmpoly).xsrs).xname)))
                            (((unsupported)).apply ((xpoly)) ((xmpoly)))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xmpoly).xsrs).xwkt)) ((((xpoly).xsrs).xwkt)))
                                (((unsupported)).apply (((xpoly).xsrs)) (32140))
                                (((unsupported)).apply ((xring)) ((xpoly)))
                                  seq
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (32140) ((((xring).xsrs).xsrid)))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ("NAD83 / Texas South Central") ((((xring).xsrs).xname)))
                                    (((unsupported)).apply (((xring).xsrs)) ((((xstr)).apply ((((xSpatialReference)).apply (4326))))))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xring).xsrs).xsrid)))
                                    (((unsupported)).apply (((xring).xsrid)) (4322))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply ("WGS 72") ((((xring).xsrs).xname)))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (4322) (((xring).xsrid)))
                            xmpoly.write (((unsupported)).apply ((xOGRGeometry)) (((xmp).xwkt)) ("None: is there a None literal in the EO language?"))
                            (((unsupported)).apply (((xmpoly).xsrs)) (((xmpoly).xsrs)))
                            (((unsupported)).apply (((xmpoly).xsrid)) (((xmpoly).xsrid)))
                xtest_srs_transform.write
                  [xself]
                    memory > xorig
                    memory > xk1
                    memory > xprec
                    memory > xk2
                    memory > xtrans
                    memory > xct
                    seq > @
                      seq
                        unsupported
                        xorig.write (((xOGRGeometry)).apply ("POINT (-104.609 38.255)") (4326))
                        xtrans.write (((xOGRGeometry)).apply ("POINT (992385.4472045 481455.4944650)") (2774))
                        (((unsupported)).apply ((((unsupported)).apply ((xt1)) ((xt2)) ((xt3)))) ((((unsupported)).apply (((((xorig).xclone)).apply)) (((((xorig).xclone)).apply)) (((((xorig).xclone)).apply)))))
                        bogusForceDataize.write ((((xt1).xtransform)).apply (((xtrans).xsrid)))
                        bogusForceDataize.write ((((xt2).xtransform)).apply ((((xSpatialReference)).apply ("EPSG:2774"))))
                        xct.write (((xCoordTransform)).apply ((((xSpatialReference)).apply ("WGS84"))) ((((xSpatialReference)).apply (2774))))
                        bogusForceDataize.write ((((xt3).xtransform)).apply ((xct)))
                        xk1.write ((((xorig).xclone)).apply)
                        xk2.write (((unsupported)).apply (((xk1).xtransform)) (((xtrans).xsrid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xk1)) ((xorig)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xk1)) ((xk2)))
                        xprec.write (1.neg)
                        (((unsupported)).apply ((xp)) ((((unsupported)).apply ((xt1)) ((xt2)) ((xt3)) ((xk2)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xtrans).xx)) (((xp).xx)) ((xprec)))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xtrans).xy)) (((xp).xy)) ((xprec)))
                xtest_transform_dim.write
                  [xself]
                    memory > xprec
                    memory > xls_trans
                    memory > xls_orig
                    seq > @
                      seq
                        unsupported
                        xls_orig.write (((xOGRGeometry)).apply ("LINESTRING(-104.609 38.255)") (4326))
                        xls_trans.write (((xOGRGeometry)).apply ("LINESTRING(992385.4472045 481455.4944650)") (2774))
                        xprec.write (1.neg)
                        bogusForceDataize.write ((((xls_orig).xtransform)).apply (((xls_trans).xsrs)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) (((xls_orig).xcoord_dim)))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xls_trans).xx)) (0))) ((((unsupported)).apply (((xls_orig).xx)) (0))) ((xprec)))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply (((xls_trans).xy)) (0))) ((((unsupported)).apply (((xls_orig).xy)) (0))) ((xprec)))
                xtest_difference.write
                  [xself]
                    memory > xd1
                    memory > xd2
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xd1.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xdiff_geoms)) ((xi))).xwkt)))
                            xd2.write ((((xa).xdifference)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xd1).xgeos).xequals)).apply (((xd2).xgeos)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xd1).xgeos).xequals)).apply ((((xa).sub (xb)).xgeos)))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xd1).xgeos).xequals)).apply (((xa).xgeos)))))
                xtest_intersection.write
                  [xself]
                    memory > xb
                    memory > xi1
                    memory > xa
                    memory > xi2
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xi1.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xintersect_geoms)) ((xi))).xwkt)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xa).xintersects)).apply ((xb)))))
                            xi2.write ((((xa).xintersection)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xi1).xgeos).xequals)).apply (((xi2).xgeos)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xi1).xgeos).xequals)).apply ((((xa).and (xb)).xgeos)))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xi1).xgeos).xequals)).apply (((xa).xgeos)))))
                xtest_symdifference.write
                  [xself]
                    memory > xd1
                    memory > xd2
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xd1.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xsdiff_geoms)) ((xi))).xwkt)))
                            xd2.write ((((xa).xsym_difference)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xd1).xgeos).xequals)).apply (((xd2).xgeos)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xd1).xgeos).xequals)).apply (((((unsupported)).apply ((xa)) ((xb))).xgeos)))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xd1).xgeos).xequals)).apply (((xa).xgeos)))))
                xtest_union.write
                  [xself]
                    memory > xu2
                    memory > xb
                    memory > xu1
                    memory > xa
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((((xself).xgeometries).xtopology_geoms)))))))
                          seq
                            xa.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_a)))
                            xb.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xtopology_geoms)) ((xi))).xwkt_b)))
                            xu1.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xunion_geoms)) ((xi))).xwkt)))
                            xu2.write ((((xa).xunion)).apply ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xu1).xgeos).xequals)).apply (((xu2).xgeos)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xu1).xgeos).xequals)).apply ((((xa).or (xb)).xgeos)))))
                            (((unsupported)).apply ((xa)) ((xb)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xu1).xgeos).xequals)).apply (((xa).xgeos)))))
                xtest_add.write
                  [xself]
                    memory > xmpoly
                    memory > xmp1
                    memory > xpnt
                    memory > xmp2
                    memory > xmp3
                    memory > xmp
                    seq > @
                      seq
                        unsupported
                        xmp.write (((xOGRGeometry)).apply ("MultiPolygon"))
                        xpnt.write (((xOGRGeometry)).apply ("POINT(5 23)"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xGDALException)))))
                          bogusForceDataize.write ((((xmp).xadd)).apply ((xpnt)))
                        (((unsupported)).apply ((xmp)) ((((xself).xgeometries).xmultipolygons)))
                          seq
                            xmpoly.write (((xOGRGeometry)).apply (((xmp).xwkt)))
                            xmp1.write (((xOGRGeometry)).apply ("MultiPolygon"))
                            xmp2.write (((xOGRGeometry)).apply ("MultiPolygon"))
                            xmp3.write (((xOGRGeometry)).apply ("MultiPolygon"))
                            (((unsupported)).apply ((xpoly)) ((xmpoly)))
                              seq
                                bogusForceDataize.write ((((xmp1).xadd)).apply ((xpoly)))
                                bogusForceDataize.write ((((xmp2).xadd)).apply (((xpoly).xwkt)))
                            bogusForceDataize.write ((((xmp3).xadd)).apply ((xmpoly)))
                            (((unsupported)).apply ((xtmp)) ((((unsupported)).apply ((xmp1)) ((xmp2)) ((xmp3)))))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmpoly)) ((xtmp)))
                xtest_extent.write
                  [xself]
                    memory > xpoly
                    memory > xring
                    memory > xmp
                    seq > @
                      seq
                        unsupported
                        xmp.write (((xOGRGeometry)).apply ("MULTIPOINT(5 23, 0 0, 10 50)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (0.0) (0.0) (10.0) (50.0))) (((xmp).xextent)))
                        xpoly.write (((xOGRGeometry)).apply (((((unsupported)).apply ((((xself).xgeometries).xpolygons)) (3)).xwkt)))
                        xring.write ((xpoly).xshell)
                        (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xy)))) ((((unsupported)).apply (((xring).xx)) (((xring).xy)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xxmin)) ((xymin)))) ((((unsupported)).apply ((((xmin)).apply ((xx)))) ((((xmin)).apply ((xy)))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xxmax)) ((xymax)))) ((((unsupported)).apply ((((xmax)).apply ((xx)))) ((((xmax)).apply ((xy)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xxmin)) ((xymin)) ((xxmax)) ((xymax)))) (((xpoly).xextent)))
                xtest_25D.write
                  [xself]
                    memory > xls_25d
                    memory > xpnt_25d
                    seq > @
                      seq
                        unsupported
                        xpnt_25d.write (((xOGRGeometry)).apply ("POINT(1 2 3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Point25D") ((((xpnt_25d).xgeom_type).xname)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3.0) (((xpnt_25d).xz)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((xpnt_25d).xcoord_dim)))
                        xls_25d.write (((xOGRGeometry)).apply ("LINESTRING(1 1 1,2 2 2,3 3 3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("LineString25D") ((((xls_25d).xgeom_type).xname)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1.0) (2.0) (3.0))) (((xls_25d).xz)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((xls_25d).xcoord_dim)))
                xtest_pickle.write
                  [xself]
                    memory > xg2
                    memory > xg1
                    seq > @
                      seq
                        unsupported
                        xg1.write (((xOGRGeometry)).apply ("LINESTRING(1 1 1,2 2 2,3 3 3)") ("WGS84"))
                        xg2.write ((((xpickle).xloads)).apply (((((xpickle).xdumps)).apply ((xg1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xg1)) ((xg2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xg2).xsrs).xsrid)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xg1).xsrs).xwkt)) ((((xg2).xsrs).xwkt)))
                xtest_ogrgeometry_transform_workaround.write
                  [xself]
                    memory > xwkt_3d
                    memory > xsrid
                    memory > xwkt_2d
                    memory > xgeom
                    seq > @
                      seq
                        unsupported
                        xwkt_2d.write "MULTILINESTRING ((0 0,1 1,2 2))"
                        xwkt_3d.write "MULTILINESTRING ((0 0 0,1 1 1,2 2 2))"
                        xsrid.write 4326
                        xgeom.write (((xOGRGeometry)).apply ((xwkt_2d)) ((xsrid)))
                        bogusForceDataize.write ((((xgeom).xtransform)).apply ((xsrid)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) (((xgeom).xcoord_dim)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) (((((unsupported)).apply ((xgeom)) (0)).xcoord_dim)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xwkt_2d)) (((xgeom).xwkt)))
                        xgeom.write (((xOGRGeometry)).apply ((xwkt_3d)) ((xsrid)))
                        bogusForceDataize.write ((((xgeom).xtransform)).apply ((xsrid)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((xgeom).xcoord_dim)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((((unsupported)).apply ((xgeom)) (0)).xcoord_dim)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xwkt_3d)) (((xgeom).xwkt)))
                xtest_equivalence_regression.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((xself).xassertIsNotNone)).apply ((((xOGRGeometry)).apply ("POINT(0 0)"))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xOGRGeometry)).apply ("LINESTRING(0 0, 1 1)"))) (3))
                xtest_contains.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xcontains)).apply ((((xOGRGeometry)).apply ("POINT(0 0)"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xcontains)).apply ((((xOGRGeometry)).apply ("POINT(0 1)"))))) ((xfalse)))
                xtest_crosses.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("LINESTRING(0 0, 1 1)")).xcrosses)).apply ((((xOGRGeometry)).apply ("LINESTRING(0 1, 1 0)"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("LINESTRING(0 0, 0 1)")).xcrosses)).apply ((((xOGRGeometry)).apply ("LINESTRING(1 0, 1 1)"))))) ((xfalse)))
                xtest_disjoint.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("LINESTRING(0 0, 1 1)")).xdisjoint)).apply ((((xOGRGeometry)).apply ("LINESTRING(0 1, 1 0)"))))) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("LINESTRING(0 0, 0 1)")).xdisjoint)).apply ((((xOGRGeometry)).apply ("LINESTRING(1 0, 1 1)"))))) (TRUE))
                xtest_equals.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xcontains)).apply ((((xOGRGeometry)).apply ("POINT(0 0)"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xcontains)).apply ((((xOGRGeometry)).apply ("POINT(0 1)"))))) ((xfalse)))
                xtest_intersects.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("LINESTRING(0 0, 1 1)")).xintersects)).apply ((((xOGRGeometry)).apply ("LINESTRING(0 1, 1 0)"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("LINESTRING(0 0, 0 1)")).xintersects)).apply ((((xOGRGeometry)).apply ("LINESTRING(1 0, 1 1)"))))) ((xfalse)))
                xtest_overlaps.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POLYGON ((0 0, 0 2, 2 2, 2 0, 0 0))")).xoverlaps)).apply ((((xOGRGeometry)).apply ("POLYGON ((1 1, 1 5, 5 5, 5 1, 1 1))"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xoverlaps)).apply ((((xOGRGeometry)).apply ("POINT(0 1)"))))) ((xfalse)))
                xtest_touches.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0))")).xtouches)).apply ((((xOGRGeometry)).apply ("LINESTRING(0 2, 2 0)"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xtouches)).apply ((((xOGRGeometry)).apply ("POINT(0 1)"))))) ((xfalse)))
                xtest_within.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0.5 0.5)")).xwithin)).apply ((((xOGRGeometry)).apply ("POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0))"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((((xOGRGeometry)).apply ("POINT(0 0)")).xwithin)).apply ((((xOGRGeometry)).apply ("POINT(0 1)"))))) ((xfalse)))
                xtest_from_gml.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xOGRGeometry)).apply ("POINT(0 0)"))) (((((xOGRGeometry).xfrom_gml)).apply ("<gml:Point gml:id=\"p21\" srsName=\"http://www.opengis.net/def/crs/EPSG/0/4326\">    <gml:pos srsDimension=\"2\">0 0</gml:pos></gml:Point>"))))
                xtest_empty.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xOGRGeometry)).apply ("POINT (0 0)")).xempty)) ((xfalse)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xOGRGeometry)).apply ("POINT EMPTY")).xempty)) (TRUE))
                xtest_empty_point_to_geos.write
                  [xself]
                    memory > xp
                    seq > @
                      seq
                        xp.write (((unsupported)).apply ((xOGRGeometry)) ("POINT EMPTY") (4326))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xp).xgeos).xewkt)) (((xp).xewkt)))