memory > xlist
memory > xstr
memory > xHttpResponse
memory > xException
memory > xget_template
memory > xtuple
memory > xSimpleTemplateResponse
memory > xattr
memory > xisinstance
memory > xsuper
memory > xpost_callback
memory > xContentNotRenderedError
memory > xselect_template
[] > response
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xresolve_template
        memory > xrendered_content
        memory > x__iter__
        memory > xis_rendered
        memory > xcontent
        memory > x__getstate__
        memory > xrender
        memory > x__init__
        memory > xadd_post_render_callback
        memory > xrendering_attrs
        memory > xresolve_context
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xException)))
            (((unsupported)).apply ((xHttpResponse)))
              seq
                xrendering_attrs.write (((unsupported)).apply ("template_name") ("context_data") ("_post_render_callbacks"))
                x__init__.write
                  [xself xtemplate xcontext xcontent_type xstatus xcharset xusing xheaders]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xtemplate_name)) ((xtemplate)))
                        (((unsupported)).apply (((xself).xcontext_data)) ((xcontext)))
                        (((unsupported)).apply (((xself).xusing)) ((xusing)))
                        (((unsupported)).apply (((xself).x_post_render_callbacks)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xself).x_request)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xsuper).x__init__)) ("") ((xcontent_type)) ((xstatus)) ((xcharset)) ((xheaders)))
                        (((unsupported)).apply (((xself).x_is_rendered)) (FALSE))
                x__getstate__.write
                  [xself]
                    memory > xobj_dict
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xobj_dict.write (((xself).x__dict__).xcopy)
                        (((xself).x_is_rendered).not).if
                          (((unsupported)).apply ((((xContentNotRenderedError)).apply ("The response content must be rendered before it can be pickled."))))
                        (((unsupported)).apply ((xattr)) (((xself).xrendering_attrs)))
                          (((unsupported)).apply ((xattr)) ((xobj_dict))).if
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xobj_dict)) ((xattr)))))))
                        (((unsupported)).apply ((xobj_dict)))
                xresolve_template.write
                  [xself xtemplate]
                    seq > @
                      seq
                        unsupported
                        (((xisinstance)).apply ((xtemplate)) ((((unsupported)).apply ((xlist)) ((xtuple))))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xselect_template)) ((xtemplate)) (((xself).xusing)))))
                          (((xisinstance)).apply ((xtemplate)) ((xstr))).if
                            (((unsupported)).apply ((((unsupported)).apply ((xget_template)) ((xtemplate)) (((xself).xusing)))))
                            (((unsupported)).apply ((xtemplate)))
                xresolve_context.write
                  [xself xcontext]
                    seq > @
                      (((unsupported)).apply ((xcontext)))
                xrendered_content.write
                  [xself]
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xtemplate.write ((((xself).xresolve_template)).apply (((xself).xtemplate_name)))
                        xcontext.write ((((xself).xresolve_context)).apply (((xself).xcontext_data)))
                        (((unsupported)).apply (((((xtemplate).xrender)).apply ((xcontext)) (((xself).x_request)))))
                xadd_post_render_callback.write
                  [xself xcallback]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((xself).x_is_rendered).if
                          bogusForceDataize.write (((xcallback)).apply ((xself)))
                          bogusForceDataize.write (((((xself).x_post_render_callbacks).xappend)).apply ((xcallback)))
                xrender.write
                  [xself]
                    memory > xnewretval
                    memory > xretval
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xretval.write (xself)
                        (((xself).x_is_rendered).not).if
                          seq
                            (((unsupported)).apply (((xself).xcontent)) (((xself).xrendered_content)))
                            (((unsupported)).apply ((xpost_callback)) (((xself).x_post_render_callbacks)))
                              seq
                                xnewretval.write (((xpost_callback)).apply ((xretval)))
                                (((unsupported)).apply ((xnewretval)) ("None: is there a None literal in the EO language?")).if
                                  xretval.write (xnewretval)
                        (((unsupported)).apply ((xretval)))
                xis_rendered.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).x_is_rendered)))
                x__iter__.write
                  [xself]
                    seq > @
                      seq
                        (((xself).x_is_rendered).not).if
                          (((unsupported)).apply ((((xContentNotRenderedError)).apply ("The response content must be rendered before it can be iterated over."))))
                        (((unsupported)).apply (((xsuper).x__iter__)))
                xcontent.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((xself).x_is_rendered).not).if
                          (((unsupported)).apply ((((xContentNotRenderedError)).apply ("The response content must be rendered before it can be accessed."))))
                        (((unsupported)).apply (((xsuper).xcontent)))
                xcontent.write
                  [xself xvalue]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        bogusForceDataize.write (((((xHttpResponse).xcontent).xfset)).apply ((xself)) ((xvalue)))
                        (((unsupported)).apply (((xself).x_is_rendered)) (TRUE))
            (((unsupported)).apply ((xSimpleTemplateResponse)))
              seq
                xrendering_attrs.write (((xSimpleTemplateResponse).xrendering_attrs).add (((unsupported)).apply ("_request")))
                x__init__.write
                  [xself xrequest xtemplate xcontext xcontent_type xstatus xcharset xusing xheaders]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xsuper).x__init__)) ((xtemplate)) ((xcontext)) ((xcontent_type)) ((xstatus)) ((xcharset)) ((xusing)) ((xheaders)))
                        (((unsupported)).apply (((xself).x_request)) ((xrequest)))