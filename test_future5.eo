memory > xstr
memory > xprint
memory > xunittest
memory > x__name__
memory > xs
memory > xsupport
memory > xsys
[] > test_future5
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_unicode_literals
        memory > xtest_print_function
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_unicode_literals.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsInstance)).apply ("") ((xstr)))
                xtest_print_function.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xsupport).xcaptured_output)).apply ("stderr"))) ((xs)))
                          (((unsupported)).apply ((xprint)) ("foo") (((xsys).xstderr)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xs).xgetvalue)).apply)) ("foon"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)