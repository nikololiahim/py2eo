memory > xD
memory > xC
memory > xC0
memory > xdivmod
memory > xDelTest
memory > xtype
memory > xproperty
memory > xsuper
memory > xslice
memory > xoct
memory > xcomplex
memory > xAttributeError
memory > xbin
memory > xstr
memory > xBadTypeClass
memory > xB
memory > xexec
memory > xf
memory > xrepr
memory > xint
memory > xx
memory > xI
memory > xbool
memory > xglobals
memory > xbytes
memory > xRecursionError
memory > xfloat
memory > xgc
memory > xargs
memory > xExtraTests
memory > xE
memory > xunittest
memory > xEmpty
memory > xhash
memory > xobject
memory > xA
memory > xC2
memory > xhex
memory > xkwargs
memory > xabs
memory > xEllipsis
memory > xTypeError
memory > xmethod
memory > x__name__
[] > test_class
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xstatictests
        memory > xtestConstructorErrorMessages
        memory > xtestUnaryOps
        memory > xassertCallStack
        memory > xAllTests
        memory > xassertNotOrderable
        memory > xcallLst
        memory > xtestHashComparisonOfMethods
        memory > xtrackCall
        memory > xtestListAndDictOps
        memory > xtestSFBug532646
        memory > xd
        memory > xtestGetSetAndDel
        memory > xtestBadTypeReturned
        memory > xtestSetattrWrapperNameIntern
        memory > xtestBinaryOps
        memory > xtestForExceptionsRaisedInInstanceGetattr2
        memory > xmethod_template
        memory > xtestInit
        memory > xtestHashStuff
        memory > xtestSetattrNonStringName
        memory > xsetUp
        memory > xtestmeths
        memory > xtestMisc
        memory > xtestDel
        seq > @
          seq
            unsupported
            (((unsupported)).apply)
            xtestmeths.write (((unsupported)).apply ("add") ("radd") ("sub") ("rsub") ("mul") ("rmul") ("matmul") ("rmatmul") ("truediv") ("rtruediv") ("floordiv") ("rfloordiv") ("mod") ("rmod") ("divmod") ("rdivmod") ("pow") ("rpow") ("rshift") ("rrshift") ("lshift") ("rlshift") ("and") ("rand") ("or") ("ror") ("xor") ("rxor") ("contains") ("getitem") ("setitem") ("delitem") ("neg") ("pos") ("abs") ("init"))
            xcallLst.write (((unsupported)).apply)
            xtrackCall.write
              [xf]
                memory > xtrack
                seq > @
                  seq
                    xtrack.write
                      []
                        seq > @
                          (((unsupported)).apply)
                            bogusForceDataize.write ((((xcallLst).xappend)).apply ((((unsupported)).apply (((xf).x__name__)) ((xargs)))))
                            (((unsupported)).apply ((((xf)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))))
                    (((unsupported)).apply ((xtrack)))
            xstatictests.write (((unsupported)).apply)
            xmethod_template.write (((unsupported)).apply)
            xd.write (((unsupported)).apply)
            bogusForceDataize.write (((xexec)).apply ((xstatictests)) ((((xglobals)).apply)) ((xd)))
            (((unsupported)).apply ((xmethod)) ((xtestmeths)))
              bogusForceDataize.write (((xexec)).apply (((xmethod_template).mod (xmethod))) ((((xglobals)).apply)) ((xd)))
            xAllTests.write (((xtype)).apply ("AllTests") ((((unsupported)).apply ((xobject)))) ((xd)))
            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xd)) ((xstatictests)) ((xmethod)) ((xmethod_template)))))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                xassertCallStack.write
                  [xself xexpected_calls]
                    memory > xactualCallList
                    seq > @
                      seq
                        xactualCallList.write (((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))
                        ((xexpected_calls).neq (xactualCallList)).if
                          bogusForceDataize.write ((((xself).xfail)).apply (("Expected call list:n  %sndoes not match actual call listn  %s".mod (((unsupported)).apply ((xexpected_calls)) ((xactualCallList))))))
                xtestInit.write
                  [xself]
                    memory > xfoo
                    seq > @
                      seq
                        xfoo.write (((xAllTests)).apply)
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__init__") ((((unsupported)).apply ((xfoo)))))))))
                xtestBinaryOps.write
                  [xself]
                    memory > xtestme
                    seq > @
                      seq
                        xtestme.write (((xAllTests)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__add__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__radd__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__sub__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rsub__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__mul__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rmul__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__matmul__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rmatmul__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__truediv__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rtruediv__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__floordiv__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rfloordiv__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__mod__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rmod__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xdivmod)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__divmod__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xdivmod)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rdivmod__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__pow__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rpow__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rshift__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rrshift__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__lshift__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rlshift__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__and__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rand__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__or__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__ror__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__xor__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__rxor__") ((((unsupported)).apply ((xtestme)) (1))))))))
                xtestListAndDictOps.write
                  [xself]
                    memory > xtestme
                    seq > @
                      seq
                        xtestme.write (((xAllTests)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xTypeError)))
                          seq
                            (((unsupported)).apply (1) ((((xEmpty)).apply)))
                            bogusForceDataize.write ((((xself).xfail)).apply ("failed, should have raised TypeError"))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (1) ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__contains__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__getitem__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xtestme)) (1))) (1))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__setitem__") ((((unsupported)).apply ((xtestme)) (1) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xtestme)) (1))))))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__delitem__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) ((((unsupported)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__getitem__") ((((unsupported)).apply ((xtestme)) ((((xslice)).apply ("None: is there a None literal in the EO language?") (42))))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply (42))))) ("The Answer"))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__setitem__") ((((unsupported)).apply ((xtestme)) ((((xslice)).apply ("None: is there a None literal in the EO language?") (42))) ("The Answer"))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply (42))))))))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__delitem__") ((((unsupported)).apply ((xtestme)) ((((xslice)).apply ("None: is there a None literal in the EO language?") (42))))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) ((((unsupported)).apply (2) (1024) (10))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__getitem__") ((((unsupported)).apply ((xtestme)) ((((xslice)).apply (2) (1024) (10))))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply (2) (1024) (10))))) ("A lot"))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__setitem__") ((((unsupported)).apply ((xtestme)) ((((xslice)).apply (2) (1024) (10))) ("A lot"))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply (2) (1024) (10))))))))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__delitem__") ((((unsupported)).apply ((xtestme)) ((((xslice)).apply (2) (1024) (10))))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xtestme)) ((((unsupported)).apply ((((unsupported)).apply (42))) ((((unsupported)).apply)) ((((unsupported)).apply (24))) (24) (100))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__getitem__") ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply ((((xslice)).apply ("None: is there a None literal in the EO language?") (42) ("None: is there a None literal in the EO language?"))) ((xEllipsis)) ((((xslice)).apply ("None: is there a None literal in the EO language?") (24) ("None: is there a None literal in the EO language?"))) (24) (100))))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply ((((unsupported)).apply (42))) ((((unsupported)).apply)) ((((unsupported)).apply (24))) (24) (100))))) ("Strange"))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__setitem__") ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply ((((xslice)).apply ("None: is there a None literal in the EO language?") (42) ("None: is there a None literal in the EO language?"))) ((xEllipsis)) ((((xslice)).apply ("None: is there a None literal in the EO language?") (24) ("None: is there a None literal in the EO language?"))) (24) (100))) ("Strange"))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply ((((unsupported)).apply (42))) ((((unsupported)).apply)) ((((unsupported)).apply (24))) (24) (100))))))))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__delitem__") ((((unsupported)).apply ((xtestme)) ((((unsupported)).apply ((((xslice)).apply ("None: is there a None literal in the EO language?") (42) ("None: is there a None literal in the EO language?"))) ((xEllipsis)) ((((xslice)).apply ("None: is there a None literal in the EO language?") (24) ("None: is there a None literal in the EO language?"))) (24) (100))))))))))
                xtestUnaryOps.write
                  [xself]
                    memory > xtestme
                    seq > @
                      seq
                        xtestme.write (((xAllTests)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__neg__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__pos__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xabs)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__abs__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xint)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__int__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xfloat)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__float__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xoct)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__index__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xhex)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__index__") ((((unsupported)).apply ((xtestme)))))))))
                xtestMisc.write
                  [xself]
                    memory > xtestme
                    seq > @
                      seq
                        xtestme.write (((xAllTests)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xhash)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__hash__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xrepr)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__repr__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        bogusForceDataize.write (((xstr)).apply ((xtestme)))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__str__") ((((unsupported)).apply ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__eq__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__lt__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__gt__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__ne__") ((((unsupported)).apply ((xtestme)) (1))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__eq__") ((((unsupported)).apply (1) ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__gt__") ((((unsupported)).apply (1) ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__lt__") ((((unsupported)).apply (1) ((xtestme)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__ne__") ((((unsupported)).apply (1) ((xtestme)))))))))
                xtestGetSetAndDel.write
                  [xself]
                    memory > x__getattr__
                    memory > x__setattr__
                    memory > x__delattr__
                    memory > xtestme
                    seq > @
                      seq
                        (((unsupported)).apply ((xAllTests)))
                          seq
                            x__getattr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    (((unsupported)).apply ("SomeVal"))
                            x__setattr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                            x__delattr__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                        xtestme.write (((xExtraTests)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__getattr__") ((((unsupported)).apply ((xtestme)) ("spam"))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xtestme).xeggs)) ("spam, spam, spam and ham"))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__setattr__") ((((unsupported)).apply ((xtestme)) ("eggs") ("spam, spam, spam and ham"))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xcallLst)) ((((unsupported)).apply)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xtestme).xcardinal)))))))
                        bogusForceDataize.write ((((xself).xassertCallStack)).apply ((((unsupported)).apply ((((unsupported)).apply ("__delattr__") ((((unsupported)).apply ((xtestme)) ("cardinal"))))))))
                xtestDel.write
                  [xself]
                    memory > x__del__
                    memory > xx
                    memory > xtestme
                    seq > @
                      seq
                        xx.write (((unsupported)).apply)
                        (((unsupported)).apply)
                          x__del__.write
                            [xself]
                              seq > @
                                bogusForceDataize.write ((((xx).xappend)).apply ("crab people, crab people"))
                        xtestme.write (((xDelTest)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xtestme)))))))
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("crab people, crab people"))) ((xx)))
                xtestBadTypeReturned.write
                  [xself]
                    memory > x__complex__
                    memory > x__str__
                    memory > x__repr__
                    memory > x__bytes__
                    memory > x__float__
                    memory > x__bool__
                    memory > x__int__
                    memory > xindex
                    memory > x__index__
                    seq > @
                      seq
                        (((unsupported)).apply)
                          seq
                            x__int__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                            x__float__.write (x__int__)
                            x__complex__.write (x__int__)
                            x__str__.write (x__int__)
                            x__repr__.write (x__int__)
                            x__bytes__.write (x__int__)
                            x__bool__.write (x__int__)
                            x__index__.write (x__int__)
                        xindex.write
                          [xx]
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply)) ((xx)))))
                        (((unsupported)).apply ((xf)) ((((unsupported)).apply ((xfloat)) ((xcomplex)) ((xstr)) ((xrepr)) ((xbytes)) ((xbin)) ((xoct)) ((xhex)) ((xbool)) ((xindex)))))
                          bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xf)) ((((xBadTypeClass)).apply)))
                xtestHashStuff.write
                  [xself]
                    memory > x__eq__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write (((xhash)).apply ((((xC0)).apply)))
                        (((unsupported)).apply)
                          x__eq__.write
                            [xself xother]
                              seq > @
                                (((unsupported)).apply (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xhash)) ((((xC2)).apply)))
                xtestSFBug532646.write
                  [xself]
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xA).x__call__)) ((((xA)).apply)))
                        xa.write (((xA)).apply)
                        (((unsupported)).apply ((xRecursionError)))
                          bogusForceDataize.write (((xa)).apply)
                          bogusForceDataize.write ((((xself).xfail)).apply ("Failed to raise RecursionError"))
                xtestForExceptionsRaisedInInstanceGetattr2.write
                  [xself]
                    memory > x__eq__
                    memory > x__init__
                    memory > xbooh
                    memory > xa
                    seq > @
                      seq
                        xbooh.write
                          [xself]
                            seq > @
                              (((unsupported)).apply ((((xAttributeError)).apply ("booh"))))
                        (((unsupported)).apply)
                          xa.write (((xproperty)).apply ((xbooh)))
                        (((unsupported)).apply ((xAttributeError)))
                          unsupported
                          ((((xstr)).apply ((xx))).neq "booh").if
                            bogusForceDataize.write ((((xself).xfail)).apply (("attribute error for A().a got masked: %s".mod (xx))))
                        (((unsupported)).apply)
                          x__eq__.write (((xproperty)).apply ((xbooh)))
                        unsupported
                        (((unsupported)).apply)
                          x__init__.write (((xproperty)).apply ((xbooh)))
                        (((unsupported)).apply ((xAttributeError)))
                          bogusForceDataize.write (((xI)).apply)
                          bogusForceDataize.write ((((xself).xfail)).apply ("attribute error for I.__init__ got masked"))
                xassertNotOrderable.write
                  [xself xa xb]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                xtestHashComparisonOfMethods.write
                  [xself]
                    memory > x__eq__
                    memory > xa1
                    memory > xg
                    memory > xf
                    memory > xa2
                    memory > x__init__
                    memory > x__hash__
                    memory > xa
                    seq > @
                      seq
                        (((unsupported)).apply)
                          seq
                            x__init__.write
                              [xself xx]
                                seq > @
                                  (((unsupported)).apply (((xself).xx)) ((xx)))
                            xf.write
                              [xself]
                                seq > @
                            xg.write
                              [xself]
                                seq > @
                            x__eq__.write
                              [xself xother]
                                seq > @
                                  (((unsupported)).apply (TRUE))
                            x__hash__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((xTypeError)))
                        (((unsupported)).apply ((xA)))
                        xa1.write (((xA)).apply (1))
                        xa2.write (((xA)).apply (1))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xa1).xf).eq ((xa1).xf))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xa1).xf).neq ((xa1).xf))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xa1).xf).eq ((xa2).xf))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xa1).xf).neq ((xa2).xf))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xa1).xf).eq ((xa1).xg))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xa1).xf).neq ((xa1).xg))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)).apply (((xa1).xf)) (((xa1).xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply (((xa1).xf)))) ((((xhash)).apply (((xa1).xf)))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xA).xf).eq ((xa1).xf))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xA).xf).neq ((xa1).xf))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xA).xf).eq ((xA).xg))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xA).xf).neq ((xA).xg))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xB).xf).eq ((xA).xf))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xB).xf).neq ((xA).xf))))
                        bogusForceDataize.write ((((xself).xassertNotOrderable)).apply (((xA).xf)) (((xA).xf)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply (((xB).xf)))) ((((xhash)).apply (((xA).xf)))))
                        xa.write (((xA)).apply ((((unsupported)).apply ((((xhash)).apply (((xA).xf)))) ((1.neg)))))
                        bogusForceDataize.write (((xhash)).apply (((xa).xf)))
                xtestSetattrWrapperNameIntern.write
                  [xself]
                    memory > xname
                    memory > xname2
                    memory > xadd
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xadd.write
                          [xself xother]
                            seq > @
                              (((unsupported)).apply ("summa"))
                        xname.write (((xstr)).apply ("__add__") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertIsNot)).apply ((xname)) ("__add__"))
                        bogusForceDataize.write ((((xtype).x__setattr__)).apply ((xA)) ((xname)) ((xadd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xA)).apply).add 1)) ("summa"))
                        xname2.write (((xstr)).apply ("__add__") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertIsNot)).apply ((xname2)) ("__add__"))
                        bogusForceDataize.write ((((xself).xassertIsNot)).apply ((xname2)) ((xname)))
                        bogusForceDataize.write ((((xtype).x__delattr__)).apply ((xA)) ((xname2)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          unsupported
                xtestSetattrNonStringName.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xtype).x__setattr__)).apply ((xA)) ("x") ("None: is there a None literal in the EO language?"))
                xtestConstructorErrorMessages.write
                  [xself]
                    memory > x__new__
                    memory > xerror_msg
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xerror_msg.write "C.__init__() takes exactly one argument (the instance to initialize)"
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("C() takes no arguments"))))
                          bogusForceDataize.write (((xC)).apply (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("C() takes no arguments"))))
                          bogusForceDataize.write ((((xC).x__new__)).apply ((xC)) (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write ((((((xC)).apply).x__init__)).apply (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("C() takes no arguments"))))
                          bogusForceDataize.write ((((xobject).x__new__)).apply ((xC)) (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write ((((xobject).x__init__)).apply ((((xC)).apply)) (42))
                        (((unsupported)).apply)
                          seq
                            x__new__.write
                              [xcls]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((((xsuper)).apply).x__new__)).apply ((xcls)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        xerror_msg.write "object.__new__() takes exactly one argument (the type to instantiate)"
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write (((xD)).apply (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write ((((xD).x__new__)).apply ((xD)) (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write ((((xobject).x__new__)).apply ((xD)) (42))
                        (((unsupported)).apply)
                          x__init__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply)
                                  bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        xerror_msg.write "object.__init__() takes exactly one argument (the instance to initialize)"
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write ((((((xE)).apply).x__init__)).apply (42))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xerror_msg)))))
                          bogusForceDataize.write ((((xobject).x__init__)).apply ((((xE)).apply)) (42))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)