memory > xFieldDoesNotExist
memory > xenumerate
memory > xInvalidInteger
memory > xOFTString
memory > xPath
memory > xOFTDateTime
memory > xfeat
memory > xSpatialReference
memory > xDataSource
memory > xlist
memory > xGeometryField
memory > xValueError
memory > xInvalidString
memory > xstr
memory > xnum_feat
memory > xforce_str
memory > xg
memory > xfld
memory > xOFTTime
memory > xLayerMapError
memory > xrange
memory > xrel_name
memory > xrouter
memory > xOFTInteger
memory > xmsg
memory > xOFTReal
memory > xogr_name
memory > xint
memory > xlookup
memory > xException
memory > xconnections
memory > xOFTDate
memory > xend
memory > xi
memory > xissubclass
memory > xtuple
memory > xGDALException
memory > xObjectDoesNotExist
memory > xCoordTransform
memory > xslice
memory > xnum_saved
memory > xgetattr
memory > xsetattr
memory > xattr
memory > xDecimal
memory > xexc
memory > xmodels
memory > xOFTInteger64
memory > xOGRGeomType
memory > xisinstance
memory > xtransaction
memory > xlen
memory > xdict
memory > xfield_name
memory > xInvalidDecimal
memory > xMissingForeignKey
memory > xTypeError
memory > xOGRGeometry
[] > layermapping
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xcheck_unique
        memory > xcheck_fid_range
        memory > xcheck_layer
        memory > xFIELD_TYPES
        memory > xverify_geom
        memory > xunique_kwargs
        memory > xfeature_kwargs
        memory > xverify_fk
        memory > xgeometry_field
        memory > xmake_multi
        memory > xDecimalInvalidOperation
        memory > xcoord_transform
        memory > xcheck_srs
        memory > xMULTI_TYPES
        memory > xsave
        memory > xverify_ogr_field
        memory > x__init__
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xException)))
            (((unsupported)).apply ((xLayerMapError)))
            (((unsupported)).apply ((xLayerMapError)))
            (((unsupported)).apply ((xLayerMapError)))
            (((unsupported)).apply ((xLayerMapError)))
            (((unsupported)).apply)
              seq
                unsupported
                xMULTI_TYPES.write (((unsupported)).apply (1) ((((xOGRGeomType)).apply ("MultiPoint"))) (2) ((((xOGRGeomType)).apply ("MultiLineString"))) (3) ((((xOGRGeomType)).apply ("MultiPolygon"))) (((((xOGRGeomType)).apply ("Point25D")).xnum)) ((((xOGRGeomType)).apply ("MultiPoint25D"))) (((((xOGRGeomType)).apply ("LineString25D")).xnum)) ((((xOGRGeomType)).apply ("MultiLineString25D"))) (((((xOGRGeomType)).apply ("Polygon25D")).xnum)) ((((xOGRGeomType)).apply ("MultiPolygon25D"))))
                xFIELD_TYPES.write (((unsupported)).apply (((xmodels).xAutoField)) ((xOFTInteger)) (((xmodels).xBigAutoField)) ((xOFTInteger64)) (((xmodels).xSmallAutoField)) ((xOFTInteger)) (((xmodels).xBooleanField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))) (((xmodels).xIntegerField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))) (((xmodels).xFloatField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)))) (((xmodels).xDateField)) ((xOFTDate)) (((xmodels).xDateTimeField)) ((xOFTDateTime)) (((xmodels).xEmailField)) ((xOFTString)) (((xmodels).xTimeField)) ((xOFTTime)) (((xmodels).xDecimalField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)))) (((xmodels).xCharField)) ((xOFTString)) (((xmodels).xSlugField)) ((xOFTString)) (((xmodels).xTextField)) ((xOFTString)) (((xmodels).xURLField)) ((xOFTString)) (((xmodels).xUUIDField)) ((xOFTString)) (((xmodels).xBigIntegerField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))) (((xmodels).xSmallIntegerField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))) (((xmodels).xPositiveBigIntegerField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))) (((xmodels).xPositiveIntegerField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))) (((xmodels).xPositiveSmallIntegerField)) ((((unsupported)).apply ((xOFTInteger)) ((xOFTReal)) ((xOFTString)))))
                x__init__.write
                  [xself xmodel xdata xmapping xlayer xsource_srs xencoding xtransaction_mode xtransform xunique xusing]
                    memory > xconnection
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((xisinstance)).apply ((xdata)) ((((unsupported)).apply ((xstr)) ((xPath))))).if
                          (((unsupported)).apply (((xself).xds)) ((((unsupported)).apply ((xDataSource)) ((xdata)) ((xencoding)))))
                          (((unsupported)).apply (((xself).xds)) ((xdata)))
                        (((unsupported)).apply (((xself).xlayer)) ((((unsupported)).apply (((xself).xds)) ((xlayer)))))
                        (((unsupported)).apply (((xself).xusing)) (((((unsupported)).apply ((xusing)) ("None: is there a None literal in the EO language?")).if (xusing) ((((xrouter).xdb_for_write)).apply ((xmodel))))))
                        xconnection.write (((unsupported)).apply ((xconnections)) (((xself).xusing)))
                        (((unsupported)).apply (((xself).xspatial_backend)) (((xconnection).xops)))
                        (((unsupported)).apply (((xself).xmapping)) ((xmapping)))
                        (((unsupported)).apply (((xself).xmodel)) ((xmodel)))
                        bogusForceDataize.write ((((xself).xcheck_layer)).apply)
                        (((xconnection).xfeatures).xsupports_transform).if
                          (((unsupported)).apply (((xself).xgeo_field)) (((((xself).xgeometry_field)).apply)))
                          xtransform.write FALSE
                        (xtransform).if
                          seq
                            (((unsupported)).apply (((xself).xsource_srs)) (((((xself).xcheck_srs)).apply ((xsource_srs)))))
                            (((unsupported)).apply (((xself).xtransform)) (((((xself).xcoord_transform)).apply)))
                          (((unsupported)).apply (((xself).xtransform)) ((xtransform)))
                        (xencoding).if
                          seq
                            (((unsupported)).apply)
                            bogusForceDataize.write (((xlookup)).apply ((xencoding)))
                            (((unsupported)).apply (((xself).xencoding)) ((xencoding)))
                          (((unsupported)).apply (((xself).xencoding)) ("None: is there a None literal in the EO language?"))
                        (xunique).if
                          seq
                            bogusForceDataize.write ((((xself).xcheck_unique)).apply ((xunique)))
                            xtransaction_mode.write "autocommit"
                            (((unsupported)).apply (((xself).xunique)) ((xunique)))
                          (((unsupported)).apply (((xself).xunique)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xself).xtransaction_mode)) ((xtransaction_mode)))
                        ((xtransaction_mode).eq "autocommit").if
                          (((unsupported)).apply (((xself).xtransaction_decorator)) ("None: is there a None literal in the EO language?"))
                          ((xtransaction_mode).eq "commit_on_success").if
                            (((unsupported)).apply (((xself).xtransaction_decorator)) (((xtransaction).xatomic)))
                            (((unsupported)).apply ((((xLayerMapError)).apply (("Unrecognized transaction mode: %s".mod (xtransaction_mode))))))
                xcheck_fid_range.write
                  [xself xfid_range]
                    seq > @
                      seq
                        unsupported
                        (xfid_range).if
                          (((xisinstance)).apply ((xfid_range)) ((((unsupported)).apply ((xtuple)) ((xlist))))).if
                            (((unsupported)).apply ((((xslice)).apply ((((unsupported)).apply ((xfid_range)))))))
                            (((xisinstance)).apply ((xfid_range)) ((xslice))).if
                              (((unsupported)).apply ((xfid_range)))
                              (((unsupported)).apply ((xTypeError)))
                          (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                xcheck_layer.write
                  [xself]
                    memory > xmodel_field
                    memory > xltype
                    memory > xcheck_ogr_fld
                    memory > xogr_field_types
                    memory > xogr_field
                    memory > xgtype
                    memory > xcoord_dim
                    memory > xrel_model
                    memory > xfields_val
                    memory > xidx
                    memory > xogr_fields
                    memory > xfld_name
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xgeom_field)) (FALSE))
                        (((unsupported)).apply (((xself).xfields)) ((((unsupported)).apply)))
                        xogr_fields.write (((xself).xlayer).xfields)
                        xogr_field_types.write (((xself).xlayer).xfield_types)
                        xcheck_ogr_fld.write
                          [xogr_map_fld]
                            memory > xidx
                            seq > @
                              seq
                                (((unsupported)).apply ((xValueError)))
                                  xidx.write ((((xogr_fields).xindex)).apply ((xogr_map_fld)))
                                  (((unsupported)).apply ((((xLayerMapError)).apply (("Given mapping OGR field \"%s\" not found in OGR Layer.".mod (xogr_map_fld))))))
                                (((unsupported)).apply ((xidx)))
                        (((unsupported)).apply ((((unsupported)).apply ((xfield_name)) ((xogr_name)))) ((((((xself).xmapping).xitems)).apply)))
                          seq
                            (((unsupported)).apply ((xFieldDoesNotExist)))
                              xmodel_field.write ((((((xself).xmodel).x_meta).xget_field)).apply ((xfield_name)))
                              (((unsupported)).apply ((((xLayerMapError)).apply (("Given mapping field \"%s\" not in given Model fields.".mod (xfield_name))))))
                            xfld_name.write (((xmodel_field).x__class__).x__name__)
                            (((xisinstance)).apply ((xmodel_field)) ((xGeometryField))).if
                              seq
                                ((xself).xgeom_field).if
                                  (((unsupported)).apply ((((xLayerMapError)).apply ("LayerMapping does not support more than one GeometryField per model."))))
                                xcoord_dim.write ((xmodel_field).xdim)
                                (((unsupported)).apply ((xGDALException)))
                                  ((xcoord_dim).eq 3).if
                                    xgtype.write (((xOGRGeomType)).apply (((xogr_name).add "25D")))
                                    xgtype.write (((xOGRGeomType)).apply ((xogr_name)))
                                  (((unsupported)).apply ((((xLayerMapError)).apply (("Invalid mapping for GeometryField \"%s\".".mod (xfield_name))))))
                                xltype.write (((xself).xlayer).xgeom_type)
                                (((((((xltype).xname).xstartswith)).apply (((xgtype).xname))).or ((((xself).xmake_multi)).apply ((xltype)) ((xmodel_field)))).not).if
                                  (((unsupported)).apply ((((xLayerMapError)).apply (("Invalid mapping geometry; model has %s%s, layer geometry type is %s.".mod (((unsupported)).apply ((xfld_name)) ((((xcoord_dim).eq 3).if "(dim=3)" "")) ((xltype))))))))
                                (((unsupported)).apply (((xself).xgeom_field)) ((xfield_name)))
                                (((unsupported)).apply (((xself).xcoord_dim)) ((xcoord_dim)))
                                xfields_val.write (xmodel_field)
                              (((xisinstance)).apply ((xmodel_field)) (((xmodels).xForeignKey))).if
                                (((xisinstance)).apply ((xogr_name)) ((xdict))).if
                                  seq
                                    xrel_model.write (((xmodel_field).xremote_field).xmodel)
                                    (((unsupported)).apply ((((unsupported)).apply ((xrel_name)) ((xogr_field)))) (((((xogr_name).xitems)).apply)))
                                      seq
                                        xidx.write (((xcheck_ogr_fld)).apply ((xogr_field)))
                                        (((unsupported)).apply ((xFieldDoesNotExist)))
                                          bogusForceDataize.write (((((xrel_model).x_meta).xget_field)).apply ((xrel_name)))
                                          (((unsupported)).apply ((((xLayerMapError)).apply (("ForeignKey mapping field \"%s\" not in %s fields.".mod (((unsupported)).apply ((xrel_name)) ((((xrel_model).x__class__).x__name__))))))))
                                    xfields_val.write (xrel_model)
                                  (((unsupported)).apply ((((xTypeError)).apply ("ForeignKey mapping must be of dictionary type."))))
                                seq
                                  (((unsupported)).apply (((xmodel_field).x__class__)) (((xself).xFIELD_TYPES))).if
                                    (((unsupported)).apply ((((xLayerMapError)).apply (("Django field type \"%s\" has no OGR mapping (yet).".mod (xfld_name))))))
                                  xidx.write (((xcheck_ogr_fld)).apply ((xogr_name)))
                                  xogr_field.write (((unsupported)).apply ((xogr_field_types)) ((xidx)))
                                  ((((xissubclass)).apply ((xogr_field)) ((((unsupported)).apply (((xself).xFIELD_TYPES)) (((xmodel_field).x__class__))))).not).if
                                    (((unsupported)).apply ((((xLayerMapError)).apply (("OGR field \"%s\" (of type %s) cannot be mapped to Django %s.".mod (((unsupported)).apply ((xogr_field)) (((xogr_field).x__name__)) ((xfld_name))))))))
                                  xfields_val.write (xmodel_field)
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xfields)) ((xfield_name)))) ((xfields_val)))
                xcheck_srs.write
                  [xself xsource_srs]
                    memory > xsr
                    seq > @
                      seq
                        unsupported
                        (((xisinstance)).apply ((xsource_srs)) ((xSpatialReference))).if
                          xsr.write (xsource_srs)
                          (((xisinstance)).apply ((xsource_srs)) ((((((xself).xspatial_backend).xspatial_ref_sys)).apply))).if
                            xsr.write ((xsource_srs).xsrs)
                            (((xisinstance)).apply ((xsource_srs)) ((((unsupported)).apply ((xint)) ((xstr))))).if
                              xsr.write (((xSpatialReference)).apply ((xsource_srs)))
                              xsr.write (((xself).xlayer).xsrs)
                        ((xsr).not).if
                          (((unsupported)).apply ((((xLayerMapError)).apply ("No source reference system defined."))))
                          (((unsupported)).apply ((xsr)))
                xcheck_unique.write
                  [xself xunique]
                    seq > @
                      seq
                        unsupported
                        (((xisinstance)).apply ((xunique)) ((((unsupported)).apply ((xlist)) ((xtuple))))).if
                          (((unsupported)).apply ((xattr)) ((xunique)))
                            (((unsupported)).apply ((xattr)) (((xself).xmapping))).if
                              (((unsupported)).apply ((xValueError)))
                          (((xisinstance)).apply ((xunique)) ((xstr))).if
                            (((unsupported)).apply ((xunique)) (((xself).xmapping))).if
                              (((unsupported)).apply ((xValueError)))
                            (((unsupported)).apply ((((xTypeError)).apply ("Unique keyword argument must be set with a tuple, list, or string."))))
                xfeature_kwargs.write
                  [xself xfeat]
                    memory > xval
                    memory > xkwargs
                    memory > xmodel_field
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xkwargs.write (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xfield_name)) ((xogr_name)))) ((((((xself).xmapping).xitems)).apply)))
                          seq
                            xmodel_field.write (((unsupported)).apply (((xself).xfields)) ((xfield_name)))
                            (((xisinstance)).apply ((xmodel_field)) ((xGeometryField))).if
                              (((unsupported)).apply ((xGDALException)))
                                xval.write ((((xself).xverify_geom)).apply (((xfeat).xgeom)) ((xmodel_field)))
                                (((unsupported)).apply ((((xLayerMapError)).apply ("Could not retrieve geometry from feature."))))
                              (((xisinstance)).apply ((xmodel_field)) ((((xmodels).xbase).xModelBase))).if
                                xval.write ((((xself).xverify_fk)).apply ((xfeat)) ((xmodel_field)) ((xogr_name)))
                                xval.write ((((xself).xverify_ogr_field)).apply ((((unsupported)).apply ((xfeat)) ((xogr_name)))) ((xmodel_field)))
                            (((unsupported)).apply ((((unsupported)).apply ((xkwargs)) ((xfield_name)))) ((xval)))
                        (((unsupported)).apply ((xkwargs)))
                xunique_kwargs.write
                  [xself xkwargs]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((xisinstance)).apply (((xself).xunique)) ((xstr))).if
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xunique)) ((((unsupported)).apply ((xkwargs)) (((xself).xunique)))))))
                          (((unsupported)).apply ((((unsupported)).apply ((xfld)) ((((unsupported)).apply ((xkwargs)) ((xfld)))) ((xfld)) (((xself).xunique)))))
                xverify_ogr_field.write
                  [xself xogr_field xmodel_field]
                    memory > xd
                    memory > xmax_prec
                    memory > xn_prec
                    memory > xdtup
                    memory > xdigits
                    memory > xval
                    memory > xd_idx
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((((xisinstance)).apply ((xogr_field)) ((xOFTString))).and (((xisinstance)).apply ((xmodel_field)) ((((unsupported)).apply (((xmodels).xCharField)) (((xmodels).xTextField)))))).if
                          seq
                            (((xself).xencoding).and (((unsupported)).apply (((xogr_field).xvalue)) ("None: is there a None literal in the EO language?"))).if
                              xval.write (((xforce_str)).apply (((xogr_field).xvalue)) (((xself).xencoding)))
                              xval.write ((xogr_field).xvalue)
                            ((((xmodel_field).xmax_length).and (((unsupported)).apply ((xval)) ("None: is there a None literal in the EO language?"))).and ((((xlen)).apply ((xval))).greater ((xmodel_field).xmax_length))).if
                              (((unsupported)).apply ((((xInvalidString)).apply (("%s model field maximum string length is %s, given %s characters.".mod (((unsupported)).apply (((xmodel_field).xname)) (((xmodel_field).xmax_length)) ((((xlen)).apply ((xval))))))))))
                          ((((xisinstance)).apply ((xogr_field)) ((xOFTReal))).and (((xisinstance)).apply ((xmodel_field)) (((xmodels).xDecimalField)))).if
                            seq
                              (((unsupported)).apply ((xDecimalInvalidOperation)))
                                xd.write (((xDecimal)).apply ((((xstr)).apply (((xogr_field).xvalue)))))
                                (((unsupported)).apply ((((xInvalidDecimal)).apply (("Could not construct decimal from: %s".mod ((xogr_field).xvalue))))))
                              xdtup.write ((((xd).xas_tuple)).apply)
                              xdigits.write (((unsupported)).apply ((xdtup)) (1))
                              xd_idx.write (((unsupported)).apply ((xdtup)) (2))
                              xmax_prec.write (((xmodel_field).xmax_digits).sub ((xmodel_field).xdecimal_places))
                              ((xd_idx).less 0).if
                                xn_prec.write (((xlen)).apply ((((unsupported)).apply ((xdigits)) ((((unsupported)).apply ((xd_idx)))))))
                                xn_prec.write ((((xlen)).apply ((xdigits))).add (xd_idx))
                              ((xn_prec).greater (xmax_prec)).if
                                (((unsupported)).apply ((((xInvalidDecimal)).apply (("A DecimalField with max_digits %d, decimal_places %d must round to an absolute value less than 10^%d.".mod (((unsupported)).apply (((xmodel_field).xmax_digits)) (((xmodel_field).xdecimal_places)) ((xmax_prec))))))))
                              xval.write (xd)
                            ((((xisinstance)).apply ((xogr_field)) ((((unsupported)).apply ((xOFTReal)) ((xOFTString))))).and (((xisinstance)).apply ((xmodel_field)) (((xmodels).xIntegerField)))).if
                              (((unsupported)).apply ((xValueError)))
                                xval.write (((xint)).apply (((xogr_field).xvalue)))
                                (((unsupported)).apply ((((xInvalidInteger)).apply (("Could not construct integer from: %s".mod ((xogr_field).xvalue))))))
                              xval.write ((xogr_field).xvalue)
                        (((unsupported)).apply ((xval)))
                xverify_fk.write
                  [xself xfeat xrel_model xrel_mapping]
                    memory > xfk_kwargs
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xfk_kwargs.write (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xfield_name)) ((xogr_name)))) (((((xrel_mapping).xitems)).apply)))
                          (((unsupported)).apply ((((unsupported)).apply ((xfk_kwargs)) ((xfield_name)))) (((((xself).xverify_ogr_field)).apply ((((unsupported)).apply ((xfeat)) ((xogr_name)))) ((((((xrel_model).x_meta).xget_field)).apply ((xfield_name)))))))
                        (((unsupported)).apply ((xObjectDoesNotExist)))
                          (((unsupported)).apply (((((((((xrel_model).xobjects).xusing)).apply (((xself).xusing))).xget)).apply ((((unsupported)).apply ((xfk_kwargs)))))))
                          (((unsupported)).apply ((((xMissingForeignKey)).apply (("No ForeignKey %s model found with keyword arguments: %s".mod (((unsupported)).apply (((xrel_model).x__name__)) ((xfk_kwargs))))))))
                xverify_geom.write
                  [xself xgeom xmodel_field]
                    memory > xmulti_type
                    memory > xg
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((xself).xcoord_dim).neq ((xgeom).xcoord_dim)).if
                          (((unsupported)).apply (((xgeom).xcoord_dim)) (((xself).xcoord_dim)))
                        ((((xself).xmake_multi)).apply (((xgeom).xgeom_type)) ((xmodel_field))).if
                          seq
                            xmulti_type.write (((unsupported)).apply (((xself).xMULTI_TYPES)) ((((xgeom).xgeom_type).xnum)))
                            xg.write (((xOGRGeometry)).apply ((xmulti_type)))
                            bogusForceDataize.write ((((xg).xadd)).apply ((xgeom)))
                          xg.write (xgeom)
                        ((xself).xtransform).if
                          bogusForceDataize.write ((((xg).xtransform)).apply (((xself).xtransform)))
                        (((unsupported)).apply (((xg).xwkt)))
                xcoord_transform.write
                  [xself]
                    memory > xtarget_srs
                    memory > xSpatialRefSys
                    seq > @
                      seq
                        unsupported
                        xSpatialRefSys.write (((((xself).xspatial_backend).xspatial_ref_sys)).apply)
                        (((unsupported)).apply ((xException)))
                          seq
                            xtarget_srs.write ((((unsupported)).apply (((((((xSpatialRefSys).xobjects).xusing)).apply (((xself).xusing))).xget)) ((((xself).xgeo_field).xsrid))).xsrs)
                            (((unsupported)).apply ((((xCoordTransform)).apply (((xself).xsource_srs)) ((xtarget_srs)))))
                          (((unsupported)).apply ((((xLayerMapError)).apply ("Could not translate between the data source and model geometry."))) ((xexc)))
                xgeometry_field.write
                  [xself]
                    memory > xopts
                    seq > @
                      seq
                        unsupported
                        xopts.write (((xself).xmodel).x_meta)
                        (((unsupported)).apply (((((xopts).xget_field)).apply (((xself).xgeom_field)))))
                xmake_multi.write
                  [xself xgeom_type xmodel_field]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((unsupported)).apply (((xgeom_type).xnum)) (((xself).xMULTI_TYPES))).and ((((xmodel_field).x__class__).x__name__).eq ("Multi%s".mod ((xgeom_type).xdjango))))))
                xsave.write
                  [xself xverbose xfid_range xstep xprogress xsilent xstream xstrict]
                    memory > xindices
                    memory > xbeg
                    memory > xdefault_range
                    memory > xn_i
                    memory > xprogress_interval
                    memory > xnfeat
                    memory > xstep_slice
                    memory > x_save
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xdefault_range.write ((((xself).xcheck_fid_range)).apply ((xfid_range)))
                        (xprogress).if
                          ((((unsupported)).apply ((xprogress)) (TRUE)).or ((((xisinstance)).apply ((xprogress)) ((xint))).not)).if
                            xprogress_interval.write 1000
                            xprogress_interval.write (xprogress)
                        x_save.write
                          [xfeat_range xnum_feat xnum_saved]
                            memory > xis_update
                            memory > xnew
                            memory > xlayer_iter
                            memory > xu_kwargs
                            memory > xgeom
                            memory > xm
                            memory > xgeom_value
                            memory > xkwargs
                            seq > @
                              (((unsupported)).apply)
                                (xfeat_range).if
                                  xlayer_iter.write (((unsupported)).apply (((xself).xlayer)) ((xfeat_range)))
                                  xlayer_iter.write ((xself).xlayer)
                                (((unsupported)).apply ((xfeat)) ((xlayer_iter)))
                                  seq
                                    (((unsupported)).apply ((xnum_feat)) (1))
                                    (((unsupported)).apply ((xLayerMapError)))
                                      xkwargs.write ((((xself).xfeature_kwargs)).apply ((xfeat)))
                                      (xstrict).if
                                        (((unsupported)).apply)
                                        ((xsilent).not).if
                                          bogusForceDataize.write ((((xstream).xwrite)).apply (("Ignoring Feature ID %s because: %sn".mod (((unsupported)).apply (((xfeat).xfid)) ((xmsg))))))
                                      seq
                                        xis_update.write FALSE
                                        ((xself).xunique).if
                                          (((unsupported)).apply ((xObjectDoesNotExist)))
                                            seq
                                              xu_kwargs.write ((((xself).xunique_kwargs)).apply ((xkwargs)))
                                              xm.write (((((((((xself).xmodel).xobjects).xusing)).apply (((xself).xusing))).xget)).apply ((((unsupported)).apply ((xu_kwargs)))))
                                              xis_update.write TRUE
                                              xgeom_value.write (((xgetattr)).apply ((xm)) (((xself).xgeom_field)))
                                              (((unsupported)).apply ((xgeom_value)) ("None: is there a None literal in the EO language?")).if
                                                xgeom.write (((xOGRGeometry)).apply ((((unsupported)).apply ((xkwargs)) (((xself).xgeom_field)))))
                                                seq
                                                  xgeom.write ((xgeom_value).xogr)
                                                  xnew.write (((xOGRGeometry)).apply ((((unsupported)).apply ((xkwargs)) (((xself).xgeom_field)))))
                                                  (((unsupported)).apply ((xg)) ((xnew)))
                                                    bogusForceDataize.write ((((xgeom).xadd)).apply ((xg)))
                                              bogusForceDataize.write (((xsetattr)).apply ((xm)) (((xself).xgeom_field)) (((xgeom).xwkt)))
                                            xm.write ((((xself).xmodel)).apply ((((unsupported)).apply ((xkwargs)))))
                                          xm.write ((((xself).xmodel)).apply ((((unsupported)).apply ((xkwargs)))))
                                        (((unsupported)).apply ((xException)))
                                          seq
                                            (((unsupported)).apply (((xm).xsave)) (((xself).xusing)))
                                            (((unsupported)).apply ((xnum_saved)) (1))
                                            (xverbose).if
                                              bogusForceDataize.write ((((xstream).xwrite)).apply (("%s: %sn".mod (((unsupported)).apply (((xis_update).if "Updated" "Saved")) ((xm))))))
                                          (xstrict).if
                                            seq
                                              ((xsilent).not).if
                                                seq
                                                  bogusForceDataize.write ((((xstream).xwrite)).apply (("Failed to save the feature (id: %s) into the model with the keyword arguments:n".mod ((xfeat).xfid))))
                                                  bogusForceDataize.write ((((xstream).xwrite)).apply (("%sn".mod (xkwargs))))
                                              (((unsupported)).apply)
                                            ((xsilent).not).if
                                              bogusForceDataize.write ((((xstream).xwrite)).apply (("Failed to save %s:n %snContinuingn".mod (((unsupported)).apply ((xkwargs)) ((xmsg))))))
                                    ((xprogress).and (((xnum_feat).mod (xprogress_interval)).eq 0)).if
                                      bogusForceDataize.write ((((xstream).xwrite)).apply (("Processed %d features, saved %d ...n".mod (((unsupported)).apply ((xnum_feat)) ((xnum_saved))))))
                                (((unsupported)).apply ((((unsupported)).apply ((xnum_saved)) ((xnum_feat)))))
                        (((unsupported)).apply (((xself).xtransaction_decorator)) ("None: is there a None literal in the EO language?")).if
                          x_save.write ((((xself).xtransaction_decorator)).apply ((x_save)))
                        xnfeat.write (((xself).xlayer).xnum_feat)
                        (((xstep).and (((xisinstance)).apply ((xstep)) ((xint)))).and ((xstep).less (xnfeat))).if
                          seq
                            (xdefault_range).if
                              (((unsupported)).apply ((((xLayerMapError)).apply ("The `step` keyword may not be used in conjunction with the `fid_range` keyword."))))
                            (((unsupported)).apply ((((unsupported)).apply ((xbeg)) ((xnum_feat)) ((xnum_saved)))) ((((unsupported)).apply (0) (0) (0))))
                            xindices.write (((xrange)).apply ((xstep)) ((xnfeat)) ((xstep)))
                            xn_i.write (((xlen)).apply ((xindices)))
                            (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xend)))) ((((xenumerate)).apply ((xindices)))))
                              seq
                                (((xi).add 1).eq (xn_i)).if
                                  xstep_slice.write (((xslice)).apply ((xbeg)) ("None: is there a None literal in the EO language?"))
                                  xstep_slice.write (((xslice)).apply ((xbeg)) ((xend)))
                                (((unsupported)).apply ((xException)))
                                  seq
                                    (((unsupported)).apply ((((unsupported)).apply ((xnum_feat)) ((xnum_saved)))) ((((x_save)).apply ((xstep_slice)) ((xnum_feat)) ((xnum_saved)))))
                                    xbeg.write (xend)
                                  seq
                                    bogusForceDataize.write ((((xstream).xwrite)).apply (("%snFailed to save slice: %sn".mod (((unsupported)).apply (("=-".mul 20)) ((xstep_slice))))))
                                    (((unsupported)).apply)
                          bogusForceDataize.write (((x_save)).apply)