memory > xLower
memory > xIntegerField
memory > xValue
memory > xa
memory > xRight
memory > xValueError
memory > xTestCase
memory > xAuthor
[] > test_right
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsetUpTestData
        memory > xtest_expressions
        memory > xtest_invalid_length
        memory > xtest_basic
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xAuthor).xobjects).xcreate)) ("John Smith") ("smithj"))
                        (((unsupported)).apply ((((xAuthor).xobjects).xcreate)) ("Rhonda"))
                xtest_basic.write
                  [xself]
                    memory > xauthors
                    seq > @
                      seq
                        xauthors.write (((unsupported)).apply ((((xAuthor).xobjects).xannotate)) ((((xRight)).apply ("name") (5))))
                        bogusForceDataize.write ((((xself).xassertQuerysetEqual)).apply (((((xauthors).xorder_by)).apply ("name"))) ((((unsupported)).apply ("Smith") ("honda"))) ((((unsupported)).apply (((xa).xname_part)))))
                        (((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xfilter)) (TRUE)).xupdate)) ((((xLower)).apply ((((xRight)).apply ("name") (2))))))
                        bogusForceDataize.write ((((xself).xassertQuerysetEqual)).apply (((((xauthors).xorder_by)).apply ("name"))) ((((unsupported)).apply ("smithj") ("da"))) ((((unsupported)).apply (((xa).xalias)))))
                xtest_invalid_length.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("'length' must be greater than 0"))))
                        (((unsupported)).apply ((((xAuthor).xobjects).xannotate)) ((((xRight)).apply ("name") (0))))
                xtest_expressions.write
                  [xself]
                    memory > xauthors
                    seq > @
                      seq
                        xauthors.write (((unsupported)).apply ((((xAuthor).xobjects).xannotate)) ((((xRight)).apply ("name") ((((unsupported)).apply ((xValue)) (3) ((((xIntegerField)).apply)))))))
                        bogusForceDataize.write ((((xself).xassertQuerysetEqual)).apply (((((xauthors).xorder_by)).apply ("name"))) ((((unsupported)).apply ("ith") ("nda"))) ((((unsupported)).apply (((xa).xname_part)))))