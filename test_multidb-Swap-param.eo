memory > xBook
memory > xTestCase
memory > xpath
memory > xoverride_settings
memory > xUser
memory > x__name__
memory > xreverse
memory > xdb
memory > xadmin
memory > xRouter
[] > test_multidb
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xdb_for_read
        memory > xsite
        memory > xdb_for_write
        memory > xtest_add_view
        memory > xurlpatterns
        memory > xdatabases
        memory > xsetUpTestData
        memory > xtest_change_view
        memory > xtarget_db
        memory > xtest_delete_view
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                xtarget_db.write "None: is there a None literal in the EO language?"
                xdb_for_read.write
                  [xself xmodel]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xtarget_db)))
                xdb_for_write.write (xdb_for_read)
            xsite.write (((unsupported)).apply (((xadmin).xAdminSite)) ("test_adminsite"))
            bogusForceDataize.write ((((xsite).xregister)).apply ((xBook)))
            xurlpatterns.write (((unsupported)).apply ((((xpath)).apply ("admin/") (((xsite).xurls)))))
            (((unsupported)).apply ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ((x__name__)) ((((unsupported)).apply (("%s.Router".mod (x__name__))))))))
              seq
                xdatabases.write (((unsupported)).apply ("default") ("other"))
                xsetUpTestData.write
                  [xcls]
                    memory > xb
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xsuperusers)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xcls).xtest_book_ids)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xdb)) (((xcls).xdatabases)))
                          seq
                            (((unsupported)).apply (((xRouter).xtarget_db)) ((xdb)))
                            (((unsupported)).apply ((((unsupported)).apply (((xcls).xsuperusers)) ((xdb)))) ((((unsupported)).apply ((((xUser).xobjects).xcreate_superuser)) ("admin") ("something") ("test@test.org"))))
                            xb.write (((unsupported)).apply ((xBook)) ("Test Book"))
                            (((unsupported)).apply (((xb).xsave)) ((xdb)))
                            (((unsupported)).apply ((((unsupported)).apply (((xcls).xtest_book_ids)) ((xdb)))) (((xb).xid)))
                xtest_add_view.write
                  [xself xmock]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xdb)) (((xself).xdatabases)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xdb)))))
                            seq
                              (((unsupported)).apply (((xRouter).xtarget_db)) ((xdb)))
                              bogusForceDataize.write (((((xself).xclient).xforce_login)).apply ((((unsupported)).apply (((xself).xsuperusers)) ((xdb)))))
                              bogusForceDataize.write (((((xself).xclient).xpost)).apply ((((xreverse)).apply ("test_adminsite:admin_views_book_add"))) ((((unsupported)).apply ("name") ("Foobar: 5th edition"))))
                              (((unsupported)).apply ((((xmock).xatomic).xassert_called_with)) ((xdb)))
                xtest_change_view.write
                  [xself xmock]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xdb)) (((xself).xdatabases)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xdb)))))
                            seq
                              (((unsupported)).apply (((xRouter).xtarget_db)) ((xdb)))
                              bogusForceDataize.write (((((xself).xclient).xforce_login)).apply ((((unsupported)).apply (((xself).xsuperusers)) ((xdb)))))
                              bogusForceDataize.write (((((xself).xclient).xpost)).apply ((((unsupported)).apply ((xreverse)) ("test_adminsite:admin_views_book_change") ((((unsupported)).apply ((((unsupported)).apply (((xself).xtest_book_ids)) ((xdb)))))))) ((((unsupported)).apply ("name") ("Test Book 2: Test more"))))
                              (((unsupported)).apply ((((xmock).xatomic).xassert_called_with)) ((xdb)))
                xtest_delete_view.write
                  [xself xmock]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xdb)) (((xself).xdatabases)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xdb)))))
                            seq
                              (((unsupported)).apply (((xRouter).xtarget_db)) ((xdb)))
                              bogusForceDataize.write (((((xself).xclient).xforce_login)).apply ((((unsupported)).apply (((xself).xsuperusers)) ((xdb)))))
                              bogusForceDataize.write (((((xself).xclient).xpost)).apply ((((unsupported)).apply ((xreverse)) ("test_adminsite:admin_views_book_delete") ((((unsupported)).apply ((((unsupported)).apply (((xself).xtest_book_ids)) ((xdb)))))))) ((((unsupported)).apply ("post") ("yes"))))
                              (((unsupported)).apply ((((xmock).xatomic).xassert_called_with)) ((xdb)))