memory > xk
memory > xAttributeError
memory > xlist
memory > xenumerate
memory > xstr
memory > xMultiValueDict
memory > xvalue
memory > xIndexError
memory > xKeyError
memory > xreversed
memory > xrepr
memory > xsuper
memory > xargs
memory > xiter
memory > xkwargs
memory > xValueError
memory > xoriginal_key
memory > xvalue_list
memory > xi
memory > xbool
memory > xtuple
memory > xMapping
memory > xv
memory > xid
memory > xMultiValueDictKeyError
memory > xelem
memory > xisinstance
memory > xlen
memory > xTypeError
memory > xkey
[] > datastructures
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__reversed__
        memory > xget
        memory > xlists
        memory > x__contains__
        memory > xcomplain
        memory > x_getlist
        memory > xappend
        memory > x__delslice__
        memory > x__setitem__
        memory > x__len__
        memory > xsetlistdefault
        memory > x__bool__
        memory > xreverse
        memory > xcopy
        memory > x__deepcopy__
        memory > xvalues
        memory > x__setstate__
        memory > x__eq__
        memory > x__repr__
        memory > xpop
        memory > xsetdefault
        memory > xextend
        memory > x__iter__
        memory > xgetlist
        memory > x__getitem__
        memory > x__imul__
        memory > x__delitem__
        memory > x__setslice__
        memory > xinsert
        memory > x__getstate__
        memory > xitems
        memory > xsort
        memory > xappendlist
        memory > x__init__
        memory > x_unpack_items
        memory > xadd
        memory > xupdate
        memory > xdiscard
        memory > x__new__
        memory > xdict
        memory > x__iadd__
        memory > x__copy__
        memory > xremove
        memory > xsetlist
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xiterable]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xdict)) (((((xdict).xfromkeys)).apply (((xiterable).or (((unsupported)).apply))))))
                xadd.write
                  [xself xitem]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).xdict)) ((xitem)))) ("None: is there a None literal in the EO language?"))
                xremove.write
                  [xself xitem]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xdict)) ((xitem)))))))
                xdiscard.write
                  [xself xitem]
                    seq > @
                      (((unsupported)).apply ((xKeyError)))
                        bogusForceDataize.write ((((xself).xremove)).apply ((xitem)))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xiter)).apply (((xself).xdict)))))
                x__reversed__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xreversed)).apply (((xself).xdict)))))
                x__contains__.write
                  [xself xitem]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xitem)) (((xself).xdict)))))
                x__bool__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xbool)).apply (((xself).xdict)))))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xlen)).apply (((xself).xdict)))))
                x__repr__.write
                  [xself]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write (((xself).xdict).if (((xrepr)).apply ((((xlist)).apply (((xself).xdict))))) "")
                        (((unsupported)).apply ("{self.__class__.__qualname__}({data})"))
            (((unsupported)).apply ((xKeyError)))
            (((unsupported)).apply ((xdict)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xkey_to_list_mapping]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xkey_to_list_mapping)))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (("<%s: %s>".mod (((unsupported)).apply ((((xself).x__class__).x__name__)) (((((((xsuper)).apply).x__repr__)).apply))))))
                x__getitem__.write
                  [xself xkey]
                    memory > xlist_
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xKeyError)))
                          xlist_.write ((((((xsuper)).apply).x__getitem__)).apply ((xkey)))
                          (((unsupported)).apply ((((xMultiValueDictKeyError)).apply ((xkey)))))
                        (((unsupported)).apply ((xIndexError)))
                          (((unsupported)).apply ((((unsupported)).apply ((xlist_)) ((1.neg)))))
                          (((unsupported)).apply ((((unsupported)).apply)))
                x__setitem__.write
                  [xself xkey xvalue]
                    seq > @
                      bogusForceDataize.write ((((((xsuper)).apply).x__setitem__)).apply ((xkey)) ((((unsupported)).apply ((xvalue)))))
                x__copy__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).x__class__)).apply ((((unsupported)).apply ((((unsupported)).apply ((xk)) ((((unsupported)).apply ((xv)) ((((unsupported)).apply)))))) ((((unsupported)).apply ((xk)) ((xv)))) (((((xself).xlists)).apply)))))))
                x__deepcopy__.write
                  [xself xmemo]
                    memory > xresult
                    seq > @
                      seq
                        xresult.write ((((xself).x__class__)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xmemo)) ((((xid)).apply ((xself)))))) ((xresult)))
                        (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xvalue)))) (((((xdict).xitems)).apply ((xself)))))
                          bogusForceDataize.write ((((xdict).x__setitem__)).apply ((xresult)) (((((xcopy).xdeepcopy)).apply ((xkey)) ((xmemo)))) (((((xcopy).xdeepcopy)).apply ((xvalue)) ((xmemo)))))
                        (((unsupported)).apply ((xresult)))
                x__getstate__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).x__dict__)) ("_data") ((((unsupported)).apply ((xk)) (((((xself).x_getlist)).apply ((xk)))) ((xk)) ((xself)))))))
                x__setstate__.write
                  [xself xobj_dict]
                    memory > xdata
                    seq > @
                      seq
                        xdata.write ((((xobj_dict).xpop)).apply ("_data") ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply ((xk)) ((xv)))) (((((xdata).xitems)).apply)))
                          bogusForceDataize.write ((((xself).xsetlist)).apply ((xk)) ((xv)))
                        bogusForceDataize.write (((((xself).x__dict__).xupdate)).apply ((xobj_dict)))
                xget.write
                  [xself xkey xdefault]
                    memory > xval
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xKeyError)))
                          xval.write (((unsupported)).apply ((xself)) ((xkey)))
                          (((unsupported)).apply ((xdefault)))
                        ((xval).eq (((unsupported)).apply)).if
                          (((unsupported)).apply ((xdefault)))
                        (((unsupported)).apply ((xval)))
                x_getlist.write
                  [xself xkey xdefault xforce_list]
                    memory > xvalues
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xKeyError)))
                          xvalues.write ((((((xsuper)).apply).x__getitem__)).apply ((xkey)))
                          seq
                            (((unsupported)).apply ((xdefault)) ("None: is there a None literal in the EO language?")).if
                              (((unsupported)).apply ((((unsupported)).apply)))
                            (((unsupported)).apply ((xdefault)))
                          seq
                            (xforce_list).if
                              xvalues.write ((((unsupported)).apply ((xvalues)) ("None: is there a None literal in the EO language?")).if (((xlist)).apply ((xvalues))) "None: is there a None literal in the EO language?")
                            (((unsupported)).apply ((xvalues)))
                xgetlist.write
                  [xself xkey xdefault]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xself).x_getlist)) ((xkey)) ((xdefault)) (TRUE))))
                xsetlist.write
                  [xself xkey xlist_]
                    seq > @
                      bogusForceDataize.write ((((((xsuper)).apply).x__setitem__)).apply ((xkey)) ((xlist_)))
                xsetdefault.write
                  [xself xkey xdefault]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xkey)) ((xself))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))) ((xdefault)))
                        (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))))
                xsetlistdefault.write
                  [xself xkey xdefault_list]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xkey)) ((xself))).if
                          seq
                            (((unsupported)).apply ((xdefault_list)) ("None: is there a None literal in the EO language?")).if
                              xdefault_list.write (((unsupported)).apply)
                            bogusForceDataize.write ((((xself).xsetlist)).apply ((xkey)) ((xdefault_list)))
                        (((unsupported)).apply (((((xself).x_getlist)).apply ((xkey)))))
                xappendlist.write
                  [xself xkey xvalue]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write (((((((xself).xsetlistdefault)).apply ((xkey))).xappend)).apply ((xvalue)))
                xitems.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xkey)) ((xself)))
                          (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((((unsupported)).apply ((xself)) ((xkey)))))))
                xlists.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xiter)).apply (((((((xsuper)).apply).xitems)).apply)))))
                xvalues.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xkey)) ((xself)))
                          (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))))
                xcopy.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xcopy).xcopy)).apply ((xself)))))
                xupdate.write
                  [xself]
                    memory > xarg
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        ((((xlen)).apply ((xargs))).greater 1).if
                          (((unsupported)).apply ((((xTypeError)).apply (("update expected at most 1 argument, got %d".mod (((xlen)).apply ((xargs))))))))
                        (xargs).if
                          seq
                            xarg.write (((unsupported)).apply ((xargs)) (0))
                            (((xisinstance)).apply ((xarg)) ((xMultiValueDict))).if
                              (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xvalue_list)))) (((((xarg).xlists)).apply)))
                                bogusForceDataize.write (((((((xself).xsetlistdefault)).apply ((xkey))).xextend)).apply ((xvalue_list)))
                              seq
                                (((xisinstance)).apply ((xarg)) ((xMapping))).if
                                  xarg.write ((((xarg).xitems)).apply)
                                (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xvalue)))) ((xarg)))
                                  bogusForceDataize.write (((((((xself).xsetlistdefault)).apply ((xkey))).xappend)).apply ((xvalue)))
                        (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xvalue)))) (((((xkwargs).xitems)).apply)))
                          bogusForceDataize.write (((((((xself).xsetlistdefault)).apply ((xkey))).xappend)).apply ((xvalue)))
                xdict.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((((unsupported)).apply ((xself)) ((xkey)))) ((xkey)) ((xself)))))
            (((unsupported)).apply ((xtuple)))
              seq
                (((unsupported)).apply)
                x__new__.write
                  [xcls xwarning]
                    memory > xself
                    seq > @
                      (((unsupported)).apply)
                        xself.write ((((xtuple).x__new__)).apply ((xcls)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        (((unsupported)).apply (((xself).xwarning)) ((xwarning)))
                        (((unsupported)).apply ((xself)))
                xcomplain.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xAttributeError)).apply (((xself).xwarning)))))
                x__delitem__.write (xcomplain)
                x__delslice__.write (xcomplain)
                x__iadd__.write (xcomplain)
                x__imul__.write (xcomplain)
                x__setitem__.write (xcomplain)
                x__setslice__.write (xcomplain)
                xappend.write (xcomplain)
                xextend.write (xcomplain)
                xinsert.write (xcomplain)
                xpop.write (xcomplain)
                xremove.write (xcomplain)
                xsort.write (xcomplain)
                xreverse.write (xcomplain)
            (((unsupported)).apply ((xdict)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xdata xfunc xprefix]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xdata)))
                        (((unsupported)).apply (((xself).xfunc)) ((xfunc)))
                        (((unsupported)).apply (((xself).xprefix)) ((xprefix)))
                x__getitem__.write
                  [xself xkey]
                    memory > xvalue
                    memory > xuse_func
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xuse_func.write ((((xkey).xstartswith)).apply (((xself).xprefix)))
                        (xuse_func).if
                          xkey.write (((unsupported)).apply ((xkey)) ((((unsupported)).apply ((((xlen)).apply (((xself).xprefix)))))))
                        xvalue.write ((((((xsuper)).apply).x__getitem__)).apply ((xkey)))
                        (xuse_func).if
                          (((unsupported)).apply (((((xself).xfunc)).apply ((xvalue)))))
                        (((unsupported)).apply ((xvalue)))
            (((unsupported)).apply ((xMapping)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xdata]
                    seq > @
                      (((unsupported)).apply (((xself).x_store)) ((((unsupported)).apply (((((xk).xlower)).apply)) ((((unsupported)).apply ((xk)) ((xv)))) ((((unsupported)).apply ((xk)) ((xv)))) (((((xself).x_unpack_items)).apply ((xdata)))))))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).x_store)) (((((xkey).xlower)).apply)))) (1))))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xlen)).apply (((xself).x_store)))))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((((xisinstance)).apply ((xother)) ((xMapping))).and ((((unsupported)).apply (((((xk).xlower)).apply)) ((xv)) ((((unsupported)).apply ((xk)) ((xv)))) (((((xself).xitems)).apply))).eq (((unsupported)).apply (((((xk).xlower)).apply)) ((xv)) ((((unsupported)).apply ((xk)) ((xv)))) (((((xother).xitems)).apply)))))))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xoriginal_key)) ((((unsupported)).apply ((xoriginal_key)) ((xvalue)))) ((((((xself).x_store).xvalues)).apply)))))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xrepr)).apply ((((unsupported)).apply ((xkey)) ((xvalue)) ((((unsupported)).apply ((xkey)) ((xvalue)))) ((((((xself).x_store).xvalues)).apply)))))))
                xcopy.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xself)))
                x_unpack_items.write
                  [xdata]
                    seq > @
                      (((unsupported)).apply)
                        (((xisinstance)).apply ((xdata)) ((((unsupported)).apply ((xdict)) ((xMapping))))).if
                          seq
                            (((unsupported)).apply (((((xdata).xitems)).apply)))
                            (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xelem)))) ((((xenumerate)).apply ((xdata)))))
                          seq
                            ((((xlen)).apply ((xelem))).neq 2).if
                              (((unsupported)).apply ((((xValueError)).apply (((("dictionary update sequence element #{} has length {}; 2 is required.".xformat)).apply ((xi)) ((((xlen)).apply ((xelem)))))))))
                            ((((xisinstance)).apply ((((unsupported)).apply ((xelem)) (0))) ((xstr))).not).if
                              (((unsupported)).apply ((((xValueError)).apply (("Element key %r invalid, only strings are allowed".mod (((unsupported)).apply ((xelem)) (0)))))))
                            (((unsupported)).apply ((xelem)))