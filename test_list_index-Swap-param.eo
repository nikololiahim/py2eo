memory > xSimpleTestCase
[] > test_list_index
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_list_index07
        memory > xtest_list_index02
        memory > xtest_list_index06
        memory > xtest_list_index05
        memory > xtest_list_index04
        memory > xtest_list_index01
        memory > xtest_list_index03
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_list_index01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index01") ((((unsupported)).apply ("var") ((((unsupported)).apply ("first item") ("second item"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("second item") ((xoutput)))
                xtest_list_index02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index02") ((((unsupported)).apply ("var") ((((unsupported)).apply ("first item") ("second item"))))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_list_index03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index03") ((((unsupported)).apply ("var") ("None: is there a None literal in the EO language?"))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_list_index04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index04") ((((unsupported)).apply ("var") ((((unsupported)).apply)))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_list_index05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index05") ((((unsupported)).apply ("var") ((((unsupported)).apply ("1") ("hello"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("hello"))
                xtest_list_index06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index06") ((((unsupported)).apply ("var") ((((unsupported)).apply (1) ("hello"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("hello"))
                xtest_list_index07.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("list-index07") ((((unsupported)).apply ("var") ((((unsupported)).apply ("1") ("hello") (1) ("world"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("hello"))