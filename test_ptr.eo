memory > xImportError
memory > xException
memory > xFakeGeom2
memory > xmock
memory > xbad_ptr
memory > xSimpleTestCase
memory > xNullPointerException
memory > xFakeGeom
memory > xctypes
memory > xCPointerBase
memory > xTypeError
memory > xFakeGeom1
[] > test_ptr
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest
        memory > xtest_destructor_catches_importerror
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest.write
                  [xself]
                    memory > xdestructor
                    memory > xnull_ptr_exception_class
                    memory > xfg
                    memory > xfg1
                    memory > xptr
                    memory > xbad_ptrs
                    memory > xptr_type
                    memory > xdestructor_mock
                    memory > xfg2
                    seq > @
                      seq
                        xdestructor_mock.write ((((xmock).xMock)).apply)
                        (((unsupported)).apply ((xException)))
                        (((unsupported)).apply ((xCPointerBase)))
                          xnull_ptr_exception_class.write (xNullPointerException)
                        (((unsupported)).apply ((xFakeGeom1)))
                          seq
                            xptr_type.write ((((xctypes).xPOINTER)).apply (((xctypes).xc_float)))
                            xdestructor.write (xdestructor_mock)
                        xfg1.write (((xFakeGeom1)).apply)
                        xfg2.write (((xFakeGeom2)).apply)
                        (((unsupported)).apply (((xfg1).xptr)) (((((xfg1).xptr_type)).apply)))
                        (((unsupported)).apply (((xfg1).xptr)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xfg2).xptr)) (((((xfg2).xptr_type)).apply (((((xctypes).xc_float)).apply (5.23))))))
                        (((unsupported)).apply (((xfg2).xptr)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((xfg)) ((((unsupported)).apply ((xfg1)) ((xfg2)))))
                          (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNullPointerException)))))
                            unsupported
                        xbad_ptrs.write (((unsupported)).apply (5) (((((xctypes).xc_char_p)).apply ("foobar"))))
                        (((unsupported)).apply ((xbad_ptr)) ((xbad_ptrs)))
                          (((unsupported)).apply ((xfg)) ((((unsupported)).apply ((xfg1)) ((xfg2)))))
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ("Incompatible pointer type"))))
                              (((unsupported)).apply (((xfg).xptr)) ((xbad_ptr)))
                        xfg.write (((xFakeGeom1)).apply)
                        (((unsupported)).apply (((xfg).xptr)) (((((xfg).xptr_type)).apply (1))))
                        (((unsupported)).apply ((((unsupported)).apply ((xfg)))))
                        xfg.write (((xFakeGeom2)).apply)
                        (((unsupported)).apply (((xfg).xptr)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((((unsupported)).apply ((xfg)))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((xdestructor_mock).xcalled)))
                        xfg.write (((xFakeGeom2)).apply)
                        xptr.write ((((xfg).xptr_type)).apply (((((xctypes).xc_float)).apply (1.0))))
                        (((unsupported)).apply (((xfg).xptr)) ((xptr)))
                        (((unsupported)).apply ((((unsupported)).apply ((xfg)))))
                        bogusForceDataize.write ((((xdestructor_mock).xassert_called_with)).apply ((xptr)))
                xtest_destructor_catches_importerror.write
                  [xself]
                    memory > xdestructor
                    memory > xfg
                    seq > @
                      seq
                        (((unsupported)).apply ((xCPointerBase)))
                          xdestructor.write (((unsupported)).apply (((xmock).xMock)) ((xImportError)))
                        xfg.write (((xFakeGeom)).apply)
                        (((unsupported)).apply (((xfg).xptr)) (((((xfg).xptr_type)).apply (1))))
                        (((unsupported)).apply ((((unsupported)).apply ((xfg)))))