31c31
<                         xissues.write ((((((xsuper)).apply).xcheck)).apply ((((unsupported)).apply ((xkwargs)))))
---
>                         xissues.write ((((xsuper).xcheck)).apply ((((unsupported)).apply ((xkwargs)))))
39c39
<                           (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xchecks).xWarning)) (("%s Strict Mode is not set for database connection '%s'".mod (((unsupported)).apply ((((xself).xconnection).xdisplay_name)) ((((xself).xconnection).xalias))))) ((((unsupported)).apply (("%s's Strict Mode fixes many data integrity problems in %s, such as data truncation upon insertion, by escalating warnings into errors. It is strongly recommended you activate it. See: https://docs.djangoproject.com/en/%s/ref/databases/#mysql-sql-mode".mod (((unsupported)).apply ((((xself).xconnection).xdisplay_name)) ((((xself).xconnection).xdisplay_name)) ((((xget_docs_version)).apply))))))) ("mysql.W002"))))))
---
>                           (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xchecks).xWarning)) (("%s Strict Mode is not set for database connection '%s'".mod (((unsupported)).apply ((((xself).xconnection).xdisplay_name)) ((((xself).xconnection).xalias))))) ((((unsupported)).apply (("%s's Strict Mode fixes many data integrity problems in %s, such as data truncation upon insertion, by escalating warnings into errors. It is strongly recommended you activate it. See: https://docs.djangoproject.com/en/%s/ref/databases/#mysql-sql-mode".mod (((unsupported)).apply ((((xself).xconnection).xdisplay_name)) ((((xself).xconnection).xdisplay_name)) ((xget_docs_version))))))) ("mysql.W002"))))))
49,50c49,50
<                           bogusForceDataize.write ((((xerrors).xappend)).apply ((((unsupported)).apply (((xchecks).xWarning)) (("%s may not allow unique CharFields to have a max_length > 255.".mod (((xself).xconnection).xdisplay_name))) ((xfield)) (("See: https://docs.djangoproject.com/en/%s/ref/databases/#mysql-character-fields".mod (((xget_docs_version)).apply))) ("mysql.W003"))))
<                         (((xfield).xdb_index).and (((unsupported)).apply (((((xfield_type).xlower)).apply)) ((((xself).xconnection).x_limited_data_types)))).if
---
>                           bogusForceDataize.write ((((xerrors).xappend)).apply ((((unsupported)).apply (((xchecks).xWarning)) (("%s may not allow unique CharFields to have a max_length > 255.".mod (((xself).xconnection).xdisplay_name))) ((xfield)) (("See: https://docs.djangoproject.com/en/%s/ref/databases/#mysql-character-fields".mod (xget_docs_version))) ("mysql.W003"))))
>                         (((xfield).xdb_index).and (((unsupported)).apply (((xfield_type).xlower)) ((((xself).xconnection).x_limited_data_types)))).if