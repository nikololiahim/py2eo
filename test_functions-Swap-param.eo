memory > xCity
memory > xyfac
memory > xconnection
memory > xfunctions
memory > xIntegerField
memory > xre
memory > xxfac
memory > xjson
memory > xSum
memory > xfromstr
memory > xbad_args
memory > xc
memory > xArea
memory > xlist
memory > xexpected_distance
memory > xp2
memory > xcity
memory > xGeometryField
memory > xValueError
memory > xstr
memory > xc2
memory > xcountry
memory > xAssertionError
memory > xr1
memory > xTestCase
memory > xrange
memory > xmath
memory > xState
memory > xPolygonField
memory > xTrack
memory > xValue
memory > xCountryWebMercator
memory > xr2
memory > xNotSupportedError
memory > xbytes
memory > xtuple
memory > xnum_seq
memory > xLineString
memory > xPoint
memory > xCountry
memory > xzip
memory > xDecimal
memory > xmap
memory > xFuncTestMixin
memory > xisinstance
memory > xGEOSGeometry
memory > xc1
memory > xlen
memory > xstate
memory > xTypeError
memory > xp1
memory > xPolygon
[] > test_functions
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_num_geom
        memory > xtest_asgml
        memory > xtest_union_mixed_srid
        memory > xtest_memsize
        memory > xtest_force_polygon_cw
        memory > xtest_transform
        memory > xtest_translate
        memory > xtest_point_on_surface
        memory > xtest_askml
        memory > xtest_sym_difference
        memory > xtest_envelope
        memory > xtest_diff_intersection_union
        memory > xtest_asgeojson
        memory > xtest_area_lookups
        memory > xtest_make_valid
        memory > xtest_union
        memory > xtest_snap_to_grid
        memory > xtest_reverse_geom
        memory > xtest_difference_mixed_srid
        memory > xtest_aswkb
        memory > xfixtures
        memory > xtest_make_valid_multipolygon
        memory > xtest_line_locate_point
        memory > xtest_difference
        memory > xtest_make_valid_output_field
        memory > xtest_geohash
        memory > xtest_isvalid
        memory > xtest_geometry_distance
        memory > xtest_area_with_regular_aggregate
        memory > xtest_num_points
        memory > xtest_bounding_circle
        memory > xtest_aswkt
        memory > xtest_argument_validation
        memory > xtest_intersection
        memory > xtest_assvg
        memory > xtest_centroid
        memory > xtest_azimuth
        memory > xtest_scale
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xFuncTestMixin)) ((xTestCase)))
              seq
                (((unsupported)).apply)
                xfixtures.write (((unsupported)).apply ("initial"))
                xtest_asgeojson.write
                  [xself]
                    memory > xvictoria_json
                    memory > xhouston_json
                    memory > xchicago_json
                    memory > xpueblo_json
                    seq > @
                      seq
                        ((((xconnection).xfeatures).xhas_AsGeoJSON_function).not).if
                          seq
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNotSupportedError)))))
                              bogusForceDataize.write (((xlist)).apply ((((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xAsGeoJSON)).apply ("mpoly"))))))
                            (((unsupported)).apply)
                        xpueblo_json.write "{\"type\":\"Point\",\"coordinates\":[-104.609252,38.255001]}"
                        xhouston_json.write ((((xjson).xloads)).apply ("{\"type\":\"Point\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"EPSG:4326\"}},\"coordinates\":[-95.363151,29.763374]}"))
                        xvictoria_json.write ((((xjson).xloads)).apply ("{\"type\":\"Point\",\"bbox\":[-123.30519600,48.46261100,-123.30519600,48.46261100],\"coordinates\":[-123.305196,48.462611]}"))
                        xchicago_json.write ((((xjson).xloads)).apply ("{\"type\":\"Point\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"EPSG:4326\"}},\"bbox\":[-87.65018,41.85039,-87.65018,41.85039],\"coordinates\":[-87.65018,41.85039]}"))
                        (((unsupported)).apply ("crs") ((((xconnection).xfeatures).xunsupported_geojson_options))).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xhouston_json)) ("crs"))))))))
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xchicago_json)) ("crs"))))))))
                        (((unsupported)).apply ("bbox") ((((xconnection).xfeatures).xunsupported_geojson_options))).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xchicago_json)) ("bbox"))))))))
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xvictoria_json)) ("bbox"))))))))
                        (((unsupported)).apply ("precision") ((((xconnection).xfeatures).xunsupported_geojson_options))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xchicago_json)) ("coordinates"))) ((((unsupported)).apply ((87.650175.neg)) (41.850385))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGeoJSON)) ("point") ("foo"))))
                        bogusForceDataize.write ((((xself).xassertJSONEqual)).apply ((xpueblo_json)) (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xAsGeoJSON)).apply ("point")))).xget)) ("Pueblo")).xgeojson)))
                        bogusForceDataize.write ((((xself).xassertJSONEqual)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGeoJSON)) ("point") (TRUE)))).xget)) ("Houston")).xjson)) ((xhouston_json)))
                        bogusForceDataize.write ((((xself).xassertJSONEqual)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGeoJSON)) ("point") (TRUE)))).xget)) ("Victoria")).xgeojson)) ((xvictoria_json)))
                        (((xconnection).xops).xmariadb).if
                          (((unsupported)).apply ((((unsupported)).apply ((xchicago_json)) ("bbox"))) ((((unsupported)).apply ((87.650175.neg)) (41.850385) ((87.650175.neg)) (41.850385))))
                        (((unsupported)).apply ((xAssertionError)))
                          bogusForceDataize.write ((((xself).xassertJSONEqual)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGeoJSON)) ("point") (TRUE) (TRUE) (5)))).xget)) ("Chicago")).xgeojson)) ((xchicago_json)))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xchicago_json)) ("coordinates"))) (1))) (41.85038))
                            bogusForceDataize.write ((((xself).xassertJSONEqual)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGeoJSON)) ("point") (TRUE) (TRUE) (5)))).xget)) ("Chicago")).xgeojson)) ((xchicago_json)))
                xtest_asgml.write
                  [xself]
                    memory > xqs
                    memory > xptown
                    memory > xgml_regex
                    seq > @
                      (((unsupported)).apply)
                        xqs.write (((((xCity).xobjects).xall)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply (((xqs).xannotate)) (((((xfunctions).xAsGML)).apply ("name"))))
                        xptown.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGML)) ("point") (9)))).xget)) ("Pueblo"))
                        (((xconnection).xops).xoracle).if
                          xgml_regex.write ((((xre).xcompile)).apply ("^<gml:Point srsName=\"EPSG:4326\" xmlns:gml=\"http://www.opengis.net/gml\"><gml:coordinates decimal=\".\" cs=\",\" ts=\" \">-104.60925d+,38.25500d+ </gml:coordinates></gml:Point>"))
                          xgml_regex.write ((((xre).xcompile)).apply ("^<gml:Point srsName=\"EPSG:4326\"><gml:coordinates>-104.60925d+,38.255001</gml:coordinates></gml:Point>"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xgml_regex).xmatch)).apply (((xptown).xgml)))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("<gml:pos srsDimension=\"2\">") (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsGML)) ("point") (3)))).xget)) ("Pueblo")).xgml)))
                xtest_askml.write
                  [xself]
                    memory > xptown
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xAsKML)).apply ("name"))))
                        xptown.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsKML)) ("point") (9)))).xget)) ("Pueblo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("<Point><coordinates>-104.609252,38.255001</coordinates></Point>") (((xptown).xkml)))
                xtest_assvg.write
                  [xself]
                    memory > xsvg2
                    memory > xsvg1
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          (((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsSVG)) ("point") ("foo"))))
                        xsvg1.write "cx=\"-104.609252\" cy=\"-38.255001\""
                        xsvg2.write ((((xsvg1).xreplace)).apply ("c") (""))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xsvg1)) (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xAsSVG)).apply ("point")))).xget)) ("Pueblo")).xsvg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xsvg2)) (((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xAsSVG)) ("point") (5)))).xget)) ("Pueblo")).xsvg)))
                xtest_aswkb.write
                  [xself]
                    memory > xwkb
                    seq > @
                      (((unsupported)).apply)
                        xwkb.write (((((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xAsWKB)).apply ((((unsupported)).apply ((xPoint)) (1) (2) (4326)))))).xfirst)).apply).xwkb)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xbytes)).apply ((xwkb)))) ((((unsupported)).apply ("x00x00x00x00x01?xf0x00x00x00x00x00x00@x00x00x00x00x00x00x00") ("x01x01x00x00x00x00x00x00x00x00x00xf0?x00x00x00x00x00x00x00@"))))
                xtest_aswkt.write
                  [xself]
                    memory > xwkt
                    seq > @
                      (((unsupported)).apply)
                        xwkt.write (((((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xAsWKT)).apply ((((unsupported)).apply ((xPoint)) (1) (2) (4326)))))).xfirst)).apply).xwkt)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xwkt)) (((((xconnection).xops).xoracle).if "POINT (1.0 2.0)" "POINT(1 2)")))
                xtest_azimuth.write
                  [xself]
                    memory > xazimuth_expr
                    seq > @
                      (((unsupported)).apply)
                        xazimuth_expr.write ((((xfunctions).xAzimuth)).apply ((((unsupported)).apply ((xPoint)) (0) (0) (4326))) ((((unsupported)).apply ((xPoint)) (1) (1) (4326))))
                        (((unsupported)).apply (((xself).xassertAlmostEqual)) ((((((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((xazimuth_expr))).xfirst)).apply).xazimuth)) ((((xmath).xpi).div 4)) (2))
                        xazimuth_expr.write ((((xfunctions).xAzimuth)).apply ((((unsupported)).apply ((xPoint)) (0) (0) (4326))) ((((unsupported)).apply ((xPoint)) (0) (0) (4326))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((xazimuth_expr))).xfirst)).apply).xazimuth)))
                xtest_bounding_circle.write
                  [xself]
                    memory > xqs
                    memory > xcircle_num_points
                    memory > xtests
                    memory > xexpected_areas
                    seq > @
                      (((unsupported)).apply)
                        xcircle_num_points.write
                          [xnum_seg]
                            seq > @
                              (((unsupported)).apply (((4.mul (xnum_seg)).add 1)))
                        xexpected_areas.write ((((xconnection).xops).xpostgis).if (((unsupported)).apply (169) (136)) (((unsupported)).apply (171) (126)))
                        xqs.write ((((((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xBoundingCircle)).apply ("mpoly")))).xorder_by)).apply ("name"))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((((unsupported)).apply ((xqs)) (0)).xcircle).xarea)) ((((unsupported)).apply ((xexpected_areas)) (0))) (0))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((((unsupported)).apply ((xqs)) (1)).xcircle).xarea)) ((((unsupported)).apply ((xexpected_areas)) (1))) (0))
                        (((xconnection).xops).xpostgis).if
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((unsupported)).apply ((xqs)) (0)).xcircle).xnum_points)) ((((xcircle_num_points)).apply (48))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((unsupported)).apply ((xqs)) (1)).xcircle).xnum_points)) ((((xcircle_num_points)).apply (48))))
                        xtests.write (((unsupported)).apply (12) ((((unsupported)).apply ((xValue)) (12) ((((xIntegerField)).apply)))))
                        (((unsupported)).apply ((xnum_seq)) ((xtests)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xnum_seq)))))
                            seq
                              xqs.write ((((((unsupported)).apply ((((xCountry).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xBoundingCircle)) ("mpoly") ((xnum_seq))))).xorder_by)).apply ("name"))
                              (((xconnection).xops).xpostgis).if
                                seq
                                  bogusForceDataize.write ((((xself).xassertGreater)).apply ((((((unsupported)).apply ((xqs)) (0)).xcircle).xarea)) (168.4) (0))
                                  bogusForceDataize.write ((((xself).xassertLess)).apply ((((((unsupported)).apply ((xqs)) (0)).xcircle).xarea)) (169.5) (0))
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((((unsupported)).apply ((xqs)) (1)).xcircle).xarea)) (136) (0))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((unsupported)).apply ((xqs)) (0)).xcircle).xnum_points)) ((((xcircle_num_points)).apply (12))))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((unsupported)).apply ((xqs)) (1)).xcircle).xnum_points)) ((((xcircle_num_points)).apply (12))))
                                seq
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((((unsupported)).apply ((xqs)) (0)).xcircle).xarea)) ((((unsupported)).apply ((xexpected_areas)) (0))) (0))
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((((unsupported)).apply ((xqs)) (1)).xcircle).xarea)) ((((unsupported)).apply ((xexpected_areas)) (1))) (0))
                xtest_centroid.write
                  [xself]
                    memory > xqs
                    memory > xtol
                    seq > @
                      (((unsupported)).apply)
                        xqs.write (((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xexclude)) (TRUE)).xannotate)) (((((xfunctions).xCentroid)).apply ("poly"))))
                        xtol.write ((((xconnection).xops).xmysql).if 1.8 ((((xconnection).xops).xoracle).if 0.1 0.00001))
                        (((unsupported)).apply ((xstate)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((xstate).xpoly).xcentroid).xequals_exact)).apply (((xstate).xcentroid)) ((xtol)))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ("'Centroid' takes exactly 1 argument (2 given)"))))
                          (((unsupported)).apply ((((xState).xobjects).xannotate)) (((((xfunctions).xCentroid)).apply ("poly") ("poly"))))
                xtest_difference.write
                  [xself]
                    memory > xqs
                    memory > xgeom
                    seq > @
                      (((unsupported)).apply)
                        xgeom.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xDifference)).apply ("mpoly") ((xgeom)))))
                        (((xconnection).xops).xoracle).if
                          xqs.write (((unsupported)).apply (((xqs).xexclude)) ("Texas"))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((xc).xmpoly).xdifference)).apply ((xgeom))).xequals)).apply (((xc).xdiff)))))
                xtest_difference_mixed_srid.write
                  [xself]
                    memory > xqs
                    memory > xgeom
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xgeom.write (((unsupported)).apply ((xPoint)) (556597.4) (2632018.6) (3857))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xDifference)).apply ("mpoly") ((xgeom)))))
                        (((xconnection).xops).xoracle).if
                          xqs.write (((unsupported)).apply (((xqs).xexclude)) ("Texas"))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((xc).xmpoly).xdifference)).apply ((xgeom))).xequals)).apply (((xc).xdifference)))))
                xtest_envelope.write
                  [xself]
                    memory > xcountries
                    seq > @
                      (((unsupported)).apply)
                        xcountries.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xEnvelope)).apply ("mpoly"))))
                        (((unsupported)).apply ((xcountry)) ((xcountries)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xcountry).xenvelope).xequals)).apply ((((xcountry).xmpoly).xenvelope)))))
                xtest_force_polygon_cw.write
                  [xself]
                    memory > xst
                    memory > xrhr_rings
                    memory > xrings
                    seq > @
                      (((unsupported)).apply)
                        xrings.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (5) (0))) ((((unsupported)).apply (0) (5))) ((((unsupported)).apply (0) (0))))) ((((unsupported)).apply ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (1) (3))) ((((unsupported)).apply (3) (1))) ((((unsupported)).apply (1) (1))))))
                        xrhr_rings.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (5))) ((((unsupported)).apply (5) (0))) ((((unsupported)).apply (0) (0))))) ((((unsupported)).apply ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (3) (1))) ((((unsupported)).apply (1) (3))) ((((unsupported)).apply (1) (1))))))
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("Foo") ((((xPolygon)).apply ((((unsupported)).apply ((xrings)))))))
                        xst.write (((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xannotate)) (((((xfunctions).xForcePolygonCW)).apply ("poly")))).xget)) ("Foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xrhr_rings)) ((((xst).xforce_polygon_cw).xcoords)))
                xtest_geohash.write
                  [xself]
                    memory > xref_hash
                    memory > xh2
                    memory > xh1
                    seq > @
                      (((unsupported)).apply)
                        xref_hash.write "9vk1mfq8jx0c8e0386z6"
                        xh1.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xGeoHash)).apply ("point")))).xget)) ("Houston"))
                        xh2.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xGeoHash)) ("point") (5)))).xget)) ("Houston"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xref_hash)) ((((unsupported)).apply (((xh1).xgeohash)) ((((unsupported)).apply ((((xlen)).apply ((xref_hash)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xref_hash)) ((((unsupported)).apply (5))))) (((xh2).xgeohash)))
                xtest_geometry_distance.write
                  [xself]
                    memory > xpoint
                    memory > xdistances
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        xpoint.write (((unsupported)).apply ((xPoint)) ((90.neg)) (40) (4326))
                        xqs.write ((((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xGeometryDistance)).apply ("point") ((xpoint))))).xorder_by)).apply ("distance"))
                        xdistances.write (((unsupported)).apply (2.99091995527296) (5.33507274054713) (9.33852187483721) (9.91769193646233) (11.556465744884) (14.713098433352) (34.3635252198568) (276.987855073372))
                        (((unsupported)).apply ((((unsupported)).apply ((xcity)) ((xexpected_distance)))) ((((xzip)).apply ((xqs)) ((xdistances)))))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xcity)))))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xcity).xdistance)) ((xexpected_distance)))
                xtest_intersection.write
                  [xself]
                    memory > xqs
                    memory > xgeom
                    seq > @
                      (((unsupported)).apply)
                        xgeom.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xIntersection)).apply ("mpoly") ((xgeom)))))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          (((xconnection).xfeatures).xempty_intersection_returns_none).if
                            bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xc).xinter)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply ((((xc).xinter).xempty)) (TRUE))
                xtest_isvalid.write
                  [xself]
                    memory > xvalid
                    memory > xinvalid_geom
                    memory > xinvalid
                    memory > xvalid_geom
                    seq > @
                      (((unsupported)).apply)
                        xvalid_geom.write (((xfromstr)).apply ("POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))"))
                        xinvalid_geom.write (((xfromstr)).apply ("POLYGON((0 0, 0 1, 1 1, 1 0, 1 1, 1 0, 0 0))"))
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("valid") ((xvalid_geom)))
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("invalid") ((xinvalid_geom)))
                        xvalid.write ((((((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xfilter)) ("valid")).xannotate)) (((((xfunctions).xIsValid)).apply ("poly")))).xfirst)).apply)
                        xinvalid.write ((((((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xfilter)) ("invalid")).xannotate)) (((((xfunctions).xIsValid)).apply ("poly")))).xfirst)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xvalid).xisvalid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xinvalid).xisvalid)) (FALSE))
                xtest_area_with_regular_aggregate.write
                  [xself]
                    memory > xqs
                    memory > xresult
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xc)) ((((((xCountry).xobjects).xall)).apply)))
                          (((unsupported)).apply ((((xCountryWebMercator).xobjects).xcreate)) (((xc).xname)) ((((unsupported)).apply ((((xc).xmpoly).xtransform)) (3857) (TRUE))))
                        xqs.write (((unsupported)).apply ((((xCountryWebMercator).xobjects).xannotate)) ((((xSum)).apply (((((xfunctions).xArea)).apply ("mpoly"))))))
                        (((unsupported)).apply ((xc)) (((((xqs).xdefer)).apply ("mpoly"))))
                          seq
                            xresult.write ((xc).xarea_sum)
                            (((xisinstance)).apply ((xresult)) ((xArea))).if
                              xresult.write ((xresult).xsq_m)
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((xresult).sub (((xc).xmpoly).xarea)).div (((xc).xmpoly).xarea))) (0))
                xtest_area_lookups.write
                  [xself]
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xCountryWebMercator).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xCountryWebMercator)) (((xc).xname)) ((((unsupported)).apply ((((xc).xmpoly).xtransform)) (3857) (TRUE))))) ((xc)) ((((((xCountry).xobjects).xall)).apply)))))
                        xqs.write (((unsupported)).apply ((((xCountryWebMercator).xobjects).xannotate)) (((((xfunctions).xArea)).apply ("mpoly"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xqs).xget)) ((((unsupported)).apply ((xArea)) (500000))))) ((((unsupported)).apply ((((xCountryWebMercator).xobjects).xget)) ("New Zealand"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("AreaField only accepts Area measurement objects."))))
                          (((unsupported)).apply (((xqs).xget)) (500000))
                xtest_line_locate_point.write
                  [xself]
                    memory > xpos_expr
                    seq > @
                      (((unsupported)).apply)
                        xpos_expr.write ((((xfunctions).xLineLocatePoint)).apply ((((unsupported)).apply ((xLineString)) ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (3))) (4326))) ((((unsupported)).apply ((xPoint)) (0) (1) (4326))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((((((unsupported)).apply ((((xState).xobjects).xannotate)) ((xpos_expr))).xfirst)).apply).xpos)) (0.3333333))
                xtest_make_valid.write
                  [xself]
                    memory > xinvalid_geom
                    memory > xinvalid
                    seq > @
                      (((unsupported)).apply)
                        xinvalid_geom.write (((xfromstr)).apply ("POLYGON((0 0, 0 1, 1 1, 1 0, 1 1, 1 0, 0 0))"))
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("invalid") ((xinvalid_geom)))
                        xinvalid.write ((((((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xfilter)) ("invalid")).xannotate)) (((((xfunctions).xMakeValid)).apply ("poly")))).xfirst)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xinvalid).xrepaired).xvalid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xinvalid).xrepaired).xequals)).apply ((((unsupported)).apply ((xfromstr)) ("POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))") ((((xinvalid).xpoly).xsrid)))))))
                xtest_make_valid_multipolygon.write
                  [xself]
                    memory > xinvalid_geom
                    memory > xinvalid
                    seq > @
                      (((unsupported)).apply)
                        xinvalid_geom.write (((xfromstr)).apply ("POLYGON((0 0, 0 1 , 1 1 , 1 0, 0 0), (10 0, 10 1, 11 1, 11 0, 10 0))"))
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("invalid") ((xinvalid_geom)))
                        xinvalid.write ((((((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xfilter)) ("invalid")).xannotate)) (((((xfunctions).xMakeValid)).apply ("poly")))).xget)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xinvalid).xrepaired).xvalid)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xinvalid).xrepaired).xequals)).apply ((((unsupported)).apply ((xfromstr)) ("MULTIPOLYGON (((0 0, 0 1, 1 1, 1 0, 0 0)), ((10 0, 10 1, 11 1, 11 0, 10 0)))") ((((xinvalid).xpoly).xsrid)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xinvalid).xrepaired)))) (2))
                xtest_make_valid_output_field.write
                  [xself]
                    memory > xoutput_field
                    seq > @
                      (((unsupported)).apply)
                        xoutput_field.write (((((xfunctions).xMakeValid)).apply ((((xValue)).apply ((((xPolygon)).apply)) ((((unsupported)).apply ((xPolygonField)) (42)))))).xoutput_field)
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xoutput_field).x__class__)) ((xGeometryField)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xoutput_field).xsrid)) (42))
                xtest_memsize.write
                  [xself]
                    memory > xptown
                    seq > @
                      (((unsupported)).apply)
                        xptown.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xMemSize)).apply ("point")))).xget)) ("Pueblo"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (20) (((xptown).xsize)) (105))))
                xtest_num_geom.write
                  [xself]
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xc)) ((((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xNumGeometries)).apply ("mpoly"))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (2) (((xc).xnum_geom)))
                        xqs.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xfilter)) (FALSE)).xannotate)) (((((xfunctions).xNumGeometries)).apply ("point"))))
                        (((unsupported)).apply ((xcity)) ((xqs)))
                          ((((xconnection).xops).xmysql).or (((xconnection).xops).xmariadb)).if
                            bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xcity).xnum_geom)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((xcity).xnum_geom)))
                xtest_num_points.write
                  [xself]
                    memory > xcoords
                    memory > xqs
                    memory > xmpoly_qs
                    seq > @
                      (((unsupported)).apply)
                        xcoords.write (((unsupported)).apply ((((unsupported)).apply ((95.363151.neg)) (29.763374))) ((((unsupported)).apply ((95.448601.neg)) (29.713803))))
                        (((unsupported)).apply ((((xTrack).xobjects).xcreate)) ("Foo") ((((xLineString)).apply ((xcoords)))))
                        xqs.write (((unsupported)).apply ((((xTrack).xobjects).xannotate)) (((((xfunctions).xNumPoints)).apply ("line"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xqs).xfirst)).apply).xnum_points)) (2))
                        xmpoly_qs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xNumPoints)).apply ("mpoly"))))
                        ((((xconnection).xfeatures).xsupports_num_points_poly).not).if
                          seq
                            (((unsupported)).apply ((xc)) ((xmpoly_qs)))
                              bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xc).xnum_points)))
                            (((unsupported)).apply)
                        (((unsupported)).apply ((xc)) ((xmpoly_qs)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xc).xmpoly).xnum_points)) (((xc).xnum_points)))
                        (((unsupported)).apply ((xc)) ((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xNumPoints)).apply ("point"))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((xc).xnum_points)) (1))
                xtest_point_on_surface.write
                  [xself]
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xPointOnSurface)).apply ("mpoly"))))
                        (((unsupported)).apply ((xcountry)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xcountry).xmpoly).xintersection)).apply (((xcountry).xpoint_on_surface)))))
                xtest_reverse_geom.write
                  [xself]
                    memory > xcoords
                    memory > xtrack
                    seq > @
                      (((unsupported)).apply)
                        xcoords.write (((unsupported)).apply ((((unsupported)).apply ((95.363151.neg)) (29.763374))) ((((unsupported)).apply ((95.448601.neg)) (29.713803))))
                        (((unsupported)).apply ((((xTrack).xobjects).xcreate)) ("Foo") ((((xLineString)).apply ((xcoords)))))
                        xtrack.write (((unsupported)).apply (((((unsupported)).apply ((((xTrack).xobjects).xannotate)) (((((xfunctions).xReverse)).apply ("line")))).xget)) ("Foo"))
                        bogusForceDataize.write ((((xcoords).xreverse)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtuple)).apply ((xcoords)))) ((((xtrack).xreverse_geom).xcoords)))
                xtest_scale.write
                  [xself]
                    memory > xqs
                    memory > xtol
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xxfac)) ((xyfac)))) ((((unsupported)).apply (2) (3))))
                        xtol.write 5
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xScale)).apply ("mpoly") ((xxfac)) ((xyfac)))))
                        (((unsupported)).apply ((xcountry)) ((xqs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xp1)) ((xp2)))) ((((xzip)).apply (((xcountry).xmpoly)) (((xcountry).xscaled)))))
                            (((unsupported)).apply ((((unsupported)).apply ((xr1)) ((xr2)))) ((((xzip)).apply ((xp1)) ((xp2)))))
                              (((unsupported)).apply ((((unsupported)).apply ((xc1)) ((xc2)))) ((((xzip)).apply (((xr1).xcoords)) (((xr2).xcoords)))))
                                seq
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((((unsupported)).apply ((xc1)) (0)).mul (xxfac))) ((((unsupported)).apply ((xc2)) (0))) ((xtol)))
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((((unsupported)).apply ((xc1)) (1)).mul (xyfac))) ((((unsupported)).apply ((xc2)) (1))) ((xtol)))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xScale)).apply ("mpoly") (1.5) ((((xDecimal)).apply ("2.5"))))))
                        bogusForceDataize.write ((((xself).xassertGreater)).apply ((((((unsupported)).apply ((xqs)) (0)).xscaled).xarea)) ((((((unsupported)).apply ((xqs)) (0)).xmpoly).xarea)))
                xtest_snap_to_grid.write
                  [xself]
                    memory > xwkt
                    memory > xtol
                    memory > xref
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xbad_args)) ((((unsupported)).apply ((((unsupported)).apply)) ((((xrange)).apply (3))) ((((xrange)).apply (5))))))
                          (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                            (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xSnapToGrid)).apply ("mpoly") ((((unsupported)).apply ((xbad_args)))))))
                        (((unsupported)).apply ((xbad_args)) ((((unsupported)).apply ((((unsupported)).apply ("1.0"))) ((((unsupported)).apply (1.0) ("None: is there a None literal in the EO language?"))) ((((xtuple)).apply ((((xmap)).apply ((xstr)) ((((xrange)).apply (4))))))))))
                          (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                            (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xSnapToGrid)).apply ("mpoly") ((((unsupported)).apply ((xbad_args)))))))
                        xwkt.write "MULTIPOLYGON(((12.41580 43.95795,12.45055 43.97972,12.45389 43.98167,12.46250 43.98472,12.47167 43.98694,12.49278 43.98917,12.50555 43.98861,12.51000 43.98694,12.51028 43.98277,12.51167 43.94333,12.51056 43.93916,12.49639 43.92333,12.49500 43.91472,12.48778 43.90583,12.47444 43.89722,12.46472 43.89555,12.45917 43.89611,12.41639 43.90472,12.41222 43.90610,12.40782 43.91366,12.40389 43.92667,12.40500 43.94833,12.40889 43.95499,12.41580 43.95795)))"
                        (((unsupported)).apply ((((xCountry).xobjects).xcreate)) ("San Marino") ((((xfromstr)).apply ((xwkt)))))
                        xtol.write 0.000000001
                        xref.write (((xfromstr)).apply ("MULTIPOLYGON(((12.4 44,12.5 44,12.5 43.9,12.4 43.9,12.4 44)))"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xref).xequals_exact)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xSnapToGrid)).apply ("mpoly") (0.1)))).xget)) ("San Marino")).xsnap)) ((xtol)))))
                        xref.write (((xfromstr)).apply ("MULTIPOLYGON(((12.4 43.93,12.45 43.93,12.5 43.93,12.45 43.93,12.4 43.93)))"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xref).xequals_exact)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xSnapToGrid)).apply ("mpoly") (0.05) (0.23)))).xget)) ("San Marino")).xsnap)) ((xtol)))))
                        xref.write (((xfromstr)).apply ("MULTIPOLYGON(((12.4 43.87,12.45 43.87,12.45 44.1,12.5 44.1,12.5 43.87,12.45 43.87,12.4 43.87)))"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xref).xequals_exact)).apply (((((unsupported)).apply (((((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xSnapToGrid)).apply ("mpoly") (0.05) (0.23) (0.5) (0.17)))).xget)) ("San Marino")).xsnap)) ((xtol)))))
                xtest_sym_difference.write
                  [xself]
                    memory > xqs
                    memory > xgeom
                    seq > @
                      (((unsupported)).apply)
                        xgeom.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xSymDifference)).apply ("mpoly") ((xgeom)))))
                        (((xconnection).xops).xoracle).if
                          xqs.write (((unsupported)).apply (((xqs).xexclude)) ("Texas"))
                        (((unsupported)).apply ((xcountry)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((xcountry).xmpoly).xsym_difference)).apply ((xgeom))).xequals)).apply (((xcountry).xsym_difference)))))
                xtest_transform.write
                  [xself]
                    memory > xptown
                    memory > xh
                    seq > @
                      (((unsupported)).apply)
                        xptown.write (((unsupported)).apply ((xfromstr)) ("POINT(992363.390841912 481455.395105533)") (2774))
                        xh.write (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xTransform)).apply ("point") (((xptown).xsrid))))).xget)) ("Pueblo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2774) ((((xh).xpt).xsrid)))
                        bogusForceDataize.write ((((xself).xassertLess)).apply ((((xptown).xx).sub (((xh).xpt).xx))) (1))
                        bogusForceDataize.write ((((xself).xassertLess)).apply ((((xptown).xy).sub (((xh).xpt).xy))) (1))
                xtest_translate.write
                  [xself]
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xxfac)) ((xyfac)))) ((((unsupported)).apply (5) ((23.neg)))))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xTranslate)).apply ("mpoly") ((xxfac)) ((xyfac)))))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          (((unsupported)).apply ((((unsupported)).apply ((xp1)) ((xp2)))) ((((xzip)).apply (((xc).xmpoly)) (((xc).xtranslated)))))
                            (((unsupported)).apply ((((unsupported)).apply ((xr1)) ((xr2)))) ((((xzip)).apply ((xp1)) ((xp2)))))
                              (((unsupported)).apply ((((unsupported)).apply ((xc1)) ((xc2)))) ((((xzip)).apply (((xr1).xcoords)) (((xr2).xcoords)))))
                                seq
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((((unsupported)).apply ((xc1)) (0)).add (xxfac))) ((((unsupported)).apply ((xc2)) (0))) (5))
                                  bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((((unsupported)).apply ((xc1)) (1)).add (xyfac))) ((((unsupported)).apply ((xc2)) (1))) (5))
                xtest_diff_intersection_union.write
                  [xself]
                    memory > xqs
                    memory > xgeom
                    seq > @
                      (((unsupported)).apply)
                        xgeom.write (((unsupported)).apply ((xPoint)) (5) (23) (4326))
                        xqs.write (((unsupported)).apply ((((xCountry).xobjects).xannotate)) (((((xfunctions).xDifference)).apply ("mpoly") ((xgeom)))) (((((xfunctions).xSymDifference)).apply ("mpoly") ((xgeom)))) (((((xfunctions).xUnion)).apply ("mpoly") ((xgeom)))) (((((xfunctions).xIntersection)).apply ("mpoly") ((xgeom)))))
                        (((xconnection).xops).xoracle).if
                          (((unsupported)).apply)
                        (((unsupported)).apply ((xc)) ((xqs)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((xc).xmpoly).xdifference)).apply ((xgeom))).xequals)).apply (((xc).xdifference)))))
                            (((xconnection).xfeatures).xempty_intersection_returns_none).if
                              bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xc).xintersection)))
                              bogusForceDataize.write ((((xself).xassertIs)).apply ((((xc).xintersection).xempty)) (TRUE))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((xc).xmpoly).xsym_difference)).apply ((xgeom))).xequals)).apply (((xc).xsym_difference)))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((((xc).xmpoly).xunion)).apply ((xgeom))).xequals)).apply (((xc).xunion)))))
                xtest_union.write
                  [xself]
                    memory > xunion
                    memory > xexpected
                    memory > xgeom
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xgeom.write (((unsupported)).apply ((xPoint)) ((95.363151.neg)) (29.763374) (4326))
                        xunion.write ((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xUnion)).apply ("point") ((xgeom))))).xget)) ("Dallas")).xunion)
                        xexpected.write (((unsupported)).apply ((xfromstr)) ("MULTIPOINT(-96.801611 32.782057,-95.363151 29.763374)") (4326))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xexpected).xequals)).apply ((xunion)))))
                        xunion.write ((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xUnion)).apply ((xgeom)) ("point")))).xget)) ("Dallas")).xunion)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xexpected).xequals)).apply ((xunion)))))
                        xunion.write ((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xUnion)).apply ("point") ("point")))).xget)) ("Dallas")).xunion)
                        xexpected.write (((unsupported)).apply ((xGEOSGeometry)) ("POINT(-96.801611 32.782057)") (4326))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xexpected).xequals)).apply ((xunion)))))
                        xunion.write ((((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xUnion)).apply ((xgeom)) ((xgeom))))).xget)) ("Dallas")).xunion)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xgeom).xequals)).apply ((xunion)))))
                xtest_union_mixed_srid.write
                  [xself]
                    memory > xexpected
                    memory > xtol
                    memory > xgeom
                    memory > xgeom_3857
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xgeom.write (((unsupported)).apply ((xPoint)) (61.42915) (55.15402) (4326))
                        xgeom_3857.write (((unsupported)).apply (((xgeom).xtransform)) (3857) (TRUE))
                        xtol.write 0.001
                        (((unsupported)).apply ((xcity)) ((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xUnion)).apply ("point") ((xgeom_3857)))))))
                          seq
                            xexpected.write (((xcity).xpoint).or (xgeom))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xcity).xunion).xequals_exact)).apply ((xexpected)) ((xtol)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcity).xunion).xsrid)) (4326))
                        (((unsupported)).apply ((xcity)) ((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xUnion)).apply ((xgeom_3857)) ("point"))))))
                          seq
                            xexpected.write ((xgeom_3857).or (((unsupported)).apply ((((xcity).xpoint).xtransform)) (3857) (TRUE)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xexpected).xequals_exact)).apply (((xcity).xunion)) ((xtol)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xcity).xunion).xsrid)) (3857))
                xtest_argument_validation.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ("SRID is required for all geometries."))))
                          (((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xGeoFunc)).apply ((((xPoint)).apply (1) (1))))))
                        xmsg.write "GeoFunc function requires a GeometryField in position 1, got CharField."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          (((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xGeoFunc)).apply ("name"))))
                        xmsg.write "GeoFunc function requires a geometric argument in position 1."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          (((unsupported)).apply (((((unsupported)).apply ((((xCity).xobjects).xannotate)) (((((xfunctions).xGeoFunc)).apply (1) ("point")))).xget)) ("Dallas"))