memory > xenumerate
memory > xstr
memory > xrange
memory > xproto
memory > xPickleTest
memory > xset
memory > xtuple
memory > xIg
memory > xgc
memory > xiter
memory > xN
memory > xmin
memory > xEnumerateTestCase
memory > xBlocked
memory > xdata
memory > xpickle
memory > xlist
memory > xG
memory > xZeroDivisionError
memory > xNoGetItem
memory > xStopIteration
memory > xreversed
memory > xtype
memory > xX
memory > xSeq
memory > xI
memory > xoperator
memory > xi
memory > xs
memory > xsys
memory > xval
memory > xid
memory > xE
memory > xzip
memory > xunittest
memory > xnext
memory > xmap
memory > xobject
memory > xA
memory > xMyEnum
memory > xSeqWithWeirdLen
memory > xNoLen
memory > xlen
memory > xdict
memory > xEnumerateStartTestCase
memory > xTypeError
memory > x__name__
[] > test_enumerate
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xseq
        memory > xtest_iteratorgenerator
        memory > x__getitem__
        memory > xtest_tuple_reuse
        memory > xtest_args
        memory > xcheck_pickle
        memory > x__next__
        memory > xtest_bug1229429
        memory > xtest_illformediterable
        memory > xtest_iteratorseqn
        memory > xtest_exception_propagation
        memory > xtest_enumerate_result_gc
        memory > xtest_objmethods
        memory > xtest_pickle
        memory > xtest_gc
        memory > xtest_argumentcheck
        memory > xtest_simple
        memory > x__iter__
        memory > xtest_basicfunction
        memory > xenum
        memory > xres
        memory > xtest_range_optimization
        memory > x__init__
        memory > xtest_getitemseqn
        memory > xtest_noniterable
        memory > xtest_len
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      (((unsupported)).apply (((xself).xseqn)) ((xseqn)))
                x__getitem__.write
                  [xself xi]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).xseqn)) ((xi)))))
            (((unsupported)).apply)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xseqn)) ((xseqn)))
                        (((unsupported)).apply (((xself).xi)) (0))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xself)))
                x__next__.write
                  [xself]
                    memory > xv
                    seq > @
                      seq
                        (((xself).xi).geq (((xlen)).apply (((xself).xseqn)))).if
                          (((unsupported)).apply ((xStopIteration)))
                        xv.write (((unsupported)).apply (((xself).xseqn)) (((xself).xi)))
                        (((unsupported)).apply (((xself).xi)) (2))
                        (((unsupported)).apply ((xv)))
            (((unsupported)).apply)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xseqn)) ((xseqn)))
                        (((unsupported)).apply (((xself).xi)) (1))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xval)) (((xself).xseqn)))
                        (((unsupported)).apply ((xval)))
            (((unsupported)).apply)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xseqn)) ((xseqn)))
                        (((unsupported)).apply (((xself).xi)) (1))
                x__next__.write
                  [xself]
                    memory > xv
                    seq > @
                      seq
                        (((xself).xi).geq (((xlen)).apply (((xself).xseqn)))).if
                          (((unsupported)).apply ((xStopIteration)))
                        xv.write (((unsupported)).apply (((xself).xseqn)) (((xself).xi)))
                        (((unsupported)).apply (((xself).xi)) (2))
                        (((unsupported)).apply ((xv)))
            (((unsupported)).apply)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xseqn)) ((xseqn)))
                        (((unsupported)).apply (((xself).xi)) (1))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xself)))
                x__next__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (3) (0))
            (((unsupported)).apply)
              seq
                unsupported
                x__init__.write
                  [xself xseqn]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xseqn)) ((xseqn)))
                        (((unsupported)).apply (((xself).xi)) (1))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xself)))
            (((unsupported)).apply)
              xcheck_pickle.write
                [xself xitorg xseq]
                  memory > xd
                  memory > xit
                  seq > @
                    (((unsupported)).apply ((xproto)) ((((xrange)).apply ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
                      seq
                        xd.write ((((xpickle).xdumps)).apply ((xitorg)) ((xproto)))
                        xit.write ((((xpickle).xloads)).apply ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((xitorg)))) ((((xtype)).apply ((xit)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((xit)))) ((xseq)))
                        xit.write ((((xpickle).xloads)).apply ((xd)))
                        (((unsupported)).apply ((xStopIteration)))
                          bogusForceDataize.write (((xnext)).apply ((xit)))
                          seq
                            bogusForceDataize.write ((((xself).xassertFalse)).apply ((((unsupported)).apply ((xseq)) ((((unsupported)).apply (1))))))
                            (((unsupported)).apply)
                        xd.write ((((xpickle).xdumps)).apply ((xit)) ((xproto)))
                        xit.write ((((xpickle).xloads)).apply ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((xit)))) ((((unsupported)).apply ((xseq)) ((((unsupported)).apply (1))))))
            (((unsupported)).apply (((xunittest).xTestCase)) ((xPickleTest)))
              seq
                xenum.write (xenumerate)
                (((unsupported)).apply ((((unsupported)).apply ((xseq)) ((xres)))) ((((unsupported)).apply ("abc") ((((unsupported)).apply ((((unsupported)).apply (0) ("a"))) ((((unsupported)).apply (1) ("b"))) ((((unsupported)).apply (2) ("c"))))))))
                xtest_basicfunction.write
                  [xself]
                    memory > xe
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply (((((xself).xenum)).apply (((xself).xseq)))))) (((xself).xenum)))
                        xe.write ((((xself).xenum)).apply (((xself).xseq)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xiter)).apply ((xe)))) ((xe)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xself).xenum)).apply (((xself).xseq)))))) (((xself).xres)))
                        unsupported
                xtest_pickle.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xcheck_pickle)).apply (((((xself).xenum)).apply (((xself).xseq)))) (((xself).xres)))
                xtest_getitemseqn.write
                  [xself]
                    memory > xe
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xself).xenum)).apply ((((xG)).apply (((xself).xseq)))))))) (((xself).xres)))
                        xe.write ((((xself).xenum)).apply ((((xG)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xStopIteration)) ((xnext)) ((xe)))
                xtest_iteratorseqn.write
                  [xself]
                    memory > xe
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xself).xenum)).apply ((((xI)).apply (((xself).xseq)))))))) (((xself).xres)))
                        xe.write ((((xself).xenum)).apply ((((xI)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xStopIteration)) ((xnext)) ((xe)))
                xtest_iteratorgenerator.write
                  [xself]
                    memory > xe
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xself).xenum)).apply ((((xIg)).apply (((xself).xseq)))))))) (((xself).xres)))
                        xe.write ((((xself).xenum)).apply ((((xIg)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xStopIteration)) ((xnext)) ((xe)))
                xtest_noniterable.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).xenum)) ((((xX)).apply (((xself).xseq)))))
                xtest_illformediterable.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).xenum)) ((((xN)).apply (((xself).xseq)))))
                xtest_exception_propagation.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)).apply ((xZeroDivisionError)) ((xlist)) (((((xself).xenum)).apply ((((xE)).apply (((xself).xseq)))))))
                xtest_argumentcheck.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).xenum)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).xenum)) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).xenum)) ("abc") ("a"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xself).xenum)) ("abc") (2) (3))
                xtest_tuple_reuse.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((xset)).apply ((((xmap)).apply ((xid)) ((((xlist)).apply ((((xenumerate)).apply (((xself).xseq)))))))))))) ((((xlen)).apply (((xself).xseq)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((xset)).apply ((((xmap)).apply ((xid)) ((((xenumerate)).apply (((xself).xseq)))))))))) ((((xmin)).apply (1) ((((xlen)).apply (((xself).xseq)))))))
                xtest_enumerate_result_gc.write
                  [xself]
                    memory > xit
                    seq > @
                      (((unsupported)).apply)
                        xit.write ((((xself).xenum)).apply ((((unsupported)).apply ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xgc).xcollect)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xgc).xis_tracked)).apply ((((xnext)).apply ((xit)))))))
            (((unsupported)).apply ((xenumerate)))
            (((unsupported)).apply ((xEnumerateTestCase)))
              xenum.write (xMyEnum)
            (((unsupported)).apply ((xEnumerateTestCase)))
              (((unsupported)).apply ((((unsupported)).apply ((xseq)) ((xres)))) ((((unsupported)).apply ("") ((((unsupported)).apply)))))
            (((unsupported)).apply ((xEnumerateTestCase)))
              seq
                xseq.write (((xrange)).apply (10) (20000) (2))
                xres.write (((xlist)).apply ((((xzip)).apply ((((xrange)).apply (20000))) ((xseq)))))
            (((unsupported)).apply (((xunittest).xTestCase)) ((xPickleTest)))
              seq
                xtest_simple.write
                  [xself]
                    memory > x__getitem__
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)).apply)
                          seq
                            x__getitem__.write
                              [xself xi]
                                seq > @
                                  seq
                                    ((xi).less 5).if
                                      (((unsupported)).apply ((((xstr)).apply ((xi)))))
                                    (((unsupported)).apply ((xStopIteration)))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (6))
                        (((unsupported)).apply ((xdata)) ((((unsupported)).apply ("abc") ((((xrange)).apply (5))) ((((xtuple)).apply ((((xenumerate)).apply ("abc"))))) ((((xA)).apply)) ((((xrange)).apply (1) (17) (5))) (((((xdict).xfromkeys)).apply ("abcde"))))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xlist)).apply ((xdata)))) ((((unsupported)).apply ((1.neg)))))) ((((xlist)).apply ((((xreversed)).apply ((xdata)))))))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xTypeError)) ((xreversed)) ((((unsupported)).apply)) (1))
                xtest_range_optimization.write
                  [xself]
                    memory > xx
                    seq > @
                      seq
                        xx.write (((xrange)).apply (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((((xreversed)).apply ((xx)))))) ((((xtype)).apply ((((xiter)).apply ((xx)))))))
                xtest_len.write
                  [xself]
                    memory > x__getitem__
                    memory > xr
                    memory > xcalled
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)).apply ((xs)) ((((unsupported)).apply ("hello") ((((xtuple)).apply ("hello"))) ((((xlist)).apply ("hello"))) ((((xrange)).apply (5))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xoperator).xlength_hint)).apply ((((xreversed)).apply ((xs)))))) ((((xlen)).apply ((xs)))))
                            xr.write (((xreversed)).apply ((xs)))
                            bogusForceDataize.write (((xlist)).apply ((xr)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xoperator).xlength_hint)).apply ((xr)))) (0))
                        (((unsupported)).apply)
                          seq
                            xcalled.write FALSE
                            x__len__.write
                              [xself]
                                seq > @
                                  seq
                                    (((xself).xcalled).not).if
                                      seq
                                        (((unsupported)).apply (((xself).xcalled)) (TRUE))
                                        (((unsupported)).apply (11))
                                    (((unsupported)).apply ((xZeroDivisionError)))
                            x__getitem__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)).apply ((xindex)))
                        xr.write (((xreversed)).apply ((((xSeqWithWeirdLen)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xZeroDivisionError)) (((xoperator).xlength_hint)) ((xr)))
                xtest_gc.write
                  [xself]
                    memory > xs
                    memory > x__getitem__
                    memory > xr
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)).apply)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (11))
                            x__getitem__.write
                              [xself xindex]
                                seq > @
                                  (((unsupported)).apply ((xindex)))
                        xs.write (((xSeq)).apply)
                        xr.write (((xreversed)).apply ((xs)))
                        (((unsupported)).apply (((xs).xr)) ((xr)))
                xtest_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xreversed)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xreversed)) ((((unsupported)).apply)) ("extra"))
                xtest_bug1229429.write
                  [xself]
                    memory > xr
                    memory > xrc
                    memory > xf
                    seq > @
                      (((unsupported)).apply)
                        xf.write
                          []
                            seq > @
                        (((unsupported)).apply ((xr)) (((xf).x__reversed__)) ((((xobject)).apply)))
                        xrc.write ((((xsys).xgetrefcount)).apply ((xr)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (10))))
                          (((unsupported)).apply ((xTypeError)))
                            bogusForceDataize.write (((xreversed)).apply ((xf)))
                            bogusForceDataize.write ((((xself).xfail)).apply ("non-callable __reversed__ didn't raise!"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xrc)) (((((xsys).xgetrefcount)).apply ((xr)))))
                xtest_objmethods.write
                  [xself]
                    memory > x__reversed__
                    memory > xnl
                    memory > x__len__
                    memory > xb
                    memory > xngi
                    memory > x__getitem__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          x__getitem__.write
                            [xself xi]
                              seq > @
                                (((unsupported)).apply (2))
                        xnl.write (((xNoLen)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xreversed)) ((xnl)))
                        (((unsupported)).apply ((xobject)))
                          x__len__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (3))
                        xngi.write (((xNoGetItem)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xreversed)) ((xngi)))
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__getitem__.write
                              [xself xi]
                                seq > @
                                  (((unsupported)).apply (2))
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (3))
                            x__reversed__.write "None: is there a None literal in the EO language?"
                        xb.write (((xBlocked)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xreversed)) ((xb)))
                xtest_pickle.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xdata)) ((((unsupported)).apply ("abc") ((((xrange)).apply (5))) ((((xtuple)).apply ((((xenumerate)).apply ("abc"))))) ((((xrange)).apply (1) (17) (5))))))
                        bogusForceDataize.write ((((xself).xcheck_pickle)).apply ((((xreversed)).apply ((xdata)))) ((((unsupported)).apply ((((xlist)).apply ((xdata)))) ((((unsupported)).apply ((1.neg)))))))
            (((unsupported)).apply ((xEnumerateTestCase)))
              xtest_basicfunction.write
                [xself]
                  memory > xe
                  seq > @
                    seq
                      xe.write ((((xself).xenum)).apply (((xself).xseq)))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xiter)).apply ((xe)))) ((xe)))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xself).xenum)).apply (((xself).xseq)))))) (((xself).xres)))
            (((unsupported)).apply ((xEnumerateStartTestCase)))
              seq
                xenum.write (((unsupported)).apply ((((unsupported)).apply ((xenumerate)) ((xi)) (11))))
                (((unsupported)).apply ((((unsupported)).apply ((xseq)) ((xres)))) ((((unsupported)).apply ("abc") ((((unsupported)).apply ((((unsupported)).apply (11) ("a"))) ((((unsupported)).apply (12) ("b"))) ((((unsupported)).apply (13) ("c"))))))))
            (((unsupported)).apply ((xEnumerateStartTestCase)))
              seq
                xenum.write (((unsupported)).apply ((((unsupported)).apply ((xenumerate)) ((xi)) ((((xsys).xmaxsize).add 1)))))
                (((unsupported)).apply ((((unsupported)).apply ((xseq)) ((xres)))) ((((unsupported)).apply ("abc") ((((unsupported)).apply ((((unsupported)).apply ((((xsys).xmaxsize).add 1)) ("a"))) ((((unsupported)).apply ((((xsys).xmaxsize).add 2)) ("b"))) ((((unsupported)).apply ((((xsys).xmaxsize).add 3)) ("c"))))))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)