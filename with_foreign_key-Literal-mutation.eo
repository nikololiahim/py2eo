memory > xEmail
memory > xCustomUserWithFKManager
memory > xAbstractBaseUser
memory > xmodels
memory > xGroup
memory > xBaseUserManager
[] > with_foreign_key
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xemail
        memory > xgroup
        memory > xREQUIRED_FIELDS
        memory > xusername
        memory > xcustom_objects
        memory > xUSERNAME_FIELD
        memory > xcreate_superuser
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xmodels).xModel)))
              xemail.write (((unsupported)).apply (((xmodels).xEmailField)) ("email address") (255) (TRUE))
            (((unsupported)).apply ((xBaseUserManager)))
              xcreate_superuser.write
                [xself xusername xemail xgroup xpassword]
                  memory > xuser
                  seq > @
                    seq
                      xuser.write (((unsupported)).apply (((xself).xmodel)) ((xusername)) ((xemail)) ((xgroup)))
                      bogusForceDataize.write ((((xuser).xset_password)).apply ((xpassword)))
                      (((unsupported)).apply (((xuser).xsave)) (((xself).x_db)))
                      (((unsupported)).apply ((xuser)))
            (((unsupported)).apply ((xAbstractBaseUser)))
              seq
                xusername.write (((unsupported)).apply (((xmodels).xForeignKey)) ((xEmail)) (((xmodels).xCASCADE)) ("primary"))
                xemail.write (((unsupported)).apply (((xmodels).xForeignKey)) ((xEmail)) (((xmodels).xCASCADE)) ("email") ("secondary"))
                xgroup.write ((((xmodels).xForeignKey)).apply ((xGroup)) (((xmodels).xCASCADE)))
                xcustom_objects.write (((xCustomUserWithFKManager)).apply)
                xUSERNAME_FIELD.write "username"
                xREQUIRED_FIELDS.write (((unsupported)).apply ("email") ("group"))