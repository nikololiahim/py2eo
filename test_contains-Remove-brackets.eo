memory > xlist
memory > xValueError
memory > xTestCase
memory > xDumbCategory
memory > xNamedCategory
memory > xProxyCategory
memory > xobject
memory > xTypeError
[] > test_contains
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_evaluated_queryset
        memory > xtest_proxy_model
        memory > xtest_obj_type
        memory > xsetUpTestData
        memory > xtest_basic
        memory > xtest_unsaved_obj
        memory > xtest_values
        memory > xtest_wrong_model
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xcategory)) ((((xDumbCategory).xobjects).xcreate)))
                        (((unsupported)).apply (((xcls).xproxy_category)) ((((xProxyCategory).xobjects).xcreate)))
                xtest_unsaved_obj.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "QuerySet.contains cannot be used on unsaved objects."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write (((((xDumbCategory).xobjects).xcontains)).apply ((xDumbCategory)))
                xtest_obj_type.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "'obj' must be a model instance."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write (((((xDumbCategory).xobjects).xcontains)).apply ((xobject)))
                xtest_values.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "Cannot call QuerySet.contains after .values or .values_list."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write ((((((((xDumbCategory).xobjects).xvalues_list)).apply ("pk")).xcontains)).apply (((xself).xcategory)))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write ((((((((xDumbCategory).xobjects).xvalues)).apply ("pk")).xcontains)).apply (((xself).xcategory)))
                xtest_basic.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xDumbCategory).xobjects).xcontains)).apply (((xself).xcategory)))) (TRUE))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xDumbCategory).xobjects).xcontains)).apply (((xself).xcategory)))) (TRUE))
                xtest_evaluated_queryset.write
                  [xself]
                    memory > xqs
                    memory > xproxy_qs
                    seq > @
                      seq
                        xqs.write (((xDumbCategory).xobjects).xall)
                        xproxy_qs.write (((xProxyCategory).xobjects).xall)
                        bogusForceDataize.write (((xlist)).apply ((xqs)))
                        bogusForceDataize.write (((xlist)).apply ((xproxy_qs)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          seq
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((((xqs).xcontains)).apply (((xself).xcategory)))) (TRUE))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((((xqs).xcontains)).apply (((xself).xproxy_category)))) (TRUE))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((((xproxy_qs).xcontains)).apply (((xself).xcategory)))) (TRUE))
                            bogusForceDataize.write ((((xself).xassertIs)).apply (((((xproxy_qs).xcontains)).apply (((xself).xproxy_category)))) (TRUE))
                xtest_proxy_model.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xDumbCategory).xobjects).xcontains)).apply (((xself).xproxy_category)))) (TRUE))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write ((((xself).xassertIs)).apply ((((((xProxyCategory).xobjects).xcontains)).apply (((xself).xcategory)))) (TRUE))
                xtest_wrong_model.write
                  [xself]
                    memory > xqs
                    memory > xnamed_category
                    seq > @
                      seq
                        xqs.write (((xDumbCategory).xobjects).xall)
                        xnamed_category.write (((unsupported)).apply ((xNamedCategory)) ("category"))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write ((((xself).xassertIs)).apply (((((xqs).xcontains)).apply ((xnamed_category)))) (FALSE))
                        bogusForceDataize.write (((xlist)).apply ((xqs)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write ((((xself).xassertIs)).apply (((((xqs).xcontains)).apply ((xnamed_category)))) (FALSE))