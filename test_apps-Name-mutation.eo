memory > xImportError
memory > xDateTimeTZRange
memory > xtest_field
memory > xmodify_settings
memory > xValueError
memory > xMigrationWriter
memory > xdefault
memory > ximports
memory > xDateTimeRange
memory > xIntegerRangeField
memory > xconnection_created
memory > xNumericRange
memory > xDecimal
memory > xregister_type_handlers
memory > xDateRangeField
memory > xserialized_field
memory > xPostgreSQLTestCase2
memory > xDateTimeRangeField
memory > xDateRange
memory > xDecimalRangeField
[] > test_apps
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_register_type_handlers_connection
        memory > xtest_register_serializer_for_migrations
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
            seq
            (((unsupported)).apply)
            (((unsupported)).apply ((xImportError)))
              seq
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
            (((unsupported)).apply ((xPostgreSQLTestCase2)))
              seq
                xtest_register_type_handlers_connection.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ((xregister_type_handlers)) (((((xconnection_created).x_live_receivers)).apply ("None: is there a None literal in the EO language?"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xmodify_settings)) ((((unsupported)).apply ("append") ("django.contrib.postgres"))))))
                          bogusForceDataize.write ((((xself).xassertIn)).apply ((xregister_type_handlers)) (((((xconnection_created).x_live_receivers)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ((xregister_type_handlers)) (((((xconnection_created).x_live_receivers)).apply ("None: is there a None literal in the EO language?"))))
                xtest_register_serializer_for_migrations.write
                  [xself]
                    memory > xfield
                    memory > xtests
                    memory > xassertNotSerializable
                    seq > @
                      seq
                        xtests.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xDateRange)) (TRUE))) ((xDateRangeField)))) ((((unsupported)).apply ((((unsupported)).apply ((xDateTimeRange)) (TRUE))) ((xDateRangeField)))) ((((unsupported)).apply ((((xDateTimeTZRange)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("[]"))) ((xDateTimeRangeField)))) ((((unsupported)).apply ((((xNumericRange)).apply ((((xDecimal)).apply ("1.0"))) ((((xDecimal)).apply ("5.0"))) ("()"))) ((xDecimalRangeField)))) ((((unsupported)).apply ((((xNumericRange)).apply (1) (10))) ((xIntegerRangeField)))))
                        xassertNotSerializable.write
                          []
                            memory > xfield
                            seq > @
                              (((unsupported)).apply ((((unsupported)).apply ((xdefault)) ((xtest_field)))) ((xtests)))
                                (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xdefault)))))
                                  seq
                                    xfield.write (((unsupported)).apply ((xtest_field)) ((xdefault)))
                                    (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) (("Cannot serialize: %s".mod (((xdefault).x__class__).x__name__))))))
                                      bogusForceDataize.write ((((xMigrationWriter).xserialize)).apply ((xfield)))
                        bogusForceDataize.write (((xassertNotSerializable)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xmodify_settings)) ((((unsupported)).apply ("append") ("django.contrib.postgres"))))))
                          (((unsupported)).apply ((((unsupported)).apply ((xdefault)) ((xtest_field)))) ((xtests)))
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xdefault)))))
                              seq
                                xfield.write (((unsupported)).apply ((xtest_field)) ((xdefault)))
                                (((unsupported)).apply ((((unsupported)).apply ((xserialized_field)) ((ximports)))) (((((xMigrationWriter).xserialize)).apply ((xfield)))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((ximports)) ((((unsupported)).apply ("import django.contrib.postgres.fields.ranges") ("import psycopg2.extras"))))
                                bogusForceDataize.write ((((xself).xassertIn)).apply (("%s.%s(default=psycopg2.extras.%r)".mod (((unsupported)).apply (((xfield).x__module__)) ((((xfield).x__class__).x__name__)) ((xdefault))))) ((xserialized_field)))
                        bogusForceDataize.write (((xassertNotSerializable)).apply)