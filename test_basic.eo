memory > xContext
memory > xSilentAttrClass
memory > xBlockNode
memory > xSilentGetItemClass
memory > xrepr
memory > xBlockContext
memory > xSimpleTestCase
memory > xTypeError
memory > xTemplateSyntaxError
memory > xSomeClass
[] > test_basic
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_basic_syntax32
        memory > xtest_basic_syntax28
        memory > xbasic_templates
        memory > xtest_basic_syntax25
        memory > xtest_basic_syntax37
        memory > xtest_basic_syntax26
        memory > xtest_basic_syntax04
        memory > xtest_basic_syntax15
        memory > xtest_basic_syntax18
        memory > xtest_basic_syntax07
        memory > xtest_basic_syntax10
        memory > xtest_basic_syntax24
        memory > xtest_basic_syntax02
        memory > xtest_basic_syntax35
        memory > xtest_basic_syntax13
        memory > xtest_basic_syntax21
        memory > xtest_basic_syntax09
        memory > xtest_unclosed_block
        memory > xtest_repr
        memory > xtest_basic_syntax08
        memory > xtest_basic_syntax36
        memory > xtest_basic_syntax19
        memory > xtest_ignores_strings_that_look_like_format_interpolation
        memory > xtest_basic_syntax14
        memory > xtest_basic_syntax03
        memory > xtest_basic_syntax11
        memory > xtest_basic_syntax20
        memory > xtest_basic_syntax22
        memory > xtest_basic_syntax33
        memory > xtest_basic_syntax16
        memory > xtest_basic_syntax31
        memory > xtest_basic_syntax01
        memory > xtest_basic_syntax23
        memory > xtest_basic_syntax34
        memory > xtest_basic_syntax12
        memory > xtest_unclosed_block2
        memory > xtest_basic_syntax30
        memory > xtest_basic_syntax20b
        memory > xtest_basic_syntax06
        memory > xtest_basic_syntax17
        memory > xtest_basic_syntax38
        memory > xtest_basic_syntax27
        memory > xtest_basic_syntax29
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            xbasic_templates.write (((unsupported)).apply ("basic-syntax01") ("something cool") ("basic-syntax02") ("{{ headline }}") ("basic-syntax03") ("{{ first }} --- {{ second }}"))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_basic_syntax01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax01"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("something cool"))
                xtest_basic_syntax02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax02") ((((unsupported)).apply ("headline") ("Success"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Success"))
                xtest_basic_syntax03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax03") ((((unsupported)).apply ("first") (1) ("second") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1 --- 2"))
                xtest_basic_syntax04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax04"))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("asINVALIDdf"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("asdf"))
                xtest_basic_syntax06.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax06"))
                xtest_basic_syntax07.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ("Empty variable tag on line 1"))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax07"))
                xtest_basic_syntax08.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ("Empty variable tag on line 1"))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax08"))
                xtest_basic_syntax09.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax09") ((((unsupported)).apply ("var") ((((xSomeClass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("SomeClass.method"))
                xtest_basic_syntax10.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax10") ((((unsupported)).apply ("var") ((((xSomeClass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("OtherClass.method"))
                xtest_basic_syntax11.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax11") ((((unsupported)).apply ("var") ((((xSomeClass)).apply)))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_basic_syntax12.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax12"))
                xtest_basic_syntax13.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax13"))
                xtest_basic_syntax14.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax14"))
                xtest_basic_syntax15.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax15"))
                xtest_basic_syntax16.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax16"))
                xtest_basic_syntax17.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax17"))
                xtest_basic_syntax18.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax18") ((((unsupported)).apply ("foo") ((((unsupported)).apply ("bar") ("baz"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("baz"))
                xtest_basic_syntax19.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax19") ((((unsupported)).apply ("foo") ((((unsupported)).apply ("bar") ("baz"))))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_basic_syntax20.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax20") ((((unsupported)).apply ("var") ((((xSomeClass)).apply)))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_basic_syntax20b.write
                  [xself]
                    memory > xtemplate
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xtemplate.write (((((xself).xengine).xget_template)).apply ("basic-syntax20b"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("var") ((((xSomeClass)).apply)))))))
                xtest_basic_syntax21.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax21"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("a {{ moo %} b"))
                xtest_basic_syntax22.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax22"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("{{ moo #}"))
                xtest_basic_syntax23.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("basic-syntax23"))
                xtest_basic_syntax24.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax24"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("{{ moon }}"))
                xtest_basic_syntax25.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax25"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("fred"))
                xtest_basic_syntax26.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax26"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("\"fred\""))
                xtest_basic_syntax27.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax27"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("\"fred\""))
                xtest_basic_syntax28.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax28") ((((unsupported)).apply ("a") ((((xSilentGetItemClass)).apply)))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_basic_syntax29.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax29") ((((unsupported)).apply ("a") ((((xSilentAttrClass)).apply)))))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_basic_syntax30.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax30") ((((unsupported)).apply ("1") ((((unsupported)).apply ("2") ((((unsupported)).apply ("3") ("d"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("d"))
                xtest_basic_syntax31.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax31") ((((unsupported)).apply ("1") ((((unsupported)).apply ("2") ((((unsupported)).apply ("a") ("b") ("c") ("d"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("d"))
                xtest_basic_syntax32.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax32") ((((unsupported)).apply ("1") ((((unsupported)).apply ((((unsupported)).apply ("x") ("x") ("x") ("x"))) ((((unsupported)).apply ("y") ("y") ("y") ("y"))) ((((unsupported)).apply ("a") ("b") ("c") ("d"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("d"))
                xtest_basic_syntax33.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax33") ((((unsupported)).apply ("1") ((((unsupported)).apply ("xxxx") ("yyyy") ("abcd"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("d"))
                xtest_basic_syntax34.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax34") ((((unsupported)).apply ("1") ((((unsupported)).apply ((((unsupported)).apply ("x") ("x"))) ((((unsupported)).apply ("y") ("y"))) ((((unsupported)).apply ("z") ("z") ("3") ("d"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("d"))
                xtest_basic_syntax35.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax35") ((((unsupported)).apply ("1") ("abc"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1"))
                xtest_basic_syntax36.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax36") ((((unsupported)).apply ("1") ("abc"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1.2"))
                xtest_basic_syntax37.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax37") ((((unsupported)).apply ("callable") ((((unsupported)).apply ("foo bar"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("foo bar"))
                xtest_basic_syntax38.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("basic-syntax38") ((((unsupported)).apply ("var") ((((unsupported)).apply ("callable") ((((unsupported)).apply ("foo bar"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("foo bar"))
                xtest_unclosed_block.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "Unclosed tag on line 1: 'block'. Looking for one of: endblock."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("template"))
                xtest_unclosed_block2.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "Unclosed tag on line 1: 'if'. Looking for one of: elif, else, endif."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("template"))
                xtest_ignores_strings_that_look_like_format_interpolation.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("tpl-str"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("%s"))
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("tpl-percent"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("%%"))
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("tpl-weird-percent"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("% %s"))
            (((unsupported)).apply ((xSimpleTestCase)))
              xtest_repr.write
                [xself]
                  memory > xblock_context
                  seq > @
                    seq
                      xblock_context.write (((xBlockContext)).apply)
                      bogusForceDataize.write ((((xblock_context).xadd_blocks)).apply ((((unsupported)).apply ("content") ((((xBlockNode)).apply ("content") ((((unsupported)).apply)))))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xblock_context)))) ("<BlockContext: blocks=defaultdict(<class 'list'>, {'content': [<Block Node: content. Contents: []>]})>"))