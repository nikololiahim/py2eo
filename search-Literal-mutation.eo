memory > xCoalesce
memory > xSearchConfig
memory > xValueError
memory > xSearchVectorField
memory > xField
memory > xrhs
memory > xExpression
memory > xSearchVectorCombinable
memory > xparams
memory > xexpressions
memory > xTrigramBase
memory > xgetattr
memory > xpsycopg2
memory > xCombinedExpression
memory > xisinstance
memory > xTypeError
memory > xlhs_params
memory > xrhs_params
memory > xTextField
memory > xSearchQueryCombinable
memory > xFunc
memory > xregister_combinable_fields
memory > xSearchQueryField
memory > xCombinedSearchQuery
memory > xSearchQuery
memory > xCast
memory > xoption
memory > xvalue
memory > xlhs
memory > xSearchVector
memory > xCharField
memory > xextra
memory > xtype
memory > xValue
memory > xhasattr
memory > xFloatField
memory > xTrigramWordBase
memory > xsuper
memory > xweight_sql
memory > xSearchVectorExact
memory > xCombinedSearchVector
memory > xexpression
memory > xsql
memory > xLookup
[] > search
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xarg_joiner
        memory > xSEARCH_TYPES
        memory > xtemplate
        memory > x__invert__
        memory > x__ror__
        memory > xget_source_expressions
        memory > x__or__
        memory > xlookup_name
        memory > xBITAND
        memory > xdb_type
        memory > x__init__
        memory > xBITOR
        memory > x__str__
        memory > x_combine
        memory > xas_sql
        memory > xset_source_expressions
        memory > x__rand__
        memory > xfrom_parameter
        memory > xprocess_rhs
        memory > xoutput_field
        memory > xfunction
        memory > xresolve_expression
        memory > x__and__
        memory > xADD
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xLookup)))
              seq
                xlookup_name.write "exact"
                xprocess_rhs.write
                  [xself xqn xconnection]
                    memory > xconfig
                    seq > @
                      seq
                        ((((xisinstance)).apply (((xself).xrhs)) ((((unsupported)).apply ((xSearchQuery)) ((xCombinedSearchQuery))))).not).if
                          seq
                            xconfig.write (((xgetattr)).apply (((xself).xlhs)) ("config") ("None: is there a None literal in the EO language?"))
                            (((unsupported)).apply (((xself).xrhs)) ((((unsupported)).apply ((xSearchQuery)) (((xself).xrhs)) ((xconfig)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xrhs)) ((xrhs_params)))) (((((((xsuper)).apply).xprocess_rhs)).apply ((xqn)) ((xconnection)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xrhs)) ((xrhs_params)))))
                xas_sql.write
                  [xself xqn xconnection]
                    memory > xparams
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xlhs)) ((xlhs_params)))) (((((xself).xprocess_lhs)).apply ((xqn)) ((xconnection)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xrhs)) ((xrhs_params)))) (((((xself).xprocess_rhs)).apply ((xqn)) ((xconnection)))))
                        xparams.write ((xlhs_params).add (xrhs_params))
                        (((unsupported)).apply ((((unsupported)).apply (("%s @@ %s".mod (((unsupported)).apply ((xlhs)) ((xrhs))))) ((xparams)))))
            (((unsupported)).apply ((xField)))
              xdb_type.write
                [xself xconnection]
                  seq > @
                    (((unsupported)).apply ("tsvector"))
            (((unsupported)).apply ((xField)))
              xdb_type.write
                [xself xconnection]
                  seq > @
                    (((unsupported)).apply ("tsquery"))
            (((unsupported)).apply ((xExpression)))
              seq
                x__init__.write
                  [xself xconfig]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                        ((((xhasattr)).apply ((xconfig)) ("resolve_expression")).not).if
                          xconfig.write (((xValue)).apply ((xconfig)))
                        (((unsupported)).apply (((xself).xconfig)) ((xconfig)))
                xfrom_parameter.write
                  [xcls xconfig]
                    seq > @
                      (((unsupported)).apply)
                        ((((unsupported)).apply ((xconfig)) ("None: is there a None literal in the EO language?")).or (((xisinstance)).apply ((xconfig)) ((xcls)))).if
                          (((unsupported)).apply ((xconfig)))
                        (((unsupported)).apply ((((xcls)).apply ((xconfig)))))
                xget_source_expressions.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).xconfig)))))
                xset_source_expressions.write
                  [xself xexprs]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).xconfig)))) ((xexprs)))
                xas_sql.write
                  [xself xcompiler xconnection]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) ((xparams)))) (((((xcompiler).xcompile)).apply (((xself).xconfig)))))
                        (((unsupported)).apply ((((unsupported)).apply (("%s::regconfig".mod (xsql))) ((xparams)))))
            (((unsupported)).apply)
              seq
                xADD.write "||"
                x_combine.write
                  [xself xother xconnector xreversed]
                    seq > @
                      seq
                        ((((xisinstance)).apply ((xother)) ((xSearchVectorCombinable))).not).if
                          (((unsupported)).apply ((((xTypeError)).apply (("SearchVector can only be combined with other SearchVector instances, got %s.".mod ((((xtype)).apply ((xother))).x__name__))))))
                        (xreversed).if
                          (((unsupported)).apply ((((xCombinedSearchVector)).apply ((xother)) ((xconnector)) ((xself)) (((xself).xconfig)))))
                        (((unsupported)).apply ((((xCombinedSearchVector)).apply ((xself)) ((xconnector)) ((xother)) (((xself).xconfig)))))
            bogusForceDataize.write (((xregister_combinable_fields)).apply ((xSearchVectorField)) (((xSearchVectorCombinable).xADD)) ((xSearchVectorField)) ((xSearchVectorField)))
            (((unsupported)).apply ((xSearchVectorCombinable)) ((xFunc)))
              seq
                xfunction.write "to_tsvector"
                xarg_joiner.write " || ' ' || "
                xoutput_field.write (((xSearchVectorField)).apply)
                x__init__.write
                  [xself xconfig xweight]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xexpressions)))))
                        (((unsupported)).apply (((xself).xconfig)) (((((xSearchConfig).xfrom_parameter)).apply ((xconfig)))))
                        ((((unsupported)).apply ((xweight)) ("None: is there a None literal in the EO language?")).and ((((xhasattr)).apply ((xweight)) ("resolve_expression")).not)).if
                          xweight.write (((xValue)).apply ((xweight)))
                        (((unsupported)).apply (((xself).xweight)) ((xweight)))
                xresolve_expression.write
                  [xself xquery xallow_joins xreuse xsummarize xfor_save]
                    memory > xresolved
                    seq > @
                      (((unsupported)).apply)
                        xresolved.write ((((((xsuper)).apply).xresolve_expression)).apply ((xquery)) ((xallow_joins)) ((xreuse)) ((xsummarize)) ((xfor_save)))
                        ((xself).xconfig).if
                          (((unsupported)).apply (((xresolved).xconfig)) ((((((xself).xconfig).xresolve_expression)).apply ((xquery)) ((xallow_joins)) ((xreuse)) ((xsummarize)) ((xfor_save)))))
                        (((unsupported)).apply ((xresolved)))
                xas_sql.write
                  [xself xcompiler xconnection xfunction xtemplate]
                    memory > xclone
                    memory > xextra_params
                    memory > xsql
                    memory > xconfig_sql
                    memory > xconfig_params
                    seq > @
                      (((unsupported)).apply)
                        xclone.write ((((xself).xcopy)).apply)
                        bogusForceDataize.write ((((xclone).xset_source_expressions)).apply ((((unsupported)).apply ((((xCoalesce)).apply (((((xisinstance)).apply (((xexpression).xoutput_field)) ((((unsupported)).apply ((xCharField)) ((xTextField))))).if (xexpression) (((xCast)).apply ((xexpression)) ((((xTextField)).apply))))) ((((xValue)).apply (""))))) ((xexpression)) (((((xclone).xget_source_expressions)).apply)))))
                        xconfig_sql.write "None: is there a None literal in the EO language?"
                        xconfig_params.write (((unsupported)).apply)
                        (((unsupported)).apply ((xtemplate)) ("None: is there a None literal in the EO language?")).if
                          ((xclone).xconfig).if
                            seq
                              (((unsupported)).apply ((((unsupported)).apply ((xconfig_sql)) ((xconfig_params)))) (((((xcompiler).xcompile)).apply (((xclone).xconfig)))))
                              xtemplate.write "%(function)s(%(config)s, %(expressions)s)"
                            xtemplate.write ((xclone).xtemplate)
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) ((xparams)))) ((((unsupported)).apply (((((xsuper)).apply ((xSearchVector)) ((xclone))).xas_sql)) ((xcompiler)) ((xconnection)) ((xfunction)) ((xtemplate)) ((xconfig_sql)))))
                        xextra_params.write (((unsupported)).apply)
                        ((xclone).xweight).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xweight_sql)) ((xextra_params)))) (((((xcompiler).xcompile)).apply (((xclone).xweight)))))
                            xsql.write ((("setweight({}, {})".xformat)).apply ((xsql)) ((xweight_sql)))
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) ((((xconfig_params).add (xparams)).add (xextra_params))))))
            (((unsupported)).apply ((xSearchVectorCombinable)) ((xCombinedExpression)))
              x__init__.write
                [xself xlhs xconnector xrhs xconfig xoutput_field]
                  seq > @
                    (((unsupported)).apply)
                      (((unsupported)).apply (((xself).xconfig)) ((xconfig)))
                      bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xlhs)) ((xconnector)) ((xrhs)) ((xoutput_field)))
            (((unsupported)).apply)
              seq
                xBITAND.write "&&"
                xBITOR.write "||"
                x_combine.write
                  [xself xother xconnector xreversed]
                    seq > @
                      seq
                        ((((xisinstance)).apply ((xother)) ((xSearchQueryCombinable))).not).if
                          (((unsupported)).apply ((((xTypeError)).apply (("SearchQuery can only be combined with other SearchQuery instances, got %s.".mod ((((xtype)).apply ((xother))).x__name__))))))
                        (xreversed).if
                          (((unsupported)).apply ((((xCombinedSearchQuery)).apply ((xother)) ((xconnector)) ((xself)) (((xself).xconfig)))))
                        (((unsupported)).apply ((((xCombinedSearchQuery)).apply ((xself)) ((xconnector)) ((xother)) (((xself).xconfig)))))
                x__or__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((((xself).x_combine)).apply ((xother)) (((xself).xBITOR)) (FALSE))))
                x__ror__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((((xself).x_combine)).apply ((xother)) (((xself).xBITOR)) (TRUE))))
                x__and__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((((xself).x_combine)).apply ((xother)) (((xself).xBITAND)) (FALSE))))
                x__rand__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((((xself).x_combine)).apply ((xother)) (((xself).xBITAND)) (TRUE))))
            (((unsupported)).apply ((xSearchQueryCombinable)) ((xFunc)))
              seq
                xoutput_field.write (((xSearchQueryField)).apply)
                xSEARCH_TYPES.write (((unsupported)).apply ("plain") ("plainto_tsquery") ("phrase") ("phraseto_tsquery") ("raw") ("to_tsquery") ("websearch") ("websearch_to_tsquery"))
                x__init__.write
                  [xself xvalue xoutput_field xconfig xinvert xsearch_type]
                    memory > xexpressions
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xfunction)) ((((((xself).xSEARCH_TYPES).xget)).apply ((xsearch_type)))))
                        (((unsupported)).apply (((xself).xfunction)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((xValueError)).apply (("Unknown search_type argument '%s'.".mod (xsearch_type))))))
                        ((((xhasattr)).apply ((xvalue)) ("resolve_expression")).not).if
                          xvalue.write (((xValue)).apply ((xvalue)))
                        xexpressions.write (((unsupported)).apply ((xvalue)))
                        (((unsupported)).apply (((xself).xconfig)) (((((xSearchConfig).xfrom_parameter)).apply ((xconfig)))))
                        (((unsupported)).apply (((xself).xconfig)) ("None: is there a None literal in the EO language?")).if
                          xexpressions.write ((((unsupported)).apply (((xself).xconfig))).add (xexpressions))
                        (((unsupported)).apply (((xself).xinvert)) ((xinvert)))
                        (((unsupported)).apply (((((xsuper)).apply).x__init__)) ((((unsupported)).apply ((xexpressions)))) ((xoutput_field)))
                xas_sql.write
                  [xself xcompiler xconnection xfunction xtemplate]
                    memory > xsql
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) ((xparams)))) (((((((xsuper)).apply).xas_sql)).apply ((xcompiler)) ((xconnection)) ((xfunction)) ((xtemplate)))))
                        ((xself).xinvert).if
                          xsql.write ("!!(%s)".mod (xsql))
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) ((xparams)))))
                x__invert__.write
                  [xself]
                    memory > xclone
                    seq > @
                      seq
                        xclone.write ((((xself).xcopy)).apply)
                        (((unsupported)).apply (((xclone).xinvert)) ((((xself).xinvert).not)))
                        (((unsupported)).apply ((xclone)))
                x__str__.write
                  [xself]
                    memory > xresult
                    seq > @
                      seq
                        xresult.write ((((((xsuper)).apply).x__str__)).apply)
                        (((unsupported)).apply ((((xself).xinvert).if ("~%s".mod (xresult)) (xresult))))
            (((unsupported)).apply ((xSearchQueryCombinable)) ((xCombinedExpression)))
              seq
                x__init__.write
                  [xself xlhs xconnector xrhs xconfig xoutput_field]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xconfig)) ((xconfig)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xlhs)) ((xconnector)) ((xrhs)) ((xoutput_field)))
                x__str__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (("(%s)".mod ((((((xsuper)).apply).x__str__)).apply))))
            (((unsupported)).apply ((xFunc)))
              seq
                xfunction.write "ts_rank"
                xoutput_field.write (((xFloatField)).apply)
                x__init__.write
                  [xself xvector xquery xweights xnormalization xcover_density]
                    memory > xexpressions
                    seq > @
                      (((unsupported)).apply)
                        ((((xhasattr)).apply ((xvector)) ("resolve_expression")).not).if
                          xvector.write (((xSearchVector)).apply ((xvector)))
                        ((((xhasattr)).apply ((xquery)) ("resolve_expression")).not).if
                          xquery.write (((xSearchQuery)).apply ((xquery)))
                        xexpressions.write (((unsupported)).apply ((xvector)) ((xquery)))
                        (((unsupported)).apply ((xweights)) ("None: is there a None literal in the EO language?")).if
                          seq
                            ((((xhasattr)).apply ((xweights)) ("resolve_expression")).not).if
                              xweights.write (((xValue)).apply ((xweights)))
                            xexpressions.write ((((unsupported)).apply ((xweights))).add (xexpressions))
                        (((unsupported)).apply ((xnormalization)) ("None: is there a None literal in the EO language?")).if
                          seq
                            ((((xhasattr)).apply ((xnormalization)) ("resolve_expression")).not).if
                              xnormalization.write (((xValue)).apply ((xnormalization)))
                            (((unsupported)).apply ((xexpressions)) ((((unsupported)).apply ((xnormalization)))))
                        (xcover_density).if
                          (((unsupported)).apply (((xself).xfunction)) ("ts_rank_cd"))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xexpressions)))))
            (((unsupported)).apply ((xFunc)))
              seq
                xfunction.write "ts_headline"
                xtemplate.write "%(function)s(%(expressions)s%(options)s)"
                xoutput_field.write (((xTextField)).apply)
                x__init__.write
                  [xself xexpression xquery xconfig xstart_sel xstop_sel xmax_words xmin_words xshort_word xhighlight_all xmax_fragments xfragment_delimiter]
                    memory > xoptions
                    memory > xexpressions
                    seq > @
                      (((unsupported)).apply)
                        ((((xhasattr)).apply ((xquery)) ("resolve_expression")).not).if
                          xquery.write (((xSearchQuery)).apply ((xquery)))
                        xoptions.write (((unsupported)).apply ("StartSel") ((xstart_sel)) ("StopSel") ((xstop_sel)) ("MaxWords") ((xmax_words)) ("MinWords") ((xmin_words)) ("ShortWord") ((xshort_word)) ("HighlightAll") ((xhighlight_all)) ("MaxFragments") ((xmax_fragments)) ("FragmentDelimiter") ((xfragment_delimiter)))
                        (((unsupported)).apply (((xself).xoptions)) ((((unsupported)).apply ((xoption)) ((xvalue)) ((((unsupported)).apply ((xoption)) ((xvalue)))) (((((xoptions).xitems)).apply)) ((((unsupported)).apply ((xvalue)) ("None: is there a None literal in the EO language?"))))))
                        xexpressions.write (((unsupported)).apply ((xexpression)) ((xquery)))
                        (((unsupported)).apply ((xconfig)) ("None: is there a None literal in the EO language?")).if
                          seq
                            xconfig.write ((((xSearchConfig).xfrom_parameter)).apply ((xconfig)))
                            xexpressions.write ((((unsupported)).apply ((xconfig))).add (xexpressions))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xexpressions)))))
                xas_sql.write
                  [xself xcompiler xconnection xfunction xtemplate]
                    memory > xoptions_params
                    memory > xoptions_sql
                    seq > @
                      (((unsupported)).apply)
                        xoptions_sql.write ""
                        xoptions_params.write (((unsupported)).apply)
                        ((xself).xoptions).if
                          seq
                            bogusForceDataize.write ((((xoptions_params).xappend)).apply ((((", ".xjoin)).apply ((((unsupported)).apply (("%s=%s".mod (((unsupported)).apply ((xoption)) ((((((((((((xpsycopg2).xextensions).xadapt)).apply ((xvalue))).xgetquoted)).apply).xdecode)).apply))))) ((((unsupported)).apply ((xoption)) ((xvalue)))) ((((((xself).xoptions).xitems)).apply)))))))
                            xoptions_sql.write ", %s"
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) ((xparams)))) ((((unsupported)).apply (((((xsuper)).apply).xas_sql)) ((xcompiler)) ((xconnection)) ((xfunction)) ((xtemplate)) ((xoptions_sql)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xsql)) (((xparams).add (xoptions_params))))))
            bogusForceDataize.write ((((xSearchVectorField).xregister_lookup)).apply ((xSearchVectorExact)))
            (((unsupported)).apply ((xFunc)))
              seq
                xoutput_field.write (((xFloatField)).apply)
                x__init__.write
                  [xself xexpression xstring]
                    seq > @
                      (((unsupported)).apply)
                        ((((xhasattr)).apply ((xstring)) ("resolve_expression")).not).if
                          xstring.write (((xValue)).apply ((xstring)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xexpression)) ((xstring)) ((((unsupported)).apply ((xextra)))))
            (((unsupported)).apply ((xFunc)))
              seq
                xoutput_field.write (((xFloatField)).apply)
                x__init__.write
                  [xself xstring xexpression]
                    seq > @
                      (((unsupported)).apply)
                        ((((xhasattr)).apply ((xstring)) ("resolve_expression")).not).if
                          xstring.write (((xValue)).apply ((xstring)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xstring)) ((xexpression)) ((((unsupported)).apply ((xextra)))))
            (((unsupported)).apply ((xTrigramBase)))
              xfunction.write "SIMILARITY"
            (((unsupported)).apply ((xTrigramBase)))
              seq
                xfunction.write ""
                xarg_joiner.write " <-> "
            (((unsupported)).apply ((xTrigramWordBase)))
              seq
                xfunction.write ""
                xarg_joiner.write " <<-> "
            (((unsupported)).apply ((xTrigramWordBase)))
              xfunction.write "WORD_SIMILARITY"