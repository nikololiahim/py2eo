memory > xall
memory > xenumerate
memory > xBooleanField
memory > xValueError
memory > xValidationError
memory > xngettext
memory > xrange
memory > xmax
memory > xIntegerField
memory > xManagementForm
memory > xsuper
memory > xform_errors
memory > xgetattr
memory > xkwargs
memory > xmin
memory > xAttributeError
memory > xNumberInput
memory > xform
memory > xIndexError
memory > xRenderableFormMixin
memory > xreversed
memory > xany
memory > xtype
memory > xformset
memory > xHiddenInput
memory > xhasattr
memory > xsum
memory > xget_default_renderer
memory > xi
memory > xForm
memory > xcls
memory > xCheckboxInput
memory > xiter
memory > xe
memory > xfield_name
memory > xlen
[] > formsets
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xclean
        memory > xadd_fields
        memory > x_should_delete_form
        memory > xtemplate_name
        memory > xtemplate_name_table
        memory > xMIN_NUM_FORMS
        memory > xmedia
        memory > xDELETION_FIELD_NAME
        memory > xforms
        memory > xextra_forms
        memory > xget_form_kwargs
        memory > xORDERING_FIELD_NAME
        memory > x__repr__
        memory > xDEFAULT_MAX_NUM
        memory > xINITIAL_FORM_COUNT
        memory > xMAX_NUM_FORM_COUNT
        memory > xtotal_form_count
        memory > xerrors
        memory > x__iter__
        memory > xtemplate_name_ul
        memory > xnon_form_errors
        memory > xall_valid
        memory > x__getitem__
        memory > x_
        memory > xtemplate_name_p
        memory > xhas_changed
        memory > xmanagement_form
        memory > xformset_factory
        memory > xfull_clean
        memory > xget_default_prefix
        memory > xis_valid
        memory > x_construct_form
        memory > xINITIAL_FORMS
        memory > xMIN_NUM_FORM_COUNT
        memory > xordered_forms
        memory > xis_multipart
        memory > x__all__
        memory > xdeleted_forms
        memory > xtotal_error_count
        memory > xdeletion_widget
        memory > x__init__
        memory > xTOTAL_FORM_COUNT
        memory > xordering_widget
        memory > x__len__
        memory > xinitial_forms
        memory > xget_context
        memory > xcleaned_data
        memory > x__bool__
        memory > xinitial_form_count
        memory > xTOTAL_FORMS
        memory > xget_deletion_widget
        memory > xMAX_NUM_FORMS
        memory > xdefault_error_messages
        memory > xempty_form
        memory > xadd_prefix
        memory > xDEFAULT_MIN_NUM
        memory > xget_ordering_widget
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            x__all__.write (((unsupported)).apply ("BaseFormSet") ("formset_factory") ("all_valid"))
            xTOTAL_FORM_COUNT.write "TOTAL_FORMS"
            xINITIAL_FORM_COUNT.write "INITIAL_FORMS"
            xMIN_NUM_FORM_COUNT.write "MIN_NUM_FORMS"
            xMAX_NUM_FORM_COUNT.write "MAX_NUM_FORMS"
            xORDERING_FIELD_NAME.write "ORDER"
            xDELETION_FIELD_NAME.write "DELETE"
            xDEFAULT_MIN_NUM.write 0
            xDEFAULT_MAX_NUM.write 1000
            (((unsupported)).apply ((xForm)))
              seq
                (((unsupported)).apply)
                xTOTAL_FORMS.write (((unsupported)).apply ((xIntegerField)) ((xHiddenInput)))
                xINITIAL_FORMS.write (((unsupported)).apply ((xIntegerField)) ((xHiddenInput)))
                xMIN_NUM_FORMS.write (((unsupported)).apply ((xIntegerField)) (FALSE) ((xHiddenInput)))
                xMAX_NUM_FORMS.write (((unsupported)).apply ((xIntegerField)) (FALSE) ((xHiddenInput)))
                xclean.write
                  [xself]
                    memory > xcleaned_data
                    seq > @
                      seq
                        xcleaned_data.write ((xsuper).xclean)
                        bogusForceDataize.write ((((xcleaned_data).xsetdefault)).apply ((xTOTAL_FORM_COUNT)) (0))
                        bogusForceDataize.write ((((xcleaned_data).xsetdefault)).apply ((xINITIAL_FORM_COUNT)) (0))
                        (((unsupported)).apply ((xcleaned_data)))
            (((unsupported)).apply ((xRenderableFormMixin)))
              seq
                (((unsupported)).apply)
                xdeletion_widget.write (xCheckboxInput)
                xordering_widget.write (xNumberInput)
                xdefault_error_messages.write (((unsupported)).apply ("missing_management_form") ((((x_)).apply ("ManagementForm data is missing or has been tampered with. Missing fields: %(field_names)s. You may need to file a bug report if the issue persists."))))
                xtemplate_name.write "django/forms/formsets/default.html"
                xtemplate_name_p.write "django/forms/formsets/p.html"
                xtemplate_name_table.write "django/forms/formsets/table.html"
                xtemplate_name_ul.write "django/forms/formsets/ul.html"
                x__init__.write
                  [xself xdata xfiles xauto_id xprefix xinitial xerror_class xform_kwargs xerror_messages]
                    memory > xmessages
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xis_bound)) (((((unsupported)).apply ((xdata)) ("None: is there a None literal in the EO language?")).or (((unsupported)).apply ((xfiles)) ("None: is there a None literal in the EO language?")))))
                        (((unsupported)).apply (((xself).xprefix)) (((xprefix).or ((xself).xget_default_prefix))))
                        (((unsupported)).apply (((xself).xauto_id)) ((xauto_id)))
                        (((unsupported)).apply (((xself).xdata)) (((xdata).or (((unsupported)).apply))))
                        (((unsupported)).apply (((xself).xfiles)) (((xfiles).or (((unsupported)).apply))))
                        (((unsupported)).apply (((xself).xinitial)) ((xinitial)))
                        (((unsupported)).apply (((xself).xform_kwargs)) (((xform_kwargs).or (((unsupported)).apply))))
                        (((unsupported)).apply (((xself).xerror_class)) ((xerror_class)))
                        (((unsupported)).apply (((xself).x_errors)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xself).x_non_form_errors)) ("None: is there a None literal in the EO language?"))
                        xmessages.write (((unsupported)).apply)
                        (((unsupported)).apply ((xcls)) ((((xreversed)).apply (((((xtype)).apply ((xself))).x__mro__)))))
                          bogusForceDataize.write ((((xmessages).xupdate)).apply ((((xgetattr)).apply ((xcls)) ("default_error_messages") ((((unsupported)).apply)))))
                        (((unsupported)).apply ((xerror_messages)) ("None: is there a None literal in the EO language?")).if
                          bogusForceDataize.write ((((xmessages).xupdate)).apply ((xerror_messages)))
                        (((unsupported)).apply (((xself).xerror_messages)) ((xmessages)))
                x__iter__.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xiter)).apply (((xself).xforms)))))
                x__getitem__.write
                  [xself xindex]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xforms)) ((xindex)))))
                x__len__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xlen)).apply (((xself).xforms)))))
                x__bool__.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (TRUE))
                x__repr__.write
                  [xself]
                    memory > xis_valid
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_errors)) ("None: is there a None literal in the EO language?")).if
                          xis_valid.write "Unknown"
                          xis_valid.write ((((xself).xis_bound).and (((xself).x_non_form_errors).not)).and ((((xany)).apply ((((unsupported)).apply ((xform_errors)) ((xform_errors)) (((xself).x_errors))))).not))
                        (((unsupported)).apply (("<%s: bound=%s valid=%s total_forms=%s>".mod (((unsupported)).apply ((((xself).x__class__).x__qualname__)) (((xself).xis_bound)) ((xis_valid)) (((xself).xtotal_form_count))))))
                xmanagement_form.write
                  [xself]
                    memory > xform
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        ((xself).xis_bound).if
                          seq
                            xform.write (((unsupported)).apply ((xManagementForm)) (((xself).xdata)) (((xself).xauto_id)) (((xself).xprefix)) (((xself).xrenderer)))
                            unsupported
                          xform.write (((unsupported)).apply ((xManagementForm)) (((xself).xauto_id)) (((xself).xprefix)) ((((unsupported)).apply ((xTOTAL_FORM_COUNT)) (((xself).xtotal_form_count)) ((xINITIAL_FORM_COUNT)) (((xself).xinitial_form_count)) ((xMIN_NUM_FORM_COUNT)) (((xself).xmin_num)) ((xMAX_NUM_FORM_COUNT)) (((xself).xmax_num)))) (((xself).xrenderer)))
                        (((unsupported)).apply ((xform)))
                xtotal_form_count.write
                  [xself]
                    memory > xinitial_forms
                    memory > xtotal_forms
                    seq > @
                      seq
                        unsupported
                        ((xself).xis_bound).if
                          (((unsupported)).apply ((((xmin)).apply ((((unsupported)).apply ((((xself).xmanagement_form).xcleaned_data)) ((xTOTAL_FORM_COUNT)))) (((xself).xabsolute_max)))))
                          seq
                            xinitial_forms.write ((xself).xinitial_form_count)
                            xtotal_forms.write ((((xmax)).apply ((xinitial_forms)) (((xself).xmin_num))).add ((xself).xextra))
                            (((unsupported)).apply ((xinitial_forms)) (((xself).xmax_num)) (0)).if
                              xtotal_forms.write (xinitial_forms)
                              (((unsupported)).apply ((xtotal_forms)) (((xself).xmax_num)) (0)).if
                                xtotal_forms.write ((xself).xmax_num)
                        (((unsupported)).apply ((xtotal_forms)))
                xinitial_form_count.write
                  [xself]
                    memory > xinitial_forms
                    seq > @
                      seq
                        unsupported
                        ((xself).xis_bound).if
                          (((unsupported)).apply ((((unsupported)).apply ((((xself).xmanagement_form).xcleaned_data)) ((xINITIAL_FORM_COUNT)))))
                          xinitial_forms.write (((xself).xinitial).if (((xlen)).apply (((xself).xinitial))) 0)
                        (((unsupported)).apply ((xinitial_forms)))
                xforms.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply (((((xself).x_construct_form)).apply ((xi)) ((((unsupported)).apply (((((xself).xget_form_kwargs)).apply ((xi)))))))) ((xi)) ((((xrange)).apply (((xself).xtotal_form_count)))))))
                xget_form_kwargs.write
                  [xself xindex]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((xself).xform_kwargs).xcopy)))
                x_construct_form.write
                  [xself xi]
                    memory > xdefaults
                    memory > xform
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xdefaults.write (((unsupported)).apply ("auto_id") (((xself).xauto_id)) ("prefix") (((((xself).xadd_prefix)).apply ((xi)))) ("error_class") (((xself).xerror_class)) ("use_required_attribute") (FALSE) ("renderer") (((xself).xrenderer)))
                        ((xself).xis_bound).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xdefaults)) ("data"))) (((xself).xdata)))
                            (((unsupported)).apply ((((unsupported)).apply ((xdefaults)) ("files"))) (((xself).xfiles)))
                        (((xself).xinitial).and (((unsupported)).apply ("initial") ((xkwargs)))).if
                          (((unsupported)).apply ((xIndexError)))
                            (((unsupported)).apply ((((unsupported)).apply ((xdefaults)) ("initial"))) ((((unsupported)).apply (((xself).xinitial)) ((xi)))))
                        (((xi).geq ((xself).xinitial_form_count)).and ((xi).geq ((xself).xmin_num))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xdefaults)) ("empty_permitted"))) (TRUE))
                        bogusForceDataize.write ((((xdefaults).xupdate)).apply ((xkwargs)))
                        xform.write ((((xself).xform)).apply ((((unsupported)).apply ((xdefaults)))))
                        bogusForceDataize.write ((((xself).xadd_fields)).apply ((xform)) ((xi)))
                        (((unsupported)).apply ((xform)))
                xinitial_forms.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xforms)) ((((unsupported)).apply (((xself).xinitial_form_count)))))))
                xextra_forms.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xforms)) ((((unsupported)).apply (((xself).xinitial_form_count)))))))
                xempty_form.write
                  [xself]
                    memory > xform
                    seq > @
                      (((unsupported)).apply)
                        xform.write (((unsupported)).apply (((xself).xform)) (((xself).xauto_id)) (((((xself).xadd_prefix)).apply ("__prefix__"))) (TRUE) (FALSE) ((((unsupported)).apply (((((xself).xget_form_kwargs)).apply ("None: is there a None literal in the EO language?"))))) (((xself).xrenderer)))
                        bogusForceDataize.write ((((xself).xadd_fields)).apply ((xform)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((xform)))
                xcleaned_data.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((xself).xis_valid).not).if
                          (((unsupported)).apply ((((xAttributeError)).apply (("'%s' object has no attribute 'cleaned_data'".mod (((xself).x__class__).x__name__))))))
                        (((unsupported)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ((xform)) (((xself).xforms)))))
                xdeleted_forms.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        ((((xself).xis_valid).not).or (((xself).xcan_delete).not)).if
                          (((unsupported)).apply ((((unsupported)).apply)))
                        ((((xhasattr)).apply ((xself)) ("_deleted_form_indexes")).not).if
                          seq
                            (((unsupported)).apply (((xself).x_deleted_form_indexes)) ((((unsupported)).apply)))
                            (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xform)))) ((((xenumerate)).apply (((xself).xforms)))))
                              seq
                                (((xi).geq ((xself).xinitial_form_count)).and (((xform).xhas_changed).not)).if
                                  (((unsupported)).apply)
                                ((((xself).x_should_delete_form)).apply ((xform))).if
                                  bogusForceDataize.write (((((xself).x_deleted_form_indexes).xappend)).apply ((xi)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xforms)) ((xi)))) ((xi)) (((xself).x_deleted_form_indexes)))))
                xordered_forms.write
                  [xself]
                    memory > xcompare_ordering_key
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        ((((xself).xis_valid).not).or (((xself).xcan_order).not)).if
                          (((unsupported)).apply ((((xAttributeError)).apply (("'%s' object has no attribute 'ordered_forms'".mod (((xself).x__class__).x__name__))))))
                        ((((xhasattr)).apply ((xself)) ("_ordering")).not).if
                          seq
                            (((unsupported)).apply (((xself).x_ordering)) ((((unsupported)).apply)))
                            (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xform)))) ((((xenumerate)).apply (((xself).xforms)))))
                              seq
                                (((xi).geq ((xself).xinitial_form_count)).and (((xform).xhas_changed).not)).if
                                  (((unsupported)).apply)
                                (((xself).xcan_delete).and ((((xself).x_should_delete_form)).apply ((xform)))).if
                                  (((unsupported)).apply)
                                bogusForceDataize.write (((((xself).x_ordering).xappend)).apply ((((unsupported)).apply ((xi)) ((((unsupported)).apply (((xform).xcleaned_data)) ((xORDERING_FIELD_NAME)))))))
                            xcompare_ordering_key.write
                              [xk]
                                seq > @
                                  seq
                                    (((unsupported)).apply ((((unsupported)).apply ((xk)) (1))) ("None: is there a None literal in the EO language?")).if
                                      (((unsupported)).apply ((((unsupported)).apply (1) (0))))
                                    (((unsupported)).apply ((((unsupported)).apply (0) ((((unsupported)).apply ((xk)) (1))))))
                            (((unsupported)).apply ((((xself).x_ordering).xsort)) ((xcompare_ordering_key)))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xforms)) ((((unsupported)).apply ((xi)) (0))))) ((xi)) (((xself).x_ordering)))))
                xget_default_prefix.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ("form"))
                xget_deletion_widget.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xdeletion_widget)))
                xget_ordering_widget.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xordering_widget)))
                xnon_form_errors.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).x_non_form_errors)) ("None: is there a None literal in the EO language?")).if
                          unsupported
                        (((unsupported)).apply (((xself).x_non_form_errors)))
                xerrors.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((xself).x_errors)) ("None: is there a None literal in the EO language?")).if
                          unsupported
                        (((unsupported)).apply (((xself).x_errors)))
                xtotal_error_count.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xlen)).apply (((xself).xnon_form_errors))).add (((xsum)).apply ((((unsupported)).apply ((((xlen)).apply ((xform_errors)))) ((xform_errors)) (((xself).xerrors))))))))
                x_should_delete_form.write
                  [xself xform]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((((xform).xcleaned_data).xget)).apply ((xDELETION_FIELD_NAME)) (FALSE))))
                xis_valid.write
                  [xself]
                    memory > xforms_valid
                    seq > @
                      seq
                        unsupported
                        (((xself).xis_bound).not).if
                          (((unsupported)).apply (FALSE))
                        unsupported
                        xforms_valid.write (((xall)).apply ((((unsupported)).apply (((xform).xis_valid)) ((xform)) (((xself).xforms)) (((((xself).xcan_delete).and ((((xself).x_should_delete_form)).apply ((xform)))).not)))))
                        (((unsupported)).apply (((xforms_valid).and (((xself).xnon_form_errors).not))))
                xfull_clean.write
                  [xself]
                    memory > xempty_forms_count
                    memory > xform_errors
                    memory > xerror
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).x_errors)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xself).x_non_form_errors)) ((((unsupported)).apply (((xself).xerror_class)) ("nonform") (((xself).xrenderer)))))
                        xempty_forms_count.write 0
                        (((xself).xis_bound).not).if
                          (((unsupported)).apply)
                        ((((xself).xmanagement_form).xis_valid).not).if
                          seq
                            xerror.write (((unsupported)).apply ((xValidationError)) ((((unsupported)).apply (((xself).xerror_messages)) ("missing_management_form"))) ((((unsupported)).apply ("field_names") ((((", ".xjoin)).apply ((((unsupported)).apply ((((((xself).xmanagement_form).xadd_prefix)).apply ((xfield_name)))) ((xfield_name)) ((((xself).xmanagement_form).xerrors)))))))) ("missing_management_form"))
                            bogusForceDataize.write (((((xself).x_non_form_errors).xappend)).apply ((xerror)))
                        (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xform)))) ((((xenumerate)).apply (((xself).xforms)))))
                          seq
                            ((((xform).xhas_changed).not).and ((xi).geq ((xself).xinitial_form_count))).if
                              (((unsupported)).apply ((xempty_forms_count)) (1))
                            xform_errors.write ((xform).xerrors)
                            (((xself).xcan_delete).and ((((xself).x_should_delete_form)).apply ((xform)))).if
                              (((unsupported)).apply)
                            bogusForceDataize.write (((((xself).x_errors).xappend)).apply ((xform_errors)))
                        (((unsupported)).apply ((xValidationError)))
                          seq
                            ((((xself).xvalidate_max).and ((((xself).xtotal_form_count).sub (((xlen)).apply (((xself).xdeleted_forms)))).greater ((xself).xmax_num))).or ((((unsupported)).apply ((((xself).xmanagement_form).xcleaned_data)) ((xTOTAL_FORM_COUNT))).greater ((xself).xabsolute_max))).if
                              (((unsupported)).apply ((((unsupported)).apply ((xValidationError)) (((((xngettext)).apply ("Please submit at most %d form.") ("Please submit at most %d forms.") (((xself).xmax_num))).mod ((xself).xmax_num))) ("too_many_forms"))))
                            (((xself).xvalidate_min).and (((((xself).xtotal_form_count).sub (((xlen)).apply (((xself).xdeleted_forms)))).sub (xempty_forms_count)).less ((xself).xmin_num))).if
                              (((unsupported)).apply ((((unsupported)).apply ((xValidationError)) (((((xngettext)).apply ("Please submit at least %d form.") ("Please submit at least %d forms.") (((xself).xmin_num))).mod ((xself).xmin_num))) ("too_few_forms"))))
                            unsupported
                          (((unsupported)).apply (((xself).x_non_form_errors)) ((((unsupported)).apply (((xself).xerror_class)) (((xe).xerror_list)) ("nonform") (((xself).xrenderer)))))
                xclean.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                xhas_changed.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xany)).apply ((((unsupported)).apply (((xform).xhas_changed)) ((xform)) ((xself)))))))
                xadd_fields.write
                  [xself xform xindex]
                    memory > xinitial_form_count
                    seq > @
                      seq
                        unsupported
                        xinitial_form_count.write ((xself).xinitial_form_count)
                        ((xself).xcan_order).if
                          ((((unsupported)).apply ((xindex)) ("None: is there a None literal in the EO language?")).and ((xindex).less (xinitial_form_count))).if
                            (((unsupported)).apply ((((unsupported)).apply (((xform).xfields)) ((xORDERING_FIELD_NAME)))) ((((unsupported)).apply ((xIntegerField)) ((((x_)).apply ("Order"))) (((xindex).add 1)) (FALSE) (((xself).xget_ordering_widget)))))
                            (((unsupported)).apply ((((unsupported)).apply (((xform).xfields)) ((xORDERING_FIELD_NAME)))) ((((unsupported)).apply ((xIntegerField)) ((((x_)).apply ("Order"))) (FALSE) (((xself).xget_ordering_widget)))))
                        (((xself).xcan_delete).and (((xself).xcan_delete_extra).or ((xindex).less (xinitial_form_count)))).if
                          (((unsupported)).apply ((((unsupported)).apply (((xform).xfields)) ((xDELETION_FIELD_NAME)))) ((((unsupported)).apply ((xBooleanField)) ((((x_)).apply ("Delete"))) (FALSE) (((xself).xget_deletion_widget)))))
                xadd_prefix.write
                  [xself xindex]
                    seq > @
                      (((unsupported)).apply (("%s-%s".mod (((unsupported)).apply (((xself).xprefix)) ((xindex))))))
                xis_multipart.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((xself).xforms).if
                          (((unsupported)).apply (((((unsupported)).apply (((xself).xforms)) (0)).xis_multipart)))
                          (((unsupported)).apply ((((xself).xempty_form).xis_multipart)))
                xmedia.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        ((xself).xforms).if
                          (((unsupported)).apply (((((unsupported)).apply (((xself).xforms)) (0)).xmedia)))
                          (((unsupported)).apply ((((xself).xempty_form).xmedia)))
                xget_context.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ("formset") ((xself)))))
            xformset_factory.write
              [xform xformset xextra xcan_order xcan_delete xmax_num xvalidate_max xmin_num xvalidate_min xabsolute_max xcan_delete_extra xrenderer]
                memory > xattrs
                seq > @
                  (((unsupported)).apply)
                    unsupported
                    (((unsupported)).apply ((xmin_num)) ("None: is there a None literal in the EO language?")).if
                      xmin_num.write (xDEFAULT_MIN_NUM)
                    (((unsupported)).apply ((xmax_num)) ("None: is there a None literal in the EO language?")).if
                      xmax_num.write (xDEFAULT_MAX_NUM)
                    (((unsupported)).apply ((xabsolute_max)) ("None: is there a None literal in the EO language?")).if
                      xabsolute_max.write ((xmax_num).add (xDEFAULT_MAX_NUM))
                    ((xmax_num).greater (xabsolute_max)).if
                      (((unsupported)).apply ((((xValueError)).apply ("'absolute_max' must be greater or equal to 'max_num'."))))
                    xattrs.write (((unsupported)).apply ("form") ((xform)) ("extra") ((xextra)) ("can_order") ((xcan_order)) ("can_delete") ((xcan_delete)) ("can_delete_extra") ((xcan_delete_extra)) ("min_num") ((xmin_num)) ("max_num") ((xmax_num)) ("absolute_max") ((xabsolute_max)) ("validate_min") ((xvalidate_min)) ("validate_max") ((xvalidate_max)) ("renderer") (((xrenderer).or (xget_default_renderer))))
                    (((unsupported)).apply ((((xtype)).apply ((((xform).x__name__).add "FormSet")) ((((unsupported)).apply ((xformset)))) ((xattrs)))))
            xall_valid.write
              [xformsets]
                seq > @
                  seq
                    unsupported
                    (((unsupported)).apply ((((xall)).apply ((((unsupported)).apply (((xformset).xis_valid)) ((xformset)) ((xformsets)))))))