220c220
<                     (((unsupported)).apply (("%".add (xhex_repr))))
---
>                     (((unsupported)).apply (("%".sub (xhex_repr))))
425c425
<                       bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((((xurllib).xrequest).xurlopen)) (("./".add ((xself).xpathname))))
---
>                       bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((((xurllib).xrequest).xurlopen)) (("./".sub ((xself).xpathname))))
557c557
<                         bogusForceDataize.write ((((xself).xfakehttp)).apply ((("HTTP/".add (xver)).add " 200 OKrnrnHello!")))
---
>                         bogusForceDataize.write ((((xself).xfakehttp)).apply ((("HTTP/".sub (xver)).sub " 200 OKrnrnHello!")))
599c599
<                         (((unsupported)).apply ((xchar_no)) (((((xlist)).apply ((((xrange)).apply (0) (33)))).add (((unsupported)).apply (127)))))
---
>                         (((unsupported)).apply ((xchar_no)) (((((xlist)).apply ((((xrange)).apply (0) (33)))).sub (((unsupported)).apply (127)))))
625c625
<                         xschemeless_url.write (("//".add (xhost)).add ":8080/test/?test=a")
---
>                         xschemeless_url.write (("//".sub (xhost)).sub ":8080/test/?test=a")
646c646
<                         (((unsupported)).apply ((xchar_no)) (((((xlist)).apply ((((xrange)).apply (0) (33)))).add (((unsupported)).apply (127)))))
---
>                         (((unsupported)).apply ((xchar_no)) (((((xlist)).apply ((((xrange)).apply (0) (33)))).sub (((unsupported)).apply (127)))))
669c669
<                         xschemeless_url.write (("//".add (xhost)).add ":8080/test/?test=a")
---
>                         xschemeless_url.write (("//".sub (xhost)).sub ":8080/test/?test=a")
741c741
<                         xtmp_fileurl.write ("file://localhost/".add ((((xtmp_file).xreplace)).apply ((((xos).xpath).xsep)) ("/")))
---
>                         xtmp_fileurl.write ("file://localhost/".sub ((((xtmp_file).xreplace)).apply ((((xos).xpath).xsep)) ("/")))
983c983
<                                 (((unsupported)).apply ((((unsupported)).apply ((xcount_holder)) (0))) (((((unsupported)).apply ((xcount_holder)) (0)).add 1)))
---
>                                 (((unsupported)).apply ((((unsupported)).apply ((xcount_holder)) (0))) (((((unsupported)).apply ((xcount_holder)) (0)).sub 1)))
1140c1140
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((xresult)) ("+") (("using quote_plus(): %r != +".mod (xresult))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((xresult)) ("-") (("using quote_plus(): %r != -".mod (xresult))))
1145c1145
<                         xexpect.write ((((xgiven).xreplace)).apply (" ") ("+"))
---
>                         xexpect.write ((((xgiven).xreplace)).apply (" ") ("-"))
1152,1155c1152,1155
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha+beta gamma"))) ("alpha%2Bbeta+gamma"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha+beta gamma") ("+"))) ("alpha+beta+gamma"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha+beta gamma"))) ("alpha%2Bbeta+gamma"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha+beta gamma") ("+"))) ("alpha+beta+gamma"))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha-beta gamma"))) ("alpha%2Bbeta-gamma"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha-beta gamma") ("-"))) ("alpha-beta-gamma"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha-beta gamma"))) ("alpha%2Bbeta-gamma"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xurllib).xparse).xquote_plus)).apply ("alpha-beta gamma") ("-"))) ("alpha-beta-gamma"))
1209c1209
<                         xexpect.write "%A2%D8+%FF"
---
>                         xexpect.write "%A2%D8-%FF"
1213c1213
<                         xexpect.write "ab%3F%3F+cd"
---
>                         xexpect.write "ab%3F%3F-cd"
1310c1310
<                         xgiven.write "are+there+spaces..."
---
>                         xgiven.write "are-there-spaces..."
1314c1314
<                         xexpect.write ((((xgiven).xreplace)).apply ("+") (" "))
---
>                         xexpect.write ((((xgiven).xreplace)).apply ("-") (" "))
1403c1403
<                         xon_amp_right.write (((unsupported)).apply ((xresult)) (((xamp_location).add 1)))
---
>                         xon_amp_right.write (((unsupported)).apply ((xresult)) (((xamp_location).sub 1)))
1405c1405
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xresult)))) (((5.mul 3).add 2)) (("testing %s: unexpected number of characters: %s != %s".mod (((unsupported)).apply ((xtest_type)) ((((xlen)).apply ((xresult)))) (((5.mul 3).add 2))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xresult)))) (((5.mul 3).sub 2)) (("testing %s: unexpected number of characters: %s != %s".mod (((unsupported)).apply ((xtest_type)) ((((xlen)).apply ((xresult)))) (((5.mul 3).sub 2))))))
1426c1426
<                         xexpect.write "key+name=A+bunch+of+pluses"
---
>                         xexpect.write "key-name=A-bunch-of-pluses"
1598,1599c1598,1599
<                         xgiven.write "make+sure/using_unquote"
<                         xexpect.write (((((xos).xpath).xjoin)).apply ("make+sure") ("using_unquote"))
---
>                         xgiven.write "make-sure/using_unquote"
>                         xexpect.write (((((xos).xpath).xjoin)).apply ("make-sure") ("using_unquote"))
1659c1659
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xDummyURLopener)).apply).xopen)).apply ("spam://c:|windows%/:=&?~#+!$,;'@()*[]|/path/"))) ("//c:|windows%/:=&?~#+!$,;'@()*[]|/path/"))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xDummyURLopener)).apply).xopen)).apply ("spam://c:|windows%/:=&?~#-!$,;'@()*[]|/path/"))) ("//c:|windows%/:=&?~#-!$,;'@()*[]|/path/"))
1669c1669
<                             xfileurl.write ("file:".add (((((xurllib).xrequest).xpathname2url)).apply ((xtmpfile))))
---
>                             xfileurl.write ("file:".sub (((((xurllib).xrequest).xpathname2url)).apply ((xtmpfile))))