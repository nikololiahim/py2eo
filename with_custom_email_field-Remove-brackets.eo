memory > xCustomEmailFieldUserManager
memory > xBaseUserManager
memory > xAbstractBaseUser
memory > xmodels
[] > with_custom_email_field
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xobjects
        memory > xEMAIL_FIELD
        memory > xpassword
        memory > xUSERNAME_FIELD
        memory > xemail_address
        memory > xis_active
        memory > xcreate_user
        memory > xusername
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xBaseUserManager)))
              xcreate_user.write
                [xself xusername xpassword xemail]
                  memory > xuser
                  seq > @
                    seq
                      xuser.write (((unsupported)).apply (((xself).xmodel)) ((xusername)))
                      bogusForceDataize.write ((((xuser).xset_password)).apply ((xpassword)))
                      (((unsupported)).apply (((xuser).xemail_address)) ((xemail)))
                      (((unsupported)).apply (((xuser).xsave)) (((xself).x_db)))
                      (((unsupported)).apply ((xuser)))
            (((unsupported)).apply ((xAbstractBaseUser)))
              seq
                xusername.write (((unsupported)).apply (((xmodels).xCharField)) (255))
                xpassword.write (((unsupported)).apply (((xmodels).xCharField)) (255))
                xemail_address.write (((unsupported)).apply (((xmodels).xEmailField)) (TRUE))
                xis_active.write (((unsupported)).apply (((xmodels).xBooleanField)) (TRUE))
                xEMAIL_FIELD.write "email_address"
                xUSERNAME_FIELD.write "username"
                xobjects.write (xCustomEmailFieldUserManager)