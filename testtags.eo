memory > xNode
memory > xEchoNode
memory > xLibrary
[] > testtags
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xupper
        memory > xregister
        memory > xrender
        memory > x__init__
        memory > xecho
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            xregister.write (((xLibrary)).apply)
            (((unsupported)).apply ((xNode)))
              seq
                x__init__.write
                  [xself xcontents]
                    seq > @
                      (((unsupported)).apply (((xself).xcontents)) ((xcontents)))
                xrender.write
                  [xself xcontext]
                    seq > @
                      (((unsupported)).apply ((((" ".xjoin)).apply (((xself).xcontents)))))
            xecho.write
              [xparser xtoken]
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply ((((xEchoNode)).apply ((((unsupported)).apply ((((((xtoken).xcontents).xsplit)).apply)) ((((unsupported)).apply (1))))))))
            bogusForceDataize.write ((((xregister).xtag)).apply ("other_echo") ((xecho)))
            xupper.write
              [xvalue]
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply (((((xvalue).xupper)).apply)))