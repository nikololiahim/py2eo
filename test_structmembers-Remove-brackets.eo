memory > xnonint
memory > xdelattr
memory > xINT_MAX
memory > xLONG_MAX
memory > xCHAR_MIN
memory > xUCHAR_MAX
memory > xLLONG_MAX
memory > xsupport
memory > xSHRT_MIN
memory > x_test_structmembersType
memory > xLLONG_MIN
memory > xULONG_MAX
memory > xLONG_MIN
memory > xPY_SSIZE_T_MIN
memory > xUINT_MAX
memory > xSHRT_MAX
memory > xINT_MIN
memory > xULLONG_MAX
memory > xRuntimeWarning
memory > xUSHRT_MAX
memory > xhasattr
memory > xPY_SSIZE_T_MAX
memory > xsetattr
memory > xunittest
memory > xattr
memory > x__name__
memory > xTypeError
memory > xCHAR_MAX
[] > test_structmembers
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xts
        memory > xtest_longlong
        memory > xtest_py_ssize_t
        memory > xtest_inplace_string
        memory > xtest_bool
        memory > xtest_ubyte_max
        memory > xtest_byte_max
        memory > xtest_byte_min
        memory > xtest_int
        memory > xtest_byte
        memory > xtest_long
        memory > xtest_ushort_max
        memory > xtest_short_min
        memory > xtest_short_max
        memory > xtest_short
        memory > xtest_bad_assignments
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            bogusForceDataize.write ((((xsupport).ximport_module)).apply ("_testcapi"))
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            xts.write (((x_test_structmembersType)).apply (FALSE) (1) (2) (3) (4) (5) (6) (7) (8) (23) (9.99999) (10.1010101010) ("hi"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_bool.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xts).xT_BOOL)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_BOOL)) (TRUE))
                        (((unsupported)).apply (((xts).xT_BOOL)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_BOOL)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xsetattr)) ((xts)) ("T_BOOL") (1))
                xtest_byte.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xts).xT_BYTE)) ((xCHAR_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_BYTE)) ((xCHAR_MAX)))
                        (((unsupported)).apply (((xts).xT_BYTE)) ((xCHAR_MIN)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_BYTE)) ((xCHAR_MIN)))
                        (((unsupported)).apply (((xts).xT_UBYTE)) ((xUCHAR_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_UBYTE)) ((xUCHAR_MAX)))
                xtest_short.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xts).xT_SHORT)) ((xSHRT_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_SHORT)) ((xSHRT_MAX)))
                        (((unsupported)).apply (((xts).xT_SHORT)) ((xSHRT_MIN)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_SHORT)) ((xSHRT_MIN)))
                        (((unsupported)).apply (((xts).xT_USHORT)) ((xUSHRT_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_USHORT)) ((xUSHRT_MAX)))
                xtest_int.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xts).xT_INT)) ((xINT_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_INT)) ((xINT_MAX)))
                        (((unsupported)).apply (((xts).xT_INT)) ((xINT_MIN)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_INT)) ((xINT_MIN)))
                        (((unsupported)).apply (((xts).xT_UINT)) ((xUINT_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_UINT)) ((xUINT_MAX)))
                xtest_long.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xts).xT_LONG)) ((xLONG_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_LONG)) ((xLONG_MAX)))
                        (((unsupported)).apply (((xts).xT_LONG)) ((xLONG_MIN)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_LONG)) ((xLONG_MIN)))
                        (((unsupported)).apply (((xts).xT_ULONG)) ((xULONG_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_ULONG)) ((xULONG_MAX)))
                xtest_py_ssize_t.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xts).xT_PYSSIZET)) ((xPY_SSIZE_T_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_PYSSIZET)) ((xPY_SSIZE_T_MAX)))
                        (((unsupported)).apply (((xts).xT_PYSSIZET)) ((xPY_SSIZE_T_MIN)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_PYSSIZET)) ((xPY_SSIZE_T_MIN)))
                xtest_longlong.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xts).xT_LONGLONG)) ((xLLONG_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_LONGLONG)) ((xLLONG_MAX)))
                        (((unsupported)).apply (((xts).xT_LONGLONG)) ((xLLONG_MIN)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_LONGLONG)) ((xLLONG_MIN)))
                        (((unsupported)).apply (((xts).xT_ULONGLONG)) ((xULLONG_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_ULONGLONG)) ((xULLONG_MAX)))
                        (((unsupported)).apply (((xts).xT_LONGLONG)) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_LONGLONG)) (3))
                        (((unsupported)).apply (((xts).xT_ULONGLONG)) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_ULONGLONG)) (4))
                xtest_bad_assignments.write
                  [xself]
                    memory > xinteger_attributes
                    seq > @
                      seq
                        xinteger_attributes.write (((unsupported)).apply ("T_BOOL") ("T_BYTE") ("T_UBYTE") ("T_SHORT") ("T_USHORT") ("T_INT") ("T_UINT") ("T_LONG") ("T_ULONG") ("T_PYSSIZET"))
                        (((xhasattr)).apply ((xts)) ("T_LONGLONG")).if
                          bogusForceDataize.write ((((xinteger_attributes).xextend)).apply ((((unsupported)).apply ("T_LONGLONG") ("T_ULONGLONG"))))
                        (((unsupported)).apply ((xnonint)) ((((unsupported)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply)) ("full of eels") ((((unsupported)).apply)) ((((unsupported)).apply)))))
                          (((unsupported)).apply ((xattr)) ((xinteger_attributes)))
                            bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xsetattr)) ((xts)) ((xattr)) ((xnonint)))
                xtest_inplace_string.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xts).xT_STRING_INPLACE)) ("hi"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xsetattr)) ((xts)) ("T_STRING_INPLACE") ("s"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xdelattr)) ((xts)) ("T_STRING_INPLACE"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_byte_max.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xsupport).xcheck_warnings)).apply ((((unsupported)).apply ("") ((xRuntimeWarning)))))))
                        (((unsupported)).apply (((xts).xT_BYTE)) (((xCHAR_MAX).add 1)))
                xtest_byte_min.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xsupport).xcheck_warnings)).apply ((((unsupported)).apply ("") ((xRuntimeWarning)))))))
                        (((unsupported)).apply (((xts).xT_BYTE)) (((xCHAR_MIN).sub 1)))
                xtest_ubyte_max.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xsupport).xcheck_warnings)).apply ((((unsupported)).apply ("") ((xRuntimeWarning)))))))
                        (((unsupported)).apply (((xts).xT_UBYTE)) (((xUCHAR_MAX).add 1)))
                xtest_short_max.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xsupport).xcheck_warnings)).apply ((((unsupported)).apply ("") ((xRuntimeWarning)))))))
                        (((unsupported)).apply (((xts).xT_SHORT)) (((xSHRT_MAX).add 1)))
                xtest_short_min.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xsupport).xcheck_warnings)).apply ((((unsupported)).apply ("") ((xRuntimeWarning)))))))
                        (((unsupported)).apply (((xts).xT_SHORT)) (((xSHRT_MIN).sub 1)))
                xtest_ushort_max.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xsupport).xcheck_warnings)).apply ((((unsupported)).apply ("") ((xRuntimeWarning)))))))
                        (((unsupported)).apply (((xts).xT_USHORT)) (((xUSHRT_MAX).add 1)))
            ((x__name__).eq "__main__").if
              unsupported