memory > xRational
memory > xc2
memory > xIntegral
memory > xmath
memory > xdivmod
memory > xint
memory > xoperator
memory > xissubclass
memory > xunittest
memory > xc1
memory > xReal
memory > xcomplex
memory > xfloat
memory > xComplex
memory > xTypeError
memory > x__name__
[] > test_abstract_numbers
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_complex
        memory > xtest_int
        memory > xtest_float
        seq > @
          seq
            unsupported
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_int.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xissubclass)).apply ((xint)) ((xIntegral)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xissubclass)).apply ((xint)) ((xComplex)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (7) (((((xint)).apply (7)).xreal)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) (((((xint)).apply (7)).ximag)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (7) (((((((xint)).apply (7)).xconjugate)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((7.neg)) (((((((xint)).apply ((7.neg))).xconjugate)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (7) (((((xint)).apply (7)).xnumerator)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((((xint)).apply (7)).xdenominator)))
                xtest_float.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xissubclass)).apply ((xfloat)) ((xRational)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xissubclass)).apply ((xfloat)) ((xReal)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (7.3) (((((xfloat)).apply (7.3)).xreal)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) (((((xfloat)).apply (7.3)).ximag)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (7.3) (((((((xfloat)).apply (7.3)).xconjugate)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((7.3.neg)) (((((((xfloat)).apply ((7.3.neg))).xconjugate)).apply)))
                xtest_complex.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((xissubclass)).apply ((xcomplex)) ((xReal)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xissubclass)).apply ((xcomplex)) ((xComplex)))))
                        (((unsupported)).apply ((((unsupported)).apply ((xc1)) ((xc2)))) ((((unsupported)).apply ((((xcomplex)).apply (3) (2))) ((((xcomplex)).apply (4) (1))))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xmath).xtrunc)) ((xc1)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xoperator).xmod)) ((xc1)) ((xc2)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xdivmod)) ((xc1)) ((xc2)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xoperator).xfloordiv)) ((xc1)) ((xc2)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xfloat)) ((xc1)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((xc1)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)