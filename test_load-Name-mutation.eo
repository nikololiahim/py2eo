memory > xTemplateSyntaxError
memory > xSimpleTestCase
[] > test_load
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_load06
        memory > xtest_load05
        memory > xtest_load01
        memory > xtest_load07
        memory > xtest_load03
        memory > xtest_load02
        memory > xtest_load10
        memory > xtest_load08
        memory > xtest_load04
        memory > xtest_load09
        memory > xtest_load12
        memory > xlibraries2
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xlibraries2.write (((unsupported)).apply ("subpackage.echo") ("template_tests.templatetags.subpackage.echo") ("testtags") ("template_tests.templatetags.testtags"))
                xtest_load01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("load01"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("test test"))
                xtest_load02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("load02"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("test"))
                xtest_load03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("load03"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("this that theother"))
                xtest_load04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("load04"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("this that theother and another thing"))
                xtest_load05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("load05") ((((unsupported)).apply ("statement") ("not shouting"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("this that theother NOT SHOUTING"))
                xtest_load06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("load06"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("test"))
                xtest_load07.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "'bad_tag' is not a valid tag or filter in tag library 'testtags'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("load07"))
                xtest_load08.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "'echo' is not a registered tag library. Must be one of:nsubpackage.echontesttags"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("load08"))
                xtest_load09.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "'from' is not a registered tag library. Must be one of:nsubpackage.echontesttags"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("load09"))
                xtest_load10.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "'bad_library' is not a registered tag library. Must be one of:nsubpackage.echontesttags"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("load10"))
                xtest_load12.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "'subpackage.missing' is not a registered tag library. Must be one of:nsubpackage.echontesttags"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("load12"))