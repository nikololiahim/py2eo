memory > xSHA512
memory > xCharField
memory > xconnection
memory > xregister_lookup
memory > xTestCase
memory > xAuthor
[] > test_sha512
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsetUpTestData
        memory > xtest_transform
        memory > xtest_basic
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xAuthor).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xAuthor)) ("John Smith"))) ((((unsupported)).apply ((xAuthor)) ("Jordan Élena"))) ((((unsupported)).apply ((xAuthor)) ("皇帝"))) ((((unsupported)).apply ((xAuthor)) (""))) ((((unsupported)).apply ((xAuthor)) ("None: is there a None literal in the EO language?"))))))
                xtest_basic.write
                  [xself]
                    memory > xauthors
                    seq > @
                      seq
                        xauthors.write ((((((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xannotate)) ((((xSHA512)).apply ("alias")))).xvalues_list)) ("sha512_alias") (TRUE)).xorder_by)).apply ("pk"))
                        bogusForceDataize.write ((((xself).xassertSequenceEqual)).apply ((xauthors)) ((((unsupported)).apply ("ed014a19bb67a85f9c8b1d81e04a0e7101725be8627d79d02ca4f3bd803f33cf3b8fed53e80d2a12c0d0e426824d99d110f0919298a5055efff040a3fc091518") ("b09c449f3ba49a32ab44754982d4749ac938af293e4af2de28858858080a16112b719514b5e48cb6ce54687e843a4b3e69a04cdb2a9dc99c3b99bdee419fa7d0") ("b554d182e25fb487a3f2b4285bb8672f98956b5369138e681b467d1f079af116172d88798345a3a7666faf5f35a144c60812d3234dcd35f444624f2faee16857") ("cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e") (((((xconnection).xfeatures).xinterprets_empty_strings_as_nulls).if "cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e" "None: is there a None literal in the EO language?")))))
                xtest_transform.write
                  [xself]
                    memory > xauthors
                    seq > @
                      (((unsupported)).apply ((((xregister_lookup)).apply ((xCharField)) ((xSHA512)))))
                        seq
                          xauthors.write (((unsupported)).apply (((((unsupported)).apply ((((xAuthor).xobjects).xfilter)) ("ed014a19bb67a85f9c8b1d81e04a0e7101725be8627d79d02ca4f3bd803f33cf3b8fed53e80d2a12c0d0e426824d99d110f0919298a5055efff040a3fc091518")).xvalues_list)) ("alias") (TRUE))
                          bogusForceDataize.write ((((xself).xassertSequenceEqual)).apply ((xauthors)) ((((unsupported)).apply ("John Smith"))))