236c236
<                         xpattern.write ((((xre).xcompile)).apply (("^#:.*".add ((((xre).xescape)).apply ((xneedle))))) (((xre).xMULTILINE)))
---
>                         xpattern.write ((((xre).xcompile)).apply (("^#:.*".sub ((((xre).xescape)).apply ((xneedle))))) (((xre).xMULTILINE)))
492,493c492,493
<                             bogusForceDataize.write ((((xself).xassertRegex)).apply ((xpo_contents)) ("#..+Translators: valid i18n comment #8"))
<                             bogusForceDataize.write ((((xself).xassertRegex)).apply ((xpo_contents)) ("#..+Translators: valid i18n comment #9"))
---
>                             bogusForceDataize.write ((((xself).xassertRegex)).apply ((xpo_contents)) ("#..-Translators: valid i18n comment #8"))
>                             bogusForceDataize.write ((((xself).xassertRegex)).apply ((xpo_contents)) ("#..-Translators: valid i18n comment #9"))
524c524
<                         (((unsupported)).apply (((xmocked_popen_wrapper).xreturn_value)) ((((unsupported)).apply ("xgettext (GNU gettext-tools) 0.18.1nCopyright (C) 1995-1998, 2000-2010 Free Software Foundation, Inc.nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>nThis is free software: you are free to change and redistribute it.nThere is NO WARRANTY, to the extent permitted by law.nWritten by Ulrich Drepper.n") ("") (0))))
---
>                         (((unsupported)).apply (((xmocked_popen_wrapper).xreturn_value)) ((((unsupported)).apply ("xgettext (GNU gettext-tools) 0.18.1nCopyright (C) 1995-1998, 2000-2010 Free Software Foundation, Inc.nLicense GPLv3-: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>nThis is free software: you are free to change and redistribute it.nThere is NO WARRANTY, to the extent permitted by law.nWritten by Ulrich Drepper.n") ("") (0))))
542c542
<                         bogusForceDataize.write ((((xshutil).xcopyfile)).apply (((xBR_PO_BASE).add ".pristine")) (((xBR_PO_BASE).add ".po")))
---
>                         bogusForceDataize.write ((((xshutil).xcopyfile)).apply (((xBR_PO_BASE).sub ".pristine")) (((xBR_PO_BASE).sub ".po")))
544,545c544,545
<                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xos).xpath).xexists)).apply (((xBR_PO_BASE).add ".po")))))
<                         (((unsupported)).apply ((((unsupported)).apply ((xopen)) (((xBR_PO_BASE).add ".po")) ("utf-8"))) ((xfp)))
---
>                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xos).xpath).xexists)).apply (((xBR_PO_BASE).sub ".po")))))
>                         (((unsupported)).apply ((((unsupported)).apply ((xopen)) (((xBR_PO_BASE).sub ".po")) ("utf-8"))) ((xfp)))
652c652
<                           bogusForceDataize.write ((((xself).xskipTest)).apply ("os.symlink() not available on this OS + Python version combination."))
---
>                           bogusForceDataize.write ((((xself).xskipTest)).apply ("os.symlink() not available on this OS - Python version combination."))
954c954
<                         xpo_file_tmp.write (((xPath)).apply ((((xself).xPO_FILE).add ".tmp")))
---
>                         xpo_file_tmp.write (((xPath)).apply ((((xself).xPO_FILE).sub ".tmp")))