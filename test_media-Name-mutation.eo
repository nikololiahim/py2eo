memory > xMedia
memory > xstatic
memory > xexpected
memory > xMultiWidget
memory > xlists
memory > xstr
memory > xAnotherForm
memory > xMyWidget12
memory > xMyWidget9
memory > xRuntimeWarning
memory > xFoo
memory > xsuper
memory > xMyWidget8
memory > xhash
memory > xMultimediaWidget
memory > xSimpleTestCase
memory > xMyMultiWidget
memory > xContext
memory > xMyWidget7
memory > xAsset
memory > xFormWithMedia
memory > xMyWidget3
memory > xCharField
memory > xJS
memory > xrepr
memory > xMyWidget1
memory > xhasattr
memory > xCSS
memory > xproperty
memory > xMyWidget5
memory > xMyWidget11
memory > xoverride_settings
memory > xm
memory > xMyWidget4
memory > xForm
memory > xMyForm
memory > xMyWidget10
memory > xMyWidget6
memory > xTemplate
memory > xMyWidget
memory > xMyWidget2
memory > xSimpleJS
memory > xformat_html
memory > xTextInput
memory > xhtml_safe
[] > test_media
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_media_inheritance
        memory > x__str__
        memory > xtest_add_empty
        memory > xtest_multi_media
        memory > xabsolute_path
        memory > xtest_html_safe
        memory > xtest_construction
        memory > xtest_add_js_deduplication
        memory > xtest_merge_warning
        memory > xtest_media_property_parent_references
        memory > xtest_multi_widget
        memory > x__repr__
        memory > xtest_merge_js_three_way
        memory > x__eq__
        memory > xtest_media_deduplication
        memory > xtest_combine_media
        memory > xtest_form_media
        memory > xtest_simplest_class
        memory > xtest_media_inheritance_from_property
        memory > xtest_media_dsl
        memory > xtest_merge_js_three_way2
        memory > xtest_media_inheritance_extends
        memory > x__init__
        memory > x__hash__
        memory > xtest_merge
        memory > xtest_media_property
        memory > xtest_media_inheritance_single_type
        memory > xtest_add_css_deduplication
        memory > xtest_merge_css_three_way
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("http://media.example.com/static/"))))
              seq
                unsupported
                xtest_construction.write
                  [xself]
                    memory > xcss
                    memory > xm2
                    memory > xm3
                    memory > xw
                    memory > xjs
                    seq > @
                      seq
                        xm2.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))) ((((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xm)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xm)))) ("Media(css={'all': ['path/to/css1', '/path/to/css2']}, js=['/path/to/js1', 'http://media.other.com/path/to/js2', 'https://secure.other.com/path/to/js3'])"))
                        (((unsupported)).apply)
                          seq
                            xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                            xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        xm3.write (((xMedia)).apply ((xFoo)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xm3)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        (((unsupported)).apply ((xTextInput)))
                        xw.write (((xMyWidget)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw).xmedia)))) (""))
                xtest_media_dsl.write
                  [xself]
                    memory > xcss
                    memory > xw1
                    memory > xjs
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        xw1.write (((xMyWidget1)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw1).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((unsupported)).apply (((xw1).xmedia)) ("css"))))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((unsupported)).apply (((xw1).xmedia)) ("js"))))) ((((unsupported)).apply)))
                xtest_combine_media.write
                  [xself]
                    memory > xw2
                    memory > xjs
                    memory > xw1
                    memory > xcss
                    memory > xw4
                    memory > xw3
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css2") ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        xw1.write (((xMyWidget1)).apply)
                        xw2.write (((xMyWidget2)).apply)
                        xw3.write (((xMyWidget3)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((((xw1).xmedia).add ((xw2).xmedia)).add ((xw3).xmedia))))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"/path/to/js4\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw1).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css1") ("/path/to/css1"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js1"))
                        xw4.write (((xMyWidget4)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw4).xmedia)))) ((((unsupported)).apply)))
                xtest_media_deduplication.write
                  [xself]
                    memory > xmedia
                    seq > @
                      seq
                        xmedia.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css1") ("/path/to/css1"))))) ((((unsupported)).apply ("/path/to/js1") ("/path/to/js1"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xmedia)))) ((((unsupported)).apply)))
                xtest_media_property.write
                  [xself]
                    memory > xmedia
                    memory > xw4
                    memory > xw5
                    memory > x_media
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          seq
                            x_media.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("/some/path"))))) ((((unsupported)).apply ("/some/js"))))))
                            xmedia.write (((xproperty)).apply ((x_media)))
                        xw4.write (((xMyWidget4)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw4).xmedia)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xMyWidget4)))
                          seq
                            x_media.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((((xsuper)).apply).xmedia).add (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("/other/path"))))) ((((unsupported)).apply ("/other/js")))))))
                            xmedia.write (((xproperty)).apply ((x_media)))
                        xw5.write (((xMyWidget5)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw5).xmedia)))) ((((unsupported)).apply)))
                xtest_media_property_parent_references.write
                  [xself]
                    memory > xw6
                    memory > x_media
                    memory > xjs
                    memory > xcss
                    memory > xmedia
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xMyWidget1)))
                          seq
                            x_media.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((((xsuper)).apply).xmedia).add (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("/other/path"))))) ((((unsupported)).apply ("/other/js")))))))
                            xmedia.write (((xproperty)).apply ((x_media)))
                        xw6.write (((xMyWidget6)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw6).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/other/path\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"/other/js\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                xtest_media_inheritance.write
                  [xself]
                    memory > xcss
                    memory > xw7
                    memory > xw8
                    memory > xjs
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xMyWidget1)))
                        xw7.write (((xMyWidget7)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw7).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        (((unsupported)).apply ((xMyWidget1)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css3") ("path/to/css1"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        xw8.write (((xMyWidget8)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw8).xmedia)))) ((((unsupported)).apply)))
                xtest_media_inheritance_from_property.write
                  [xself]
                    memory > xw9
                    memory > xw10
                    memory > xjs
                    memory > xcss
                    memory > xmedia
                    memory > xextend
                    memory > x_media
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xTextInput)))
                          seq
                            x_media.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("/some/path"))))) ((((unsupported)).apply ("/some/js"))))))
                            xmedia.write (((xproperty)).apply ((x_media)))
                        (((unsupported)).apply ((xMyWidget4)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/other/path"))))
                              xjs.write (((unsupported)).apply ("/other/js"))
                        xw9.write (((xMyWidget9)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw9).xmedia)))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xMyWidget1)))
                          (((unsupported)).apply)
                            seq
                              xextend.write FALSE
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css3") ("path/to/css1"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        xw10.write (((xMyWidget10)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw10).xmedia)))) ((((unsupported)).apply)))
                xtest_media_inheritance_extends.write
                  [xself]
                    memory > xcss
                    memory > xextend
                    memory > xw11
                    memory > xjs
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xMyWidget1)))
                          (((unsupported)).apply)
                            seq
                              xextend.write TRUE
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css3") ("path/to/css1"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        xw11.write (((xMyWidget11)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw11).xmedia)))) ((((unsupported)).apply)))
                xtest_media_inheritance_single_type.write
                  [xself]
                    memory > xcss
                    memory > xextend
                    memory > xjs
                    memory > xw12
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xMyWidget1)))
                          (((unsupported)).apply)
                            seq
                              xextend.write (((unsupported)).apply ("css"))
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css3") ("path/to/css1"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        xw12.write (((xMyWidget12)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xw12).xmedia)))) ((((unsupported)).apply)))
                xtest_multi_media.write
                  [xself]
                    memory > xcss
                    memory > xmultimedia
                    memory > xjs
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("screen, print") ((((unsupported)).apply ("/file1") ("/file2"))) ("screen") ((((unsupported)).apply ("/file3"))) ("print") ((((unsupported)).apply ("/file4"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        xmultimedia.write (((xMultimediaWidget)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xmultimedia).xmedia)))) ((((unsupported)).apply)))
                xtest_multi_widget.write
                  [xself]
                    memory > xcss
                    memory > x__init__
                    memory > xjs
                    memory > xmymulti
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css2") ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        (((unsupported)).apply ((xMultiWidget)))
                          x__init__.write
                            [xself xattrs]
                              memory > xwidgets
                              seq > @
                                (((unsupported)).apply)
                                  xwidgets.write (((unsupported)).apply ((xMyWidget1)) ((xMyWidget2)) ((xMyWidget3)))
                                  bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xwidgets)) ((xattrs)))
                        xmymulti.write (((xMyMultiWidget)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xmymulti).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"/path/to/js4\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                xtest_form_media.write
                  [xself]
                    memory > xf3
                    memory > xfield2
                    memory > xfield3
                    memory > xf2
                    memory > xjs
                    memory > xcss
                    memory > xf1
                    memory > xfield1
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css2") ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("path/to/css1") ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("/path/to/js4"))
                        (((unsupported)).apply ((xForm)))
                          seq
                            xfield1.write (((unsupported)).apply ((xCharField)) (20) ((((xMyWidget1)).apply)))
                            xfield2.write (((unsupported)).apply ((xCharField)) (20) ((((xMyWidget2)).apply)))
                        xf1.write (((xMyForm)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xf1).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"/path/to/js4\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        (((unsupported)).apply ((xForm)))
                          xfield3.write (((unsupported)).apply ((xCharField)) (20) ((((xMyWidget3)).apply)))
                        xf2.write (((xAnotherForm)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((xf1).xmedia).add ((xf2).xmedia))))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"/path/to/js4\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        (((unsupported)).apply ((xForm)))
                          seq
                            xfield1.write (((unsupported)).apply ((xCharField)) (20) ((((xMyWidget1)).apply)))
                            xfield2.write (((unsupported)).apply ((xCharField)) (20) ((((xMyWidget2)).apply)))
                            (((unsupported)).apply)
                              seq
                                xjs.write (((unsupported)).apply ("/some/form/javascript"))
                                xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ("/some/form/css"))))
                        xf3.write (((xFormWithMedia)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply (((xf3).xmedia)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/some/form/css\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"/some/form/javascript\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"/path/to/js4\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xTemplate)).apply ("{{ form.media.js }}{{ form.media.css }}")).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("form") ((xf3)))))))) ("<script src=\"/path/to/js1\"></script>n<script src=\"/some/form/javascript\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"/path/to/js4\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script><link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/some/form/css\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">"))
                xtest_html_safe.write
                  [xself]
                    memory > xmedia
                    seq > @
                      seq
                        xmedia.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("/path/to/css"))))) ((((unsupported)).apply ("/path/to/js"))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xMedia)) ("__html__"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xmedia)))) (((((xmedia).x__html__)).apply)))
                xtest_merge.write
                  [xself]
                    memory > xtest_values
                    seq > @
                      seq
                        xtest_values.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (3) (4))))) ((((unsupported)).apply (1) (3) (2) (4))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (2) (3))))) ((((unsupported)).apply (1) (2) (3))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (2) (3))) ((((unsupported)).apply (1) (2))))) ((((unsupported)).apply (1) (2) (3))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (3))) ((((unsupported)).apply (2) (3))))) ((((unsupported)).apply (1) (2) (3))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (1) (3))))) ((((unsupported)).apply (1) (2) (3))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (3) (2))))) ((((unsupported)).apply (1) (3) (2))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (1) (2))))) ((((unsupported)).apply (1) (2))))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (1) (3))) ((((unsupported)).apply (2) (3))) ((((unsupported)).apply (5) (7))) ((((unsupported)).apply (5) (6))) ((((unsupported)).apply (6) (7) (9))) ((((unsupported)).apply (8) (9))))) ((((unsupported)).apply (1) (5) (8) (2) (6) (3) (7) (9))))) ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))))) ((((unsupported)).apply (1) (2))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xlists)) ((xexpected)))) ((xtest_values)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xlists)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xMedia).xmerge)).apply ((((unsupported)).apply ((xlists)))))) ((xexpected)))
                xtest_merge_warning.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "Detected duplicate Media files in an opposite order: [1, 2], [2, 1]"
                        (((unsupported)).apply (((((xself).xassertWarnsMessage)).apply ((xRuntimeWarning)) ((xmsg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xMedia).xmerge)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (2) (1))))) ((((unsupported)).apply (1) (2))))
                xtest_merge_js_three_way.write
                  [xself]
                    memory > xwidget1
                    memory > xwidget2
                    memory > xwidget3
                    memory > xmerged
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xwidget1.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("color-picker.js"))))
                        xwidget2.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("text-editor.js"))))
                        xwidget3.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("text-editor.js") ("text-editor-extras.js") ("color-picker.js"))))
                        xmerged.write (((xwidget1).add (xwidget2)).add (xwidget3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js)) ((((unsupported)).apply ("text-editor.js") ("text-editor-extras.js") ("color-picker.js"))))
                xtest_merge_js_three_way2.write
                  [xself]
                    memory > xwidget1
                    memory > xwidget2
                    memory > xwidget3
                    memory > xmerged
                    seq > @
                      seq
                        xwidget1.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("a") ("c") ("f") ("g") ("k"))))
                        xwidget2.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("a") ("b") ("f") ("h") ("k"))))
                        xwidget3.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("b") ("c") ("f") ("k"))))
                        xmerged.write (((xwidget1).add (xwidget2)).add (xwidget3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js)) ((((unsupported)).apply ("a") ("b") ("c") ("f") ("g") ("h") ("k"))))
                xtest_merge_css_three_way.write
                  [xself]
                    memory > xwidget3
                    memory > xwidget2
                    memory > xwidget1
                    memory > xwidget4
                    memory > xmerged
                    seq > @
                      seq
                        xwidget1.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("c.css"))) ("all") ((((unsupported)).apply ("d.css") ("e.css"))))))
                        xwidget2.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))))))
                        xwidget3.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css") ("b.css") ("c.css"))) ("all") ((((unsupported)).apply ("e.css"))))))
                        xwidget4.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ("d.css") ("e.css"))) ("screen") ((((unsupported)).apply ("c.css"))))))
                        xmerged.write ((xwidget1).add (xwidget2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("c.css") ("a.css"))) ("all") ((((unsupported)).apply ("d.css") ("e.css"))))))
                        xmerged.write ((xmerged).add (xwidget3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css") ("b.css") ("c.css"))) ("all") ((((unsupported)).apply ("d.css") ("e.css"))))))
                        xmerged.write ((xwidget1).add (xwidget4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("c.css"))) ("all") ((((unsupported)).apply ("d.css") ("e.css"))))))
                xtest_add_js_deduplication.write
                  [xself]
                    memory > xwidget3
                    memory > xwidget1
                    memory > xmerged
                    memory > xmsg
                    memory > xwidget2
                    seq > @
                      seq
                        xwidget1.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("a") ("b") ("c"))))
                        xwidget2.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("a") ("b"))))
                        xwidget3.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("a") ("c") ("b"))))
                        xmerged.write ((xwidget1).add (xwidget1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js_lists)) ((((unsupported)).apply ((((unsupported)).apply ("a") ("b") ("c"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js)) ((((unsupported)).apply ("a") ("b") ("c"))))
                        xmerged.write ((xwidget1).add (xwidget2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js_lists)) ((((unsupported)).apply ((((unsupported)).apply ("a") ("b") ("c"))) ((((unsupported)).apply ("a") ("b"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js)) ((((unsupported)).apply ("a") ("b") ("c"))))
                        xmerged.write ((xwidget1).add (xwidget3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js_lists)) ((((unsupported)).apply ((((unsupported)).apply ("a") ("b") ("c"))) ((((unsupported)).apply ("a") ("c") ("b"))))))
                        xmsg.write "Detected duplicate Media files in an opposite order: ['a', 'b', 'c'], ['a', 'c', 'b']"
                        (((unsupported)).apply (((((xself).xassertWarnsMessage)).apply ((xRuntimeWarning)) ((xmsg)))))
                          unsupported
                xtest_add_css_deduplication.write
                  [xself]
                    memory > xwidget3
                    memory > xwidget1
                    memory > xwidget4
                    memory > xmerged
                    memory > xmsg
                    memory > xwidget2
                    seq > @
                      seq
                        xwidget1.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("b.css"))))))
                        xwidget2.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("c.css"))))))
                        xwidget3.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("b.css") ("c.css"))))))
                        xwidget4.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("c.css") ("b.css"))))))
                        xmerged.write ((xwidget1).add (xwidget1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css_lists)) ((((unsupported)).apply ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("b.css"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("b.css"))))))
                        xmerged.write ((xwidget1).add (xwidget2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css_lists)) ((((unsupported)).apply ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("b.css"))))) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("c.css"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css") ("c.css"))) ("all") ((((unsupported)).apply ("b.css"))))))
                        xmerged.write ((xwidget3).add (xwidget4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css_lists)) ((((unsupported)).apply ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("b.css") ("c.css"))))) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))) ("all") ((((unsupported)).apply ("c.css") ("b.css"))))))))
                        xmsg.write "Detected duplicate Media files in an opposite order: ['b.css', 'c.css'], ['c.css', 'b.css']"
                        (((unsupported)).apply (((((xself).xassertWarnsMessage)).apply ((xRuntimeWarning)) ((xmsg)))))
                          unsupported
                xtest_add_empty.write
                  [xself]
                    memory > xmedia
                    memory > xmerged
                    memory > xempty_media
                    seq > @
                      seq
                        xmedia.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))))) ((((unsupported)).apply ("a"))))
                        xempty_media.write (((xMedia)).apply)
                        xmerged.write ((xmedia).add (xempty_media))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_css_lists)) ((((unsupported)).apply ((((unsupported)).apply ("screen") ((((unsupported)).apply ("a.css"))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xmerged).x_js_lists)) ((((unsupported)).apply ((((unsupported)).apply ("a"))))))
            (((unsupported)).apply ((xhtml_safe)))
              seq
                x__init__.write
                  [xself xpath]
                    seq > @
                      (((unsupported)).apply (((xself).xpath)) ((xpath)))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply ((((((xself).x__class__).eq ((xother).x__class__)).and (((xself).xpath).eq ((xother).xpath))).or ((((xother).x__class__).eq (xstr)).and (((xself).xpath).eq (xother))))))
                x__hash__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xhash)).apply (((xself).xpath)))))
                x__str__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xabsolute_path)).apply (((xself).xpath)))))
                xabsolute_path.write
                  [xself xpath]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((((xpath).xstartswith)).apply ((((unsupported)).apply ("http://") ("https://") ("/")))).if
                          (((unsupported)).apply ((xpath)))
                        (((unsupported)).apply ((((xstatic)).apply ((xpath)))))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ("{self.path!r}"))
            (((unsupported)).apply ((xAsset)))
              seq
                x__init__.write
                  [xself xpath xmedium]
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xpath)))
                        (((unsupported)).apply (((xself).xmedium)) ((xmedium)))
                x__str__.write
                  [xself]
                    memory > xpath
                    seq > @
                      seq
                        xpath.write ((((((xsuper)).apply).x__str__)).apply)
                        (((unsupported)).apply ((((xformat_html)).apply ("<link href=\"{}\" media=\"{}\" rel=\"stylesheet\">") (((((xself).xabsolute_path)).apply ((xpath)))) (((xself).xmedium)))))
            (((unsupported)).apply ((xAsset)))
              seq
                x__init__.write
                  [xself xpath xintegrity]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xpath)))
                        (((unsupported)).apply (((xself).xintegrity)) (((xintegrity).or "")))
                x__str__.write
                  [xself xintegrity]
                    memory > xtemplate
                    memory > xpath
                    seq > @
                      (((unsupported)).apply)
                        xpath.write ((((((xsuper)).apply).x__str__)).apply)
                        xtemplate.write (((xself).xintegrity).if ("<script src=\"{}\"%s></script>".mod " integrity=\"{}\"") "{}")
                        (((unsupported)).apply ((((xformat_html)).apply ((xtemplate)) (((((xself).xabsolute_path)).apply ((xpath)))) (((xself).xintegrity)))))
            (((unsupported)).apply ((xSimpleTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("http://media.example.com/static/"))))
              seq
                unsupported
                xtest_construction.write
                  [xself]
                    memory > xm
                    seq > @
                      seq
                        xm.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ((((xCSS)).apply ("path/to/css1") ("all"))) ((((xCSS)).apply ("/path/to/css2") ("all"))))))) ((((unsupported)).apply ((((xJS)).apply ("/path/to/js1"))) ((((xJS)).apply ("http://media.other.com/path/to/js2"))) ((((unsupported)).apply ((xJS)) ("https://secure.other.com/path/to/js3") ("9d947b87fdeb25030d56d01f7aa75800"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xm)))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\" integrity=\"9d947b87fdeb25030d56d01f7aa75800\"></script>"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xm)))) ("Media(css={'all': ['path/to/css1', '/path/to/css2']}, js=['/path/to/js1', 'http://media.other.com/path/to/js2', 'https://secure.other.com/path/to/js3'])"))
                xtest_simplest_class.write
                  [xself]
                    memory > x__str__
                    memory > xm
                    seq > @
                      seq
                        (((unsupported)).apply ((xhtml_safe)))
                          seq
                            unsupported
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ("<script src=\"https://example.org/asset.js\" rel=\"stylesheet\">"))
                        xm.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ((((xSimpleJS)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xm)))) ("<script src=\"https://example.org/asset.js\" rel=\"stylesheet\">"))
                xtest_combine_media.write
                  [xself]
                    memory > xcss
                    memory > xw2
                    memory > xw1
                    memory > xjs
                    seq > @
                      seq
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ((((xCSS)).apply ("path/to/css1") ("all"))) ("/path/to/css2"))))
                              xjs.write (((unsupported)).apply ("/path/to/js1") ("http://media.other.com/path/to/js2") ("https://secure.other.com/path/to/js3") ((((unsupported)).apply ((xJS)) ("/path/to/js4") ("9d947b87fdeb25030d56d01f7aa75800"))))
                        (((unsupported)).apply ((xTextInput)))
                          (((unsupported)).apply)
                            seq
                              xcss.write (((unsupported)).apply ("all") ((((unsupported)).apply ((((xCSS)).apply ("/path/to/css2") ("all"))) ("/path/to/css3"))))
                              xjs.write (((unsupported)).apply ((((xJS)).apply ("/path/to/js1"))) ("/path/to/js4"))
                        xw1.write (((xMyWidget1)).apply)
                        xw2.write (((xMyWidget2)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((((xw1).xmedia).add ((xw2).xmedia))))) ("<link href=\"http://media.example.com/static/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css2\" media=\"all\" rel=\"stylesheet\">n<link href=\"/path/to/css3\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>n<script src=\"http://media.other.com/path/to/js2\"></script>n<script src=\"https://secure.other.com/path/to/js3\"></script>n<script src=\"/path/to/js4\" integrity=\"9d947b87fdeb25030d56d01f7aa75800\"></script>"))
                xtest_media_deduplication.write
                  [xself]
                    memory > xmedia
                    seq > @
                      seq
                        xmedia.write (((unsupported)).apply ((xMedia)) ((((unsupported)).apply ("all") ((((unsupported)).apply ((((xCSS)).apply ("/path/to/css1") ("all"))) ((((xCSS)).apply ("/path/to/css1") ("all"))) ("/path/to/css1"))))) ((((unsupported)).apply ((((xJS)).apply ("/path/to/js1"))) ((((xJS)).apply ("/path/to/js1"))) ("/path/to/js1"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xmedia)))) ("<link href=\"/path/to/css1\" media=\"all\" rel=\"stylesheet\">n<script src=\"/path/to/js1\"></script>"))