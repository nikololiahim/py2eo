memory > xlist
memory > xBytesIO
memory > xstr
memory > xWSGIRequestHandler
memory > xUnclosableBytesIO
memory > xerr
memory > xlevel
memory > xConnectionResetError
memory > xException
memory > xstatus_code
memory > xRequestFactory
memory > xsorted
memory > xWSGIRequest
memory > xstatus_codes
memory > xkwargs
memory > xwrong_level
memory > xcm
memory > xk
memory > xStub
memory > xBrokenPipeError
memory > xWSGIServer
memory > xConnectionAbortedError
memory > xv
memory > xcaptured_stderr
memory > xexception
memory > xSimpleTestCase
[] > test_basehttp
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_broken_pipe_errors
        memory > xrequest_factory
        memory > xtest_https
        memory > x__init__
        memory > xsendall
        memory > xtest_log_message
        memory > xtest_strips_underscore_headers
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).x__dict__).xupdate)).apply ((xkwargs)))
                xsendall.write
                  [xself xdata]
                    seq > @
                      bogusForceDataize.write (((((((xself).xmakefile)).apply ("wb")).xwrite)).apply ((xdata)))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xrequest_factory.write (((xRequestFactory)).apply)
                xtest_log_message.write
                  [xself]
                    memory > xhandler
                    memory > xlevel_status_codes
                    memory > xrequest
                    seq > @
                      seq
                        xrequest.write (((xWSGIRequest)).apply (((((((xself).xrequest_factory).xget)).apply ("/")).xenviron)))
                        (((unsupported)).apply (((xrequest).xmakefile)) ((((unsupported)).apply ((((xBytesIO)).apply)))))
                        xhandler.write (((xWSGIRequestHandler)).apply ((xrequest)) ("192.168.0.2") ("None: is there a None literal in the EO language?"))
                        xlevel_status_codes.write (((unsupported)).apply ("info") ((((unsupported)).apply (200) (301) (304))) ("warning") ((((unsupported)).apply (400) (403) (404))) ("error") ((((unsupported)).apply (500) (503))))
                        (((unsupported)).apply ((((unsupported)).apply ((xlevel)) ((xstatus_codes)))) (((((xlevel_status_codes).xitems)).apply)))
                          (((unsupported)).apply ((xstatus_code)) ((xstatus_codes)))
                            seq
                              (((unsupported)).apply (((((xself).xassertLogs)).apply ("django.server") (((((xlevel).xupper)).apply)))) ((xcm)))
                                bogusForceDataize.write ((((xhandler).xlog_message)).apply ("GET %s %s") ("A") ((((xstr)).apply ((xstatus_code)))))
                              bogusForceDataize.write ((((xself).xassertIn)).apply (("GET A %d".mod (xstatus_code))) ((((unsupported)).apply (((xcm).xoutput)) (0))))
                              (((unsupported)).apply ((xwrong_level)) ((xlevel_status_codes)))
                                ((xwrong_level).neq (xlevel)).if
                                  seq
                                    (((unsupported)).apply (((((xself).xassertLogs)).apply ("django.server") ("INFO"))) ((xcm)))
                                      bogusForceDataize.write ((((xhandler).xlog_message)).apply ("GET %s %s") ("A") ((((xstr)).apply ((xstatus_code)))))
                                    bogusForceDataize.write ((((xself).xassertNotEqual)).apply (((((unsupported)).apply (((xcm).xrecords)) (0)).xlevelname)) (((((xwrong_level).xupper)).apply)))
                xtest_https.write
                  [xself]
                    memory > xhandler
                    memory > xrequest
                    seq > @
                      seq
                        xrequest.write (((xWSGIRequest)).apply (((((((xself).xrequest_factory).xget)).apply ("/")).xenviron)))
                        (((unsupported)).apply (((xrequest).xmakefile)) ((((unsupported)).apply ((((xBytesIO)).apply)))))
                        xhandler.write (((xWSGIRequestHandler)).apply ((xrequest)) ("192.168.0.2") ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertLogs)).apply ("django.server") ("ERROR"))) ((xcm)))
                          bogusForceDataize.write ((((xhandler).xlog_message)).apply ("GET %s %s") ("x16x03") ("4"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("You're accessing the development server over HTTPS, but it only supports HTTP.") (((((((unsupported)).apply (((xcm).xrecords)) (0)).xgetMessage)).apply)))
                xtest_strips_underscore_headers.write
                  [xself]
                    memory > xtest_app
                    memory > xrfile
                    memory > xrequest
                    memory > xclose
                    memory > xwfile
                    memory > xserver
                    memory > xmakefile
                    memory > xbody
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xtest_app.write
                          [xenviron xstart_response]
                            memory > xhttp_environ_items
                            seq > @
                              seq
                                unsupported
                                bogusForceDataize.write (((xstart_response)).apply ("200 OK") ((((unsupported)).apply)))
                                xhttp_environ_items.write (((xsorted)).apply ((((unsupported)).apply (("%s:%s".mod (((unsupported)).apply ((xk)) ((xv))))) ((((unsupported)).apply ((xk)) ((xv)))) (((((xenviron).xitems)).apply)) (((((xk).xstartswith)).apply ("HTTP_"))))))
                                (((unsupported)).apply (((((((",".xjoin)).apply ((xhttp_environ_items))).xencode)).apply)))
                        xrfile.write (((xBytesIO)).apply)
                        bogusForceDataize.write ((((xrfile).xwrite)).apply ("GET / HTTP/1.0rn"))
                        bogusForceDataize.write ((((xrfile).xwrite)).apply ("Some-Header: goodrn"))
                        bogusForceDataize.write ((((xrfile).xwrite)).apply ("Some_Header: badrn"))
                        bogusForceDataize.write ((((xrfile).xwrite)).apply ("Other_Header: badrn"))
                        bogusForceDataize.write ((((xrfile).xseek)).apply (0))
                        (((unsupported)).apply ((xBytesIO)))
                          xclose.write
                            [xself]
                              seq > @
                        xwfile.write (((xUnclosableBytesIO)).apply)
                        xmakefile.write
                          [xmode]
                            seq > @
                              (((unsupported)).apply)
                                ((xmode).eq "rb").if
                                  (((unsupported)).apply ((xrfile)))
                                  ((xmode).eq "wb").if
                                    (((unsupported)).apply ((xwfile)))
                        xrequest.write (((unsupported)).apply ((xStub)) ((xmakefile)))
                        xserver.write (((unsupported)).apply ((xStub)) ((((unsupported)).apply)) ((((unsupported)).apply ((xtest_app)))))
                        (((unsupported)).apply (((((xself).xassertLogs)).apply ("django.server") ("INFO"))))
                          bogusForceDataize.write (((xWSGIRequestHandler)).apply ((xrequest)) ("192.168.0.2") ((xserver)))
                        bogusForceDataize.write ((((xwfile).xseek)).apply (0))
                        xbody.write (((unsupported)).apply ((((xlist)).apply (((((xwfile).xreadlines)).apply)))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbody)) ("HTTP_SOME_HEADER:good"))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xrequest_factory.write (((xRequestFactory)).apply)
                xtest_broken_pipe_errors.write
                  [xself]
                    memory > xrequest
                    memory > xclient_address
                    memory > xmsg
                    memory > xserver
                    memory > xtests
                    seq > @
                      seq
                        unsupported
                        xrequest.write (((xWSGIRequest)).apply (((((((xself).xrequest_factory).xget)).apply ("/")).xenviron)))
                        xclient_address.write (((unsupported)).apply ("192.168.2.0") (8080))
                        xmsg.write "- Broken pipe from {client_address}"
                        xtests.write (((unsupported)).apply ((xBrokenPipeError)) ((xConnectionAbortedError)) ((xConnectionResetError)))
                        (((unsupported)).apply ((xexception)) ((xtests)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xexception)))))
                            (((unsupported)).apply)
                              seq
                                xserver.write (((xWSGIServer)).apply ((((unsupported)).apply ("localhost") (0))) ((xWSGIRequestHandler)))
                                (((unsupported)).apply ((xException)))
                                  (((unsupported)).apply ((((xexception)).apply)))
                                  seq
                                    (((unsupported)).apply ((((xcaptured_stderr)).apply)) ((xerr)))
                                      (((unsupported)).apply (((((xself).xassertLogs)).apply ("django.server") ("INFO"))) ((xcm)))
                                        bogusForceDataize.write ((((xserver).xhandle_error)).apply ((xrequest)) ((xclient_address)))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xerr).xgetvalue)).apply)) (""))
                                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply (((xcm).xrecords)) (0)).xgetMessage)).apply)) ((xmsg)))
                              bogusForceDataize.write ((((xserver).xserver_close)).apply)