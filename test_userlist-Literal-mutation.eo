memory > xlist
memory > xrange
memory > xT
memory > xtype
memory > xi
memory > xsuper
memory > xunittest
memory > xnext
memory > xj
memory > x__name__
memory > xlist_tests
memory > xstr
memory > xiter
memory > xUserList
[] > test_userlist
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_mixedcmp
        memory > xtest_getslice
        memory > xtest_slice_type
        memory > xtest_getitemoverwriteiter
        memory > xtest_mixedadd
        memory > xtest_radd_specials
        memory > xtest_iadd
        memory > xtype2test
        memory > xtest_userlist_copy
        memory > xtest_add_specials
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xlist_tests).xCommonTest)))
              seq
                xtype2test.write (xUserList)
                xtest_getslice.write
                  [xself]
                    memory > xl
                    memory > xu
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xtest_getslice)).apply)
                        xl.write (((unsupported)).apply (0) (1) (2) (3) (4))
                        xu.write ((((xself).xtype2test)).apply ((xl)))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply ((3.neg)) (6))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply ((xi)))))) ((((unsupported)).apply ((xl)) ((((unsupported)).apply ((xi)))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply ((xi)))))) ((((unsupported)).apply ((xl)) ((((unsupported)).apply ((xi)))))))
                            (((unsupported)).apply ((xj)) ((((xrange)).apply ((3.neg)) (6))))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply ((xi)) ((xj)))))) ((((unsupported)).apply ((xl)) ((((unsupported)).apply ((xi)) ((xj)))))))
                xtest_slice_type.write
                  [xself]
                    memory > xl
                    memory > xu
                    seq > @
                      seq
                        xl.write (((unsupported)).apply (0) (1) (2) (3) (4))
                        xu.write (((xUserList)).apply ((xl)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply)))) (((xu).x__class__)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu)) ((((unsupported)).apply)))) ((xu)))
                xtest_add_specials.write
                  [xself]
                    memory > xu2
                    memory > xu
                    seq > @
                      seq
                        xu.write (((xUserList)).apply ("spam"))
                        xu2.write ((xu).add "eggs")
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu2)) ((((xlist)).apply ("spameggs"))))
                xtest_radd_specials.write
                  [xself]
                    memory > xu2
                    memory > xu
                    seq > @
                      seq
                        xu.write (((xUserList)).apply ("eggs"))
                        xu2.write ("spam".add (xu))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu2)) ((((xlist)).apply ("spameggs"))))
                        xu2.write ((((xu).x__radd__)).apply ((((xUserList)).apply ("spam"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu2)) ((((xlist)).apply ("spameggs"))))
                xtest_iadd.write
                  [xself]
                    memory > xu
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xtest_iadd)).apply)
                        xu.write (((unsupported)).apply (0) (1))
                        (((unsupported)).apply ((xu)) ((((xUserList)).apply ((((unsupported)).apply (0) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) ((((unsupported)).apply (0) (1) (0) (1))))
                xtest_mixedcmp.write
                  [xself]
                    memory > xu
                    seq > @
                      seq
                        xu.write ((((xself).xtype2test)).apply ((((unsupported)).apply (0) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) ((((unsupported)).apply (0) (1))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xu)) ((((unsupported)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xu)) ((((unsupported)).apply (0) (2))))
                xtest_mixedadd.write
                  [xself]
                    memory > xu
                    seq > @
                      seq
                        xu.write ((((xself).xtype2test)).apply ((((unsupported)).apply (0) (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xu).add (((unsupported)).apply))) ((xu)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xu).add (((unsupported)).apply (2)))) ((((unsupported)).apply (0) (1) (2))))
                xtest_getitemoverwriteiter.write
                  [xself]
                    memory > x__getitem__
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xtype2test)))
                          x__getitem__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)).apply (((((xstr)).apply ((xkey))).add "!!!")))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xnext)).apply ((((xiter)).apply ((((xT)).apply ((((unsupported)).apply (1) (2))))))))) ("0!!!"))
                xtest_userlist_copy.write
                  [xself]
                    memory > xv
                    memory > xu
                    seq > @
                      seq
                        xu.write ((((xself).xtype2test)).apply ((((unsupported)).apply (6) (8) (1) (9) (1))))
                        xv.write ((((xu).xcopy)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) ((xv)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtype)).apply ((xu)))) ((((xtype)).apply ((xv)))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)