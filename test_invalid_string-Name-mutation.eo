memory > xSimpleTestCase
[] > test_invalid_string
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_invalidstr02
        memory > xtest_invalidstr06
        memory > xtest_invalidstr04_2
        memory > xtest_invalidstr03
        memory > xtest_invalidstr04
        memory > xtest_invalidstr01
        memory > xtest_invalidstr05
        memory > xtest_invalidstr07
        memory > xlibraries2
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xlibraries2.write (((unsupported)).apply ("i18n") ("django.templatetags.i18n"))
                xtest_invalidstr01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr01"))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Foo"))
                xtest_invalidstr02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr02"))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_invalidstr03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr03"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_invalidstr04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr04"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("No"))
                xtest_invalidstr04_2.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr04_2"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Yes"))
                xtest_invalidstr05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr05"))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_invalidstr06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr06"))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_invalidstr07.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("invalidstr07"))
                        (((xself).xengine).xstring_if_invalid).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("INVALID"))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))