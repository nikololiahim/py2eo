memory > xscript_helper
memory > xprint
memory > xunittest
memory > x__name__
memory > xsupport
memory > xsys
memory > xsubprocess
memory > xos
[] > test_eintr
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_all
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)) (((((xunittest).xskipUnless)).apply ((((xos).xname).eq "posix")) ("only supported on Unix"))))
              xtest_all.write
                [xself]
                  memory > xproc
                  memory > xargs
                  memory > xtester
                  seq > @
                    (((unsupported)).apply)
                      xtester.write (((unsupported)).apply (((xsupport).xfindfile)) ("eintr_tester.py") ("eintrdata"))
                      xargs.write (((unsupported)).apply ("-u") ((xtester)) ("-v"))
                      ((xsupport).xverbose).if
                        seq
                          bogusForceDataize.write (((xprint)).apply)
                          (((unsupported)).apply ((xprint)) ("--- run eintr_tester.py ---") (TRUE))
                          xargs.write (((unsupported)).apply (((xsys).xexecutable)) ("-E") ("-X") ("faulthandler") ((((unsupported)).apply ((xargs)))))
                          xproc.write ((((xsubprocess).xrun)).apply ((xargs)))
                          (((unsupported)).apply ((xprint)) ("--- eintr_tester.py completed: exit code {proc.returncode} ---") (TRUE))
                          ((xproc).xreturncode).if
                            bogusForceDataize.write ((((xself).xfail)).apply ("eintr_tester.py failed"))
                        bogusForceDataize.write ((((xscript_helper).xassert_python_ok)).apply ("-u") ((xtester)) ("-v"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)