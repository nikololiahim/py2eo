memory > xmember
memory > xsort_name
memory > xarg_str
memory > xarg_int
memory > xpstats
memory > xSortKey
memory > xsupport
memory > xStringIO
memory > xunittest
memory > xTypeError
memory > x__name__
[] > test_pstats
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_sort_stats_int
        memory > xtest_sort_stats_enum
        memory > xtest_sort_stats_string
        memory > xtest_add
        memory > xsetUp
        memory > xtest_sort_starts_mix
        memory > xtest_sort_stats_partial
        memory > xtest_combine_results
        memory > xtest_SortKey_enum
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                unsupported
                xtest_combine_results.write
                  [xself]
                    memory > xtarget
                    memory > xnew_callers
                    memory > xsource
                    seq > @
                      seq
                        xtarget.write (((unsupported)).apply ("a") ((((unsupported)).apply (1) (2) (3) (4))))
                        xsource.write (((unsupported)).apply ("a") ((((unsupported)).apply (1) (2) (3) (4))) ("b") ((((unsupported)).apply (5) (6) (7) (8))))
                        xnew_callers.write ((((xpstats).xadd_callers)).apply ((xtarget)) ((xsource)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xnew_callers)) ((((unsupported)).apply ("a") ((((unsupported)).apply (2) (4) (6) (8))) ("b") ((((unsupported)).apply (5) (6) (7) (8))))))
                        xtarget.write (((unsupported)).apply ("a") (1))
                        xsource.write (((unsupported)).apply ("a") (1) ("b") (5))
                        xnew_callers.write ((((xpstats).xadd_callers)).apply ((xtarget)) ((xsource)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xnew_callers)) ((((unsupported)).apply ("a") (2) ("b") (5))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    memory > xstats_file
                    seq > @
                      seq
                        xstats_file.write ((((xsupport).xfindfile)).apply ("pstats.pck"))
                        (((unsupported)).apply (((xself).xstats)) (((((xpstats).xStats)).apply ((xstats_file)))))
                xtest_add.write
                  [xself]
                    memory > xstats
                    memory > xstream
                    seq > @
                      seq
                        xstream.write (((xStringIO)).apply)
                        xstats.write (((unsupported)).apply (((xpstats).xStats)) ((xstream)))
                        bogusForceDataize.write ((((xstats).xadd)).apply (((xself).xstats)) (((xself).xstats)))
                xtest_sort_stats_int.write
                  [xself]
                    memory > xvalid_args
                    seq > @
                      seq
                        xvalid_args.write (((unsupported)).apply ((1.neg)) ("stdname") (0) ("calls") (1) ("time") (2) ("cumulative"))
                        (((unsupported)).apply ((((unsupported)).apply ((xarg_int)) ((xarg_str)))) (((((xvalid_args).xitems)).apply)))
                          seq
                            bogusForceDataize.write (((((xself).xstats).xsort_stats)).apply ((xarg_int)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xself).xstats).xsort_type)) ((((unsupported)).apply ((((unsupported)).apply ((((xself).xstats).xsort_arg_dict_default)) ((xarg_str)))) ((1.neg)))))
                xtest_sort_stats_string.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xsort_name)) ((((unsupported)).apply ("calls") ("ncalls") ("cumtime") ("cumulative") ("filename") ("line") ("module") ("name") ("nfl") ("pcalls") ("stdname") ("time") ("tottime"))))
                        seq
                          bogusForceDataize.write (((((xself).xstats).xsort_stats)).apply ((xsort_name)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xself).xstats).xsort_type)) ((((unsupported)).apply ((((unsupported)).apply ((((xself).xstats).xsort_arg_dict_default)) ((xsort_name)))) ((1.neg)))))
                xtest_sort_stats_partial.write
                  [xself]
                    memory > xsortkey
                    seq > @
                      seq
                        xsortkey.write "filename"
                        (((unsupported)).apply ((xsort_name)) ((((unsupported)).apply ("f") ("fi") ("fil") ("file") ("filen") ("filena") ("filenam") ("filename"))))
                          seq
                            bogusForceDataize.write (((((xself).xstats).xsort_stats)).apply ((xsort_name)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xself).xstats).xsort_type)) ((((unsupported)).apply ((((unsupported)).apply ((((xself).xstats).xsort_arg_dict_default)) ((xsortkey)))) ((1.neg)))))
                xtest_sort_stats_enum.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xmember)) ((xSortKey)))
                        seq
                          bogusForceDataize.write (((((xself).xstats).xsort_stats)).apply ((xmember)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xself).xstats).xsort_type)) ((((unsupported)).apply ((((unsupported)).apply ((((xself).xstats).xsort_arg_dict_default)) (((xmember).xvalue)))) ((1.neg)))))
                xtest_sort_starts_mix.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((xself).xstats).xsort_stats)) ("calls") (((xSortKey).xTIME)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((xself).xstats).xsort_stats)) (((xSortKey).xTIME)) ("calls"))
                xtest_SortKey_enum.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xSortKey).xFILENAME)) ("filename"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply (((xSortKey).xFILENAME)) (((xSortKey).xCALLS)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)