memory > xdict2
memory > xlist
memory > xsafe
memory > xsimple
memory > xrange
memory > xs
memory > xk
memory > xtypes
memory > xtuple2
memory > xValueError
memory > xfrozenset3
memory > xfrozenset
memory > xstr
memory > xio
memory > xlist3
memory > xUnorderable
memory > xtest
memory > xcollections
memory > xset2
memory > xeval
memory > xbytearray
memory > xmax
memory > xlist2
memory > xtuple3
memory > xrandom
memory > xunreadable
memory > xDottedPrettyPrinter
memory > xtype
memory > xw
memory > xset
memory > xrepr
memory > xint
memory > xwidth
memory > xi
memory > xbytes
memory > xtuple
memory > xsorted
memory > xicky
memory > xitertools
memory > xset3
memory > xOrderable
memory > xid
memory > xzip
memory > xunittest
memory > xdict3
memory > xhash
memory > xmap
memory > xisinstance
memory > xfrozenset2
memory > xlen
memory > xdict
memory > xTypeError
memory > xpprint
memory > x__name__
[] > test_pprint
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_nested_indentations
        memory > xtest_init
        memory > xtest_knotted
        memory > xtest_set_of_sets_reprs
        memory > xtest_sorted_dict
        memory > xtest_sort_orderable_and_unorderable_values
        memory > xtest_width
        memory > x__init__
        memory > xtest_compact_width
        memory > xtest_ordered_dict
        memory > xtest_default_dict
        memory > xtest_same_as_repr
        memory > x__repr__
        memory > x__eq__
        memory > xtest_chainmap
        memory > xtest_compact
        memory > xtest_user_list
        memory > xtest_subclassing
        memory > xtest_unreadable
        memory > xtest_deque
        memory > xtest_sort_dict
        memory > xtest_bytes_wrap
        memory > xtest_sort_unorderable_values
        memory > xtest_str_wrap
        memory > xtest_counter
        memory > xsetUp
        memory > x__le__
        memory > x__lt__
        memory > x__ne__
        memory > xtest_set_reprs
        memory > xtest_basic_line_wrap
        memory > xtest_mapping_proxy
        memory > x__gt__
        memory > xtest_basic
        memory > x__hash__
        memory > xformat
        memory > xtest_user_dict
        memory > xtest_user_string
        memory > xtest_depth
        memory > xtest_bytearray_wrap
        memory > x__ge__
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xlist)))
            (((unsupported)).apply ((xlist)))
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (((((xlist).x__repr__)).apply ((xself)))))
            (((unsupported)).apply ((xtuple)))
            (((unsupported)).apply ((xtuple)))
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (((((xtuple).x__repr__)).apply ((xself)))))
            (((unsupported)).apply ((xset)))
            (((unsupported)).apply ((xset)))
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (((((xset).x__repr__)).apply ((xself)))))
            (((unsupported)).apply ((xfrozenset)))
            (((unsupported)).apply ((xfrozenset)))
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (((((xfrozenset).x__repr__)).apply ((xself)))))
            (((unsupported)).apply ((xdict)))
            (((unsupported)).apply ((xdict)))
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (((((xdict).x__repr__)).apply ((xself)))))
            (((unsupported)).apply)
              x__repr__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((((xstr)).apply ((((xid)).apply ((xself)))))))
            (((unsupported)).apply)
              seq
                x__init__.write
                  [xself xhash]
                    seq > @
                      (((unsupported)).apply (((xself).x_hash)) ((xhash)))
                x__lt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (FALSE))
                x__gt__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((xself).neq (xother))))
                x__le__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((xself).eq (xother))))
                x__ge__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (TRUE))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xother)))))
                x__ne__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xother)))))
                x__hash__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).x_hash)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xa)) ((((xlist)).apply ((((xrange)).apply (100))))))
                        (((unsupported)).apply (((xself).xb)) ((((xlist)).apply ((((xrange)).apply (200))))))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xa)) ((12.neg)))) (((xself).xb)))
                xtest_init.write
                  [xself]
                    memory > xpp
                    seq > @
                      seq
                        xpp.write ((((xpprint).xPrettyPrinter)).apply)
                        xpp.write (((unsupported)).apply (((xpprint).xPrettyPrinter)) (4) (40) (5) (((((xio).xStringIO)).apply)) (TRUE))
                        xpp.write ((((xpprint).xPrettyPrinter)).apply (4) (40) (5) (((((xio).xStringIO)).apply)))
                        xpp.write (((unsupported)).apply (((xpprint).xPrettyPrinter)) (FALSE))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          xpp.write ((((xpprint).xPrettyPrinter)).apply (4) (40) (5) (((((xio).xStringIO)).apply)) (TRUE))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xValueError)) (((xpprint).xPrettyPrinter)) ((1.neg)))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xValueError)) (((xpprint).xPrettyPrinter)) (0))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xValueError)) (((xpprint).xPrettyPrinter)) ((1.neg)))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xValueError)) (((xpprint).xPrettyPrinter)) (0))
                xtest_basic.write
                  [xself]
                    memory > xpp
                    seq > @
                      seq
                        xpp.write ((((xpprint).xPrettyPrinter)).apply)
                        (((unsupported)).apply ((xsafe)) ((((unsupported)).apply (2) (2.0) ((((unsupported)).apply)) ("abc") ((((unsupported)).apply (3))) ((((unsupported)).apply (2) (2))) ((((unsupported)).apply (3) (3))) ("def") ((((xbytearray)).apply ("ghi"))) (TRUE) (FALSE) ("None: is there a None literal in the EO language?") ((((unsupported)).apply)) (((xself).xa)) (((xself).xb)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpprint).xisreadable)).apply ((xsafe)))) (("expected isreadable for %r".mod (((unsupported)).apply ((xsafe))))))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpp).xisreadable)).apply ((xsafe)))) (("expected isreadable for %r".mod (((unsupported)).apply ((xsafe))))))
                xtest_knotted.write
                  [xself]
                    memory > xpp
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xb)) (67))) (((xself).xa)))
                        (((unsupported)).apply (((xself).xd)) ((((unsupported)).apply)))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xd)) (0))) ((((unsupported)).apply (((xself).xd)) (1))) ((((unsupported)).apply (((xself).xd)) (2))) (((xself).xd)))
                        xpp.write ((((xpprint).xPrettyPrinter)).apply)
                        (((unsupported)).apply ((xicky)) ((((unsupported)).apply (((xself).xa)) (((xself).xb)) (((xself).xd)) ((((unsupported)).apply (((xself).xd)) (((xself).xd)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpprint).xisrecursive)).apply ((xicky)))) ("expected isrecursive"))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisreadable)).apply ((xicky)))) ("expected not isreadable"))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpp).xisrecursive)).apply ((xicky)))) ("expected isrecursive"))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisreadable)).apply ((xicky)))) ("expected not isreadable"))
                        bogusForceDataize.write (((((xself).xd).xclear)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xa)) ((((unsupported)).apply)))))))))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xb)) ((((unsupported)).apply)))))))))
                        (((unsupported)).apply ((xsafe)) ((((unsupported)).apply (((xself).xa)) (((xself).xb)) (((xself).xd)) ((((unsupported)).apply (((xself).xd)) (((xself).xd)))))))
                          seq
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpprint).xisreadable)).apply ((xsafe)))) (("expected isreadable for %r".mod (((unsupported)).apply ((xsafe))))))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xpp).xisreadable)).apply ((xsafe)))) (("expected isreadable for %r".mod (((unsupported)).apply ((xsafe))))))
                xtest_unreadable.write
                  [xself]
                    memory > xpp
                    seq > @
                      seq
                        xpp.write ((((xpprint).xPrettyPrinter)).apply)
                        (((unsupported)).apply ((xunreadable)) ((((unsupported)).apply ((((xtype)).apply (3))) ((xpprint)) (((xpprint).xisrecursive)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisrecursive)).apply ((xunreadable)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xunreadable))))))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisreadable)).apply ((xunreadable)))) (("expected not isreadable for %r".mod (((unsupported)).apply ((xunreadable))))))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisrecursive)).apply ((xunreadable)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xunreadable))))))
                            bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisreadable)).apply ((xunreadable)))) (("expected not isreadable for %r".mod (((unsupported)).apply ((xunreadable))))))
                xtest_same_as_repr.write
                  [xself]
                    memory > xnative
                    seq > @
                      (((unsupported)).apply ((xsimple)) ((((unsupported)).apply (0) (0) ((0.add (((unsupported)).apply))) (0.0) ("") ("") ((((xbytearray)).apply)) ((((unsupported)).apply)) ((((xtuple2)).apply)) ((((xtuple3)).apply)) ((((unsupported)).apply)) ((((xlist2)).apply)) ((((xlist3)).apply)) ((((xset)).apply)) ((((xset2)).apply)) ((((xset3)).apply)) ((((xfrozenset)).apply)) ((((xfrozenset2)).apply)) ((((xfrozenset3)).apply)) ((((unsupported)).apply)) ((((xdict2)).apply)) ((((xdict3)).apply)) (((xself).xassertTrue)) ((xpprint)) ((6.neg)) ((6.neg)) (((6.neg).sub (((unsupported)).apply))) ((1.5.neg)) ("x") ("x") ((((xbytearray)).apply ("x"))) ((((unsupported)).apply (3))) ((((unsupported)).apply (3))) ((((unsupported)).apply (3) (6))) ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (3) (4))) ((((unsupported)).apply (5) (6))) ((((xtuple2)).apply ((((unsupported)).apply (1) (2))))) ((((xtuple3)).apply ((((unsupported)).apply (1) (2))))) ((((xtuple3)).apply ((((xrange)).apply (100))))) ((((unsupported)).apply (3) (4))) ((((xlist2)).apply ((((unsupported)).apply (3) (4))))) ((((xlist3)).apply ((((unsupported)).apply (3) (4))))) ((((xlist3)).apply ((((xrange)).apply (100))))) ((((xset)).apply ((((unsupported)).apply (7))))) ((((xset2)).apply ((((unsupported)).apply (7))))) ((((xset3)).apply ((((unsupported)).apply (7))))) ((((xfrozenset)).apply ((((unsupported)).apply (8))))) ((((xfrozenset2)).apply ((((unsupported)).apply (8))))) ((((xfrozenset3)).apply ((((unsupported)).apply (8))))) ((((xdict2)).apply ((((unsupported)).apply (5) (6))))) ((((xdict3)).apply ((((unsupported)).apply (5) (6))))) ((((xrange)).apply (10) ((11.neg)) ((1.neg)))) (TRUE) (FALSE) ("None: is there a None literal in the EO language?") ((((unsupported)).apply)))))
                        seq
                          xnative.write (((xrepr)).apply ((xsimple)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xsimple)))) ((xnative)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply (((xpprint).xpformat)) ((xsimple)) (1) (0)).xreplace)).apply ("n") (" "))) ((xnative)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xsaferepr)).apply ((xsimple)))) ((xnative)))
                xtest_basic_line_wrap.write
                  [xself]
                    memory > xexp
                    memory > xo
                    seq > @
                      seq
                        xo.write (((unsupported)).apply ("RPM_cal") (0) ("RPM_cal2") (48059) ("Speed_cal") (0) ("controldesk_runtime_us") (0) ("main_code_runtime_us") (0) ("read_io_runtime_us") (0) ("write_io_runtime_us") (43690))
                        xexp.write (((unsupported)).apply)
                        (((unsupported)).apply ((xtype)) ((((unsupported)).apply ((xdict)) ((xdict2)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xtype)).apply ((xo)))))) ((xexp)))
                        xo.write (((xrange)).apply (100))
                        xexp.write ("[%s]".mod (((",n ".xjoin)).apply ((((xmap)).apply ((xstr)) ((xo))))))
                        (((unsupported)).apply ((xtype)) ((((unsupported)).apply ((xlist)) ((xlist2)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xtype)).apply ((xo)))))) ((xexp)))
                        xo.write (((xtuple)).apply ((((xrange)).apply (100))))
                        xexp.write ("(%s)".mod (((",n ".xjoin)).apply ((((xmap)).apply ((xstr)) ((xo))))))
                        (((unsupported)).apply ((xtype)) ((((unsupported)).apply ((xtuple)) ((xtuple2)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xtype)).apply ((xo)))))) ((xexp)))
                        xo.write (((xrange)).apply (100))
                        xexp.write ("[   %s]".mod (((",n    ".xjoin)).apply ((((xmap)).apply ((xstr)) ((xo))))))
                        (((unsupported)).apply ((xtype)) ((((unsupported)).apply ((xlist)) ((xlist2)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xtype)).apply ((xo)))) (4))) ((xexp)))
                xtest_nested_indentations.write
                  [xself]
                    memory > xexpected
                    memory > xo
                    memory > xo2
                    memory > xo1
                    seq > @
                      seq
                        xo1.write (((xlist)).apply ((((xrange)).apply (10))))
                        xo2.write (((unsupported)).apply ((xdict)) (1) (2) (3))
                        xo.write (((unsupported)).apply ((xo1)) ((xo2)))
                        xexpected.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (4) (42))) ((xexpected)))
                        xexpected.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (4) (41))) ((xexpected)))
                xtest_width.write
                  [xself]
                    memory > xexpected
                    memory > xo
                    seq > @
                      seq
                        xexpected.write (((unsupported)).apply)
                        xo.write (((xeval)).apply ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (15))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (16))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (25))) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (14))) ((((unsupported)).apply)))
                xtest_sorted_dict.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write (((unsupported)).apply ("a") (1) ("b") (1) ("c") (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ("{'a': 1, 'b': 1, 'c': 1}"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((unsupported)).apply ((xd)) ((xd)))))) ("[{'a': 1, 'b': 1, 'c': 1}, {'a': 1, 'b': 1, 'c': 1}]"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((unsupported)).apply ("xytabn") ((((unsupported)).apply (3))) (5) ((((unsupported)).apply ((((unsupported)).apply)))) ((((unsupported)).apply)) ((((unsupported)).apply)))))) ("{5: [[]], 'xytabn': (3,), (): {}}"))
                xtest_sort_dict.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xdict).xfromkeys)).apply ("cba"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (FALSE))) ("{'c': None, 'b': None, 'a': None}"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((xd)) ((xd)))) (FALSE))) ("[{'c': None, 'b': None, 'a': None}, {'c': None, 'b': None, 'a': None}]"))
                xtest_ordered_dict.write
                  [xself]
                    memory > xd
                    memory > xwords
                    seq > @
                      seq
                        xd.write ((((xcollections).xOrderedDict)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("OrderedDict()"))
                        xd.write ((((xcollections).xOrderedDict)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("OrderedDict()"))
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xd.write ((((xcollections).xOrderedDict)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                xtest_mapping_proxy.write
                  [xself]
                    memory > xd
                    memory > xwords
                    memory > xm
                    seq > @
                      seq
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xd.write (((xdict)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        xm.write ((((xtypes).xMappingProxyType)).apply ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xm)))) ((((unsupported)).apply)))
                        xd.write ((((xcollections).xOrderedDict)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        xm.write ((((xtypes).xMappingProxyType)).apply ((xd)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xm)))) ((((unsupported)).apply)))
                xtest_subclassing.write
                  [xself]
                    memory > xexp
                    memory > xo
                    seq > @
                      seq
                        xo.write (((unsupported)).apply ("names with spaces") ("should be presented using repr()") ("others.should.not.be") ("like.this"))
                        xexp.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xDottedPrettyPrinter)).apply).xpformat)).apply ((xo)))) ((xexp)))
                xtest_set_reprs.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xset)).apply)))) ("set()"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xset)).apply ((((xrange)).apply (3))))))) ("{0, 1, 2}"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xset)).apply ((((xrange)).apply (7))))) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xset2)).apply ((((xrange)).apply (7))))) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xset3)).apply ((((xrange)).apply (7))))) (20))) ("set3({0, 1, 2, 3, 4, 5, 6})"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xfrozenset)).apply)))) ("frozenset()"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((xfrozenset)).apply ((((xrange)).apply (3))))))) ("frozenset({0, 1, 2})"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xfrozenset)).apply ((((xrange)).apply (7))))) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xfrozenset2)).apply ((((xrange)).apply (7))))) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xfrozenset3)).apply ((((xrange)).apply (7))))) (20))) ("frozenset3({0, 1, 2, 3, 4, 5, 6})"))
                xtest_set_of_sets_reprs.write
                  [xself]
                    memory > xcube_repr_tgt
                    memory > xcube
                    memory > xcubo
                    memory > xcubo_repr_tgt
                    seq > @
                      (((unsupported)).apply)
                        xcube_repr_tgt.write (((unsupported)).apply)
                        xcube.write (((((xtest).xtest_set).xcube)).apply (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xcube)))) ((xcube_repr_tgt)))
                        xcubo_repr_tgt.write (((unsupported)).apply)
                        xcubo.write (((((xtest).xtest_set).xlinegraph)).apply ((xcube)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xcubo)))) ((xcubo_repr_tgt)))
                xtest_depth.write
                  [xself]
                    memory > xnested_dict
                    memory > xlv1_list
                    memory > xlv1_tuple
                    memory > xnested_list
                    memory > xnested_tuple
                    memory > xlv1_dict
                    seq > @
                      seq
                        xnested_tuple.write (((unsupported)).apply (1) ((((unsupported)).apply (2) ((((unsupported)).apply (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) (6))))))))))
                        xnested_dict.write (((unsupported)).apply (1) ((((unsupported)).apply (2) ((((unsupported)).apply (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) ((((unsupported)).apply (6) (6))))))))))))
                        xnested_list.write (((unsupported)).apply (1) ((((unsupported)).apply (2) ((((unsupported)).apply (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) ((((unsupported)).apply (6) ((((unsupported)).apply)))))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xnested_tuple)))) ((((xrepr)).apply ((xnested_tuple)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xnested_dict)))) ((((xrepr)).apply ((xnested_dict)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xnested_list)))) ((((xrepr)).apply ((xnested_list)))))
                        xlv1_tuple.write "(1, (...))"
                        xlv1_dict.write "{1: {...}}"
                        xlv1_list.write "[1, [...]]"
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xnested_tuple)) (1))) ((xlv1_tuple)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xnested_dict)) (1))) ((xlv1_dict)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xnested_list)) (1))) ((xlv1_list)))
                xtest_sort_unorderable_values.write
                  [xself]
                    memory > xskeys
                    memory > xclean
                    memory > xkeys
                    memory > xn
                    seq > @
                      seq
                        xn.write 20
                        xkeys.write (((unsupported)).apply ((((xUnorderable)).apply)) ((xi)) ((((xrange)).apply ((xn)))))
                        bogusForceDataize.write ((((xrandom).xshuffle)).apply ((xkeys)))
                        xskeys.write (((unsupported)).apply ((xsorted)) ((xkeys)) ((xid)))
                        xclean.write (((unsupported)).apply ((((((((xs).xreplace)).apply (" ") ("")).xreplace)).apply ("n") (""))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xclean)).apply (((((xpprint).xpformat)).apply ((((xset)).apply ((xkeys)))))))) ((("{".add (((",".xjoin)).apply ((((xmap)).apply ((xrepr)) ((xskeys)))))).add "}")))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xclean)).apply (((((xpprint).xpformat)).apply ((((xfrozenset)).apply ((xkeys)))))))) ((("frozenset({".add (((",".xjoin)).apply ((((xmap)).apply ((xrepr)) ((xskeys)))))).add "})")))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xclean)).apply (((((xpprint).xpformat)).apply (((((xdict).xfromkeys)).apply ((xkeys)))))))) ((("{".add (((",".xjoin)).apply ((((unsupported)).apply (("%r:None".mod (xk))) ((xk)) ((xskeys)))))).add "}")))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((((unsupported)).apply ((xUnorderable)) (0) (1) (0))))) ((("{1: 0, ".add (((xrepr)).apply ((xUnorderable)))).add ": 0}")))
                        xkeys.write (((unsupported)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply (((((xdict).xfromkeys)).apply ((xkeys)) (0))))) (("{%r: 0, %r: 0}".mod (((xtuple)).apply ((((unsupported)).apply ((xsorted)) ((xkeys)) ((xid))))))))
                xtest_sort_orderable_and_unorderable_values.write
                  [xself]
                    memory > xb
                    memory > xa
                    seq > @
                      seq
                        xa.write (((xUnorderable)).apply)
                        xb.write (((xOrderable)).apply ((((xhash)).apply ((xa)))))
                        bogusForceDataize.write ((((xself).xassertLess)).apply ((xa)) ((xb)))
                        bogusForceDataize.write ((((xself).xassertLess)).apply ((((xstr)).apply ((((xtype)).apply ((xb)))))) ((((xstr)).apply ((((xtype)).apply ((xa)))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply ((((unsupported)).apply ((xb)) ((xa)))))) ((((unsupported)).apply ((xa)) ((xb)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply ((((unsupported)).apply ((xa)) ((xb)))))) ((((unsupported)).apply ((xa)) ((xb)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xset)).apply ((((unsupported)).apply ((xb)) ((xa)))))) (1))) (("{%r,n %r}".mod (((unsupported)).apply ((xa)) ((xb))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xset)).apply ((((unsupported)).apply ((xa)) ((xb)))))) (1))) (("{%r,n %r}".mod (((unsupported)).apply ((xa)) ((xb))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) (((((xdict).xfromkeys)).apply ((((unsupported)).apply ((xb)) ((xa)))))) (1))) (("{%r: None,n %r: None}".mod (((unsupported)).apply ((xa)) ((xb))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) (((((xdict).xfromkeys)).apply ((((unsupported)).apply ((xa)) ((xb)))))) (1))) (("{%r: None,n %r: None}".mod (((unsupported)).apply ((xa)) ((xb))))))
                xtest_str_wrap.write
                  [xself]
                    memory > xfox
                    memory > xformatted
                    memory > xunwrappable
                    memory > xspecial
                    seq > @
                      seq
                        xfox.write "the quick brown fox jumped over a lazy dog"
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xfox)) (19))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ("a") (1) ("b") ((xfox)) ("c") (2))) (25))) ((((unsupported)).apply)))
                        xspecial.write "Portons dix bons \"whiskys\"nà l'avocat goujatt qui fumait au zoo"
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (68))) ((((xrepr)).apply ((xspecial)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (31))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xspecial)))))))))))) (35))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xspecial)))))))))))) (25))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xspecial)))))))))))) (23))) ((((unsupported)).apply)))
                        xunwrappable.write ("x".mul 100)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xunwrappable)) (80))) ((((xrepr)).apply ((xunwrappable)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply (""))) ("''"))
                        (((unsupported)).apply ((xspecial)) (10))
                        (((unsupported)).apply ((xwidth)) ((((xrange)).apply (3) (40))))
                          seq
                            xformatted.write (((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) ((xwidth)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xformatted)))) ((xspecial)))
                            xformatted.write (((unsupported)).apply (((xpprint).xpformat)) (((((unsupported)).apply ((xspecial))).mul 2)) ((xwidth)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xformatted)))) (((((unsupported)).apply ((xspecial))).mul 2)))
                xtest_compact.write
                  [xself]
                    memory > xexpected
                    memory > xo
                    seq > @
                      seq
                        xo.write ((((unsupported)).apply ((((xlist)).apply ((((xrange)).apply (((xi).mul (xi))))))) ((xi)) ((((xrange)).apply (5)))).add (((unsupported)).apply ((((xlist)).apply ((((xrange)).apply ((xi)))))) ((xi)) ((((xrange)).apply (6)))))
                        xexpected.write (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xo)) (47) (TRUE))) ((xexpected)))
                xtest_compact_width.write
                  [xself]
                    memory > xlines
                    memory > xnumber
                    memory > xo
                    memory > xmaxwidth
                    memory > xlevels
                    seq > @
                      seq
                        xlevels.write 20
                        xnumber.write 10
                        xo.write ((((unsupported)).apply (0)).mul (xnumber))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (((xlevels).sub 1)))))
                          xo.write (((unsupported)).apply ((xo)))
                        (((unsupported)).apply ((xw)) ((((xrange)).apply ((((xlevels).mul 2).add 1)) ((((xlevels).add (3.mul (xnumber))).sub 1)))))
                          seq
                            xlines.write ((((((unsupported)).apply (((xpprint).xpformat)) ((xo)) ((xw)) (TRUE)).xsplitlines)).apply)
                            xmaxwidth.write (((xmax)).apply ((((xmap)).apply ((xlen)) ((xlines)))))
                            bogusForceDataize.write ((((xself).xassertLessEqual)).apply ((xmaxwidth)) ((xw)))
                            bogusForceDataize.write ((((xself).xassertGreater)).apply ((xmaxwidth)) (((xw).sub 3)))
                xtest_bytes_wrap.write
                  [xself]
                    memory > xletters
                    memory > xformatted
                    memory > xspecial
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ("") (1))) ("b''"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ("abcd") (1))) ("b'abcd'"))
                        xletters.write "abcdefghijklmnopqrstuvwxyz"
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (29))) ((((xrepr)).apply ((xletters)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (19))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (18))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (16))) ((((unsupported)).apply)))
                        xspecial.write (((xbytes)).apply ((((xrange)).apply (16))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (61))) ((((xrepr)).apply ((xspecial)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (48))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (32))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (1))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ("a") (1) ("b") ((xletters)) ("c") (2))) (21))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ("a") (1) ("b") ((xletters)) ("c") (2))) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xletters)))))))))))))) (25))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xspecial)))))))))))))) (41))) ((((unsupported)).apply)))
                        (((unsupported)).apply ((xwidth)) ((((xrange)).apply (1) (64))))
                          seq
                            xformatted.write (((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) ((xwidth)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xformatted)))) ((xspecial)))
                            xformatted.write (((unsupported)).apply (((xpprint).xpformat)) (((((unsupported)).apply ((xspecial))).mul 2)) ((xwidth)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply ((xformatted)))) (((((unsupported)).apply ((xspecial))).mul 2)))
                xtest_bytearray_wrap.write
                  [xself]
                    memory > xletters
                    memory > xspecial
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((xbytearray)).apply)) (1))) ("bytearray(b'')"))
                        xletters.write (((xbytearray)).apply ("abcdefghijklmnopqrstuvwxyz"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (40))) ((((xrepr)).apply ((xletters)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (28))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (27))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xletters)) (25))) ((((unsupported)).apply)))
                        xspecial.write (((xbytearray)).apply ((((xrange)).apply (16))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (72))) ((((xrepr)).apply ((xspecial)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (57))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (41))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xspecial)) (1))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ("a") (1) ("b") ((xletters)) ("c") (2))) (31))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xletters)))))))))))) (37))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xspecial)))))))))))) (50))) ((((unsupported)).apply)))
                xtest_default_dict.write
                  [xself]
                    memory > xd
                    memory > xwords
                    seq > @
                      seq
                        xd.write ((((xcollections).xdefaultdict)).apply ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("defaultdict(<class 'int'>, {})"))
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xd.write ((((xcollections).xdefaultdict)).apply ((xint)) ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                xtest_counter.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xcollections).xCounter)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("Counter()"))
                        xd.write ((((xcollections).xCounter)).apply ("senselessness"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (40))) ((((unsupported)).apply)))
                xtest_chainmap.write
                  [xself]
                    memory > xd
                    memory > xwords
                    memory > xitems
                    seq > @
                      seq
                        xd.write ((((xcollections).xChainMap)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("ChainMap({})"))
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xitems.write (((xlist)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        xd.write ((((xcollections).xChainMap)).apply ((((xdict)).apply ((xitems)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                        xd.write ((((xcollections).xChainMap)).apply ((((xdict)).apply ((xitems)))) (((((xcollections).xOrderedDict)).apply ((xitems)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                xtest_deque.write
                  [xself]
                    memory > xd
                    memory > xwords
                    seq > @
                      seq
                        xd.write ((((xcollections).xdeque)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("deque([])"))
                        xd.write (((unsupported)).apply (((xcollections).xdeque)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("deque([], maxlen=7)"))
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xd.write ((((xcollections).xdeque)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                        xd.write (((unsupported)).apply (((xcollections).xdeque)) ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                xtest_user_dict.write
                  [xself]
                    memory > xd
                    memory > xwords
                    seq > @
                      seq
                        xd.write ((((xcollections).xUserDict)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("{}"))
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xd.write ((((xcollections).xUserDict)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                xtest_user_list.write
                  [xself]
                    memory > xd
                    memory > xwords
                    seq > @
                      seq
                        xd.write ((((xcollections).xUserList)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("[]"))
                        xwords.write ((("the quick brown fox jumped over a lazy dog".xsplit)).apply)
                        xd.write ((((xcollections).xUserList)).apply ((((xzip)).apply ((xwords)) (((((xitertools).xcount)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xpprint).xpformat)).apply ((xd)))) ((((unsupported)).apply)))
                xtest_user_string.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        xd.write ((((xcollections).xUserString)).apply (""))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (1))) ("''"))
                        xd.write ((((xcollections).xUserString)).apply ("the quick brown fox jumped over a lazy dog"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply (1) ((xd)))) (20))) ((((unsupported)).apply)))
            (((unsupported)).apply (((xpprint).xPrettyPrinter)))
              xformat.write
                [xself xobject xcontext xmaxlevels xlevel]
                  seq > @
                    (((xisinstance)).apply ((xobject)) ((xstr))).if
                      (((unsupported)).apply (" ") ((xobject))).if
                        (((unsupported)).apply ((((unsupported)).apply ((((xrepr)).apply ((xobject)))) (1) (0))))
                        (((unsupported)).apply ((((unsupported)).apply ((xobject)) (0) (0))))
                      (((unsupported)).apply ((((((xpprint).xPrettyPrinter).xformat)).apply ((xself)) ((xobject)) ((xcontext)) ((xmaxlevels)) ((xlevel)))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)