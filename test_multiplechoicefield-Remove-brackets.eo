memory > xValidationError
memory > xMultipleChoiceField
memory > xSimpleTestCase
[] > test_multiplechoicefield
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_multiplechoicefield_1
        memory > xtest_multiplechoicefield_2
        memory > xtest_multiplechoicefield_3
        memory > xtest_multiplechoicefield_changed
        memory > xtest_disabled_has_changed
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_multiplechoicefield_1.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply ("1") ("One"))) ((((unsupported)).apply ("2") ("Two"))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply (""))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1"))) (((((xf).xclean)).apply ((((unsupported)).apply (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("2"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1") ("2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("2"))) (((((xf).xclean)).apply ((((unsupported)).apply (1) ("2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("2"))) (((((xf).xclean)).apply ((((unsupported)).apply (1) ("2"))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a list of values.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("hello"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply)))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply)
                        xmsg.write "'Select a valid choice. 3 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("3"))))
                xtest_multiplechoicefield_2.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply ("1") ("One"))) ((((unsupported)).apply ("2") ("Two"))))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply)) (((((xf).xclean)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply)) (((((xf).xclean)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1"))) (((((xf).xclean)).apply ((((unsupported)).apply (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("2"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1") ("2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("2"))) (((((xf).xclean)).apply ((((unsupported)).apply (1) ("2"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("2"))) (((((xf).xclean)).apply ((((unsupported)).apply (1) ("2"))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a list of values.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply)) (((((xf).xclean)).apply ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply)) (((((xf).xclean)).apply)))
                        xmsg.write "'Select a valid choice. 3 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("3"))))
                xtest_multiplechoicefield_3.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply ("Numbers") ((((unsupported)).apply ((((unsupported)).apply ("1") ("One"))) ((((unsupported)).apply ("2") ("Two"))))))) ((((unsupported)).apply ("Letters") ((((unsupported)).apply ((((unsupported)).apply ("3") ("A"))) ((((unsupported)).apply ("4") ("B"))))))) ((((unsupported)).apply ("5") ("Other"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1"))) (((((xf).xclean)).apply ((((unsupported)).apply (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("5"))) (((((xf).xclean)).apply ((((unsupported)).apply (1) (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("5"))) (((((xf).xclean)).apply ((((unsupported)).apply (1) ("5"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("5"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1") (5))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ("1") ("5"))) (((((xf).xclean)).apply ((((unsupported)).apply ("1") ("5"))))))
                        xmsg.write "'Select a valid choice. 6 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("6"))))
                        xmsg.write "'Select a valid choice. 6 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("1") ("6"))))
                xtest_multiplechoicefield_changed.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply ("1") ("One"))) ((((unsupported)).apply ("2") ("Two"))) ((((unsupported)).apply ("3") ("Three"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xf).xhas_changed)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("1"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply ("1") ("2"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply (2) (1))) ((((unsupported)).apply ("1") ("2"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply ("1"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply ("1") ("3"))))))
                xtest_disabled_has_changed.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply ("1") ("One"))) ((((unsupported)).apply ("2") ("Two"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xf).xhas_changed)).apply ("x") ("y"))) (FALSE))