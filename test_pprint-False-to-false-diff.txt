1d0
< memory > xdict2
8a8,9
> memory > xdict2
> memory > xfalse
160c161
<                       (((unsupported)).apply (FALSE))
---
>                       (((unsupported)).apply ((xfalse)))
202c203
<                         xpp.write (((unsupported)).apply (((xpprint).xPrettyPrinter)) (FALSE))
---
>                         xpp.write (((unsupported)).apply (((xpprint).xPrettyPrinter)) ((xfalse)))
215c216
<                         (((unsupported)).apply ((xsafe)) ((((unsupported)).apply (2) (2.0) ((((unsupported)).apply)) ("abc") ((((unsupported)).apply (3))) ((((unsupported)).apply (2) (2))) ((((unsupported)).apply (3) (3))) ("def") ((((xbytearray)).apply ("ghi"))) (TRUE) (FALSE) ("None: is there a None literal in the EO language?") ((((unsupported)).apply)) (((xself).xa)) (((xself).xb)))))
---
>                         (((unsupported)).apply ((xsafe)) ((((unsupported)).apply (2) (2.0) ((((unsupported)).apply)) ("abc") ((((unsupported)).apply (3))) ((((unsupported)).apply (2) (2))) ((((unsupported)).apply (3) (3))) ("def") ((((xbytearray)).apply ("ghi"))) (TRUE) ((xfalse)) ("None: is there a None literal in the EO language?") ((((unsupported)).apply)) (((xself).xa)) (((xself).xb)))))
217c218
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpprint).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
219c220
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpp).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
233c234
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisreadable)).apply ((xicky)))) ("expected not isreadable"))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpprint).xisreadable)).apply ((xicky)))) ("expected not isreadable"))
235c236
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisreadable)).apply ((xicky)))) ("expected not isreadable"))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpp).xisreadable)).apply ((xicky)))) ("expected not isreadable"))
241c242
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpprint).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
243c244
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpp).xisrecursive)).apply ((xsafe)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xsafe))))))
253,256c254,257
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisrecursive)).apply ((xunreadable)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xunreadable))))))
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpprint).xisreadable)).apply ((xunreadable)))) (("expected not isreadable for %r".mod (((unsupported)).apply ((xunreadable))))))
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisrecursive)).apply ((xunreadable)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xunreadable))))))
<                             bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xpp).xisreadable)).apply ((xunreadable)))) (("expected not isreadable for %r".mod (((unsupported)).apply ((xunreadable))))))
---
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpprint).xisrecursive)).apply ((xunreadable)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xunreadable))))))
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpprint).xisreadable)).apply ((xunreadable)))) (("expected not isreadable for %r".mod (((unsupported)).apply ((xunreadable))))))
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpp).xisrecursive)).apply ((xunreadable)))) (("expected not isrecursive for %r".mod (((unsupported)).apply ((xunreadable))))))
>                             bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xpp).xisreadable)).apply ((xunreadable)))) (("expected not isreadable for %r".mod (((unsupported)).apply ((xunreadable))))))
261c262
<                       (((unsupported)).apply ((xsimple)) ((((unsupported)).apply (0) (0) ((0.add (((unsupported)).apply))) (0.0) ("") ("") ((((xbytearray)).apply)) ((((unsupported)).apply)) ((((xtuple2)).apply)) ((((xtuple3)).apply)) ((((unsupported)).apply)) ((((xlist2)).apply)) ((((xlist3)).apply)) ((((xset)).apply)) ((((xset2)).apply)) ((((xset3)).apply)) ((((xfrozenset)).apply)) ((((xfrozenset2)).apply)) ((((xfrozenset3)).apply)) ((((unsupported)).apply)) ((((xdict2)).apply)) ((((xdict3)).apply)) (((xself).xassertTrue)) ((xpprint)) ((6.neg)) ((6.neg)) (((6.neg).sub (((unsupported)).apply))) ((1.5.neg)) ("x") ("x") ((((xbytearray)).apply ("x"))) ((((unsupported)).apply (3))) ((((unsupported)).apply (3))) ((((unsupported)).apply (3) (6))) ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (3) (4))) ((((unsupported)).apply (5) (6))) ((((xtuple2)).apply ((((unsupported)).apply (1) (2))))) ((((xtuple3)).apply ((((unsupported)).apply (1) (2))))) ((((xtuple3)).apply ((((xrange)).apply (100))))) ((((unsupported)).apply (3) (4))) ((((xlist2)).apply ((((unsupported)).apply (3) (4))))) ((((xlist3)).apply ((((unsupported)).apply (3) (4))))) ((((xlist3)).apply ((((xrange)).apply (100))))) ((((xset)).apply ((((unsupported)).apply (7))))) ((((xset2)).apply ((((unsupported)).apply (7))))) ((((xset3)).apply ((((unsupported)).apply (7))))) ((((xfrozenset)).apply ((((unsupported)).apply (8))))) ((((xfrozenset2)).apply ((((unsupported)).apply (8))))) ((((xfrozenset3)).apply ((((unsupported)).apply (8))))) ((((xdict2)).apply ((((unsupported)).apply (5) (6))))) ((((xdict3)).apply ((((unsupported)).apply (5) (6))))) ((((xrange)).apply (10) ((11.neg)) ((1.neg)))) (TRUE) (FALSE) ("None: is there a None literal in the EO language?") ((((unsupported)).apply)))))
---
>                       (((unsupported)).apply ((xsimple)) ((((unsupported)).apply (0) (0) ((0.add (((unsupported)).apply))) (0.0) ("") ("") ((((xbytearray)).apply)) ((((unsupported)).apply)) ((((xtuple2)).apply)) ((((xtuple3)).apply)) ((((unsupported)).apply)) ((((xlist2)).apply)) ((((xlist3)).apply)) ((((xset)).apply)) ((((xset2)).apply)) ((((xset3)).apply)) ((((xfrozenset)).apply)) ((((xfrozenset2)).apply)) ((((xfrozenset3)).apply)) ((((unsupported)).apply)) ((((xdict2)).apply)) ((((xdict3)).apply)) (((xself).xassertTrue)) ((xpprint)) ((6.neg)) ((6.neg)) (((6.neg).sub (((unsupported)).apply))) ((1.5.neg)) ("x") ("x") ((((xbytearray)).apply ("x"))) ((((unsupported)).apply (3))) ((((unsupported)).apply (3))) ((((unsupported)).apply (3) (6))) ((((unsupported)).apply (1) (2))) ((((unsupported)).apply (3) (4))) ((((unsupported)).apply (5) (6))) ((((xtuple2)).apply ((((unsupported)).apply (1) (2))))) ((((xtuple3)).apply ((((unsupported)).apply (1) (2))))) ((((xtuple3)).apply ((((xrange)).apply (100))))) ((((unsupported)).apply (3) (4))) ((((xlist2)).apply ((((unsupported)).apply (3) (4))))) ((((xlist3)).apply ((((unsupported)).apply (3) (4))))) ((((xlist3)).apply ((((xrange)).apply (100))))) ((((xset)).apply ((((unsupported)).apply (7))))) ((((xset2)).apply ((((unsupported)).apply (7))))) ((((xset3)).apply ((((unsupported)).apply (7))))) ((((xfrozenset)).apply ((((unsupported)).apply (8))))) ((((xfrozenset2)).apply ((((unsupported)).apply (8))))) ((((xfrozenset3)).apply ((((unsupported)).apply (8))))) ((((xdict2)).apply ((((unsupported)).apply (5) (6))))) ((((xdict3)).apply ((((unsupported)).apply (5) (6))))) ((((xrange)).apply (10) ((11.neg)) ((1.neg)))) (TRUE) ((xfalse)) ("None: is there a None literal in the EO language?") ((((unsupported)).apply)))))
331,332c332,333
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) (FALSE))) ("{'c': None, 'b': None, 'a': None}"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((xd)) ((xd)))) (FALSE))) ("[{'c': None, 'b': None, 'a': None}, {'c': None, 'b': None, 'a': None}]"))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((xd)) ((xfalse)))) ("{'c': None, 'b': None, 'a': None}"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xpprint).xpformat)) ((((unsupported)).apply ((xd)) ((xd)))) ((xfalse)))) ("[{'c': None, 'b': None, 'a': None}, {'c': None, 'b': None, 'a': None}]"))