9a10
> memory > xfalse
385c386
<                         (((unsupported)).apply ((((unsupported)).apply ((xroot)) ((xdirs)) ((xfiles)))) ((((unsupported)).apply (((xos).xwalk)) (((xself).xtemp_dir)) (FALSE))))
---
>                         (((unsupported)).apply ((((unsupported)).apply ((xroot)) ((xdirs)) ((xfiles)))) ((((unsupported)).apply (((xos).xwalk)) (((xself).xtemp_dir)) ((xfalse)))))
641c642
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-x") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-za") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-z a") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-xza") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-xz a") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-x -za") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-x -z a") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-y") ((((unsupported)).apply ((xNS)) (FALSE) (42) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-yyy") ((((unsupported)).apply ((xNS)) (FALSE) (42) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-x -yyy -za") ((((unsupported)).apply ((xNS)) (TRUE) (42) ("a"))))) ((((unsupported)).apply ("-x -yyy -z a") ((((unsupported)).apply ((xNS)) (TRUE) (42) ("a"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-x") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-za") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-z a") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-xza") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-xz a") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-x -za") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-x -z a") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("a"))))) ((((unsupported)).apply ("-y") ((((unsupported)).apply ((xNS)) ((xfalse)) (42) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-yyy") ((((unsupported)).apply ((xNS)) ((xfalse)) (42) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-x -yyy -za") ((((unsupported)).apply ((xNS)) (TRUE) (42) ("a"))))) ((((unsupported)).apply ("-x -yyy -z a") ((((unsupported)).apply ((xNS)) (TRUE) (42) ("a"))))))
677c678
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--bat X") ((((unsupported)).apply ((xNS)) (FALSE) ("X"))))) ((((unsupported)).apply ("--bad") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badg") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badge") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badger") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--bat X") ((((unsupported)).apply ((xNS)) ((xfalse)) ("X"))))) ((((unsupported)).apply ("--bad") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badg") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badge") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badger") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))))
683c684
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--ba X") ((((unsupported)).apply ((xNS)) (FALSE) ("X"))))) ((((unsupported)).apply ("--ba=X") ((((unsupported)).apply ((xNS)) (FALSE) ("X"))))) ((((unsupported)).apply ("--bad") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badg") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badge") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badger") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--ba X") ((((unsupported)).apply ((xNS)) ((xfalse)) ("X"))))) ((((unsupported)).apply ("--ba=X") ((((unsupported)).apply ((xNS)) ((xfalse)) ("X"))))) ((((unsupported)).apply ("--bad") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badg") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badge") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badger") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?"))))))
689c690
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--ba B") ((((unsupported)).apply ((xNS)) (FALSE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-f --bar B") ((((unsupported)).apply ((xNS)) (TRUE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-f -b") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))) ((((unsupported)).apply ("-ba -f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--ba B") ((((unsupported)).apply ((xNS)) ((xfalse)) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-f --bar B") ((((unsupported)).apply ((xNS)) (TRUE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("-f -b") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))) ((((unsupported)).apply ("-ba -f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))))
693c694
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+:/") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+:/") ((xfalse)))
696c697
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("::ba B") ((((unsupported)).apply ((xNS)) (FALSE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f ::bar B") ((((unsupported)).apply ((xNS)) (TRUE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f /b") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))) ((((unsupported)).apply ("/ba +f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("::ba B") ((((unsupported)).apply ((xNS)) ((xfalse)) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f ::bar B") ((((unsupported)).apply ((xNS)) (TRUE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f /b") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))) ((((unsupported)).apply ("/ba +f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))))
703c704
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("::ba B") ((((unsupported)).apply ((xNS)) (FALSE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f ::bar B") ((((unsupported)).apply ((xNS)) (TRUE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f /b") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))) ((((unsupported)).apply ("/ba +f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("::ba B") ((((unsupported)).apply ((xNS)) ((xfalse)) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f ::bar B") ((((unsupported)).apply ((xNS)) (TRUE) ("B") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("+f /b") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))) ((((unsupported)).apply ("/ba +f") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") (42))))))
707c708
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+-") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+-") ((xfalse)))
710c711
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) (FALSE))))) ((((unsupported)).apply ("-x") ((((unsupported)).apply ((xNS)) (TRUE) (FALSE) (FALSE))))) ((((unsupported)).apply ("+y -x") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) (FALSE))))) ((((unsupported)).apply ("+yz -x") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) ((xfalse)))))) ((((unsupported)).apply ("-x") ((((unsupported)).apply ((xNS)) (TRUE) ((xfalse)) ((xfalse)))))) ((((unsupported)).apply ("+y -x") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) ((xfalse)))))) ((((unsupported)).apply ("+yz -x") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) (TRUE))))))
716c717
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE))))) ((((unsupported)).apply ("-v") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("--verbose") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("-n") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("--noisy") ((((unsupported)).apply ((xNS)) (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)))))) ((((unsupported)).apply ("-v") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("--verbose") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("-n") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("--noisy") ((((unsupported)).apply ((xNS)) (TRUE))))))
794c795
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("-z") ((((unsupported)).apply ((xNS)) (FALSE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (TRUE))))) ((((unsupported)).apply ("-z") ((((unsupported)).apply ((xNS)) ((xfalse)))))))
800c801
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE))))) ((((unsupported)).apply ("--apple") ((((unsupported)).apply ((xNS)) (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)))))) ((((unsupported)).apply ("--apple") ((((unsupported)).apply ((xNS)) (TRUE))))))
836c837
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") (FALSE))))) ((((unsupported)).apply ("--foo 7") ((((unsupported)).apply ((xNS)) ("7") ("None: is there a None literal in the EO language?") (FALSE))))) ((((unsupported)).apply ("--fooba a") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ("a") (FALSE))))) ((((unsupported)).apply ("--foobl --foo g") ((((unsupported)).apply ((xNS)) ("g") ("None: is there a None literal in the EO language?") (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ((xfalse)))))) ((((unsupported)).apply ("--foo 7") ((((unsupported)).apply ((xNS)) ("7") ("None: is there a None literal in the EO language?") ((xfalse)))))) ((((unsupported)).apply ("--fooba a") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ("a") ((xfalse)))))) ((((unsupported)).apply ("--foobl --foo g") ((((unsupported)).apply ((xNS)) ("g") ("None: is there a None literal in the EO language?") (TRUE))))))
840c841
<                 xparser_signature.write (((unsupported)).apply ((xSig)) (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ((xfalse)))
843c844
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--foo 3") ((((unsupported)).apply ((xNS)) ("3") (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--foonly 7 --foodle --foo 2") ((((unsupported)).apply ((xNS)) ("2") (TRUE) ("7"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--foo 3") ((((unsupported)).apply ((xNS)) ("3") ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--foonly 7 --foodle --foo 2") ((((unsupported)).apply ((xNS)) ("2") (TRUE) ("7"))))))
847c848
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+") ((xfalse)))
850c851
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("++foo 3") ((((unsupported)).apply ((xNS)) ("3") (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("++foonly 7 ++foodle ++foo 2") ((((unsupported)).apply ((xNS)) ("2") (TRUE) ("7"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("++foo 3") ((((unsupported)).apply ((xNS)) ("3") ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("++foonly 7 ++foodle ++foo 2") ((((unsupported)).apply ((xNS)) ("2") (TRUE) ("7"))))))
854c855
<                 xparser_signature.write (((unsupported)).apply ((xSig)) (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ((xfalse)))
861c862
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("+") ((xfalse)))
1068c1069
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE))))) ((((unsupported)).apply ("a") ((((unsupported)).apply ((xNS)) ("a") (FALSE))))) ((((unsupported)).apply ("-4") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE))))) ((((unsupported)).apply ("-4 a") ((((unsupported)).apply ((xNS)) ("a") (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)))))) ((((unsupported)).apply ("a") ((((unsupported)).apply ((xNS)) ("a") ((xfalse)))))) ((((unsupported)).apply ("-4") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE))))) ((((unsupported)).apply ("-4 a") ((((unsupported)).apply ((xNS)) ("a") (TRUE))))))
1074c1075
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE))))) ((((unsupported)).apply ("-2") ((((unsupported)).apply ((xNS)) ("-2") (FALSE))))) ((((unsupported)).apply ("a") ((((unsupported)).apply ((xNS)) ("a") (FALSE))))) ((((unsupported)).apply ("-k4") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE))))) ((((unsupported)).apply ("-k4 a") ((((unsupported)).apply ((xNS)) ("a") (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)))))) ((((unsupported)).apply ("-2") ((((unsupported)).apply ((xNS)) ("-2") ((xfalse)))))) ((((unsupported)).apply ("a") ((((unsupported)).apply ((xNS)) ("a") ((xfalse)))))) ((((unsupported)).apply ("-k4") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE))))) ((((unsupported)).apply ("-k4 a") ((((unsupported)).apply ((xNS)) ("a") (TRUE))))))
1085c1086
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (42) (FALSE))))) ((((unsupported)).apply ("-") ((((unsupported)).apply ((xNS)) ("badger") (42) (FALSE))))) ((((unsupported)).apply ("- X") ((((unsupported)).apply ((xNS)) ("X") (42) (FALSE))))) ((((unsupported)).apply ("+ -3") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((3.neg)) (FALSE))))) ((((unsupported)).apply ("-+-") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (42) (TRUE))))) ((((unsupported)).apply ("- ===") ((((unsupported)).apply ((xNS)) ("===") (42) (FALSE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (42) ((xfalse)))))) ((((unsupported)).apply ("-") ((((unsupported)).apply ((xNS)) ("badger") (42) ((xfalse)))))) ((((unsupported)).apply ("- X") ((((unsupported)).apply ((xNS)) ("X") (42) ((xfalse)))))) ((((unsupported)).apply ("+ -3") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((3.neg)) ((xfalse)))))) ((((unsupported)).apply ("-+-") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (42) (TRUE))))) ((((unsupported)).apply ("- ===") ((((unsupported)).apply ((xNS)) ("===") (42) ((xfalse)))))))
1510c1511
<                         xsubparsers_kwargs.write (((unsupported)).apply ("required") (FALSE))
---
>                         xsubparsers_kwargs.write (((unsupported)).apply ("required") ((xfalse)))
1558c1559
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_args)).apply (((("0.5 1 b -w 7".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (FALSE) (0.5) (7) ("b"))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_args)).apply (((("0.5 1 b -w 7".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) (7) ("b"))))
1561c1562
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_args)).apply (((("-1.5 3 11 -- a --foo 7 -- b".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (FALSE) ((1.5.neg)) (11) ((((unsupported)).apply ("a") ("--foo") ("7") ("--") ("b"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_args)).apply (((("-1.5 3 11 -- a --foo 7 -- b".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) ((xfalse)) ((1.5.neg)) (11) ((((unsupported)).apply ("a") ("--foo") ("7") ("--") ("b"))))))
1566,1570c1567,1571
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 1 b -w 7".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) (7) ("b"))) ((((unsupported)).apply)))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 -p 1 b -w 7".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) (7) ("b"))) ((((unsupported)).apply ("-p"))))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 1 b -w 7 -p".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) (7) ("b"))) ((((unsupported)).apply ("-p"))))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 1 b -q -rs -w 7".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) (7) ("b"))) ((((unsupported)).apply ("-q") ("-rs"))))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 -W 1 b -X Y -w 7 Z".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) (7) ("b"))) ((((unsupported)).apply ("-W") ("-X") ("Y") ("Z"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 1 b -w 7".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) (7) ("b"))) ((((unsupported)).apply)))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 -p 1 b -w 7".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) (7) ("b"))) ((((unsupported)).apply ("-p"))))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 1 b -w 7 -p".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) (7) ("b"))) ((((unsupported)).apply ("-p"))))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 1 b -q -rs -w 7".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) (7) ("b"))) ((((unsupported)).apply ("-q") ("-rs"))))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xparser).xparse_known_args)).apply (((("0.5 -W 1 b -X Y -w 7 Z".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) (7) ("b"))) ((((unsupported)).apply ("-W") ("-X") ("Y") ("Z"))))))
1583c1584
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xNS)) (FALSE) ("1") ("2"))) (((((xparser).xparse_args)).apply (((("1 2".xsplit)).apply)))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) ("1") ("2"))) (((((xparser).xparse_args)).apply (((("1 2".xsplit)).apply)))))
1633c1634
<                         xsubparsers.write (((unsupported)).apply (((xparser).xadd_subparsers)) ("command") (FALSE))
---
>                         xsubparsers.write (((unsupported)).apply (((xparser).xadd_subparsers)) ("command") ((xfalse)))
1710,1711c1711,1712
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_known_args)).apply (((("0.5 1alias1 b".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) ("None: is there a None literal in the EO language?") ("b"))) ((((unsupported)).apply)))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_known_args)).apply (((("0.5 1alias2 b".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) (FALSE) (0.5) ("None: is there a None literal in the EO language?") ("b"))) ((((unsupported)).apply)))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_known_args)).apply (((("0.5 1alias1 b".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) ("None: is there a None literal in the EO language?") ("b"))) ((((unsupported)).apply)))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_known_args)).apply (((("0.5 1alias2 b".xsplit)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xNS)) ((xfalse)) (0.5) ("None: is there a None literal in the EO language?") ("b"))) ((((unsupported)).apply)))))
1796c1797
<                         (((unsupported)).apply (((xself).xwxyz_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))))
---
>                         (((unsupported)).apply (((xself).xwxyz_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))))
1801c1802
<                         (((unsupported)).apply (((xself).xabcd_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))))
---
>                         (((unsupported)).apply (((xself).xabcd_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))))
1806c1807
<                         (((unsupported)).apply (((xself).xw_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))))
---
>                         (((unsupported)).apply (((xself).xw_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))))
1808c1809
<                         (((unsupported)).apply (((xself).xz_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))))
---
>                         (((unsupported)).apply (((xself).xz_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))))
1810c1811
<                         (((unsupported)).apply (((xself).xab_mutex_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))))
---
>                         (((unsupported)).apply (((xself).xab_mutex_parent)) ((((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))))
1837c1838
<                         xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE) ((xparents)))
---
>                         xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)) ((xparents)))
1844,1846c1845,1847
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xparse_args)).apply ((((unsupported)).apply)))) ((((unsupported)).apply ((xNS)) (FALSE) (FALSE))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xparse_args)).apply ((((unsupported)).apply ("-a"))))) ((((unsupported)).apply ((xNS)) (TRUE) (FALSE))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xparse_args)).apply ((((unsupported)).apply ("-b"))))) ((((unsupported)).apply ((xNS)) (FALSE) (TRUE))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xparse_args)).apply ((((unsupported)).apply)))) ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xparse_args)).apply ((((unsupported)).apply ("-a"))))) ((((unsupported)).apply ((xNS)) (TRUE) ((xfalse)))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xparse_args)).apply ((((unsupported)).apply ("-b"))))) ((((unsupported)).apply ((xNS)) ((xfalse)) (TRUE))))
1869c1870
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_args)).apply (((("-a --w 2 3".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (TRUE) (FALSE) ("2") ("None: is there a None literal in the EO language?") ("3"))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_args)).apply (((("-a --w 2 3".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (TRUE) ((xfalse)) ("2") ("None: is there a None literal in the EO language?") ("3"))))
1920,1921c1921,1922
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_args)).apply (((("foo -a 4".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (TRUE) (FALSE) ("4"))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_args)).apply (((("bar -b  --w 2 3 4".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (FALSE) (TRUE) ("2") ("None: is there a None literal in the EO language?") ("3") ("4"))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_args)).apply (((("foo -a 4".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) (TRUE) ((xfalse)) ("4"))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xparser).xparse_args)).apply (((("bar -b  --w 2 3 4".xsplit)).apply)))) ((((unsupported)).apply ((xNS)) ((xfalse)) (TRUE) ("2") ("None: is there a None literal in the EO language?") ("3") ("4"))))
1947c1948
<                         xparent.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))
---
>                         xparent.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))
2012c2013
<                         xparse_args.write ((((unsupported)).apply (((xself).xget_parser)) (FALSE)).xparse_args)
---
>                         xparse_args.write ((((unsupported)).apply (((xself).xget_parser)) ((xfalse))).xparse_args)
2033c2034
<                         xparse_args.write ((((unsupported)).apply (((xself).xget_parser)) (FALSE)).xparse_args)
---
>                         xparse_args.write ((((unsupported)).apply (((xself).xget_parser)) ((xfalse))).xparse_args)
2056c2057
<                         xformat_usage.write ((((unsupported)).apply (((xself).xget_parser)) (FALSE)).xformat_usage)
---
>                         xformat_usage.write ((((unsupported)).apply (((xself).xget_parser)) ((xfalse))).xformat_usage)
2074c2075
<                         xformat_help.write ((((unsupported)).apply (((xself).xget_parser)) (FALSE)).xformat_help)
---
>                         xformat_help.write ((((unsupported)).apply (((xself).xget_parser)) ((xfalse))).xformat_help)
2140c2141
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("-x X") ((((unsupported)).apply ((xNS)) ("X") (TRUE))))) ((((unsupported)).apply ("-x X -x Y") ((((unsupported)).apply ((xNS)) ("Y") (TRUE))))) ((((unsupported)).apply ("-y") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("-x X") ((((unsupported)).apply ((xNS)) ("X") (TRUE))))) ((((unsupported)).apply ("-x X -x Y") ((((unsupported)).apply ((xNS)) ("Y") (TRUE))))) ((((unsupported)).apply ("-y") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)))))))
2162,2163c2163,2164
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("--spam") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badger") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--bladder B") ((((unsupported)).apply ((xNS)) (FALSE) (TRUE) ("B"))))) ((((unsupported)).apply ("--spam --spam") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) ("None: is there a None literal in the EO language?"))))))
<                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) (TRUE) ("None: is there a None literal in the EO language?"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("--spam") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--badger") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ("--bladder B") ((((unsupported)).apply ((xNS)) ((xfalse)) (TRUE) ("B"))))) ((((unsupported)).apply ("--spam --spam") ((((unsupported)).apply ((xNS)) (TRUE) (TRUE) ("None: is there a None literal in the EO language?"))))))
>                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) (TRUE) ("None: is there a None literal in the EO language?"))))))
2181,2182c2182,2183
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("--foo") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("X"))))) ((((unsupported)).apply ("--spam S") ((((unsupported)).apply ((xNS)) (FALSE) ("S") ("X"))))) ((((unsupported)).apply ("X") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("X"))))))) ((((unsupported)).apply ("X Y Z") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("X") ("Y") ("Z"))))))))
<                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) ("None: is there a None literal in the EO language?") ("X"))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("--foo") ((((unsupported)).apply ((xNS)) (TRUE) ("None: is there a None literal in the EO language?") ("X"))))) ((((unsupported)).apply ("--spam S") ((((unsupported)).apply ((xNS)) ((xfalse)) ("S") ("X"))))) ((((unsupported)).apply ("X") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("X"))))))) ((((unsupported)).apply ("X Y Z") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("X") ("Y") ("Z"))))))))
>                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ("None: is there a None literal in the EO language?") ("X"))))))
2203,2204c2204,2205
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("-a") ((((unsupported)).apply ((xNS)) (TRUE) (FALSE) (FALSE) (FALSE) (FALSE))))) ((((unsupported)).apply ("-b") ((((unsupported)).apply ((xNS)) (FALSE) (TRUE) (FALSE) (FALSE) (FALSE))))) ((((unsupported)).apply ("-c") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) (TRUE) (FALSE) (FALSE))))) ((((unsupported)).apply ("-a -x") ((((unsupported)).apply ((xNS)) (TRUE) (FALSE) (FALSE) (TRUE) (FALSE))))) ((((unsupported)).apply ("-y -b") ((((unsupported)).apply ((xNS)) (FALSE) (TRUE) (FALSE) (FALSE) (TRUE))))) ((((unsupported)).apply ("-x -y -c") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) (TRUE) (TRUE) (TRUE))))))
<                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) (FALSE) (FALSE) (FALSE))))) ((((unsupported)).apply ("-x") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) (FALSE) (TRUE) (FALSE))))) ((((unsupported)).apply ("-y") ((((unsupported)).apply ((xNS)) (FALSE) (FALSE) (FALSE) (FALSE) (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("-a") ((((unsupported)).apply ((xNS)) (TRUE) ((xfalse)) ((xfalse)) ((xfalse)) ((xfalse)))))) ((((unsupported)).apply ("-b") ((((unsupported)).apply ((xNS)) ((xfalse)) (TRUE) ((xfalse)) ((xfalse)) ((xfalse)))))) ((((unsupported)).apply ("-c") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) (TRUE) ((xfalse)) ((xfalse)))))) ((((unsupported)).apply ("-a -x") ((((unsupported)).apply ((xNS)) (TRUE) ((xfalse)) ((xfalse)) (TRUE) ((xfalse)))))) ((((unsupported)).apply ("-y -b") ((((unsupported)).apply ((xNS)) ((xfalse)) (TRUE) ((xfalse)) ((xfalse)) (TRUE))))) ((((unsupported)).apply ("-x -y -c") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) (TRUE) (TRUE) (TRUE))))))
>                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) ((xfalse)) ((xfalse)) ((xfalse)))))) ((((unsupported)).apply ("-x") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) ((xfalse)) (TRUE) ((xfalse)))))) ((((unsupported)).apply ("-y") ((((unsupported)).apply ((xNS)) ((xfalse)) ((xfalse)) ((xfalse)) ((xfalse)) (TRUE))))))
2245,2246c2246,2247
<                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("X A") ((((unsupported)).apply ((xNS)) ("A") (FALSE) (FALSE) ("X") (FALSE))))) ((((unsupported)).apply ("X -b") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE) (FALSE) ("X") (FALSE))))) ((((unsupported)).apply ("X -c") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE) (TRUE) ("X") (FALSE))))) ((((unsupported)).apply ("X A -y") ((((unsupported)).apply ((xNS)) ("A") (FALSE) (FALSE) ("X") (TRUE))))) ((((unsupported)).apply ("X -y -b") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE) (FALSE) ("X") (TRUE))))))
<                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("X") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE) (FALSE) ("X") (FALSE))))) ((((unsupported)).apply ("X -y") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (FALSE) (FALSE) ("X") (TRUE))))))
---
>                 xsuccesses.write (((unsupported)).apply ((((unsupported)).apply ("X A") ((((unsupported)).apply ((xNS)) ("A") ((xfalse)) ((xfalse)) ("X") ((xfalse)))))) ((((unsupported)).apply ("X -b") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE) ((xfalse)) ("X") ((xfalse)))))) ((((unsupported)).apply ("X -c") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)) (TRUE) ("X") ((xfalse)))))) ((((unsupported)).apply ("X A -y") ((((unsupported)).apply ((xNS)) ("A") ((xfalse)) ((xfalse)) ("X") (TRUE))))) ((((unsupported)).apply ("X -y -b") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") (TRUE) ((xfalse)) ("X") (TRUE))))))
>                 xsuccesses_when_not_required.write (((unsupported)).apply ((((unsupported)).apply ("X") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)) ((xfalse)) ("X") ((xfalse)))))) ((((unsupported)).apply ("X -y") ((((unsupported)).apply ((xNS)) ("None: is there a None literal in the EO language?") ((xfalse)) ((xfalse)) ("X") (TRUE))))))
2285c2286
<                       xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (((xparent).xprog)) (FALSE) ((((unsupported)).apply ((xparent)))))
---
>                       xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (((xparent).xprog)) ((xfalse)) ((((unsupported)).apply ((xparent)))))
2342c2343
<                         xparent.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))
---
>                         xparent.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))
2621c2622
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ((xfalse)))
2648c2649
<                 xparser_signature.write (((unsupported)).apply ((xSig)) (("P".mul 60)) (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) (("P".mul 60)) ((xfalse)))
2693c2694
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ((xfalse)))
2720c2721
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ((xfalse)))
2738c2739
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ((xfalse)))
2774c2775
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ("^;") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ("^;") ((xfalse)))
2783c2784
<                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") (FALSE))
---
>                 xparser_signature.write (((unsupported)).apply ((xSig)) ("PROG") ((xfalse)))
3114c3115
<                         xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))
---
>                         xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))
3134c3135
<                         xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) (FALSE))
---
>                         xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ((xfalse)))
3323c3324
<                       xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ("PROG") (FALSE))
---
>                       xparser.write (((unsupported)).apply ((xErrorRaisingArgumentParser)) ("PROG") ((xfalse)))