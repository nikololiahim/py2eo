memory > xyiq
memory > xg
memory > xb
memory > xrgb
memory > xr
memory > xcolorsys
memory > xunittest
memory > xhls
memory > x__name__
memory > xlen
memory > xhsv
[] > test_colorsys
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_hls_values
        memory > xfrange
        memory > xassertTripleEqual
        memory > xtest_yiq_values
        memory > xtest_yiq_roundtrip
        memory > xtest_hsv_values
        memory > xtest_hls_roundtrip
        memory > xtest_hsv_roundtrip
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            xfrange.write
              [xstart xstop xstep]
                seq > @
                  while.
                    ((xstart).leq (xstop))
                    [unused]
                      seq > @
                        seq
                          (((unsupported)).apply ((xstart)))
                          (((unsupported)).apply ((xstart)) ((xstep)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xassertTripleEqual.write
                  [xself xtr1 xtr2]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xtr1)))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (3) ((((xlen)).apply ((xtr2)))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply ((xtr1)) (0))) ((((unsupported)).apply ((xtr2)) (0))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply ((xtr1)) (1))) ((((unsupported)).apply ((xtr2)) (1))))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((((unsupported)).apply ((xtr1)) (2))) ((((unsupported)).apply ((xtr2)) (2))))
                xtest_hsv_roundtrip.write
                  [xself]
                    memory > xrgb
                    seq > @
                      (((unsupported)).apply ((xr)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                        (((unsupported)).apply ((xg)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                          (((unsupported)).apply ((xb)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                            seq
                              xrgb.write (((unsupported)).apply ((xr)) ((xg)) ((xb)))
                              bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xrgb)) (((((xcolorsys).xhsv_to_rgb)).apply ((((unsupported)).apply (((((xcolorsys).xrgb_to_hsv)).apply ((((unsupported)).apply ((xrgb)))))))))))
                xtest_hsv_values.write
                  [xself]
                    memory > xvalues
                    seq > @
                      seq
                        xvalues.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0) (0.0))) ((((unsupported)).apply (0) (0.0) (0.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0) (1.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (1.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (1.0) (0.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (1.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (1.0) (1.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (1.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (0.0) (0.0))) ((((unsupported)).apply (0) (1.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (0.0) (1.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (1.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (1.0) (0.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (1.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (1.0) (1.0))) ((((unsupported)).apply (0) (0.0) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.5) (0.5) (0.5))) ((((unsupported)).apply (0) (0.0) (0.5))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xrgb)) ((xhsv)))) ((xvalues)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xhsv)) (((((xcolorsys).xrgb_to_hsv)).apply ((((unsupported)).apply ((xrgb)))))))
                            bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xrgb)) (((((xcolorsys).xhsv_to_rgb)).apply ((((unsupported)).apply ((xhsv)))))))
                xtest_hls_roundtrip.write
                  [xself]
                    memory > xrgb
                    seq > @
                      (((unsupported)).apply ((xr)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                        (((unsupported)).apply ((xg)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                          (((unsupported)).apply ((xb)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                            seq
                              xrgb.write (((unsupported)).apply ((xr)) ((xg)) ((xb)))
                              bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xrgb)) (((((xcolorsys).xhls_to_rgb)).apply ((((unsupported)).apply (((((xcolorsys).xrgb_to_hls)).apply ((((unsupported)).apply ((xrgb)))))))))))
                xtest_hls_values.write
                  [xself]
                    memory > xvalues
                    seq > @
                      seq
                        xvalues.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0) (0.0))) ((((unsupported)).apply (0) (0.0) (0.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0) (1.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (0.5) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (1.0) (0.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (0.5) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (1.0) (1.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (0.5) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (0.0) (0.0))) ((((unsupported)).apply (0) (0.5) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (0.0) (1.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (0.5) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (1.0) (0.0))) ((((unsupported)).apply (((((unsupported)).apply).div (((unsupported)).apply))) (0.5) (1.0))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (1.0) (1.0))) ((((unsupported)).apply (0) (1.0) (0.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.5) (0.5) (0.5))) ((((unsupported)).apply (0) (0.5) (0.0))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xrgb)) ((xhls)))) ((xvalues)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xhls)) (((((xcolorsys).xrgb_to_hls)).apply ((((unsupported)).apply ((xrgb)))))))
                            bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xrgb)) (((((xcolorsys).xhls_to_rgb)).apply ((((unsupported)).apply ((xhls)))))))
                xtest_yiq_roundtrip.write
                  [xself]
                    memory > xrgb
                    seq > @
                      (((unsupported)).apply ((xr)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                        (((unsupported)).apply ((xg)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                          (((unsupported)).apply ((xb)) ((((xfrange)).apply (0.0) (1.0) (0.2))))
                            seq
                              xrgb.write (((unsupported)).apply ((xr)) ((xg)) ((xb)))
                              bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xrgb)) (((((xcolorsys).xyiq_to_rgb)).apply ((((unsupported)).apply (((((xcolorsys).xrgb_to_yiq)).apply ((((unsupported)).apply ((xrgb)))))))))))
                xtest_yiq_values.write
                  [xself]
                    memory > xvalues
                    seq > @
                      seq
                        xvalues.write (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0) (0.0))) ((((unsupported)).apply (0.0) (0.0) (0.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0) (1.0))) ((((unsupported)).apply (0.11) ((0.3217.neg)) (0.3121))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (1.0) (0.0))) ((((unsupported)).apply (0.59) ((0.2773.neg)) ((0.5251.neg)))))) ((((unsupported)).apply ((((unsupported)).apply (0.0) (1.0) (1.0))) ((((unsupported)).apply (0.7) ((0.599.neg)) ((0.213.neg)))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (0.0) (0.0))) ((((unsupported)).apply (0.3) (0.599) (0.213))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (0.0) (1.0))) ((((unsupported)).apply (0.41) (0.2773) (0.5251))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (1.0) (0.0))) ((((unsupported)).apply (0.89) (0.3217) ((0.3121.neg)))))) ((((unsupported)).apply ((((unsupported)).apply (1.0) (1.0) (1.0))) ((((unsupported)).apply (1.0) (0.0) (0.0))))) ((((unsupported)).apply ((((unsupported)).apply (0.5) (0.5) (0.5))) ((((unsupported)).apply (0.5) (0.0) (0.0))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xrgb)) ((xyiq)))) ((xvalues)))
                          seq
                            bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xyiq)) (((((xcolorsys).xrgb_to_yiq)).apply ((((unsupported)).apply ((xrgb)))))))
                            bogusForceDataize.write ((((xself).xassertTripleEqual)).apply ((xrgb)) (((((xcolorsys).xyiq_to_rgb)).apply ((((unsupported)).apply ((xyiq)))))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)