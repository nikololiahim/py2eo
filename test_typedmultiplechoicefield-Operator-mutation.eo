memory > xdecimal
memory > xint
memory > xbool
memory > xfloat
memory > xSimpleTestCase
memory > xValidationError
memory > xTypedMultipleChoiceField
[] > test_typedmultiplechoicefield
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_typedmultiplechoicefield_1
        memory > xtest_typedmultiplechoicefield_special_coerce
        memory > xtest_typedmultiplechoicefield_6
        memory > xtest_typedmultiplechoicefield_5
        memory > xtest_typedmultiplechoicefield_2
        memory > xtest_typedmultiplechoicefield_has_changed
        memory > xtest_typedmultiplechoicefield_4
        memory > xtest_typedmultiplechoicefield_7
        memory > xtest_typedmultiplechoicefield_3
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_typedmultiplechoicefield_1.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1))) (((((xf).xclean)).apply ((((unsupported)).apply ("1"))))))
                        xmsg.write "'Select a valid choice. 2 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("2"))))
                xtest_typedmultiplechoicefield_2.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xfloat)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1.0))) (((((xf).xclean)).apply ((((unsupported)).apply ("1"))))))
                xtest_typedmultiplechoicefield_3.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xbool)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (TRUE))) (((((xf).xclean)).apply ((((unsupported)).apply ("-1"))))))
                xtest_typedmultiplechoicefield_4.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1) ((1.neg)))) (((((xf).xclean)).apply ((((unsupported)).apply ("1") ("-1"))))))
                        xmsg.write "'Select a valid choice. 2 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("1") ("2"))))
                xtest_typedmultiplechoicefield_5.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply ("A") ("A"))) ((((unsupported)).apply ("B") ("B"))))) ((xint)))
                        xmsg.write "'Select a valid choice. B is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("B"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply)))
                xtest_typedmultiplechoicefield_6.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xint)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply)) (((((xf).xclean)).apply ((((unsupported)).apply)))))
                xtest_typedmultiplechoicefield_7.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xint)) (FALSE) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xf).xclean)).apply ((((unsupported)).apply)))))
                xtest_typedmultiplechoicefield_has_changed.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("-1"))) ((((unsupported)).apply ((1.neg)) ("-1"))))) ((xint)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply ("None: is there a None literal in the EO language?") (""))))
                xtest_typedmultiplechoicefield_special_coerce.write
                  [xself]
                    memory > xcoerce_func
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xcoerce_func.write
                          [xval]
                            seq > @
                              (((unsupported)).apply (((((xdecimal).xDecimal)).apply (("1.%s".mod (xval))))))
                        xf.write (((unsupported)).apply ((xTypedMultipleChoiceField)) ((((unsupported)).apply ((((unsupported)).apply (1) ("1"))) ((((unsupported)).apply (2) ("2"))))) ((xcoerce_func)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((((xdecimal).xDecimal)).apply ("1.2"))))) (((((xf).xclean)).apply ((((unsupported)).apply ("2"))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply)))
                        xmsg.write "'Select a valid choice. 3 is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("3"))))