memory > xspid
memory > xrusage
memory > xunittest
memory > xstatus
memory > x__name__
memory > xreap_children
memory > xForkWait
memory > xhasattr
memory > xtime
memory > xdeadline
memory > xos
[] > test_wait3
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtearDownModule
        memory > xwait_impl
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            ((((xhasattr)).apply ((xos)) ("fork")).not).if
              (((unsupported)).apply (((((xunittest).xSkipTest)).apply ("os.fork not defined"))))
            ((((xhasattr)).apply ((xos)) ("wait3")).not).if
              (((unsupported)).apply (((((xunittest).xSkipTest)).apply ("os.wait3 not defined"))))
            (((unsupported)).apply ((xForkWait)))
              xwait_impl.write
                [xself xcpid]
                  memory > xdeadline2
                  seq > @
                    seq
                      xdeadline2.write (((((xtime).xmonotonic)).apply).add 10.0)
                      while.
                        (((((xtime).xmonotonic)).apply).leq (xdeadline))
                        [unused]
                          seq > @
                            seq
                              (((unsupported)).apply ((((unsupported)).apply ((xspid)) ((xstatus)) ((xrusage)))) (((((xos).xwait3)).apply (((xos).xWNOHANG)))))
                              ((xspid).eq (xcpid)).if
                                (((unsupported)).apply)
                              bogusForceDataize.write ((((xtime).xsleep)).apply (0.1))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((xspid)) ((xcpid)))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((xstatus)) (0) (("cause = %d, exit = %d".mod (((unsupported)).apply (((xstatus).and 255)) ((((unsupported)).apply ((xstatus)) (8)))))))
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((xrusage)))
            xtearDownModule.write
              []
                seq > @
                  bogusForceDataize.write (((xreap_children)).apply)
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)