memory > xContext
memory > xsuper
memory > xiter
memory > xnext
memory > xSimpleTestCase
memory > xrange
memory > xEngine
[] > test_if_changed
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_ifchanged_else03
        memory > xtest_ifchanged_param02
        memory > xlibraries
        memory > xtest_ifchanged_param05
        memory > xtest_ifchanged04
        memory > xsetUpClass
        memory > xtest_ifchanged07
        memory > xtest_ifchanged02
        memory > xtest_ifchanged_param03
        memory > xtest_ifchanged_else02
        memory > xtest_include
        memory > xtest_include_state
        memory > xtest_ifchanged_filter_ws
        memory > xtest_ifchanged05
        memory > xtest_ifchanged08
        memory > xtest_ifchanged_render_once
        memory > xtest_ifchanged_else04
        memory > xtest_ifchanged_else01
        memory > xtest_ifchanged_param01
        memory > xtest_ifchanged_param04
        memory > xtest_ifchanged03
        memory > xtest_ifchanged_concurrency
        memory > xtest_ifchanged01
        memory > xtest_ifchanged06
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xlibraries.write (((unsupported)).apply ("custom") ("template_tests.templatetags.custom"))
                xtest_ifchanged01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged01") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("123") ((xoutput)))
                xtest_ifchanged02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged02") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (1) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("13"))
                xtest_ifchanged03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged03") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (1) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1"))
                xtest_ifchanged04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged04") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (2) (3))) ("numx") ((((unsupported)).apply (2) (2) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("122232"))
                xtest_ifchanged05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged05") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (1) (1))) ("numx") ((((unsupported)).apply (1) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1123123123"))
                xtest_ifchanged06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged06") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (1) (1))) ("numx") ((((unsupported)).apply (2) (2) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1222"))
                xtest_ifchanged07.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged07") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (1) (1))) ("numx") ((((unsupported)).apply (2) (2) (2))) ("numy") ((((unsupported)).apply (3) (3) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1233323332333"))
                xtest_ifchanged08.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged08") ((((unsupported)).apply ("datalist") ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (1) ("a"))) ((((unsupported)).apply (1) ("a"))) ((((unsupported)).apply (0) ("b"))) ((((unsupported)).apply (1) ("c"))))) ((((unsupported)).apply ((((unsupported)).apply (0) ("a"))) ((((unsupported)).apply (1) ("c"))) ((((unsupported)).apply (1) ("d"))) ((((unsupported)).apply (1) ("d"))) ((((unsupported)).apply (0) ("e"))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("accd"))
                xtest_ifchanged_param01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-param01") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("..1..2..3"))
                xtest_ifchanged_param02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-param02") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (2) (3))) ("numx") ((((unsupported)).apply (5) (6) (7))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("..567..567..567"))
                xtest_ifchanged_param03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-param03") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (1) (2))) ("numx") ((((unsupported)).apply (5) (6) (6))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("156156256"))
                xtest_ifchanged_param04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-param04") ((((unsupported)).apply ("days") ((((unsupported)).apply ((((unsupported)).apply ("hours") ((((unsupported)).apply (1) (2) (3))) ("day") (1))) ((((unsupported)).apply ("hours") ((((unsupported)).apply (3))) ("day") (2))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("112323"))
                xtest_ifchanged_param05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-param05") ((((unsupported)).apply ("days") ((((unsupported)).apply ((((unsupported)).apply ("hours") ((((unsupported)).apply (1) (2) (3))) ("day") (1))) ((((unsupported)).apply ("hours") ((((unsupported)).apply (3))) ("day") (2))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("112323"))
                xtest_ifchanged_else01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-else01") ((((unsupported)).apply ("ids") ((((unsupported)).apply (1) (1) (2) (2) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1-first,1-other,2-first,2-other,2-other,3-first,"))
                xtest_ifchanged_else02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-else02") ((((unsupported)).apply ("ids") ((((unsupported)).apply (1) (1) (2) (2) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1-red,1-gray,2-blue,2-gray,2-gray,3-red,"))
                xtest_ifchanged_else03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-else03") ((((unsupported)).apply ("ids") ((((unsupported)).apply (1) (1) (2) (2) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1-red,1,2-blue,2,2,3-red,"))
                xtest_ifchanged_else04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-else04") ((((unsupported)).apply ("ids") ((((unsupported)).apply (1) (1) (2) (2) (2) (3) (4))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("***1*1...2***2*3...4...5***3*6***4*7"))
                xtest_ifchanged_filter_ws.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("ifchanged-filter-ws") ((((unsupported)).apply ("num") ((((unsupported)).apply (1) (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("..1..2..3"))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xengine)) ((((xEngine)).apply)))
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUpClass)).apply)
                xtest_ifchanged_concurrency.write
                  [xself]
                    memory > xoutput1
                    memory > xtemplate
                    memory > xgen
                    memory > xgen1
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xtemplate.write (((((xself).xengine).xfrom_string)).apply ("[0{% for x in foo %},{% with var=get_value %}{% ifchanged %}{{ var }}{% endifchanged %}{% endwith %}{% endfor %}]"))
                        xgen.write
                          []
                            memory > xiter2
                            memory > xoutput2
                            seq > @
                              seq
                                (((unsupported)).apply (1))
                                (((unsupported)).apply (2))
                                xiter2.write (((xiter)).apply ((((unsupported)).apply (1) (2) (3))))
                                xoutput2.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("foo") ((((xrange)).apply (3))) ("get_value") ((((unsupported)).apply ((((xnext)).apply ((xiter2)))))))))))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput2)) ("[0,1,2,3]") (((("Expected [0,1,2,3] in second parallel template, got {}".xformat)).apply ((xoutput2)))))
                                (((unsupported)).apply (3))
                        xgen1.write (((xgen)).apply)
                        xoutput1.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("foo") ((((xrange)).apply (3))) ("get_value") ((((unsupported)).apply ((((xnext)).apply ((xgen1)))))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput1)) ("[0,1,2,3]") (((("Expected [0,1,2,3] in first template, got {}".xformat)).apply ((xoutput1)))))
                xtest_ifchanged_render_once.write
                  [xself]
                    memory > xtemplate
                    memory > xoutput
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xtemplate.write (((((xself).xengine).xfrom_string)).apply ("{% ifchanged %}{% cycle \"1st time\" \"2nd time\" %}{% endifchanged %}"))
                        xoutput.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("1st time"))
                xtest_include.write
                  [xself]
                    memory > xengine
                    memory > xoutput
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xengine.write (((unsupported)).apply ((xEngine)) ((((unsupported)).apply ((((unsupported)).apply ("django.template.loaders.locmem.Loader") ((((unsupported)).apply ("template") ("{% for x in vars %}{% include \"include\" %}{% endfor %}") ("include") ("{% ifchanged %}{{ x }}{% endifchanged %}"))))))))
                        xoutput.write ((((xengine).xrender_to_string)).apply ("template") ((((unsupported)).apply ("vars") ((((unsupported)).apply (1) (1) (2) (2) (3) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("123"))
                xtest_include_state.write
                  [xself]
                    memory > xengine
                    memory > xoutput
                    seq > @
                      seq
                        unsupported
                        xengine.write (((unsupported)).apply ((xEngine)) ((((unsupported)).apply ((((unsupported)).apply ("django.template.loaders.locmem.Loader") ((((unsupported)).apply ("template") ("{% for x in vars %}{% include \"include\" %}{% include \"include\" %}{% endfor %}") ("include") ("{% ifchanged %}{{ x }}{% endifchanged %}"))))))))
                        xoutput.write ((((xengine).xrender_to_string)).apply ("template") ((((unsupported)).apply ("vars") ((((unsupported)).apply (1) (1) (2) (2) (3) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("112233"))