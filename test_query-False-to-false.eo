memory > xObjectC
memory > xRelatedIsNull
memory > xQ
memory > xFieldError
memory > xconnection
memory > xname_isnull_lookup
memory > xnames
memory > xCol
memory > xregister_lookup
memory > xLessThan
memory > xRanking
memory > xTypeError
memory > xJoinPromoter
memory > xfinal_field
memory > xIsNull
memory > xfalse
memory > xDEFAULT_DB_ALIAS
memory > xGreaterThan
memory > xdatetime
memory > xRawSQL
memory > xFunc
memory > xBooleanField
memory > xtargets
memory > xTestCase
memory > xAuthor
memory > xSINGLE
memory > xOR
memory > xCharField
memory > xQuery
memory > xget_field_names_from_opts
memory > xLower
memory > xpath
memory > xExact
memory > xValue
memory > xset
memory > xrepr
memory > xItem
memory > xExists
memory > xF
memory > xnum_gt_lookup
memory > xExpressionWrapper
memory > xlen
memory > xSimpleTestCase
[] > test_query
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_repr
        memory > xtest_foreign_key
        memory > xtest_complex_query
        memory > xtest_subquery_annotation
        memory > xtest_transform
        memory > xtest_filter_conditional_join
        memory > xtest_rawsql_annotation
        memory > xtest_names_to_path_field_error
        memory > xtest_filter_non_conditional
        memory > xtest_names_to_path_field
        memory > xtest_negated_nullable
        memory > xtest_foreign_key_f
        memory > xtest_multiple_fields
        memory > xtest_non_alias_cols_query
        memory > xtest_get_field_names_from_opts
        memory > xtest_simple_query
        memory > xtest_clone_select_related
        memory > xtest_iterable_lookup_value
        memory > xtest_foreign_key_exclusive
        memory > xtest_filter_conditional
        memory > xtest_q_annotation
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_simple_query.write
                  [xself]
                    memory > xwhere
                    memory > xlookup
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xAuthor)))
                        xwhere.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xQ)) (2))))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xGreaterThan)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlookup).xrhs)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xlhs).xtarget)) ((((((xAuthor).x_meta).xget_field)).apply ("num"))))
                xtest_non_alias_cols_query.write
                  [xself]
                    memory > xwhere
                    memory > xnum_lt_lookup
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((unsupported)).apply ((xQuery)) ((xAuthor)) ((xfalse)))
                        xwhere.write ((((xquery).xbuild_where)).apply (((((unsupported)).apply ((xQ)) (2) ((xfalse))).or (((unsupported)).apply ((xQ)) ((((xF)).apply ("id")))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xname_isnull_lookup)) ((xnum_gt_lookup)))) (((((unsupported)).apply (((xwhere).xchildren)) (0)).xchildren)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xnum_gt_lookup)) ((xGreaterThan)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xnum_gt_lookup).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xnum_gt_lookup).xlhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xname_isnull_lookup)) ((xIsNull)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xname_isnull_lookup).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xname_isnull_lookup).xlhs).xalias)))
                        xnum_lt_lookup.write (((unsupported)).apply (((xwhere).xchildren)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xnum_lt_lookup)) ((xLessThan)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xnum_lt_lookup).xrhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xnum_lt_lookup).xrhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xnum_lt_lookup).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xnum_lt_lookup).xlhs).xalias)))
                xtest_complex_query.write
                  [xself]
                    memory > xwhere
                    memory > xlookup
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xAuthor)))
                        xwhere.write ((((xquery).xbuild_where)).apply (((((unsupported)).apply ((xQ)) (2)).or (((unsupported)).apply ((xQ)) (0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xwhere).xconnector)) ((xOR)))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xGreaterThan)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlookup).xrhs)) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xlhs).xtarget)) ((((((xAuthor).x_meta).xget_field)).apply ("num"))))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xLessThan)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xlookup).xrhs)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xlhs).xtarget)) ((((((xAuthor).x_meta).xget_field)).apply ("num"))))
                xtest_multiple_fields.write
                  [xself]
                    memory > xwhere
                    memory > xlookup
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((unsupported)).apply ((xQuery)) ((xItem)) ((xfalse)))
                        xwhere.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xQ)) ((((xF)).apply ("created"))))))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xGreaterThan)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xlookup).xrhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xlookup).xrhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xlookup).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xlookup).xlhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xrhs).xtarget)) ((((((xItem).x_meta).xget_field)).apply ("created"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xlhs).xtarget)) ((((((xItem).x_meta).xget_field)).apply ("modified"))))
                xtest_transform.write
                  [xself]
                    memory > xwhere
                    memory > xlookup
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((unsupported)).apply ((xQuery)) ((xAuthor)) ((xfalse)))
                        (((unsupported)).apply ((((xregister_lookup)).apply ((xCharField)) ((xLower)))))
                          xwhere.write ((((xquery).xbuild_where)).apply (((((unsupported)).apply ((xQ)) ("foo")).neg)))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xExact)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xlookup).xlhs)) ((xLower)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xlookup).xlhs).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xlookup).xlhs).xlhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xlookup).xlhs).xlhs).xtarget)) ((((((xAuthor).x_meta).xget_field)).apply ("name"))))
                xtest_negated_nullable.write
                  [xself]
                    memory > xwhere
                    memory > xlookup
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        xwhere.write ((((xquery).xbuild_where)).apply (((((unsupported)).apply ((xQ)) ((((xdatetime)).apply (2017) (1) (1)))).neg)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xwhere).xnegated)))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xLessThan)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xlhs).xtarget)) ((((((xItem).x_meta).xget_field)).apply ("modified"))))
                        xlookup.write (((unsupported)).apply (((xwhere).xchildren)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xlookup)) ((xIsNull)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlookup).xlhs).xtarget)) ((((((xItem).x_meta).xget_field)).apply ("modified"))))
                xtest_foreign_key.write
                  [xself]
                    memory > xmsg
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        xmsg.write "Joined field references are not permitted in this query"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xFieldError)) ((xmsg)))))
                          bogusForceDataize.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xQ)) (2))))
                xtest_foreign_key_f.write
                  [xself]
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xRanking)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xFieldError)))))
                          bogusForceDataize.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xQ)) ((((xF)).apply ("author__num"))))))
                xtest_foreign_key_exclusive.write
                  [xself]
                    memory > xb_isnull
                    memory > xa_isnull
                    memory > xwhere
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((unsupported)).apply ((xQuery)) ((xObjectC)) ((xfalse)))
                        xwhere.write ((((xquery).xbuild_where)).apply (((((unsupported)).apply ((xQ)) ("None: is there a None literal in the EO language?")).or (((unsupported)).apply ((xQ)) ("None: is there a None literal in the EO language?")))))
                        xa_isnull.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xa_isnull)) ((xRelatedIsNull)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xa_isnull).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xa_isnull).xlhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xa_isnull).xlhs).xtarget)) ((((((xObjectC).x_meta).xget_field)).apply ("objecta"))))
                        xb_isnull.write (((unsupported)).apply (((xwhere).xchildren)) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xb_isnull)) ((xRelatedIsNull)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xb_isnull).xlhs)) ((xCol)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xb_isnull).xlhs).xalias)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xb_isnull).xlhs).xtarget)) ((((((xObjectC).x_meta).xget_field)).apply ("objectb"))))
                xtest_clone_select_related.write
                  [xself]
                    memory > xclone
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        bogusForceDataize.write ((((xquery).xadd_select_related)).apply ((((unsupported)).apply ("creator"))))
                        xclone.write ((((xquery).xclone)).apply)
                        bogusForceDataize.write ((((xclone).xadd_select_related)).apply ((((unsupported)).apply ("note") ("creator__extra"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xquery).xselect_related)) ((((unsupported)).apply ("creator") ((((unsupported)).apply)))))
                xtest_iterable_lookup_value.write
                  [xself]
                    memory > xwhere
                    memory > xquery
                    memory > xname_exact
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        xwhere.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xQ)) ((((unsupported)).apply ("a") ("b"))))))
                        xname_exact.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xname_exact)) ((xExact)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xname_exact).xrhs)) ("['a', 'b']"))
                xtest_filter_conditional.write
                  [xself]
                    memory > xexact
                    memory > xwhere
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        xwhere.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xFunc)) ((((xBooleanField)).apply)))))
                        xexact.write (((unsupported)).apply (((xwhere).xchildren)) (0))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xexact)) ((xExact)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xexact).xlhs)) ((xFunc)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((xexact).xrhs)) (TRUE))
                xtest_filter_conditional_join.write
                  [xself]
                    memory > xfilter_expr
                    memory > xmsg
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        xfilter_expr.write (((unsupported)).apply ((xFunc)) ("note__note") ((((xBooleanField)).apply)))
                        xmsg.write "Joined field references are not permitted in this query"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xFieldError)) ((xmsg)))))
                          bogusForceDataize.write ((((xquery).xbuild_where)).apply ((xfilter_expr)))
                xtest_filter_non_conditional.write
                  [xself]
                    memory > xmsg
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ((xItem)))
                        xmsg.write "Cannot filter against a non-conditional expression."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write ((((xquery).xbuild_where)).apply ((((unsupported)).apply ((xFunc)) ((((xCharField)).apply)))))
            (((unsupported)).apply ((xTestCase)))
              seq
                xtest_rawsql_annotation.write
                  [xself]
                    memory > xsql
                    memory > xresult
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ("None: is there a None literal in the EO language?"))
                        xsql.write "%s IS NULL"
                        ((((xconnection).xfeatures).xsupports_boolean_expr_in_select_clause).not).if
                          xsql.write "CASE WHEN {sql} THEN 1 ELSE 0 END"
                        bogusForceDataize.write ((((xquery).xadd_annotation)).apply ((((xRawSQL)).apply ((xsql)) ((((unsupported)).apply ("None: is there a None literal in the EO language?"))) ((((xBooleanField)).apply)))) ("_check"))
                        xresult.write ((((((unsupported)).apply (((xquery).xget_compiler)) ((xDEFAULT_DB_ALIAS))).xexecute_sql)).apply ((xSINGLE)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xresult)) (0))) (1))
                xtest_subquery_annotation.write
                  [xself]
                    memory > xresult
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xquery).xadd_annotation)).apply ((((xExists)).apply ((((((xItem).xobjects).xall)).apply)))) ("_check"))
                        xresult.write ((((((unsupported)).apply (((xquery).xget_compiler)) ((xDEFAULT_DB_ALIAS))).xexecute_sql)).apply ((xSINGLE)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xresult)) (0))) (0))
                xtest_q_annotation.write
                  [xself]
                    memory > xresult
                    memory > xcheck
                    memory > xquery
                    seq > @
                      (((unsupported)).apply)
                        xquery.write (((xQuery)).apply ("None: is there a None literal in the EO language?"))
                        xcheck.write (((xExpressionWrapper)).apply (((((xQ)).apply ((((xRawSQL)).apply ("%s IS NULL") ((((unsupported)).apply ("None: is there a None literal in the EO language?"))) ((((xBooleanField)).apply))))).or (((xQ)).apply ((((xExists)).apply ((((((xItem).xobjects).xall)).apply))))))) ((((xBooleanField)).apply)))
                        bogusForceDataize.write ((((xquery).xadd_annotation)).apply ((xcheck)) ("_check"))
                        xresult.write ((((((unsupported)).apply (((xquery).xget_compiler)) ((xDEFAULT_DB_ALIAS))).xexecute_sql)).apply ((xSINGLE)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xresult)) (0))) (1))
                xtest_names_to_path_field.write
                  [xself]
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xquery).xadd_annotation)).apply ((((xValue)).apply (TRUE))) ("value"))
                        (((unsupported)).apply ((((unsupported)).apply ((xpath)) ((xfinal_field)) ((xtargets)) ((xnames)))) ((((unsupported)).apply (((xquery).xnames_to_path)) ((((unsupported)).apply ("value"))) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xpath)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xfinal_field)) ((xBooleanField)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xtargets)))) (1))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((unsupported)).apply ((xtargets)) (0))) ((xBooleanField)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xnames)) ((((unsupported)).apply)))
                xtest_names_to_path_field_error.write
                  [xself]
                    memory > xmsg
                    memory > xquery
                    seq > @
                      seq
                        xquery.write (((xQuery)).apply ("None: is there a None literal in the EO language?"))
                        xmsg.write "Cannot resolve keyword 'nonexistent' into field."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xFieldError)) ((xmsg)))))
                          (((unsupported)).apply (((xquery).xnames_to_path)) ((((unsupported)).apply ("nonexistent"))) ("None: is there a None literal in the EO language?"))
                xtest_get_field_names_from_opts.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_field_names_from_opts)).apply ("None: is there a None literal in the EO language?"))) ((((xset)).apply)))
            (((unsupported)).apply ((xSimpleTestCase)))
              xtest_repr.write
                [xself]
                  seq > @
                    bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xJoinPromoter)).apply ("AND") (3) (TRUE))))) ("JoinPromoter(connector='AND', num_children=3, negated=True)"))