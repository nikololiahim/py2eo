memory > xtemplate_dir
memory > xsafe_join
memory > xOrigin
memory > xFileNotFoundError
memory > xopen
memory > xSuspiciousFileOperation
memory > xsuper
memory > xTemplateDoesNotExist
memory > xfp
memory > xdirs2
[] > filesystem
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xget_contents
        memory > xBaseLoader
        memory > x__init__
        memory > xget_dirs
        memory > xget_template_sources
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xBaseLoader)))
              seq
                x__init__.write
                  [xself xengine xdirs]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xengine)))
                        (((unsupported)).apply (((xself).xdirs)) ((xdirs2)))
                xget_dirs.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((unsupported)).apply (((xself).xdirs)) ("None: is there a None literal in the EO language?")).if ((xself).xdirs) (((xself).xengine).xdirs))))
                xget_contents.write
                  [xself xorigin]
                    seq > @
                      (((unsupported)).apply ((xFileNotFoundError)))
                        (((unsupported)).apply ((((unsupported)).apply ((xopen)) (((xorigin).xname)) ((((xself).xengine).xfile_charset)))) ((xfp)))
                          (((unsupported)).apply (((((xfp).xread)).apply)))
                        (((unsupported)).apply ((((xTemplateDoesNotExist)).apply ((xorigin)))))
                xget_template_sources.write
                  [xself xtemplate_name]
                    memory > xname
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xtemplate_dir)) (((((xself).xget_dirs)).apply)))
                          seq
                            (((unsupported)).apply ((xSuspiciousFileOperation)))
                              xname.write (((xsafe_join)).apply ((xtemplate_dir)) ((xtemplate_name)))
                              (((unsupported)).apply)
                            (((unsupported)).apply ((((unsupported)).apply ((xOrigin)) ((xname)) ((xtemplate_name)) ((xself)))))