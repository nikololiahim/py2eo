memory > xKeyError
memory > xHttp404
memory > xgetattr
[] > views
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xfeed
        memory > x_
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            xfeed.write
              [xrequest xurl xfeed_dict]
                memory > xinstance
                memory > xslug
                memory > xf
                seq > @
                  (((unsupported)).apply)
                    unsupported
                    ((xfeed_dict).not).if
                      (((unsupported)).apply ((((xHttp404)).apply ((((x_)).apply ("No feeds are registered."))))))
                    xslug.write (((unsupported)).apply (((((xurl).xpartition)).apply ("/"))) (0))
                    (((unsupported)).apply ((xKeyError)))
                      xf.write (((unsupported)).apply ((xfeed_dict)) ((xslug)))
                      (((unsupported)).apply ((((xHttp404)).apply (((((x_)).apply ("Slug %r isnâ€™t registered.")).mod (xslug))))))
                    xinstance.write (((xf)).apply)
                    (((unsupported)).apply (((xinstance).xfeed_url)) (((((xgetattr)).apply ((xf)) ("feed_url") ("None: is there a None literal in the EO language?")).or ((xrequest).xpath))))
                    (((unsupported)).apply (((xinstance).xtitle_template)) ((((xf).xtitle_template).or ("feeds/%s_title.html".mod (xslug)))))
                    (((unsupported)).apply (((xinstance).xdescription_template)) ((((xf).xdescription_template).or ("feeds/%s_description.html".mod (xslug)))))
                    (((unsupported)).apply ((((xinstance)).apply ((xrequest)))))