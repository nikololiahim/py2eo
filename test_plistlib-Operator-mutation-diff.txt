163c163
<                         xpl.write (((unsupported)).apply ((xdict)) ("Doodah") ((((unsupported)).apply ("A") ("B") (12) (32.5) ((((unsupported)).apply (1) (2) (3))))) (0.5) (728) (((((unsupported)).apply (2) (63)).sub 44)) (((((unsupported)).apply (2) (63)).add 44)) ((5.neg)) (((((unsupported)).apply).neg)) ((((unsupported)).apply ((xdict)) ("<hello & 'hi' there!>") ("Mxe4ssig, Maxdf") (TRUE) (FALSE) ((((unsupported)).apply ((xdict)) (17) (32.5) ((((unsupported)).apply (1) (2) ("text"))))))) ("<binary gunk>") (("<lots of binary gunk>0123".mul 10)) ((((unsupported)).apply (("<lots of binary gunk>0123".mul 10)))) (((((xdatetime).xdatetime)).apply (2004) (10) (26) (10) (33) (33))) ((((xdict)).apply)) ((((xlist)).apply)))
---
>                         xpl.write (((unsupported)).apply ((xdict)) ("Doodah") ((((unsupported)).apply ("A") ("B") (12) (32.5) ((((unsupported)).apply (1) (2) (3))))) (0.5) (728) (((((unsupported)).apply (2) (63)).sub 44)) (((((unsupported)).apply (2) (63)).sub 44)) ((5.neg)) (((((unsupported)).apply).neg)) ((((unsupported)).apply ((xdict)) ("<hello & 'hi' there!>") ("Mxe4ssig, Maxdf") (TRUE) (FALSE) ((((unsupported)).apply ((xdict)) (17) (32.5) ((((unsupported)).apply (1) (2) ("text"))))))) ("<binary gunk>") (("<lots of binary gunk>0123".mul 10)) ((((unsupported)).apply (("<lots of binary gunk>0123".mul 10)))) (((((xdatetime).xdatetime)).apply (2004) (10) (26) (10) (33) (33))) ((((xdict)).apply)) ((((xlist)).apply)))
225c225
<                           (((unsupported)).apply ((xpl)) ((((unsupported)).apply (((((unsupported)).apply (2) (64)).add 1)) (((((unsupported)).apply (2) (127)).sub 1)) (((((unsupported)).apply (2) (64)).neg)) (((((unsupported)).apply (2) (127)).neg)))))
---
>                           (((unsupported)).apply ((xpl)) ((((unsupported)).apply (((((unsupported)).apply (2) (64)).sub 1)) (((((unsupported)).apply (2) (127)).sub 1)) (((((unsupported)).apply (2) (64)).neg)) (((((unsupported)).apply (2) (127)).neg)))))
318c318
<                       (((unsupported)).apply ((xproto)) ((((xrange)).apply ((((xpickle).xHIGHEST_PROTOCOL).add 1)))))
---
>                       (((unsupported)).apply ((xproto)) ((((xrange)).apply ((((xpickle).xHIGHEST_PROTOCOL).sub 1)))))
597c597
<                                 xdata.write ((xbom).add (((((((xdata).xdecode)).apply ("utf-8")).xencode)).apply ((xencoding))))
---
>                                 xdata.write ((xbom).sub (((((((xdata).xdecode)).apply ("utf-8")).xencode)).apply ((xencoding))))
711c711
<                           xchunks.write (((unsupported)).apply (("xa1".add (((((xi).add 1).xto_bytes)).apply (4) ("big")))) ((xi)) ((((xrange)).apply ((xN)))))
---
>                           xchunks.write (((unsupported)).apply (("xa1".sub (((((xi).sub 1).xto_bytes)).apply (4) ("big")))) ((xi)) ((((xrange)).apply ((xN)))))
729c729
<                             xd.write ((((((xdatetime).xdatetime).xutcfromtimestamp)).apply (0)).add (((unsupported)).apply (((xdatetime).xtimedelta)) ((xts))))
---
>                             xd.write ((((((xdatetime).xdatetime).xutcfromtimestamp)).apply (0)).sub (((unsupported)).apply (((xdatetime).xtimedelta)) ((xts))))
757c757
<                           bogusForceDataize.write ((((xunsupported).xextend)).apply ((((unsupported)).apply (((xi).add (xj))) ((xj)) ((((xrange)).apply (16))))))
---
>                           bogusForceDataize.write ((((xunsupported).xextend)).apply ((((unsupported)).apply (((xi).sub (xj))) ((xj)) ((((xrange)).apply (16))))))
761c761
<                               bogusForceDataize.write ((((xself).xdecode)).apply (((((xbytes)).apply ((((unsupported)).apply ((xtoken))))).add ("x00".mul 16))))
---
>                               bogusForceDataize.write ((((xself).xdecode)).apply (((((xbytes)).apply ((((unsupported)).apply ((xtoken))))).sub ("x00".mul 16))))
768c768
<                             (((unsupported)).apply (((xplistlib).xloads)) (("bplist00".add (xdata))) (((xplistlib).xFMT_BINARY)))
---
>                             (((unsupported)).apply (((xplistlib).xloads)) (("bplist00".sub (xdata))) (((xplistlib).xFMT_BINARY)))