memory > xRuntimeError
memory > xRenderContext
memory > xKeyError
memory > xsuper
memory > xargs
memory > xkwargs
memory > xTypeError
memory > xd
memory > xContext
memory > xcopy
memory > xprocessor
memory > xRequestContext
memory > xContextDict
memory > xreversed
memory > xContextPopException
memory > xany
memory > xrepr
memory > xBaseContext
memory > xException
memory > xhasattr
memory > xtuple
memory > xNotImplemented
memory > xisinstance
memory > xlen
memory > xdict
[] > context
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__iter__
        memory > xnew
        memory > x__getitem__
        memory > x__delitem__
        memory > x__enter__
        memory > x_reset_dicts
        memory > x__setitem__
        memory > xupdate
        memory > xpush_state
        memory > xbind_template
        memory > x__copy__
        memory > xflatten
        memory > x__eq__
        memory > x__repr__
        memory > xget
        memory > xset_upward
        memory > xpop
        memory > xsetdefault
        memory > x__contains__
        memory > xtemplate
        memory > xpush
        memory > x__exit__
        memory > x_builtin_context_processors
        memory > xmake_context
        memory > x__init__
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            x_builtin_context_processors.write (((unsupported)).apply ("django.template.context_processors.csrf"))
            (((unsupported)).apply ((xException)))
              seq
                unsupported
            (((unsupported)).apply ((xdict)))
              seq
                x__init__.write
                  [xself xcontext]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        bogusForceDataize.write (((((xcontext).xdicts).xappend)).apply ((xself)))
                        (((unsupported)).apply (((xself).xcontext)) ((xcontext)))
                x__enter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xself)))
                x__exit__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).xcontext).xpop)).apply)
            (((unsupported)).apply)
              seq
                x__init__.write
                  [xself xdict_]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).x_reset_dicts)).apply ((xdict_)))
                x_reset_dicts.write
                  [xself xvalue]
                    memory > xbuiltins
                    seq > @
                      (((unsupported)).apply)
                        xbuiltins.write (((unsupported)).apply ("True") (TRUE) ("False") (FALSE) ("None") ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xself).xdicts)) ((((unsupported)).apply ((xbuiltins)))))
                        (((unsupported)).apply ((xvalue)) ("None: is there a None literal in the EO language?")).if
                          bogusForceDataize.write (((((xself).xdicts).xappend)).apply ((xvalue)))
                x__copy__.write
                  [xself]
                    memory > xduplicate
                    seq > @
                      seq
                        xduplicate.write (((xcopy)).apply ((((xsuper)).apply)))
                        (((unsupported)).apply (((xduplicate).xdicts)) ((((unsupported)).apply (((xself).xdicts)) ((((unsupported)).apply)))))
                        (((unsupported)).apply ((xduplicate)))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xrepr)).apply (((xself).xdicts)))))
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xreversed)).apply (((xself).xdicts)))))
                xpush.write
                  [xself]
                    memory > xdicts
                    seq > @
                      (((unsupported)).apply)
                        xdicts.write (((unsupported)).apply)
                        (((unsupported)).apply ((xd)) ((xargs)))
                          (((xisinstance)).apply ((xd)) ((xBaseContext))).if
                            (((unsupported)).apply ((xdicts)) ((((unsupported)).apply (((xd).xdicts)) ((((unsupported)).apply (1))))))
                            bogusForceDataize.write ((((xdicts).xappend)).apply ((xd)))
                        (((unsupported)).apply ((((xContextDict)).apply ((xself)) ((((unsupported)).apply ((xdicts)))) ((((unsupported)).apply ((xkwargs)))))))
                xpop.write
                  [xself]
                    seq > @
                      seq
                        ((((xlen)).apply (((xself).xdicts))).eq 1).if
                          (((unsupported)).apply ((xContextPopException)))
                        (((unsupported)).apply ((((((xself).xdicts).xpop)).apply)))
                x__setitem__.write
                  [xself xkey xvalue]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xdicts)) ((1.neg)))) ((xkey)))) ((xvalue)))
                xset_upward.write
                  [xself xkey xvalue]
                    memory > xcontext
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xcontext.write (((unsupported)).apply (((xself).xdicts)) ((1.neg)))
                        (((unsupported)).apply ((xd)) ((((xreversed)).apply (((xself).xdicts)))))
                          (((unsupported)).apply ((xkey)) ((xd))).if
                            seq
                              xcontext.write (xd)
                              (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xcontext)) ((xkey)))) ((xvalue)))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xd)) ((((xreversed)).apply (((xself).xdicts)))))
                          (((unsupported)).apply ((xkey)) ((xd))).if
                            (((unsupported)).apply ((((unsupported)).apply ((xd)) ((xkey)))))
                        (((unsupported)).apply ((((xKeyError)).apply ((xkey)))))
                x__delitem__.write
                  [xself xkey]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xdicts)) ((1.neg)))) ((xkey)))))))))
                x__contains__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((((xany)).apply ((((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xd)))) ((xd)) (((xself).xdicts)))))))
                xget.write
                  [xself xkey xotherwise]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xd)) ((((xreversed)).apply (((xself).xdicts)))))
                          (((unsupported)).apply ((xkey)) ((xd))).if
                            (((unsupported)).apply ((((unsupported)).apply ((xd)) ((xkey)))))
                        (((unsupported)).apply ((xotherwise)))
                xsetdefault.write
                  [xself xkey xdefault]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xKeyError)))
                          (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))))
                          (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))) ((xdefault)))
                        (((unsupported)).apply ((xdefault)))
                xnew.write
                  [xself xvalues]
                    memory > xnew_context
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xnew_context.write (((xcopy)).apply ((xself)))
                        bogusForceDataize.write ((((xnew_context).x_reset_dicts)).apply ((xvalues)))
                        (((unsupported)).apply ((xnew_context)))
                xflatten.write
                  [xself]
                    memory > xflat
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xflat.write (((unsupported)).apply)
                        (((unsupported)).apply ((xd)) (((xself).xdicts)))
                          bogusForceDataize.write ((((xflat).xupdate)).apply ((xd)))
                        (((unsupported)).apply ((xflat)))
                x__eq__.write
                  [xself xother]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((((xisinstance)).apply ((xother)) ((xBaseContext))).not).if
                          (((unsupported)).apply ((xNotImplemented)))
                        (((unsupported)).apply ((((((xself).xflatten)).apply).eq ((((xother).xflatten)).apply))))
            (((unsupported)).apply ((xBaseContext)))
              seq
                unsupported
                x__init__.write
                  [xself xdict_ xautoescape xuse_l10n xuse_tz]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xautoescape)) ((xautoescape)))
                        (((unsupported)).apply (((xself).xuse_l10n)) ((xuse_l10n)))
                        (((unsupported)).apply (((xself).xuse_tz)) ((xuse_tz)))
                        (((unsupported)).apply (((xself).xtemplate_name)) ("unknown"))
                        (((unsupported)).apply (((xself).xrender_context)) ((((xRenderContext)).apply)))
                        (((unsupported)).apply (((xself).xtemplate)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xdict_)))
                xbind_template.write
                  [xself xtemplate]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xtemplate)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((xRuntimeError)).apply ("Context is already bound to a template"))))
                        (((unsupported)).apply (((xself).xtemplate)) ((xtemplate)))
                        (((unsupported)).apply)
                          (((unsupported)).apply)
                          (((unsupported)).apply (((xself).xtemplate)) ("None: is there a None literal in the EO language?"))
                x__copy__.write
                  [xself]
                    memory > xduplicate
                    seq > @
                      seq
                        xduplicate.write ((((((xsuper)).apply).x__copy__)).apply)
                        (((unsupported)).apply (((xduplicate).xrender_context)) ((((xcopy)).apply (((xself).xrender_context)))))
                        (((unsupported)).apply ((xduplicate)))
                xupdate.write
                  [xself xother_dict]
                    seq > @
                      seq
                        unsupported
                        ((((xhasattr)).apply ((xother_dict)) ("__getitem__")).not).if
                          (((unsupported)).apply ((((xTypeError)).apply ("other_dict must be a mapping (dictionary-like) object."))))
                        (((xisinstance)).apply ((xother_dict)) ((xBaseContext))).if
                          xother_dict.write ((((((unsupported)).apply (((xother_dict).xdicts)) ((((unsupported)).apply (1)))).xpop)).apply)
                        (((unsupported)).apply ((((xContextDict)).apply ((xself)) ((xother_dict)))))
            (((unsupported)).apply ((xBaseContext)))
              seq
                (((unsupported)).apply)
                xtemplate.write "None: is there a None literal in the EO language?"
                x__iter__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply (((xself).xdicts)) ((1.neg)))))
                x__contains__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((((unsupported)).apply (((xself).xdicts)) ((1.neg)))))))
                xget.write
                  [xself xkey xotherwise]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((((unsupported)).apply (((xself).xdicts)) ((1.neg))).xget)).apply ((xkey)) ((xotherwise)))))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xself).xdicts)) ((1.neg)))) ((xkey)))))
                xpush_state.write
                  [xself xtemplate xisolated_context]
                    memory > xinitial
                    seq > @
                      (((unsupported)).apply)
                        xinitial.write ((xself).xtemplate)
                        (((unsupported)).apply (((xself).xtemplate)) ((xtemplate)))
                        (xisolated_context).if
                          bogusForceDataize.write ((((xself).xpush)).apply)
                        (((unsupported)).apply)
                          (((unsupported)).apply)
                          seq
                            (((unsupported)).apply (((xself).xtemplate)) ((xinitial)))
                            (xisolated_context).if
                              bogusForceDataize.write ((((xself).xpop)).apply)
            (((unsupported)).apply ((xContext)))
              seq
                (((unsupported)).apply)
                x__init__.write
                  [xself xrequest xdict_ xprocessors xuse_l10n xuse_tz xautoescape]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xsuper)).apply).x__init__)) ((xdict_)) ((xuse_l10n)) ((xuse_tz)) ((xautoescape)))
                        (((unsupported)).apply (((xself).xrequest)) ((xrequest)))
                        (((unsupported)).apply (((xself).x_processors)) (((((unsupported)).apply ((xprocessors)) ("None: is there a None literal in the EO language?")).if (((unsupported)).apply) (((xtuple)).apply ((xprocessors))))))
                        (((unsupported)).apply (((xself).x_processors_index)) ((((xlen)).apply (((xself).xdicts)))))
                        bogusForceDataize.write ((((xself).xupdate)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xupdate)).apply ((((unsupported)).apply)))
                xbind_template.write
                  [xself xtemplate]
                    memory > xprocessors
                    memory > xupdates
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xtemplate)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((xRuntimeError)).apply ("Context is already bound to a template"))))
                        (((unsupported)).apply (((xself).xtemplate)) ((xtemplate)))
                        xprocessors.write ((((xtemplate).xengine).xtemplate_context_processors).add ((xself).x_processors))
                        xupdates.write (((unsupported)).apply)
                        (((unsupported)).apply ((xprocessor)) ((xprocessors)))
                          bogusForceDataize.write ((((xupdates).xupdate)).apply ((((xprocessor)).apply (((xself).xrequest)))))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xdicts)) (((xself).x_processors_index)))) ((xupdates)))
                        (((unsupported)).apply)
                          (((unsupported)).apply)
                          seq
                            (((unsupported)).apply (((xself).xtemplate)) ("None: is there a None literal in the EO language?"))
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xdicts)) (((xself).x_processors_index)))) ((((unsupported)).apply)))
                xnew.write
                  [xself xvalues]
                    memory > xnew_context
                    seq > @
                      (((unsupported)).apply)
                        xnew_context.write ((((((xsuper)).apply).xnew)).apply ((xvalues)))
                        (((xhasattr)).apply ((xnew_context)) ("_processors_index")).if
                          (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xnew_context).x_processors_index)))))))
                        (((unsupported)).apply ((xnew_context)))
            xmake_context.write
              [xcontext xrequest]
                memory > xoriginal_context
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    ((((unsupported)).apply ((xcontext)) ("None: is there a None literal in the EO language?")).and ((((xisinstance)).apply ((xcontext)) ((xdict))).not)).if
                      (((unsupported)).apply ((((xTypeError)).apply (("context must be a dict rather than %s.".mod (((xcontext).x__class__).x__name__))))))
                    (((unsupported)).apply ((xrequest)) ("None: is there a None literal in the EO language?")).if
                      xcontext.write (((xContext)).apply ((xcontext)) ((((unsupported)).apply ((xkwargs)))))
                      seq
                        xoriginal_context.write (xcontext)
                        xcontext.write (((xRequestContext)).apply ((xrequest)) ((((unsupported)).apply ((xkwargs)))))
                        (xoriginal_context).if
                          bogusForceDataize.write ((((xcontext).xpush)).apply ((xoriginal_context)))
                    (((unsupported)).apply ((xcontext)))