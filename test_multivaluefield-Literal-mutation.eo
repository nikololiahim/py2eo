memory > xPartiallyRequiredField
memory > xValidationError
memory > xComplexFieldForm
memory > xComplexField
memory > xComplexMultiWidget
memory > xsuper
memory > xForm
memory > xSplitDateTimeField
memory > xSimpleTestCase
memory > xdatetime
memory > xdata
memory > xlist
memory > xSelectMultiple
memory > xMultiWidget
memory > xCharField
memory > xPartiallyRequiredForm
memory > xSplitDateTimeWidget
memory > xMultiValueField
memory > xMultipleChoiceField
memory > xTextInput
memory > xkwargs
[] > test_multivaluefield
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_has_changed_first_widget
        memory > xtest_no_value
        memory > xbeatles
        memory > xtest_render_required_attributes
        memory > xtest_form_cleaned_data
        memory > xf
        memory > xtest_clean_disabled_multivalue
        memory > xtest_form_as_table
        memory > xdecompress
        memory > x__init__
        memory > xtest_disabled_has_changed
        memory > xtest_clean
        memory > xtest_bad_choice
        memory > xtest_has_changed_same
        memory > xtest_form_as_table_data
        memory > xsetUpClass
        memory > xtest_has_changed_last_widget
        memory > xfield1
        memory > xtest_has_changed_no_initial
        memory > xcompress
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xbeatles.write (((unsupported)).apply ((((unsupported)).apply ("J") ("John"))) ((((unsupported)).apply ("P") ("Paul"))) ((((unsupported)).apply ("G") ("George"))) ((((unsupported)).apply ("R") ("Ringo"))))
            (((unsupported)).apply ((xMultiValueField)))
              xcompress.write
                [xself xdata_list]
                  seq > @
                    (((unsupported)).apply (((xdata_list).if (((",".xjoin)).apply ((xdata_list))) "None: is there a None literal in the EO language?")))
            (((unsupported)).apply ((xForm)))
              xf.write (((unsupported)).apply ((xPartiallyRequiredField)) ((((unsupported)).apply ((((unsupported)).apply ((xCharField)) (TRUE))) ((((unsupported)).apply ((xCharField)) (FALSE))))) (TRUE) (FALSE) ((((unsupported)).apply ((xMultiWidget)) ((((unsupported)).apply ((((xTextInput)).apply)) ((((xTextInput)).apply)))))))
            (((unsupported)).apply ((xMultiWidget)))
              seq
                x__init__.write
                  [xself xattrs]
                    memory > xwidgets
                    seq > @
                      (((unsupported)).apply)
                        xwidgets.write (((unsupported)).apply ((((xTextInput)).apply)) ((((unsupported)).apply ((xSelectMultiple)) ((xbeatles)))) ((((xSplitDateTimeWidget)).apply)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xwidgets)) ((xattrs)))
                xdecompress.write
                  [xself xvalue]
                    memory > xdata
                    seq > @
                      seq
                        (xvalue).if
                          seq
                            xdata.write ((((xvalue).xsplit)).apply (","))
                            (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xdata)) (0))) ((((xlist)).apply ((((unsupported)).apply ((xdata)) (1))))) (((((xdatetime).xstrptime)).apply ((((unsupported)).apply ((xdata)) (2))) ("%Y-%m-%d %H:%M:%S"))))))
                        (((unsupported)).apply ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))
            (((unsupported)).apply ((xMultiValueField)))
              seq
                x__init__.write
                  [xself]
                    memory > xfields
                    seq > @
                      (((unsupported)).apply)
                        xfields.write (((unsupported)).apply ((((xCharField)).apply)) ((((unsupported)).apply ((xMultipleChoiceField)) ((xbeatles)))) ((((xSplitDateTimeField)).apply)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((xfields)) ((((unsupported)).apply ((xkwargs)))))
                xcompress.write
                  [xself xdata_list]
                    seq > @
                      seq
                        (xdata_list).if
                          (((unsupported)).apply (("%s,%s,%s".mod (((unsupported)).apply ((((unsupported)).apply ((xdata_list)) (0))) (((("".xjoin)).apply ((((unsupported)).apply ((xdata_list)) (1))))) ((((unsupported)).apply ((xdata_list)) (2)))))))
                        (((unsupported)).apply ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply ((xForm)))
              xfield1.write (((unsupported)).apply ((xComplexField)) ((((xComplexMultiWidget)).apply)))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xfield)) ((((unsupported)).apply ((xComplexField)) ((((xComplexMultiWidget)).apply)))))
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUpClass)).apply)
                xtest_clean.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xself).xfield).xclean)).apply ((((unsupported)).apply ("some text") ((((unsupported)).apply ("J") ("P"))) ((((unsupported)).apply ("2007-04-25") ("6:24:00"))))))) ("some text,JP,2007-04-25 06:24:00"))
                xtest_clean_disabled_multivalue.write
                  [xself]
                    memory > xform
                    memory > xinputs
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)).apply ((xForm)))
                          xf.write (((unsupported)).apply ((xComplexField)) (TRUE) ((xComplexMultiWidget)))
                        xinputs.write (((unsupported)).apply ("some text,JP,2007-04-25 06:24:00") ((((unsupported)).apply ("some text") ((((unsupported)).apply ("J") ("P"))) ((((unsupported)).apply ("2007-04-25") ("6:24:00"))))))
                        (((unsupported)).apply ((xdata)) ((xinputs)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xdata)))))
                            seq
                              xform.write (((unsupported)).apply ((xComplexFieldForm)) ((((unsupported)).apply)) ((((unsupported)).apply ("f") ((xdata)))))
                              bogusForceDataize.write ((((xform).xfull_clean)).apply)
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xform).xerrors)) ((((unsupported)).apply)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xform).xcleaned_data)) ((((unsupported)).apply ("f") ((((unsupported)).apply ((xinputs)) (0))))))
                xtest_bad_choice.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "'Select a valid choice. X is not one of the available choices.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xfield).xclean)).apply ((((unsupported)).apply ("some text") ((((unsupported)).apply ("X"))) ((((unsupported)).apply ("2007-04-25") ("6:24:00"))))))
                xtest_no_value.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xmsg.write "'This field is required.'"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write (((((xself).xfield).xclean)).apply ((((unsupported)).apply ("some text") ((((unsupported)).apply ("JP"))))))
                xtest_has_changed_no_initial.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xself).xfield).xhas_changed)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("some text") ((((unsupported)).apply ("J") ("P"))) ((((unsupported)).apply ("2007-04-25") ("6:24:00"))))))))
                xtest_has_changed_same.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertFalse)).apply ((((((xself).xfield).xhas_changed)).apply ("some text,JP,2007-04-25 06:24:00") ((((unsupported)).apply ("some text") ((((unsupported)).apply ("J") ("P"))) ((((unsupported)).apply ("2007-04-25") ("6:24:00"))))))))
                xtest_has_changed_first_widget.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xself).xfield).xhas_changed)).apply ("some text,JP,2007-04-25 06:24:00") ((((unsupported)).apply ("other text") ((((unsupported)).apply ("J") ("P"))) ((((unsupported)).apply ("2007-04-25") ("6:24:00"))))))))
                xtest_has_changed_last_widget.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((((xself).xfield).xhas_changed)).apply ("some text,JP,2007-04-25 06:24:00") ((((unsupported)).apply ("some text") ((((unsupported)).apply ("J") ("P"))) ((((unsupported)).apply ("2009-04-25") ("11:44:00"))))))))
                xtest_disabled_has_changed.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xMultiValueField)) ((((unsupported)).apply ((((xCharField)).apply)) ((((xCharField)).apply)))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply ("x") ("x"))) ((((unsupported)).apply ("y") ("y"))))) (FALSE))
                xtest_form_as_table.write
                  [xself]
                    memory > xform
                    seq > @
                      seq
                        xform.write (((xComplexFieldForm)).apply)
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((((xform).xas_table)).apply)) ((((unsupported)).apply)))
                xtest_form_as_table_data.write
                  [xself]
                    memory > xform
                    seq > @
                      seq
                        xform.write (((xComplexFieldForm)).apply ((((unsupported)).apply ("field1_0") ("some text") ("field1_1") ((((unsupported)).apply ("J") ("P"))) ("field1_2_0") ("2007-04-25") ("field1_2_1") ("06:24:00"))))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((((xform).xas_table)).apply)) ((((unsupported)).apply)))
                xtest_form_cleaned_data.write
                  [xself]
                    memory > xform
                    seq > @
                      seq
                        xform.write (((xComplexFieldForm)).apply ((((unsupported)).apply ("field1_0") ("some text") ("field1_1") ((((unsupported)).apply ("J") ("P"))) ("field1_2_0") ("2007-04-25") ("field1_2_1") ("06:24:00"))))
                        bogusForceDataize.write ((((xform).xis_valid)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xcleaned_data)) ("field1"))) ("some text,JP,2007-04-25 06:24:00"))
                xtest_render_required_attributes.write
                  [xself]
                    memory > xform
                    seq > @
                      seq
                        xform.write (((xPartiallyRequiredForm)).apply ((((unsupported)).apply ("f_0") ("Hello") ("f_1") (""))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xform).xis_valid)).apply)))
                        bogusForceDataize.write ((((xself).xassertInHTML)).apply ("<input type=\"text\" name=\"f_0\" value=\"Hello\" required id=\"id_f_0\">") (((((xform).xas_p)).apply)))
                        bogusForceDataize.write ((((xself).xassertInHTML)).apply ("<input type=\"text\" name=\"f_1\" id=\"id_f_1\">") (((((xform).xas_p)).apply)))
                        xform.write (((xPartiallyRequiredForm)).apply ((((unsupported)).apply ("f_0") ("") ("f_1") (""))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xform).xis_valid)).apply)))