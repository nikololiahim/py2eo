memory > xstring_at
memory > xMultiPoint
memory > xstr
memory > xg
memory > xint
memory > xproperty
memory > xCoordTransform
memory > xwkt_regex
memory > xx1
memory > xc_void_p
memory > xValueError
memory > xMultiLineString
memory > xrange
memory > xLinearRing
memory > xb2a_hex
memory > xGeometryCollection
memory > xIndexError
memory > xc_ubyte
memory > xtype
memory > xbyref
memory > xsum
memory > xi
memory > xOGREnvelope
memory > xhex_regex
memory > xsuper
memory > xc_char_p
memory > xsys
memory > xbytes
memory > xGDALException
memory > xSRSException
memory > xPoint
memory > xLineString
memory > xjson_regex
memory > xc_double
memory > xy0
memory > xGDALBase
memory > xMultiPolygon
memory > xEnvelope
memory > xforce_bytes
memory > xx0
memory > xOGRGeomType
memory > xmemoryview
memory > xy1
memory > xSpatialReference
memory > xisinstance
memory > xGEOSGeometry
memory > xlen
memory > xTypeError
memory > xOGRGeometry
memory > xPolygon
[] > geometries
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x_create_empty
        memory > xz
        memory > x_get_srs
        memory > xclose_rings
        memory > xextent
        memory > xnum_coords
        memory > x__init__
        memory > x__str__
        memory > xsrs_api
        memory > xGEO_CLASSES
        memory > xfrom_bbox
        memory > x_get_srid
        memory > x__setstate__
        memory > x_topology
        memory > x__eq__
        memory > xnum_points
        memory > xtouches
        memory > xgeom_type
        memory > x_set_srid
        memory > x_set_coord_dim
        memory > xexterior_ring
        memory > x__sub__
        memory > xgeos
        memory > xoverlaps
        memory > xwkb_size
        memory > xcoords
        memory > xempty
        memory > xwithin
        memory > xgeom_count
        memory > xcontains
        memory > x__xor__
        memory > xgml
        memory > xclone
        memory > x_geos_ptr
        memory > xdestructor
        memory > xdisjoint
        memory > xdimension
        memory > xintersects
        memory > xconvex_hull
        memory > xcrosses
        memory > xwkb
        memory > x__getitem__
        memory > xdifference
        memory > xgeojson
        memory > xewkt
        memory > xsrid
        memory > xgeom_name
        memory > xkml
        memory > xfrom_json
        memory > xpoint_count
        memory > x__or__
        memory > x__getstate__
        memory > x_from_wkb
        memory > xshell
        memory > xenvelope
        memory > xwkt
        memory > xx
        memory > xboundary
        memory > x_listarr
        memory > x_from_json
        memory > xtuple
        memory > xunion
        memory > xtransform
        memory > xadd
        memory > xarea
        memory > x_get_coord_dim
        memory > xfrom_gml
        memory > xequals
        memory > x__len__
        memory > xcentroid
        memory > xy
        memory > x_geomgen
        memory > xjson
        memory > x__and__
        memory > xintersection
        memory > xcapi
        memory > xhex
        memory > xsym_difference
        memory > xcoord_dim
        memory > xsrs
        memory > x_set_srs
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xGDALBase)))
              seq
                unsupported
                xdestructor.write ((xcapi).xdestroy_geom)
                x__init__.write
                  [xself xgeom_input xsrs]
                    memory > xwkt_m
                    memory > xg
                    memory > xstr_instance
                    memory > xjson_m
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xstr_instance.write (((xisinstance)).apply ((xgeom_input)) ((xstr)))
                        ((xstr_instance).and ((((xhex_regex).xmatch)).apply ((xgeom_input)))).if
                          seq
                            xgeom_input.write (((xmemoryview)).apply (((((xbytes).xfromhex)).apply ((xgeom_input)))))
                            xstr_instance.write FALSE
                        (xstr_instance).if
                          seq
                            xwkt_m.write ((((xwkt_regex).xmatch)).apply ((xgeom_input)))
                            xjson_m.write ((((xjson_regex).xmatch)).apply ((xgeom_input)))
                            (xwkt_m).if
                              seq
                                (((unsupported)).apply ((xwkt_m)) ("srid")).if
                                  xsrs.write (((xint)).apply ((((unsupported)).apply ((xwkt_m)) ("srid"))))
                                (((((unsupported)).apply ((xwkt_m)) ("type")).xupper).eq "LINEARRING").if
                                  seq
                                    xg.write ((((xcapi).xcreate_geom)).apply (((((xOGRGeomType)).apply ((((unsupported)).apply ((xwkt_m)) ("type")))).xnum)))
                                    bogusForceDataize.write ((((xcapi).ximport_wkt)).apply ((xg)) ((((xbyref)).apply ((((xc_char_p)).apply (((((unsupported)).apply ((xwkt_m)) ("wkt")).xencode)))))))
                                  xg.write ((((xcapi).xfrom_wkt)).apply ((((xbyref)).apply ((((xc_char_p)).apply (((((unsupported)).apply ((xwkt_m)) ("wkt")).xencode)))))) ("None: is there a None literal in the EO language?") ((((xbyref)).apply ((xc_void_p)))))
                              (xjson_m).if
                                xg.write ((((xself).x_from_json)).apply (((xgeom_input).xencode)))
                                seq
                                  bogusForceDataize.write (((xOGRGeomType)).apply ((xgeom_input)))
                                  xg.write ((((xcapi).xcreate_geom)).apply (((((xOGRGeomType)).apply ((xgeom_input))).xnum)))
                          (((xisinstance)).apply ((xgeom_input)) ((xmemoryview))).if
                            xg.write ((((xself).x_from_wkb)).apply ((xgeom_input)))
                            (((xisinstance)).apply ((xgeom_input)) ((xOGRGeomType))).if
                              xg.write ((((xcapi).xcreate_geom)).apply (((xgeom_input).xnum)))
                              (((xisinstance)).apply ((xgeom_input)) (((xself).xptr_type))).if
                                xg.write (xgeom_input)
                                (((unsupported)).apply ((((xGDALException)).apply (("Invalid input type for OGR Geometry construction: %s".mod (((xtype)).apply ((xgeom_input))))))))
                        ((xg).not).if
                          (((unsupported)).apply ((((xGDALException)).apply (("Cannot create OGR Geometry from input: %s".mod (xgeom_input))))))
                        (((unsupported)).apply (((xself).xptr)) ((xg)))
                        (xsrs).if
                          (((unsupported)).apply (((xself).xsrs)) ((xsrs)))
                        (((unsupported)).apply (((xself).x__class__)) ((((unsupported)).apply ((xGEO_CLASSES)) ((((xself).xgeom_type).xnum)))))
                x__getstate__.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        xsrs.write ((xself).xsrs)
                        (xsrs).if
                          xsrs.write ((xsrs).xwkt)
                          xsrs.write "None: is there a None literal in the EO language?"
                        (((unsupported)).apply ((((unsupported)).apply ((((xbytes)).apply (((xself).xwkb)))) ((xsrs)))))
                x__setstate__.write
                  [xself xstate]
                    memory > xptr
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xwkb)) ((xsrs)))) ((xstate)))
                        xptr.write ((((xcapi).xfrom_wkb)).apply ((xwkb)) ("None: is there a None literal in the EO language?") ((((xbyref)).apply ((xc_void_p)))) ((((xlen)).apply ((xwkb)))))
                        ((xptr).not).if
                          (((unsupported)).apply ((((xGDALException)).apply ("Invalid OGRGeometry loaded from pickled state."))))
                        (((unsupported)).apply (((xself).xptr)) ((xptr)))
                        (((unsupported)).apply (((xself).xsrs)) ((xsrs)))
                x_from_wkb.write
                  [xcls xgeom_input]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xcapi).xfrom_wkb)).apply ((((xbytes)).apply ((xgeom_input)))) ("None: is there a None literal in the EO language?") ((((xbyref)).apply ((xc_void_p)))) ((((xlen)).apply ((xgeom_input)))))))
                x_from_json.write
                  [xgeom_input]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xcapi).xfrom_json)).apply ((xgeom_input)))))
                xfrom_bbox.write
                  [xcls xbbox]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply ((xx0)) ((xy0)) ((xx1)) ((xy1)))) ((xbbox)))
                        (((unsupported)).apply ((((xOGRGeometry)).apply (("POLYGON((%s %s, %s %s, %s %s, %s %s, %s %s))".mod (((unsupported)).apply ((xx0)) ((xy0)) ((xx0)) ((xy1)) ((xx1)) ((xy1)) ((xx1)) ((xy0)) ((xx0)) ((xy0))))))))
                xfrom_json.write
                  [xgeom_input]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xOGRGeometry)).apply (((((xOGRGeometry).x_from_json)).apply ((((xforce_bytes)).apply ((xgeom_input)))))))))
                xfrom_gml.write
                  [xcls xgml_string]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xcls)).apply (((((xcapi).xfrom_gml)).apply ((((xforce_bytes)).apply ((xgml_string)))))))))
                x__or__.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).xunion)).apply ((xother)))))
                x__and__.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).xintersection)).apply ((xother)))))
                x__sub__.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).xdifference)).apply ((xother)))))
                x__xor__.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).xsym_difference)).apply ((xother)))))
                x__eq__.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xisinstance)).apply ((xother)) ((xOGRGeometry))).and ((((xself).xequals)).apply ((xother))))))
                x__str__.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xwkt)))
                xdimension.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_dims)).apply (((xself).xptr)))))
                x_get_coord_dim.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_coord_dim)).apply (((xself).xptr)))))
                x_set_coord_dim.write
                  [xself xdim]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xdim)) ((((unsupported)).apply (2) (3)))).if
                          (((unsupported)).apply ((((xValueError)).apply ("Geometry dimension must be either 2 or 3"))))
                        bogusForceDataize.write ((((xcapi).xset_coord_dim)).apply (((xself).xptr)) ((xdim)))
                xcoord_dim.write (((xproperty)).apply ((x_get_coord_dim)) ((x_set_coord_dim)))
                xgeom_count.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_geom_count)).apply (((xself).xptr)))))
                xpoint_count.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_point_count)).apply (((xself).xptr)))))
                xnum_points.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((xself).xpoint_count)))
                xnum_coords.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((xself).xpoint_count)))
                xgeom_type.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xOGRGeomType)).apply (((((xcapi).xget_geom_type)).apply (((xself).xptr)))))))
                xgeom_name.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_geom_name)).apply (((xself).xptr)))))
                xarea.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_area)).apply (((xself).xptr)))))
                xenvelope.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xEnvelope)).apply (((((xcapi).xget_envelope)).apply (((xself).xptr)) ((((xbyref)).apply ((xOGREnvelope)))))))))
                xempty.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xcapi).xis_empty)).apply (((xself).xptr)))))
                xextent.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xself).xenvelope).xtuple)))
                x_get_srs.write
                  [xself]
                    memory > xsrs_ptr
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xSRSException)))
                          seq
                            xsrs_ptr.write ((((xcapi).xget_geom_srs)).apply (((xself).xptr)))
                            (((unsupported)).apply ((((xSpatialReference)).apply (((((xsrs_api).xclone_srs)).apply ((xsrs_ptr)))))))
                          (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                x_set_srs.write
                  [xself xsrs]
                    memory > xsr
                    memory > xsrs_ptr
                    seq > @
                      seq
                        unsupported
                        (((xisinstance)).apply ((xsrs)) ((xSpatialReference))).if
                          xsrs_ptr.write ((xsrs).xptr)
                          (((xisinstance)).apply ((xsrs)) ((((unsupported)).apply ((xint)) ((xstr))))).if
                            seq
                              xsr.write (((xSpatialReference)).apply ((xsrs)))
                              xsrs_ptr.write ((xsr).xptr)
                            (((unsupported)).apply ((xsrs)) ("None: is there a None literal in the EO language?")).if
                              xsrs_ptr.write "None: is there a None literal in the EO language?"
                              (((unsupported)).apply ((((xTypeError)).apply (("Cannot assign spatial reference with object of type: %s".mod (((xtype)).apply ((xsrs))))))))
                        bogusForceDataize.write ((((xcapi).xassign_srs)).apply (((xself).xptr)) ((xsrs_ptr)))
                xsrs.write (((xproperty)).apply ((x_get_srs)) ((x_set_srs)))
                x_get_srid.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        xsrs.write ((xself).xsrs)
                        (xsrs).if
                          (((unsupported)).apply (((xsrs).xsrid)))
                        (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                x_set_srid.write
                  [xself xsrid]
                    seq > @
                      ((((xisinstance)).apply ((xsrid)) ((xint))).or (((unsupported)).apply ((xsrid)) ("None: is there a None literal in the EO language?"))).if
                        (((unsupported)).apply (((xself).xsrs)) ((xsrid)))
                        (((unsupported)).apply ((((xTypeError)).apply ("SRID must be set with an integer."))))
                xsrid.write (((xproperty)).apply ((x_get_srid)) ((x_set_srid)))
                x_geos_ptr.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xGEOSGeometry).x_from_wkb)).apply (((xself).xwkb)))))
                xgeos.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((xGEOSGeometry)).apply (((xself).x_geos_ptr)) (((xself).xsrid)))))
                xgml.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xto_gml)).apply (((xself).xptr)))))
                xhex.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xb2a_hex)).apply (((xself).xwkb))).xupper)))
                xjson.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xcapi).xto_json)).apply (((xself).xptr)))))
                xgeojson.write (xjson)
                xkml.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xto_kml)).apply (((xself).xptr)) ("None: is there a None literal in the EO language?"))))
                xwkb_size.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xget_wkbsize)).apply (((xself).xptr)))))
                xwkb.write
                  [xself]
                    memory > xbyteorder
                    memory > xbuf
                    memory > xsz
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((xsys).xbyteorder).eq "little").if
                          xbyteorder.write 1
                          xbyteorder.write 0
                        xsz.write ((xself).xwkb_size)
                        xbuf.write ((xc_ubyte).mul (xsz))
                        bogusForceDataize.write ((((xcapi).xto_wkb)).apply (((xself).xptr)) ((xbyteorder)) ((((xbyref)).apply ((xbuf)))))
                        (((unsupported)).apply ((((xmemoryview)).apply ((((xstring_at)).apply ((xbuf)) ((xsz)))))))
                xwkt.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xto_wkt)).apply (((xself).xptr)) ((((xbyref)).apply ((xc_char_p)))))))
                xewkt.write
                  [xself]
                    memory > xsrs
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xsrs.write ((xself).xsrs)
                        ((xsrs).and ((xsrs).xsrid)).if
                          (((unsupported)).apply (("SRID=%s;%s".mod (((unsupported)).apply (((xsrs).xsrid)) (((xself).xwkt))))))
                          (((unsupported)).apply (((xself).xwkt)))
                xclone.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xOGRGeometry)).apply (((((xcapi).xclone_geom)).apply (((xself).xptr)))) (((xself).xsrs)))))
                xclose_rings.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xcapi).xgeom_close_rings)).apply (((xself).xptr)))
                xtransform.write
                  [xself xcoord_trans xclone]
                    memory > xsr
                    memory > xklone
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (xclone).if
                          seq
                            xklone.write ((xself).xclone)
                            bogusForceDataize.write ((((xklone).xtransform)).apply ((xcoord_trans)))
                            (((unsupported)).apply ((xklone)))
                        (((xisinstance)).apply ((xcoord_trans)) ((xCoordTransform))).if
                          bogusForceDataize.write ((((xcapi).xgeom_transform)).apply (((xself).xptr)) (((xcoord_trans).xptr)))
                          (((xisinstance)).apply ((xcoord_trans)) ((xSpatialReference))).if
                            bogusForceDataize.write ((((xcapi).xgeom_transform_to)).apply (((xself).xptr)) (((xcoord_trans).xptr)))
                            (((xisinstance)).apply ((xcoord_trans)) ((((unsupported)).apply ((xint)) ((xstr))))).if
                              seq
                                xsr.write (((xSpatialReference)).apply ((xcoord_trans)))
                                bogusForceDataize.write ((((xcapi).xgeom_transform_to)).apply (((xself).xptr)) (((xsr).xptr)))
                              (((unsupported)).apply ((((xTypeError)).apply ("Transform only accepts CoordTransform, SpatialReference, string, and integer objects."))))
                x_topology.write
                  [xself xfunc xother]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((((xisinstance)).apply ((xother)) ((xOGRGeometry))).not).if
                          (((unsupported)).apply ((((xTypeError)).apply ("Must use another OGRGeometry object for topology operations!"))))
                        (((unsupported)).apply ((((xfunc)).apply (((xself).xptr)) (((xother).xptr)))))
                xintersects.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_intersects)) ((xother)))))
                xequals.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_equals)) ((xother)))))
                xdisjoint.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_disjoint)) ((xother)))))
                xtouches.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_touches)) ((xother)))))
                xcrosses.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_crosses)) ((xother)))))
                xwithin.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_within)) ((xother)))))
                xcontains.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_contains)) ((xother)))))
                xoverlaps.write
                  [xself xother]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).x_topology)).apply (((xcapi).xogr_overlaps)) ((xother)))))
                x_geomgen.write
                  [xself xgen_func xother]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((xisinstance)).apply ((xother)) ((xOGRGeometry))).if
                          (((unsupported)).apply ((((xOGRGeometry)).apply ((((xgen_func)).apply (((xself).xptr)) (((xother).xptr)))) (((xself).xsrs)))))
                          (((unsupported)).apply ((((xOGRGeometry)).apply ((((xgen_func)).apply (((xself).xptr)))) (((xself).xsrs)))))
                xboundary.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xself).x_geomgen)).apply (((xcapi).xget_boundary)))))
                xconvex_hull.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).x_geomgen)).apply (((xcapi).xgeom_convex_hull)))))
                xdifference.write
                  [xself xother]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).x_geomgen)).apply (((xcapi).xgeom_diff)) ((xother)))))
                xintersection.write
                  [xself xother]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).x_geomgen)).apply (((xcapi).xgeom_intersection)) ((xother)))))
                xsym_difference.write
                  [xself xother]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).x_geomgen)).apply (((xcapi).xgeom_sym_diff)) ((xother)))))
                xunion.write
                  [xself xother]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).x_geomgen)).apply (((xcapi).xgeom_union)) ((xother)))))
            (((unsupported)).apply ((xOGRGeometry)))
              seq
                x_geos_ptr.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((xself).xempty).if (((xgeos).xPoint).x_create_empty) ((xsuper).x_geos_ptr))))
                x_create_empty.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xcapi).xcreate_geom)).apply (((((xOGRGeomType)).apply ("point")).xnum)))))
                xx.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xgetx)).apply (((xself).xptr)) (0))))
                xy.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xcapi).xgety)).apply (((xself).xptr)) (0))))
                xz.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((xself).xcoord_dim).eq 3).if
                          (((unsupported)).apply (((((xcapi).xgetz)).apply (((xself).xptr)) (0))))
                xtuple.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((xself).xcoord_dim).eq 2).if
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xx)) (((xself).xy)))))
                          (((xself).xcoord_dim).eq 3).if
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xx)) (((xself).xy)) (((xself).xz)))))
                xcoords.write (xtuple)
            (((unsupported)).apply ((xOGRGeometry)))
              seq
                x__getitem__.write
                  [xself xindex]
                    memory > xdim
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (0) ((xindex)) (((xself).xpoint_count))).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xx)) ((xy)) ((xz)))) ((((unsupported)).apply ((xc_double)) ((xc_double)) ((xc_double)))))
                            bogusForceDataize.write ((((xcapi).xget_point)).apply (((xself).xptr)) ((xindex)) ((((xbyref)).apply ((xx)))) ((((xbyref)).apply ((xy)))) ((((xbyref)).apply ((xz)))))
                            xdim.write ((xself).xcoord_dim)
                            ((xdim).eq 1).if
                              (((unsupported)).apply ((((unsupported)).apply (((xx).xvalue)))))
                              ((xdim).eq 2).if
                                (((unsupported)).apply ((((unsupported)).apply (((xx).xvalue)) (((xy).xvalue)))))
                                ((xdim).eq 3).if
                                  (((unsupported)).apply ((((unsupported)).apply (((xx).xvalue)) (((xy).xvalue)) (((xz).xvalue)))))
                          (((unsupported)).apply ((((xIndexError)).apply (("Index out of range when accessing points of a line string: %s.".mod (xindex))))))
                x__len__.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xpoint_count)))
                xtuple.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply ((((unsupported)).apply ((xself)) ((xi)))) ((xi)) ((((xrange)).apply ((((xlen)).apply ((xself)))))))))))
                xcoords.write (xtuple)
                x_listarr.write
                  [xself xfunc]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((((xfunc)).apply (((xself).xptr)) ((xi)))) ((xi)) ((((xrange)).apply ((((xlen)).apply ((xself)))))))))
                xx.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xself).x_listarr)).apply (((xcapi).xgetx)))))
                xy.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply (((((xself).x_listarr)).apply (((xcapi).xgety)))))
                xz.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((xself).xcoord_dim).eq 3).if
                          (((unsupported)).apply (((((xself).x_listarr)).apply (((xcapi).xgetz)))))
            (((unsupported)).apply ((xLineString)))
            (((unsupported)).apply ((xOGRGeometry)))
              seq
                x__len__.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xgeom_count)))
                x__getitem__.write
                  [xself xindex]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (0) ((xindex)) (((xself).xgeom_count))).if
                          (((unsupported)).apply ((((xOGRGeometry)).apply (((((xcapi).xclone_geom)).apply (((((xcapi).xget_geom_ref)).apply (((xself).xptr)) ((xindex)))))) (((xself).xsrs)))))
                          (((unsupported)).apply ((((xIndexError)).apply (("Index out of range when accessing rings of a polygon: %s.".mod (xindex))))))
                xshell.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply ((xself)) (0))))
                xexterior_ring.write (xshell)
                xtuple.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply (((((unsupported)).apply ((xself)) ((xi))).xtuple)) ((xi)) ((((xrange)).apply (((xself).xgeom_count)))))))))
                xcoords.write (xtuple)
                xpoint_count.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xsum)).apply ((((unsupported)).apply (((((unsupported)).apply ((xself)) ((xi))).xpoint_count)) ((xi)) ((((xrange)).apply (((xself).xgeom_count)))))))))
                xcentroid.write
                  [xself]
                    memory > xp
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xp.write (((xOGRGeometry)).apply ((((xOGRGeomType)).apply ("Point"))))
                        bogusForceDataize.write ((((xcapi).xget_centroid)).apply (((xself).xptr)) (((xp).xptr)))
                        (((unsupported)).apply ((xp)))
            (((unsupported)).apply ((xOGRGeometry)))
              seq
                unsupported
                x__getitem__.write
                  [xself xindex]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (0) ((xindex)) (((xself).xgeom_count))).if
                          (((unsupported)).apply ((((xOGRGeometry)).apply (((((xcapi).xclone_geom)).apply (((((xcapi).xget_geom_ref)).apply (((xself).xptr)) ((xindex)))))) (((xself).xsrs)))))
                          (((unsupported)).apply ((((xIndexError)).apply (("Index out of range when accessing geometry in a collection: %s.".mod (xindex))))))
                x__len__.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xgeom_count)))
                xadd.write
                  [xself xgeom]
                    memory > xtmp
                    seq > @
                      seq
                        unsupported
                        (((xisinstance)).apply ((xgeom)) ((xOGRGeometry))).if
                          (((xisinstance)).apply ((xgeom)) (((xself).x__class__))).if
                            (((unsupported)).apply ((xg)) ((xgeom)))
                              bogusForceDataize.write ((((xcapi).xadd_geom)).apply (((xself).xptr)) (((xg).xptr)))
                            bogusForceDataize.write ((((xcapi).xadd_geom)).apply (((xself).xptr)) (((xgeom).xptr)))
                          (((xisinstance)).apply ((xgeom)) ((xstr))).if
                            seq
                              xtmp.write (((xOGRGeometry)).apply ((xgeom)))
                              bogusForceDataize.write ((((xcapi).xadd_geom)).apply (((xself).xptr)) (((xtmp).xptr)))
                            (((unsupported)).apply ((((xGDALException)).apply ("Must add an OGRGeometry."))))
                xpoint_count.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xsum)).apply ((((unsupported)).apply (((((unsupported)).apply ((xself)) ((xi))).xpoint_count)) ((xi)) ((((xrange)).apply (((xself).xgeom_count)))))))))
                xtuple.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xtuple)).apply ((((unsupported)).apply (((((unsupported)).apply ((xself)) ((xi))).xtuple)) ((xi)) ((((xrange)).apply (((xself).xgeom_count)))))))))
                xcoords.write (xtuple)
            (((unsupported)).apply ((xGeometryCollection)))
            (((unsupported)).apply ((xGeometryCollection)))
            (((unsupported)).apply ((xGeometryCollection)))
            xGEO_CLASSES.write (((unsupported)).apply (1) ((xPoint)) (2) ((xLineString)) (3) ((xPolygon)) (4) ((xMultiPoint)) (5) ((xMultiLineString)) (6) ((xMultiPolygon)) (7) ((xGeometryCollection)) (101) ((xLinearRing)) ((1.add ((xOGRGeomType).xwkb25bit))) ((xPoint)) ((2.add ((xOGRGeomType).xwkb25bit))) ((xLineString)) ((3.add ((xOGRGeomType).xwkb25bit))) ((xPolygon)) ((4.add ((xOGRGeomType).xwkb25bit))) ((xMultiPoint)) ((5.add ((xOGRGeomType).xwkb25bit))) ((xMultiLineString)) ((6.add ((xOGRGeomType).xwkb25bit))) ((xMultiPolygon)) ((7.add ((xOGRGeomType).xwkb25bit))) ((xGeometryCollection)))