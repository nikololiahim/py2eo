memory > xContext
memory > xTemplateSyntaxError
memory > xEngine
memory > xsuper
memory > xcache
memory > xSimpleTestCase
[] > test_cache
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_cache15
        memory > xlibraries
        memory > xtest_cache12
        memory > xtest_cache06
        memory > xtest_cache11
        memory > xsetUpClass
        memory > xtest_cache13
        memory > xtest_cache16
        memory > xtest_cache_missing_backend
        memory > xtest_cache08
        memory > xtearDown
        memory > xtest_cache18
        memory > xtest_cache07
        memory > xtest_none_timeout
        memory > xtest_cache04
        memory > xtest_cache_regression_20130
        memory > xtest_cache17
        memory > xtest_cache_fragment_cache
        memory > xtest_cache05
        memory > xtest_cache14
        memory > xtest_cache03
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xlibraries.write (((unsupported)).apply ("cache") ("django.templatetags.cache") ("custom") ("template_tests.templatetags.custom"))
                xtearDown.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xcache).xclear)).apply)
                xtest_cache03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache03"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache03"))
                xtest_cache04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("cache03"))
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache04"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache03"))
                xtest_cache05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache05") ((((unsupported)).apply ("foo") (1))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache05"))
                xtest_cache06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache06") ((((unsupported)).apply ("foo") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache06"))
                xtest_cache07.write
                  [xself]
                    memory > xcontext
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xcontext.write (((unsupported)).apply ("foo") (1))
                        bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("cache05") ((xcontext)))
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache07") ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache05"))
                xtest_cache08.write
                  [xself]
                    memory > xcontext
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xcontext.write (((unsupported)).apply ("foo") (2) ("time") (2))
                        bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("cache06") ((xcontext)))
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache08") ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache06"))
                xtest_cache11.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("cache11"))
                xtest_cache12.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("cache12"))
                xtest_cache13.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("cache13"))
                xtest_cache14.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("cache14") ((((unsupported)).apply ("foo") ("fail"))))
                xtest_cache15.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("cache15") ((((unsupported)).apply ("foo") ((((unsupported)).apply)))))
                xtest_cache16.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache16") ((((unsupported)).apply ("foo") ("foo") ("bar") ("with spaces"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_cache17.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache17") ((((unsupported)).apply ("poem") ("Oh freddled gruntbuggly/Thy micturations are to me/As plurdled gabbleblotchits/On a lurgid bee/That mordiously hath bitled out/Its earted jurtles/Into a rancid festering/Or else I shall rend thee in the gobberwarts with my blurglecruncheon/See if I don't."))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("Some Content"))
                xtest_cache18.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("cache18"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("cache18"))
                xtest_none_timeout.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("first"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("content"))
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("second"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("content"))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xengine)) ((((unsupported)).apply ((xEngine)) ((((unsupported)).apply ("cache") ("django.templatetags.cache"))))))
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUpClass)).apply)
                xtest_cache_regression_20130.write
                  [xself]
                    memory > xcachenode
                    memory > xt
                    seq > @
                      seq
                        xt.write (((((xself).xengine).xfrom_string)).apply ("{% load cache %}{% cache 1 regression_20130 %}foo{% endcache %}"))
                        xcachenode.write (((unsupported)).apply (((xt).xnodelist)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xcachenode).xfragment_name)) ("regression_20130"))
                xtest_cache_fragment_cache.write
                  [xself]
                    memory > xo1
                    memory > xt2
                    memory > xctx
                    memory > xo2
                    memory > xt1
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xt1.write (((((xself).xengine).xfrom_string)).apply ("{% load cache %}{% cache 1 fragment %}foo{% endcache %}"))
                        xt2.write (((((xself).xengine).xfrom_string)).apply ("{% load cache %}{% cache 1 fragment using=\"default\" %}bar{% endcache %}"))
                        xctx.write (((xContext)).apply)
                        xo1.write ((((xt1).xrender)).apply ((xctx)))
                        xo2.write ((((xt2).xrender)).apply ((xctx)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xo1)) ("foo"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xo2)) ("bar"))
                xtest_cache_missing_backend.write
                  [xself]
                    memory > xt
                    memory > xctx
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xt.write (((((xself).xengine).xfrom_string)).apply ("{% load cache %}{% cache 1 backend using=\"unknown\" %}bar{% endcache %}"))
                        xctx.write (((xContext)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write ((((xt).xrender)).apply ((xctx)))