memory > xdatetime
memory > xValidationError
memory > xSplitDateTimeWidget
memory > xTestForm
memory > xForm
memory > xSplitDateTimeField
memory > xSimpleTestCase
[] > test_splitdatetimefield
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_splitdatetimefield_1
        memory > xtest_form_as_table
        memory > xtest_splitdatetimefield_changed
        memory > xtest_splitdatetimefield_2
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_splitdatetimefield_1.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((xSplitDateTimeField)).apply)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xf).xwidget)) ((xSplitDateTimeWidget)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xdatetime).xdatetime)).apply (2006) (1) (10) (7) (30))) (((((xf).xclean)).apply ((((unsupported)).apply (((((xdatetime).xdate)).apply (2006) (1) (10))) (((((xdatetime).xtime)).apply (7) (30))))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'This field is required.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply (""))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a list of values.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("hello"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid date.', 'Enter a valid time.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("hello") ("there"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid time.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("2006-01-10") ("there"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid date.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("hello") ("07:30"))))
                xtest_splitdatetimefield_2.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xSplitDateTimeField)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xdatetime).xdatetime)).apply (2006) (1) (10) (7) (30))) (((((xf).xclean)).apply ((((unsupported)).apply (((((xdatetime).xdate)).apply (2006) (1) (10))) (((((xdatetime).xtime)).apply (7) (30))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xdatetime).xdatetime)).apply (2006) (1) (10) (7) (30))) (((((xf).xclean)).apply ((((unsupported)).apply ("2006-01-10") ("07:30"))))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xf).xclean)).apply ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xf).xclean)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xf).xclean)).apply ((((unsupported)).apply (""))))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xf).xclean)).apply ((((unsupported)).apply ("") (""))))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a list of values.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("hello"))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid date.', 'Enter a valid time.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("hello") ("there"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid time.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("2006-01-10") ("there"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid date.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("hello") ("07:30"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid time.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("2006-01-10") (""))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid time.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("2006-01-10"))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ("'Enter a valid date.'"))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ("") ("07:30"))))
                xtest_splitdatetimefield_changed.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply ((xSplitDateTimeField)) ((((unsupported)).apply ("%d/%m/%Y"))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply ((((unsupported)).apply ("11/01/2012") ("09:18:15"))) ((((unsupported)).apply ("11/01/2012") ("09:18:15"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xf).xhas_changed)).apply (((((xdatetime).xdatetime)).apply (2008) (5) (6) (12) (40) (0))) ((((unsupported)).apply ("2008-05-06") ("12:40:00"))))))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xf).xhas_changed)).apply (((((xdatetime).xdatetime)).apply (2008) (5) (6) (12) (40) (0))) ((((unsupported)).apply ("06/05/2008") ("12:40"))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xf).xhas_changed)).apply (((((xdatetime).xdatetime)).apply (2008) (5) (6) (12) (40) (0))) ((((unsupported)).apply ("06/05/2008") ("12:41"))))))
                xtest_form_as_table.write
                  [xself]
                    memory > xdatetime
                    memory > xf
                    seq > @
                      seq
                        (((unsupported)).apply ((xForm)))
                          xdatetime.write (((xSplitDateTimeField)).apply)
                        xf.write (((xTestForm)).apply)
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply (((((xf).xas_table)).apply)) ("<tr><th><label>Datetime:</label></th><td><input type=\"text\" name=\"datetime_0\" required id=\"id_datetime_0\"><input type=\"text\" name=\"datetime_1\" required id=\"id_datetime_1\"></td></tr>"))