memory > xthreading
memory > xgeos_char_p
memory > xAttributeError
memory > xWKTReader_st
memory > xWKBReadFunc
memory > xWKTWriter_st
memory > xc_uchar_p
memory > xint
memory > xfloat
memory > xGEOM_PTR
memory > xIOBase
memory > xThreadLocalIO
memory > xValueError
memory > xcheck_string
memory > xWKBReader_st
memory > xstr
memory > xWKBWriteFunc
memory > xPOINTER
memory > xgeos_version_tuple
memory > xWKBWriterGet
memory > xWKBWriterSet
memory > xbyref
memory > xproperty
memory > xStructure
memory > xc_int
memory > xWKTWriter
memory > x_WKTReader
memory > xsuper
memory > xc_char_p
memory > xGEOSBase
memory > xbool
memory > xbytes
memory > xPoint
memory > xc_size_t
memory > xWKBWriter
memory > xstaticmethod
memory > xforce_bytes
memory > xcheck_sized_string
memory > xcheck_geom
memory > xmemoryview
memory > xisinstance
memory > xc_byte
memory > xlen
memory > xGEOSFuncFactory
memory > x_WKBReader
memory > xTypeError
memory > xPolygon
[] > io
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xptr_type
        memory > xwkb_writer_create
        memory > xwkb_reader_destroy
        memory > xargtypes
        memory > xwkt_writer_set_trim
        memory > xwkb_writer_set_outdim
        memory > x__init__
        memory > xread
        memory > xgeos_version
        memory > xwkb_writer_write
        memory > xwkt_r
        memory > xwkt_w
        memory > xwkt_writer_write
        memory > xwkb_reader_create
        memory > xwkt_writer_set_outdim
        memory > xwkb_w
        memory > xbyteorder
        memory > xdestructor
        memory > xprecision
        memory > x_handle_empty_point
        memory > xwkb_writer_write_hex
        memory > xwkt_reader_create
        memory > xwkb_writer_set_include_srid
        memory > xtrim
        memory > xrestype
        memory > xwkb_writer_get_byteorder
        memory > xwkb_reader_read_hex
        memory > xsrid
        memory > xwkt_reader_destroy
        memory > x_get_byteorder
        memory > xwrite_hex
        memory > x_trim
        memory > x_set_byteorder
        memory > xWKB_WRITE_PTR
        memory > xwkb_reader_read
        memory > x_precision
        memory > xwkt_writer_get_outdim
        memory > xwkt_writer_create
        memory > xwkb_writer_set_byteorder
        memory > xwkb_r
        memory > xwkt_reader_read
        memory > xwkb_writer_get_include_srid
        memory > xWKT_READ_PTR
        memory > xWKT_WRITE_PTR
        memory > xerrcheck
        memory > xwkt_writer_set_precision
        memory > xewkb_w
        memory > xwkb_writer_get_outdim
        memory > xthread_context
        memory > xoutdim
        memory > xwrite
        memory > xwkt_writer_destroy
        memory > xWKB_READ_PTR
        memory > x_constructor
        memory > xwkb_writer_destroy
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xStructure)))
            (((unsupported)).apply ((xStructure)))
            (((unsupported)).apply ((xStructure)))
            (((unsupported)).apply ((xStructure)))
            xWKT_READ_PTR.write (((xPOINTER)).apply ((xWKTReader_st)))
            xWKT_WRITE_PTR.write (((xPOINTER)).apply ((xWKTWriter_st)))
            xWKB_READ_PTR.write (((xPOINTER)).apply ((xWKBReader_st)))
            xWKB_WRITE_PTR.write (((xPOINTER)).apply ((xWKBReader_st)))
            xwkt_reader_create.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTReader_create") ((xWKT_READ_PTR)))
            xwkt_reader_destroy.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTReader_destroy") ((((unsupported)).apply ((xWKT_READ_PTR)))))
            xwkt_reader_read.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTReader_read") ((((unsupported)).apply ((xWKT_READ_PTR)) ((xc_char_p)))) ((xGEOM_PTR)) ((xcheck_geom)))
            xwkt_writer_create.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_create") ((xWKT_WRITE_PTR)))
            xwkt_writer_destroy.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_destroy") ((((unsupported)).apply ((xWKT_WRITE_PTR)))))
            xwkt_writer_write.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_write") ((((unsupported)).apply ((xWKT_WRITE_PTR)) ((xGEOM_PTR)))) ((xgeos_char_p)) ((xcheck_string)))
            xwkt_writer_get_outdim.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_getOutputDimension") ((((unsupported)).apply ((xWKT_WRITE_PTR)))) ((xc_int)))
            xwkt_writer_set_outdim.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_setOutputDimension") ((((unsupported)).apply ((xWKT_WRITE_PTR)) ((xc_int)))))
            xwkt_writer_set_trim.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_setTrim") ((((unsupported)).apply ((xWKT_WRITE_PTR)) ((xc_byte)))))
            xwkt_writer_set_precision.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKTWriter_setRoundingPrecision") ((((unsupported)).apply ((xWKT_WRITE_PTR)) ((xc_int)))))
            xwkb_reader_create.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKBReader_create") ((xWKB_READ_PTR)))
            xwkb_reader_destroy.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKBReader_destroy") ((((unsupported)).apply ((xWKB_READ_PTR)))))
            (((unsupported)).apply ((xGEOSFuncFactory)))
              seq
                xargtypes.write (((unsupported)).apply ((xWKB_READ_PTR)) ((xc_char_p)) ((xc_size_t)))
                xrestype.write (xGEOM_PTR)
                xerrcheck.write (((xstaticmethod)).apply ((xcheck_geom)))
            xwkb_reader_read.write (((xWKBReadFunc)).apply ("GEOSWKBReader_read"))
            xwkb_reader_read_hex.write (((xWKBReadFunc)).apply ("GEOSWKBReader_readHEX"))
            xwkb_writer_create.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKBWriter_create") ((xWKB_WRITE_PTR)))
            xwkb_writer_destroy.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSWKBWriter_destroy") ((((unsupported)).apply ((xWKB_WRITE_PTR)))))
            (((unsupported)).apply ((xGEOSFuncFactory)))
              seq
                xargtypes.write (((unsupported)).apply ((xWKB_WRITE_PTR)) ((xGEOM_PTR)) ((((xPOINTER)).apply ((xc_size_t)))))
                xrestype.write (xc_uchar_p)
                xerrcheck.write (((xstaticmethod)).apply ((xcheck_sized_string)))
            xwkb_writer_write.write (((xWKBWriteFunc)).apply ("GEOSWKBWriter_write"))
            xwkb_writer_write_hex.write (((xWKBWriteFunc)).apply ("GEOSWKBWriter_writeHEX"))
            (((unsupported)).apply ((xGEOSFuncFactory)))
              seq
                xargtypes.write (((unsupported)).apply ((xWKB_WRITE_PTR)))
                xrestype.write (xc_int)
            (((unsupported)).apply ((xGEOSFuncFactory)))
              xargtypes.write (((unsupported)).apply ((xWKB_WRITE_PTR)) ((xc_int)))
            xwkb_writer_get_byteorder.write (((xWKBWriterGet)).apply ("GEOSWKBWriter_getByteOrder"))
            xwkb_writer_set_byteorder.write (((xWKBWriterSet)).apply ("GEOSWKBWriter_setByteOrder"))
            xwkb_writer_get_outdim.write (((xWKBWriterGet)).apply ("GEOSWKBWriter_getOutputDimension"))
            xwkb_writer_set_outdim.write (((xWKBWriterSet)).apply ("GEOSWKBWriter_setOutputDimension"))
            xwkb_writer_get_include_srid.write (((unsupported)).apply ((xWKBWriterGet)) ("GEOSWKBWriter_getIncludeSRID") ((xc_byte)))
            xwkb_writer_set_include_srid.write (((unsupported)).apply ((xWKBWriterSet)) ("GEOSWKBWriter_setIncludeSRID") ((((unsupported)).apply ((xWKB_WRITE_PTR)) ((xc_byte)))))
            (((unsupported)).apply ((xGEOSBase)))
              seq
                unsupported
                x__init__.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xptr)) (((((xself).x_constructor)).apply)))
                        unsupported
            (((unsupported)).apply ((xIOBase)))
              seq
                x_constructor.write (xwkt_reader_create)
                xptr_type.write (xWKT_READ_PTR)
                xdestructor.write (xwkt_reader_destroy)
                xread.write
                  [xself xwkt]
                    seq > @
                      seq
                        ((((xisinstance)).apply ((xwkt)) ((((unsupported)).apply ((xbytes)) ((xstr))))).not).if
                          (((unsupported)).apply ((xTypeError)))
                        (((unsupported)).apply ((((xwkt_reader_read)).apply (((xself).xptr)) ((((xforce_bytes)).apply ((xwkt)))))))
            (((unsupported)).apply ((xIOBase)))
              seq
                x_constructor.write (xwkb_reader_create)
                xptr_type.write (xWKB_READ_PTR)
                xdestructor.write (xwkb_reader_destroy)
                xread.write
                  [xself xwkb]
                    memory > xwkb_s
                    seq > @
                      seq
                        unsupported
                        (((xisinstance)).apply ((xwkb)) ((xmemoryview))).if
                          seq
                            xwkb_s.write (((xbytes)).apply ((xwkb)))
                            (((unsupported)).apply ((((xwkb_reader_read)).apply (((xself).xptr)) ((xwkb_s)) ((((xlen)).apply ((xwkb_s)))))))
                          (((xisinstance)).apply ((xwkb)) ((((unsupported)).apply ((xbytes)) ((xstr))))).if
                            (((unsupported)).apply ((((xwkb_reader_read_hex)).apply (((xself).xptr)) ((xwkb)) ((((xlen)).apply ((xwkb)))))))
                            (((unsupported)).apply ((xTypeError)))
            (((unsupported)).apply ((xIOBase)))
              seq
                x_constructor.write (xwkt_writer_create)
                xptr_type.write (xWKT_WRITE_PTR)
                xdestructor.write (xwkt_writer_destroy)
                x_trim.write FALSE
                x_precision.write "None: is there a None literal in the EO language?"
                x__init__.write
                  [xself xdim xtrim xprecision]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                        ((((xbool)).apply ((xtrim))).neq ((xself).x_trim)).if
                          (((unsupported)).apply (((xself).xtrim)) ((xtrim)))
                        (((unsupported)).apply ((xprecision)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply (((xself).xprecision)) ((xprecision)))
                        (((unsupported)).apply (((xself).xoutdim)) ((xdim)))
                xwrite.write
                  [xself xgeom]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((((xwkt_writer_write)).apply (((xself).xptr)) (((xgeom).xptr)))))
                xoutdim.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xwkt_writer_get_outdim)).apply (((xself).xptr)))))
                xoutdim.write
                  [xself xnew_dim]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xnew_dim)) ((((unsupported)).apply (2) (3)))).if
                          (((unsupported)).apply ((((xValueError)).apply ("WKT output dimension must be 2 or 3"))))
                        bogusForceDataize.write (((xwkt_writer_set_outdim)).apply (((xself).xptr)) ((xnew_dim)))
                xtrim.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).x_trim)))
                xtrim.write
                  [xself xflag]
                    seq > @
                      (((unsupported)).apply)
                        ((((xbool)).apply ((xflag))).neq ((xself).x_trim)).if
                          seq
                            (((unsupported)).apply (((xself).x_trim)) ((((xbool)).apply ((xflag)))))
                            bogusForceDataize.write (((xwkt_writer_set_trim)).apply (((xself).xptr)) (((xself).x_trim)))
                xprecision.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).x_precision)))
                xprecision.write
                  [xself xprecision]
                    seq > @
                      (((unsupported)).apply)
                        ((((((xisinstance)).apply ((xprecision)) ((xint))).not).or ((xprecision).less 0)).and (((unsupported)).apply ((xprecision)) ("None: is there a None literal in the EO language?"))).if
                          (((unsupported)).apply ((((xAttributeError)).apply ("WKT output rounding precision must be non-negative integer or None."))))
                        ((xprecision).neq ((xself).x_precision)).if
                          seq
                            (((unsupported)).apply (((xself).x_precision)) ((xprecision)))
                            bogusForceDataize.write (((xwkt_writer_set_precision)).apply (((xself).xptr)) (((((unsupported)).apply ((xprecision)) ("None: is there a None literal in the EO language?")).if (1.neg) (xprecision))))
            (((unsupported)).apply ((xIOBase)))
              seq
                x_constructor.write (xwkb_writer_create)
                xptr_type.write (xWKB_WRITE_PTR)
                xdestructor.write (xwkb_writer_destroy)
                xgeos_version.write (((xgeos_version_tuple)).apply)
                x__init__.write
                  [xself xdim]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply)
                        (((unsupported)).apply (((xself).xoutdim)) ((xdim)))
                x_handle_empty_point.write
                  [xself xgeom]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((((xisinstance)).apply ((xgeom)) ((xPoint))).and ((xgeom).xempty)).if
                          ((xself).xsrid).if
                            xgeom.write (((unsupported)).apply ((xPoint)) ((((xfloat)).apply ("NaN"))) ((((xfloat)).apply ("NaN"))) (((xgeom).xsrid)))
                            (((unsupported)).apply ((((xValueError)).apply ("Empty point is not representable in WKB."))))
                        (((unsupported)).apply ((xgeom)))
                xwrite.write
                  [xself xgeom]
                    memory > xwkb
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply)
                        xgeom.write ((((xself).x_handle_empty_point)).apply ((xgeom)))
                        xwkb.write (((xwkb_writer_write)).apply (((xself).xptr)) (((xgeom).xptr)) ((((xbyref)).apply ((((xc_size_t)).apply)))))
                        (((((xself).xgeos_version).less (((unsupported)).apply (3) (6) (1))).and (((xisinstance)).apply ((xgeom)) ((xPolygon)))).and ((xgeom).xempty)).if
                          xwkb.write ((((unsupported)).apply ((xwkb)) ((((unsupported)).apply ((8.neg))))).add ("0".mul 4))
                        (((unsupported)).apply ((((xmemoryview)).apply ((xwkb)))))
                xwrite_hex.write
                  [xself xgeom]
                    memory > xwkb
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply)
                        xgeom.write ((((xself).x_handle_empty_point)).apply ((xgeom)))
                        xwkb.write (((xwkb_writer_write_hex)).apply (((xself).xptr)) (((xgeom).xptr)) ((((xbyref)).apply ((((xc_size_t)).apply)))))
                        (((((xself).xgeos_version).less (((unsupported)).apply (3) (6) (1))).and (((xisinstance)).apply ((xgeom)) ((xPolygon)))).and ((xgeom).xempty)).if
                          xwkb.write ((((unsupported)).apply ((xwkb)) ((((unsupported)).apply ((16.neg))))).add ("0".mul 8))
                        (((unsupported)).apply ((xwkb)))
                x_get_byteorder.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((xwkb_writer_get_byteorder)).apply (((xself).xptr)))))
                x_set_byteorder.write
                  [xself xorder]
                    seq > @
                      seq
                        (((unsupported)).apply ((xorder)) ((((unsupported)).apply (0) (1)))).if
                          (((unsupported)).apply ((((xValueError)).apply ("Byte order parameter must be 0 (Big Endian) or 1 (Little Endian)."))))
                        bogusForceDataize.write (((xwkb_writer_set_byteorder)).apply (((xself).xptr)) ((xorder)))
                xbyteorder.write (((xproperty)).apply ((x_get_byteorder)) ((x_set_byteorder)))
                xoutdim.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xwkb_writer_get_outdim)).apply (((xself).xptr)))))
                xoutdim.write
                  [xself xnew_dim]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xnew_dim)) ((((unsupported)).apply (2) (3)))).if
                          (((unsupported)).apply ((((xValueError)).apply ("WKB output dimension must be 2 or 3"))))
                        bogusForceDataize.write (((xwkb_writer_set_outdim)).apply (((xself).xptr)) ((xnew_dim)))
                xsrid.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xbool)).apply ((((xwkb_writer_get_include_srid)).apply (((xself).xptr)))))))
                xsrid.write
                  [xself xinclude]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write (((xwkb_writer_set_include_srid)).apply (((xself).xptr)) ((((xbool)).apply ((xinclude)))))
            (((unsupported)).apply (((xthreading).xlocal)))
              seq
                xwkt_r.write "None: is there a None literal in the EO language?"
                xwkt_w.write "None: is there a None literal in the EO language?"
                xwkb_r.write "None: is there a None literal in the EO language?"
                xwkb_w.write "None: is there a None literal in the EO language?"
                xewkb_w.write "None: is there a None literal in the EO language?"
            xthread_context.write (((xThreadLocalIO)).apply)
            xwkt_r.write
              []
                seq > @
                  seq
                    (((unsupported)).apply (((xthread_context).xwkt_r)) ((((xthread_context).xwkt_r).or (((x_WKTReader)).apply))))
                    (((unsupported)).apply (((xthread_context).xwkt_r)))
            xwkt_w.write
              [xdim xtrim xprecision]
                seq > @
                  (((unsupported)).apply)
                    (((xthread_context).xwkt_w).not).if
                      (((unsupported)).apply (((xthread_context).xwkt_w)) ((((unsupported)).apply ((xWKTWriter)) ((xdim)) ((xtrim)) ((xprecision)))))
                      seq
                        (((unsupported)).apply ((((xthread_context).xwkt_w).xoutdim)) ((xdim)))
                        (((unsupported)).apply ((((xthread_context).xwkt_w).xtrim)) ((xtrim)))
                        (((unsupported)).apply ((((xthread_context).xwkt_w).xprecision)) ((xprecision)))
                    (((unsupported)).apply (((xthread_context).xwkt_w)))
            xwkb_r.write
              []
                seq > @
                  seq
                    (((unsupported)).apply (((xthread_context).xwkb_r)) ((((xthread_context).xwkb_r).or (((x_WKBReader)).apply))))
                    (((unsupported)).apply (((xthread_context).xwkb_r)))
            xwkb_w.write
              [xdim]
                seq > @
                  (((unsupported)).apply)
                    (((xthread_context).xwkb_w).not).if
                      (((unsupported)).apply (((xthread_context).xwkb_w)) ((((unsupported)).apply ((xWKBWriter)) ((xdim)))))
                      (((unsupported)).apply ((((xthread_context).xwkb_w).xoutdim)) ((xdim)))
                    (((unsupported)).apply (((xthread_context).xwkb_w)))
            xewkb_w.write
              [xdim]
                seq > @
                  (((unsupported)).apply)
                    (((xthread_context).xewkb_w).not).if
                      seq
                        (((unsupported)).apply (((xthread_context).xewkb_w)) ((((unsupported)).apply ((xWKBWriter)) ((xdim)))))
                        (((unsupported)).apply ((((xthread_context).xewkb_w).xsrid)) (TRUE))
                      (((unsupported)).apply ((((xthread_context).xewkb_w).xoutdim)) ((xdim)))
                    (((unsupported)).apply (((xthread_context).xewkb_w)))