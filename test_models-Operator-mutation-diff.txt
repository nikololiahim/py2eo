629c629
<                               xindexes.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xIndex)) ((((((xmodels).xF)).apply ("height")).div (((((xmodels).xF)).apply ("weight__abs")).add ((((xmodels).xValue)).apply (5))))) ("name"))))
---
>                               xindexes.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xIndex)) ((((((xmodels).xF)).apply ("height")).div (((((xmodels).xF)).apply ("weight__abs")).sub ((((xmodels).xValue)).apply (5))))) ("name"))))
731c731
<                         xlong_field_name.write ("a".mul (((xself).xmax_column_name_length).add 1))
---
>                         xlong_field_name.write ("a".mul (((xself).xmax_column_name_length).sub 1))
752,753c752,753
<                         xlong_field_name.write ("a".mul (((xself).xmax_column_name_length).add 1))
<                         xlong_field_name2.write ("b".mul (((xself).xmax_column_name_length).add 1))
---
>                         xlong_field_name.write ("a".mul (((xself).xmax_column_name_length).sub 1))
>                         xlong_field_name2.write ("b".mul (((xself).xmax_column_name_length).sub 1))
1171c1171
<                             xfrom_countries.write (((unsupported)).apply (((xmodels).xManyToManyField)) ((xCountry)) ("ShippingMethodPrice") ((((unsupported)).apply ("method") ("from_country"))) ("+"))
---
>                             xfrom_countries.write (((unsupported)).apply (((xmodels).xManyToManyField)) ((xCountry)) ("ShippingMethodPrice") ((((unsupported)).apply ("method") ("from_country"))) ("-"))
1239c1239
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xBar).xcheck)).apply).add ((((xBaz).xcheck)).apply))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("The field's intermediary table 'clash' clashes with the table name of 'invalid_models_tests.Baz.foos'.") ((((((xBar).x_meta).xget_field)).apply ("foos"))) ("fields.E340"))) ((((unsupported)).apply ((xError)) ("The field's intermediary table 'clash' clashes with the table name of 'invalid_models_tests.Bar.foos'.") ((((((xBaz).x_meta).xget_field)).apply ("foos"))) ("fields.E340"))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xBar).xcheck)).apply).sub ((((xBaz).xcheck)).apply))) ((((unsupported)).apply ((((unsupported)).apply ((xError)) ("The field's intermediary table 'clash' clashes with the table name of 'invalid_models_tests.Baz.foos'.") ((((((xBar).x_meta).xget_field)).apply ("foos"))) ("fields.E340"))) ((((unsupported)).apply ((xError)) ("The field's intermediary table 'clash' clashes with the table name of 'invalid_models_tests.Bar.foos'.") ((((((xBaz).x_meta).xget_field)).apply ("foos"))) ("fields.E340"))))))
1250c1250
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xBar).xcheck)).apply).add ((((xBaz).xcheck)).apply))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (("The field's intermediary table 'clash' clashes with the table name of 'invalid_models_tests.%s.foos'.".mod (xclashing_model))) ((((((xmodel_cls).x_meta).xget_field)).apply ("foos"))) (("You have configured settings.DATABASE_ROUTERS. Verify that the table of 'invalid_models_tests.%s.foos' is correctly routed to a separate database.".mod (xclashing_model))) ("fields.W344"))) ((((unsupported)).apply ((xmodel_cls)) ((xclashing_model)))) ((((unsupported)).apply ((((unsupported)).apply ((xBar)) ("Baz"))) ((((unsupported)).apply ((xBaz)) ("Bar"))))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xBar).xcheck)).apply).sub ((((xBaz).xcheck)).apply))) ((((unsupported)).apply ((((unsupported)).apply ((xWarning)) (("The field's intermediary table 'clash' clashes with the table name of 'invalid_models_tests.%s.foos'.".mod (xclashing_model))) ((((((xmodel_cls).x_meta).xget_field)).apply ("foos"))) (("You have configured settings.DATABASE_ROUTERS. Verify that the table of 'invalid_models_tests.%s.foos' is correctly routed to a separate database.".mod (xclashing_model))) ("fields.W344"))) ((((unsupported)).apply ((xmodel_cls)) ((xclashing_model)))) ((((unsupported)).apply ((((unsupported)).apply ((xBar)) ("Baz"))) ((((unsupported)).apply ((xBaz)) ("Bar"))))))))
1564c1564
<                               xconstraints.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name1") ((((unsupported)).apply (((xmodels).xQ)) ((((((xmodels).xF)).apply ("parent__field1")).add ((((xmodels).xF)).apply ("parent__field2")))))))) ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name2") ((((unsupported)).apply (((xmodels).xQ)) ((((xLower)).apply ("parent__name"))))))) ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name3") ((((unsupported)).apply (((xmodels).xQ)) (((((xmodels).xF)).apply ("field1"))))))) ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name4") ((((unsupported)).apply (((xmodels).xQ)) ((((xLower)).apply ("previous__name"))))))))
---
>                               xconstraints.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name1") ((((unsupported)).apply (((xmodels).xQ)) ((((((xmodels).xF)).apply ("parent__field1")).sub ((((xmodels).xF)).apply ("parent__field2")))))))) ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name2") ((((unsupported)).apply (((xmodels).xQ)) ((((xLower)).apply ("parent__name"))))))) ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name3") ((((unsupported)).apply (((xmodels).xQ)) (((((xmodels).xF)).apply ("field1"))))))) ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name4") ((((unsupported)).apply (((xmodels).xQ)) ((((xLower)).apply ("previous__name"))))))))
1588c1588
<                               xconstraints.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name") ((((((xmodels).xQ)).apply ((((((unsupported)).apply (((xmodels).xQ)) ("test")).and (((unsupported)).apply (((xmodels).xQ)) (((((xmodels).xF)).apply ("parent__field1"))))).or ((((unsupported)).apply (((xmodels).xQ)) ((((xLower)).apply ("parent__name")))).and (((unsupported)).apply (((xmodels).xQ)) ((((((xmodels).xF)).apply ("parent__field1")).add ((((xmodels).xF)).apply ("parent__field2"))))))))).or (((unsupported)).apply (((xmodels).xQ)) ("test1")))))))
---
>                               xconstraints.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xCheckConstraint)) ("name") ((((((xmodels).xQ)).apply ((((((unsupported)).apply (((xmodels).xQ)) ("test")).and (((unsupported)).apply (((xmodels).xQ)) (((((xmodels).xF)).apply ("parent__field1"))))).or ((((unsupported)).apply (((xmodels).xQ)) ((((xLower)).apply ("parent__name")))).and (((unsupported)).apply (((xmodels).xQ)) ((((((xmodels).xF)).apply ("parent__field1")).sub ((((xmodels).xF)).apply ("parent__field2"))))))))).or (((unsupported)).apply (((xmodels).xQ)) ("test1")))))))
1878c1878
<                               xconstraints.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xUniqueConstraint)) ((((((xmodels).xF)).apply ("height")).div (((((xmodels).xF)).apply ("weight__abs")).add ((((xmodels).xValue)).apply (5))))) ("name"))))
---
>                               xconstraints.write (((unsupported)).apply ((((unsupported)).apply (((xmodels).xUniqueConstraint)) ((((((xmodels).xF)).apply ("height")).div (((((xmodels).xF)).apply ("weight__abs")).sub ((((xmodels).xValue)).apply (5))))) ("name"))))