memory > xTemplateResponseMixin
memory > xAttributeError
memory > xContextMixin
memory > xView
memory > xsuper
memory > xmodels
memory > xSingleObjectMixin
memory > xisinstance
memory > xSingleObjectTemplateResponseMixin
memory > xissubclass
memory > xHttp404
memory > xBaseDetailView
memory > xgetattr
memory > xImproperlyConfigured
memory > xkwargs
[] > detail
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xquery_pk_and_slug
        memory > xmodel
        memory > xget
        memory > xslug_field
        memory > xget_template_names
        memory > xcontext_object_name
        memory > xget_queryset
        memory > xpk_url_kwarg
        memory > xslug_url_kwarg
        memory > xtemplate_name_field
        memory > x_
        memory > xget_context_data
        memory > xget_object
        memory > xtemplate_name_suffix
        memory > xget_context_object_name
        memory > xget_slug_field
        memory > xqueryset
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xContextMixin)))
              seq
                (((unsupported)).apply)
                xmodel.write "None: is there a None literal in the EO language?"
                xqueryset.write "None: is there a None literal in the EO language?"
                xslug_field.write "slug"
                xcontext_object_name.write "None: is there a None literal in the EO language?"
                xslug_url_kwarg.write "slug"
                xpk_url_kwarg.write "pk"
                xquery_pk_and_slug.write FALSE
                xget_object.write
                  [xself xqueryset]
                    memory > xslug_field
                    memory > xslug
                    memory > xpk
                    memory > xobj
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xqueryset)) ("None: is there a None literal in the EO language?")).if
                          xqueryset.write ((xself).xget_queryset)
                        xpk.write (((((xself).xkwargs).xget)).apply (((xself).xpk_url_kwarg)))
                        xslug.write (((((xself).xkwargs).xget)).apply (((xself).xslug_url_kwarg)))
                        (((unsupported)).apply ((xpk)) ("None: is there a None literal in the EO language?")).if
                          xqueryset.write (((unsupported)).apply (((xqueryset).xfilter)) ((xpk)))
                        ((((unsupported)).apply ((xslug)) ("None: is there a None literal in the EO language?")).and ((((unsupported)).apply ((xpk)) ("None: is there a None literal in the EO language?")).or ((xself).xquery_pk_and_slug))).if
                          seq
                            xslug_field.write ((xself).xget_slug_field)
                            xqueryset.write ((((xqueryset).xfilter)).apply ((((unsupported)).apply ((((unsupported)).apply ((xslug_field)) ((xslug)))))))
                        ((((unsupported)).apply ((xpk)) ("None: is there a None literal in the EO language?")).and (((unsupported)).apply ((xslug)) ("None: is there a None literal in the EO language?"))).if
                          (((unsupported)).apply ((((xAttributeError)).apply (("Generic detail view %s must be called with either an object pk or a slug in the URLconf.".mod (((xself).x__class__).x__name__))))))
                        (((unsupported)).apply ((((xqueryset).xmodel).xDoesNotExist)))
                          xobj.write ((xqueryset).xget)
                          (((unsupported)).apply ((((xHttp404)).apply (((((x_)).apply ("No %(verbose_name)s found matching the query")).mod (((unsupported)).apply ("verbose_name") (((((xqueryset).xmodel).x_meta).xverbose_name))))))))
                        (((unsupported)).apply ((xobj)))
                xget_queryset.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xqueryset)) ("None: is there a None literal in the EO language?")).if
                          ((xself).xmodel).if
                            (((unsupported)).apply (((((xself).xmodel).x_default_manager).xall)))
                            (((unsupported)).apply ((((xImproperlyConfigured)).apply (("%(cls)s is missing a QuerySet. Define %(cls)s.model, %(cls)s.queryset, or override %(cls)s.get_queryset.".mod (((unsupported)).apply ("cls") ((((xself).x__class__).x__name__))))))))
                        (((unsupported)).apply ((((xself).xqueryset).xall)))
                xget_slug_field.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((xself).xslug_field)))
                xget_context_object_name.write
                  [xself xobj]
                    seq > @
                      seq
                        unsupported
                        ((xself).xcontext_object_name).if
                          (((unsupported)).apply (((xself).xcontext_object_name)))
                          (((xisinstance)).apply ((xobj)) (((xmodels).xModel))).if
                            (((unsupported)).apply ((((xobj).x_meta).xmodel_name)))
                            (((unsupported)).apply ("None: is there a None literal in the EO language?"))
                xget_context_data.write
                  [xself]
                    memory > xcontext_object_name
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xcontext.write (((unsupported)).apply)
                        ((xself).xobject).if
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xcontext)) ("object"))) (((xself).xobject)))
                            xcontext_object_name.write ((((xself).xget_context_object_name)).apply (((xself).xobject)))
                            (xcontext_object_name).if
                              (((unsupported)).apply ((((unsupported)).apply ((xcontext)) ((xcontext_object_name)))) (((xself).xobject)))
                        bogusForceDataize.write ((((xcontext).xupdate)).apply ((xkwargs)))
                        (((unsupported)).apply (((((xsuper).xget_context_data)).apply ((((unsupported)).apply ((xcontext)))))))
            (((unsupported)).apply ((xSingleObjectMixin)) ((xView)))
              seq
                unsupported
                xget.write
                  [xself xrequest]
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobject)) (((xself).xget_object)))
                        xcontext.write (((unsupported)).apply (((xself).xget_context_data)) (((xself).xobject)))
                        (((unsupported)).apply (((((xself).xrender_to_response)).apply ((xcontext)))))
            (((unsupported)).apply ((xTemplateResponseMixin)))
              seq
                xtemplate_name_field.write "None: is there a None literal in the EO language?"
                xtemplate_name_suffix.write "_detail"
                xget_template_names.write
                  [xself]
                    memory > xname
                    memory > xobject_meta
                    memory > xnames
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xImproperlyConfigured)))
                          xnames.write ((xsuper).xget_template_names)
                          seq
                            xnames.write (((unsupported)).apply)
                            (((xself).xobject).and ((xself).xtemplate_name_field)).if
                              seq
                                xname.write (((xgetattr)).apply (((xself).xobject)) (((xself).xtemplate_name_field)) ("None: is there a None literal in the EO language?"))
                                (xname).if
                                  bogusForceDataize.write ((((xnames).xinsert)).apply (0) ((xname)))
                            (((xisinstance)).apply (((xself).xobject)) (((xmodels).xModel))).if
                              seq
                                xobject_meta.write (((xself).xobject).x_meta)
                                bogusForceDataize.write ((((xnames).xappend)).apply (("%s/%s%s.html".mod (((unsupported)).apply (((xobject_meta).xapp_label)) (((xobject_meta).xmodel_name)) (((xself).xtemplate_name_suffix))))))
                              ((((unsupported)).apply ((((xgetattr)).apply ((xself)) ("model") ("None: is there a None literal in the EO language?"))) ("None: is there a None literal in the EO language?")).and (((xissubclass)).apply (((xself).xmodel)) (((xmodels).xModel)))).if
                                bogusForceDataize.write ((((xnames).xappend)).apply (("%s/%s%s.html".mod (((unsupported)).apply (((((xself).xmodel).x_meta).xapp_label)) (((((xself).xmodel).x_meta).xmodel_name)) (((xself).xtemplate_name_suffix))))))
                            ((xnames).not).if
                              (((unsupported)).apply)
                        (((unsupported)).apply ((xnames)))
            (((unsupported)).apply ((xSingleObjectTemplateResponseMixin)) ((xBaseDetailView)))
              (((unsupported)).apply)