memory > xmigrations
memory > xmodels
[] > 0001_initial
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xoperations
        memory > xdependencies
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply (((xmigrations).xMigration)))
              seq
                xdependencies.write (((unsupported)).apply ((((unsupported)).apply ("sites") ("0001_initial"))))
                xoperations.write (((unsupported)).apply ((((unsupported)).apply (((xmigrations).xCreateModel)) ("FlatPage") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((unsupported)).apply (((xmodels).xAutoField)) ("ID") (FALSE) (TRUE) (TRUE))))) ((((unsupported)).apply ("url") ((((unsupported)).apply (((xmodels).xCharField)) (100) ("URL") (TRUE))))) ((((unsupported)).apply ("title") ((((unsupported)).apply (((xmodels).xCharField)) (200) ("title"))))) ((((unsupported)).apply ("content") ((((unsupported)).apply (((xmodels).xTextField)) ("content") (TRUE))))) ((((unsupported)).apply ("enable_comments") ((((unsupported)).apply (((xmodels).xBooleanField)) (FALSE) ("enable comments"))))) ((((unsupported)).apply ("template_name") ((((unsupported)).apply (((xmodels).xCharField)) ("Example: “flatpages/contact_page.html”. If this isn’t provided, the system will use “flatpages/dfault.html”.") (70) ("template name") (TRUE))))) ((((unsupported)).apply ("registration_required") ((((unsupported)).apply (((xmodels).xBooleanField)) (FALSE) ("If this is checked, only logged-in users will be able to view the page.") ("registration required"))))) ((((unsupported)).apply ("sites") ((((unsupported)).apply (((xmodels).xManyToManyField)) ("sites.Site") ("sites"))))))) ((((unsupported)).apply ("ordering") ((((unsupported)).apply ("url"))) ("db_table") ("django_flatpage") ("verbose_name") ("flat page") ("verbose_name_plural") ("flat pages"))) ((((unsupported)).apply (((xmodels).xModel)))))))