memory > xget_version
memory > xVERSION
memory > xabspath
memory > xsys
memory > xdirname
memory > x__file__
memory > xImportError
memory > xjoin
[] > conf
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xlinkcheck_ignore
        memory > xspelling_lang
        memory > xrst_epilog
        memory > xexclude_patterns
        memory > xlatex_elements
        memory > xlatex_engine
        memory > xhtml_theme
        memory > xhtml_theme_path
        memory > xsource_suffix
        memory > xpygments_style
        memory > xintersphinx_mapping
        memory > xrelease
        memory > xlatex_documents
        memory > xepub_cover
        memory > xadd_function_parentheses
        memory > xdjango_next_version
        memory > xepub_publisher
        memory > xepub_title
        memory > xautosectionlabel_maxdepth
        memory > xhtml_additional_pages
        memory > xhtml_last_updated_fmt
        memory > xintersphinx_cache_limit
        memory > xtoday_fmt
        memory > xcopyright
        memory > xversion
        memory > xlocale_dirs
        memory > xman_pages
        memory > xmaster_doc
        memory > xepub_copyright
        memory > xsuppress_warnings
        memory > xneeds_sphinx
        memory > xadd_module_names
        memory > xshow_authors
        memory > xepub_theme
        memory > xtexinfo_documents
        memory > xautosectionlabel_prefix_document
        memory > xspelling_word_list_filename
        memory > xdefault_role
        memory > xproject
        memory > xepub_author
        memory > xspelling_warning
        memory > xextlinks
        memory > xlatex_use_xindy
        memory > xdjango_release
        memory > xextensions
        memory > xmodindex_common_prefix
        memory > xhtmlhelp_basename
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            bogusForceDataize.write ((((xsys).xsetrecursionlimit)).apply (2000))
            bogusForceDataize.write (((((xsys).xpath).xinsert)).apply (1) ((((xdirname)).apply ((((xdirname)).apply ((((xabspath)).apply ((x__file__)))))))))
            bogusForceDataize.write (((((xsys).xpath).xappend)).apply ((((xabspath)).apply ((((xjoin)).apply ((((xdirname)).apply ((x__file__)))) ("_ext"))))))
            xneeds_sphinx.write "1.6.0"
            xextensions.write (((unsupported)).apply ("djangodocs") ("sphinx.ext.extlinks") ("sphinx.ext.intersphinx") ("sphinx.ext.viewcode") ("sphinx.ext.autosectionlabel"))
            xautosectionlabel_prefix_document.write TRUE
            xautosectionlabel_maxdepth.write 2
            xlinkcheck_ignore.write (((unsupported)).apply ("^https?://(?:127.0.0.1|[::1])(?::d+)?/") ("^https?://(?:[^/.]+.)*example.(?:com|net|org)(?::d+)?/") ("^https?://(?:[^/.]+.)*(?:example|invalid|localhost|test)(?::d+)?/") ("^https://github.com/[^/]+/[^/]+/fork") ("^https://code.djangoproject.com/github/login") ("^https://code.djangoproject.com/newticket") ("^https://(?:code|www).djangoproject.com/admin/") ("^https://www.djangoproject.com/community/add/blogs/") ("^https://www.google.com/webmasters/tools/ping") ("^https://search.google.com/search-console/welcome") ("^https://web.libera.chat/#") ("^https://github.com/[^#]+#Ld+-Ld+$") ("^https://help.apple.com/itc/podcasts_connect/#/itc") ("^https://tools.ietf.org/html/rfc1123.html#section-"))
            (((unsupported)).apply ("spelling") (((xsys).xargv))).if
              bogusForceDataize.write ((((xextensions).xappend)).apply ("sphinxcontrib.spelling"))
            xspelling_lang.write "en_US"
            xspelling_word_list_filename.write "spelling_wordlist"
            xspelling_warning.write TRUE
            xsource_suffix.write ".txt"
            xmaster_doc.write "contents"
            xproject.write "Django"
            xcopyright.write "Django Software Foundation and contributors"
            xversion.write "4.1"
            (((unsupported)).apply ((xImportError)))
              seq
                (((unsupported)).apply)
                (((unsupported)).apply)
              xrelease.write (xversion)
              seq
                xdjango_release.write
                  []
                    memory > xpep440ver
                    seq > @
                      seq
                        xpep440ver.write (((xget_version)).apply)
                        (((((unsupported)).apply ((xVERSION)) ((((unsupported)).apply (3) (5)))).eq (((unsupported)).apply ("alpha") (0))).and (((unsupported)).apply ("dev") ((xpep440ver)))).if
                          (((unsupported)).apply (((xpep440ver).add ".dev")))
                        (((unsupported)).apply ((xpep440ver)))
                xrelease.write (((xdjango_release)).apply)
            xdjango_next_version.write "4.1"
            xextlinks.write (((unsupported)).apply ("bpo") ((((unsupported)).apply ("https://bugs.python.org/issue%s") ("bpo-"))) ("commit") ((((unsupported)).apply ("https://github.com/django/django/commit/%s") (""))) ("cve") ((((unsupported)).apply ("https://nvd.nist.gov/vuln/detail/CVE-%s") ("CVE-"))) ("source") ((((unsupported)).apply ("https://github.com/django/django/blob/main/%s") (""))) ("ticket") ((((unsupported)).apply ("https://code.djangoproject.com/ticket/%s") ("#"))))
            xlocale_dirs.write (((unsupported)).apply ("locale/"))
            xtoday_fmt.write "%B %d, %Y"
            xexclude_patterns.write (((unsupported)).apply ("_build") ("_theme") ("requirements.txt"))
            xdefault_role.write "default-role-error"
            xadd_function_parentheses.write TRUE
            xadd_module_names.write FALSE
            xshow_authors.write FALSE
            xpygments_style.write "trac"
            xintersphinx_mapping.write (((unsupported)).apply ("python") ((((unsupported)).apply ("https://docs.python.org/3/") ("None: is there a None literal in the EO language?"))) ("sphinx") ((((unsupported)).apply ("https://www.sphinx-doc.org/en/master/") ("None: is there a None literal in the EO language?"))) ("psycopg2") ((((unsupported)).apply ("https://www.psycopg.org/docs/") ("None: is there a None literal in the EO language?"))))
            xintersphinx_cache_limit.write 90
            xsuppress_warnings.write (((unsupported)).apply ("app.add_directive"))
            xhtml_theme.write "djangodocs"
            xhtml_theme_path.write (((unsupported)).apply ("_theme"))
            xhtml_last_updated_fmt.write "%b %d, %Y"
            xhtml_additional_pages.write (((unsupported)).apply)
            xhtmlhelp_basename.write "Djangodoc"
            xmodindex_common_prefix.write (((unsupported)).apply ("django."))
            xrst_epilog.write (((unsupported)).apply)
            xlatex_engine.write "xelatex"
            xlatex_use_xindy.write FALSE
            xlatex_elements.write (((unsupported)).apply ("fontpkg") ((((unsupported)).apply)) ("preamble") ((((unsupported)).apply)))
            xlatex_documents.write (((unsupported)).apply ((((unsupported)).apply ("contents") ("django.tex") ("Django Documentation") ("Django Software Foundation") ("manual"))))
            xman_pages.write (((unsupported)).apply ((((unsupported)).apply ("ref/django-admin") ("django-admin") ("Utility script for the Django web framework") ((((unsupported)).apply ("Django Software Foundation"))) (1))))
            xtexinfo_documents.write (((unsupported)).apply ((((unsupported)).apply ((xmaster_doc)) ("django") ("") ("") ("Django") ("Documentation of the Django framework") ("Web development") (FALSE))))
            xepub_title.write (xproject)
            xepub_author.write "Django Software Foundation"
            xepub_publisher.write "Django Software Foundation"
            xepub_copyright.write (xcopyright)
            xepub_theme.write "djangodocs-epub"
            xepub_cover.write (((unsupported)).apply ("") ("epub-cover.html"))