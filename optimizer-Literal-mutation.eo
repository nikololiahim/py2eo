memory > xenumerate
memory > xother
memory > xi
memory > xoperation
memory > xop
memory > xTypeError
memory > xall
memory > xlist
memory > xj
memory > xisinstance
[] > optimizer
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xoptimize
        memory > xoptimize_inner
        seq > @
          (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              xoptimize.write
                [xself xoperations xapp_label]
                  memory > xresult
                  seq > @
                    seq
                      (((unsupported)).apply)
                      (((unsupported)).apply ((xapp_label)) ("None: is there a None literal in the EO language?")).if
                        (((unsupported)).apply ((((xTypeError)).apply ("app_label must be a str."))))
                      (((unsupported)).apply (((xself).x_iterations)) (0))
                      while.
                        TRUE
                        [unused]
                          seq > @
                            seq
                              xresult.write ((((xself).xoptimize_inner)).apply ((xoperations)) ((xapp_label)))
                              (((unsupported)).apply (((xself).x_iterations)) (2))
                              ((xresult).eq (xoperations)).if
                                (((unsupported)).apply ((xresult)))
                              xoperations.write (xresult)
              xoptimize_inner.write
                [xself xoperations xapp_label]
                  memory > xresult
                  memory > xin_between
                  memory > xright
                  memory > xnew_operations
                  seq > @
                    seq
                      unsupported
                      xnew_operations.write (((unsupported)).apply)
                      (((unsupported)).apply ((((unsupported)).apply ((xi)) ((xoperation)))) ((((xenumerate)).apply ((xoperations)))))
                        seq
                          xright.write TRUE
                          (((unsupported)).apply ((((unsupported)).apply ((xj)) ((xother)))) ((((xenumerate)).apply ((((unsupported)).apply ((xoperations)) ((((unsupported)).apply (((xi).add 1)))))))))
                            seq
                              xresult.write ((((xoperation).xreduce)).apply ((xother)) ((xapp_label)))
                              (((xisinstance)).apply ((xresult)) ((xlist))).if
                                seq
                                  xin_between.write (((unsupported)).apply ((xoperations)) ((((unsupported)).apply (((xi).add 1)) ((((xi).add (xj)).add 1)))))
                                  (xright).if
                                    seq
                                      bogusForceDataize.write ((((xnew_operations).xextend)).apply ((xin_between)))
                                      bogusForceDataize.write ((((xnew_operations).xextend)).apply ((xresult)))
                                    (((xall)).apply ((((unsupported)).apply ((((unsupported)).apply (((((xop).xreduce)).apply ((xother)) ((xapp_label)))) (TRUE))) ((xop)) ((xin_between))))).if
                                      seq
                                        bogusForceDataize.write ((((xnew_operations).xextend)).apply ((xresult)))
                                        bogusForceDataize.write ((((xnew_operations).xextend)).apply ((xin_between)))
                                      seq
                                        bogusForceDataize.write ((((xnew_operations).xappend)).apply ((xoperation)))
                                        (((unsupported)).apply)
                                  bogusForceDataize.write ((((xnew_operations).xextend)).apply ((((unsupported)).apply ((xoperations)) ((((unsupported)).apply ((((xi).add (xj)).add 2)))))))
                                  (((unsupported)).apply ((xnew_operations)))
                                ((xresult).not).if
                                  xright.write FALSE
                            bogusForceDataize.write ((((xnew_operations).xappend)).apply ((xoperation)))
                      (((unsupported)).apply ((xnew_operations)))