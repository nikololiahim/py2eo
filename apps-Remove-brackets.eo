memory > xAppConfig
memory > xTextField
memory > xconn
memory > xMigrationWriter
memory > xUnaccent
memory > xCharField
memory > xDateTimeRange
memory > xOpClass
memory > xset
memory > xconnection_created
memory > xNumericRange
memory > xSearchLookup
memory > xregister_type_handlers
memory > xDateTimeTZRange
memory > xTrigramWordSimilar
memory > xconnections
memory > xOrderBy
memory > xIndexExpression
memory > xCollate
memory > xRangeSerializer
memory > xsetting_changed
memory > xTrigramSimilar
memory > xDateRange
[] > apps
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xready
        memory > x_
        memory > xRANGE_TYPES
        memory > xverbose_name
        memory > xname
        memory > xuninstall_if_needed
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xRANGE_TYPES.write (((unsupported)).apply ((xDateRange)) ((xDateTimeRange)) ((xDateTimeTZRange)) ((xNumericRange)))
            xuninstall_if_needed.write
              [xsetting xvalue xenter]
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    ((((xenter).not).and ((xsetting).eq "INSTALLED_APPS")).and (((unsupported)).apply ("django.contrib.postgres") ((((xset)).apply ((xvalue)))))).if
                      seq
                        bogusForceDataize.write ((((xconnection_created).xdisconnect)).apply ((xregister_type_handlers)))
                        bogusForceDataize.write ((((xCharField).x_unregister_lookup)).apply ((xUnaccent)))
                        bogusForceDataize.write ((((xTextField).x_unregister_lookup)).apply ((xUnaccent)))
                        bogusForceDataize.write ((((xCharField).x_unregister_lookup)).apply ((xSearchLookup)))
                        bogusForceDataize.write ((((xTextField).x_unregister_lookup)).apply ((xSearchLookup)))
                        bogusForceDataize.write ((((xCharField).x_unregister_lookup)).apply ((xTrigramSimilar)))
                        bogusForceDataize.write ((((xTextField).x_unregister_lookup)).apply ((xTrigramSimilar)))
                        bogusForceDataize.write ((((xCharField).x_unregister_lookup)).apply ((xTrigramWordSimilar)))
                        bogusForceDataize.write ((((xTextField).x_unregister_lookup)).apply ((xTrigramWordSimilar)))
                        bogusForceDataize.write ((((xsetting_changed).xdisconnect)).apply ((xuninstall_if_needed)))
                        bogusForceDataize.write ((((xMigrationWriter).xunregister_serializer)).apply ((xRANGE_TYPES)))
            (((unsupported)).apply ((xAppConfig)))
              seq
                xname.write "django.contrib.postgres"
                xverbose_name.write (((x_)).apply ("PostgreSQL extensions"))
                xready.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xsetting_changed).xconnect)).apply ((xuninstall_if_needed)))
                        (((unsupported)).apply ((xconn)) ((((unsupported)).apply (((xconnections).xall)) (TRUE))))
                          (((xconn).xvendor).eq "postgresql").if
                            seq
                              bogusForceDataize.write ((((((xconn).xintrospection).xdata_types_reverse).xupdate)).apply ((((unsupported)).apply (3904) ("django.contrib.postgres.fields.IntegerRangeField") (3906) ("django.contrib.postgres.fields.DecimalRangeField") (3910) ("django.contrib.postgres.fields.DateTimeRangeField") (3912) ("django.contrib.postgres.fields.DateRangeField") (3926) ("django.contrib.postgres.fields.BigIntegerRangeField"))))
                              (((unsupported)).apply (((xconn).xconnection)) ("None: is there a None literal in the EO language?")).if
                                bogusForceDataize.write (((xregister_type_handlers)).apply ((xconn)))
                        bogusForceDataize.write ((((xconnection_created).xconnect)).apply ((xregister_type_handlers)))
                        bogusForceDataize.write ((((xCharField).xregister_lookup)).apply ((xUnaccent)))
                        bogusForceDataize.write ((((xTextField).xregister_lookup)).apply ((xUnaccent)))
                        bogusForceDataize.write ((((xCharField).xregister_lookup)).apply ((xSearchLookup)))
                        bogusForceDataize.write ((((xTextField).xregister_lookup)).apply ((xSearchLookup)))
                        bogusForceDataize.write ((((xCharField).xregister_lookup)).apply ((xTrigramSimilar)))
                        bogusForceDataize.write ((((xTextField).xregister_lookup)).apply ((xTrigramSimilar)))
                        bogusForceDataize.write ((((xCharField).xregister_lookup)).apply ((xTrigramWordSimilar)))
                        bogusForceDataize.write ((((xTextField).xregister_lookup)).apply ((xTrigramWordSimilar)))
                        bogusForceDataize.write ((((xMigrationWriter).xregister_serializer)).apply ((xRANGE_TYPES)) ((xRangeSerializer)))
                        bogusForceDataize.write ((((xIndexExpression).xregister_wrappers)).apply ((xOrderBy)) ((xOpClass)) ((xCollate)))