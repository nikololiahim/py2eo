385c385
<                       (((unsupported)).apply ((xi)) ((((xrange)).apply (((((xlen)).apply ((xs))).add 1)))))
---
>                       (((unsupported)).apply ((xi)) ((((xrange)).apply (((((xlen)).apply ((xs))).sub 1)))))
399c399
<                           bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) (((xpart1).add (xpart2))))
---
>                           bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu)) (((xpart1).sub (xpart2))))
407c407
<                       (((unsupported)).apply ((xi)) ((((xrange)).apply (((((xlen)).apply ((xu))).add 1)))))
---
>                       (((unsupported)).apply ((xi)) ((((xrange)).apply (((((xlen)).apply ((xu))).sub 1)))))
415c415
<                           bogusForceDataize.write ((((xself).xassertEqual)).apply ((xs)) (((xpart1).add (xpart2))))
---
>                           bogusForceDataize.write ((((xself).xassertEqual)).apply ((xs)) (((xpart1).sub (xpart2))))
506,507c506,507
<                             bogusForceDataize.write ((((xvw).xappend)).apply ((((((xi).mul 200).add 200).mul "u3042").add (xlineend))))
<                             bogusForceDataize.write ((((xvwo).xappend)).apply (((((xi).mul 200).add 200).mul "u3042")))
---
>                             bogusForceDataize.write ((((xvw).xappend)).apply ((((((xi).mul 200).sub 200).mul "u3042").sub (xlineend))))
>                             bogusForceDataize.write ((((xvwo).xappend)).apply (((((xi).mul 200).sub 200).mul "u3042")))
513c513
<                               xs.write (10.mul ((((xsize).mul "a").add (xlineend)).add "xxxn"))
---
>                               xs.write (10.mul ((((xsize).mul "a").sub (xlineend)).sub "xxxn"))
517c517
<                                   bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xreader).xreadline)) (TRUE))) ((((xsize).mul "a").add (xlineend))))
---
>                                   bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xreader).xreadline)) (TRUE))) ((((xsize).mul "a").sub (xlineend))))
549c549
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xread)).apply (100))) ((((unsupported)).apply ((((unsupported)).apply ((xdata)) ((((unsupported)).apply (((((xlen)).apply ((((unsupported)).apply ((xlines)) (0)))).add 1)))))) ((((unsupported)).apply (100))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xread)).apply (100))) ((((unsupported)).apply ((((unsupported)).apply ((xdata)) ((((unsupported)).apply (((((xlen)).apply ((((unsupported)).apply ((xlines)) (0)))).sub 1)))))) ((((unsupported)).apply (100))))))
565c565
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xreadlines)).apply)) (((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xlines)) (0))) ((((unsupported)).apply (5)))))).add (((unsupported)).apply ((xlines)) ((((unsupported)).apply (1)))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xreadlines)).apply)) (((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xlines)) (0))) ((((unsupported)).apply (5)))))).sub (((unsupported)).apply ((xlines)) ((((unsupported)).apply (1)))))))
574c574
<                         xs.write (((unsupported)).apply ("<%!--===================================================rn") ("    BLOG index page: show recent articles,rn") ("    today's articles, or articles of a specific date.rn") ("========================================================--%>rn") ("<%@inputencoding=\"ISO-8859-1\"%>rn") ("<%@pagetemplate=TEMPLATE.y%>rn") ("<%@import=import frog.util, frog%>rn") ("<%@import=import frog.objects%>rn") ("<%@import=from frog.storageerrors import StorageError%>rn") ("<%rn") ("rn") ("import loggingrn") ("log=logging.getLogger(\"Snakelets.logger\")rn") ("rn") ("rn") ("user=self.SessionCtx.userrn") ("storageEngine=self.SessionCtx.storageEnginern") ("rn") ("rn") ("def readArticlesFromDate(date, count=None):rn") ("    entryids=storageEngine.listBlogEntries(date)rn") ("    entryids.reverse() # descendingrn") ("    if count:rn") ("        entryids=entryids[:count]rn") ("    try:rn") ("        return [ frog.objects.BlogEntry.load(storageEngine, date, Id) for Id in entryids ]rn") ("    except StorageError,x:rn") ("        log.error(\"Error loading articles: \"+str(x))rn") ("        self.abort(\"cannot load articles\")rn") ("rn") ("showdate=Nonern") ("rn") ("arg=self.Request.getArg()rn") ("if arg==\"today\":rn") ("    #-------------------- TODAY'S ARTICLESrn") ("    self.write(\"<h2>Today's articles</h2>\")rn") ("    showdate = frog.util.isodatestr() rn") ("    entries = readArticlesFromDate(showdate)rn") ("elif arg==\"active\":rn") ("    #-------------------- ACTIVE ARTICLES redirectrn") ("    self.Yredirect(\"active.y\")rn") ("elif arg==\"login\":rn") ("    #-------------------- LOGIN PAGE redirectrn") ("    self.Yredirect(\"login.y\")rn") ("elif arg==\"date\":rn") ("    #-------------------- ARTICLES OF A SPECIFIC DATErn") ("    showdate = self.Request.getParameter(\"date\")rn") ("    self.write(\"<h2>Articles written on %s</h2>\"% frog.util.mediumdatestr(showdate))rn") ("    entries = readArticlesFromDate(showdate)rn") ("else:rn") ("    #-------------------- RECENT ARTICLESrn") ("    self.write(\"<h2>Recent articles</h2>\")rn") ("    dates=storageEngine.listBlogEntryDates()rn") ("    if dates:rn") ("        entries=[]rn") ("        SHOWAMOUNT=10rn") ("        for showdate in dates:rn") ("            entries.extend( readArticlesFromDate(showdate, SHOWAMOUNT-len(entries)) )rn") ("            if len(entries)>=SHOWAMOUNT:rn") ("                breakrn") ("                rn"))
---
>                         xs.write (((unsupported)).apply ("<%!--===================================================rn") ("    BLOG index page: show recent articles,rn") ("    today's articles, or articles of a specific date.rn") ("========================================================--%>rn") ("<%@inputencoding=\"ISO-8859-1\"%>rn") ("<%@pagetemplate=TEMPLATE.y%>rn") ("<%@import=import frog.util, frog%>rn") ("<%@import=import frog.objects%>rn") ("<%@import=from frog.storageerrors import StorageError%>rn") ("<%rn") ("rn") ("import loggingrn") ("log=logging.getLogger(\"Snakelets.logger\")rn") ("rn") ("rn") ("user=self.SessionCtx.userrn") ("storageEngine=self.SessionCtx.storageEnginern") ("rn") ("rn") ("def readArticlesFromDate(date, count=None):rn") ("    entryids=storageEngine.listBlogEntries(date)rn") ("    entryids.reverse() # descendingrn") ("    if count:rn") ("        entryids=entryids[:count]rn") ("    try:rn") ("        return [ frog.objects.BlogEntry.load(storageEngine, date, Id) for Id in entryids ]rn") ("    except StorageError,x:rn") ("        log.error(\"Error loading articles: \"-str(x))rn") ("        self.abort(\"cannot load articles\")rn") ("rn") ("showdate=Nonern") ("rn") ("arg=self.Request.getArg()rn") ("if arg==\"today\":rn") ("    #-------------------- TODAY'S ARTICLESrn") ("    self.write(\"<h2>Today's articles</h2>\")rn") ("    showdate = frog.util.isodatestr() rn") ("    entries = readArticlesFromDate(showdate)rn") ("elif arg==\"active\":rn") ("    #-------------------- ACTIVE ARTICLES redirectrn") ("    self.Yredirect(\"active.y\")rn") ("elif arg==\"login\":rn") ("    #-------------------- LOGIN PAGE redirectrn") ("    self.Yredirect(\"login.y\")rn") ("elif arg==\"date\":rn") ("    #-------------------- ARTICLES OF A SPECIFIC DATErn") ("    showdate = self.Request.getParameter(\"date\")rn") ("    self.write(\"<h2>Articles written on %s</h2>\"% frog.util.mediumdatestr(showdate))rn") ("    entries = readArticlesFromDate(showdate)rn") ("else:rn") ("    #-------------------- RECENT ARTICLESrn") ("    self.write(\"<h2>Recent articles</h2>\")rn") ("    dates=storageEngine.listBlogEntryDates()rn") ("    if dates:rn") ("        entries=[]rn") ("        SHOWAMOUNT=10rn") ("        for showdate in dates:rn") ("            entries.extend( readArticlesFromDate(showdate, SHOWAMOUNT-len(entries)) )rn") ("            if len(entries)>=SHOWAMOUNT:rn") ("                breakrn") ("                rn"))
620c620
<                         xs.write ((((((xs1).add (xs2)).add (xs3)).xencode)).apply (((xself).xencoding)))
---
>                         xs.write ((((((xs1).sub (xs2)).sub (xs3)).xencode)).apply (((xself).xencoding)))
644c644
<                         xs.write ((((((((xs1).add (xs2)).add (xs3)).add (xs4)).add (xs5)).xencode)).apply (((xself).xencoding)))
---
>                         xs.write ((((((((xs1).sub (xs2)).sub (xs3)).sub (xs4)).sub (xs5)).xencode)).apply (((xself).xencoding)))
677,678c677,678
<                             xtest_string.write (((xbefore).add "uDC80").add (xafter))
<                             xtest_sequence.write ((((xbom).add (xbefore_sequence)).add ((xself).xill_formed_sequence)).add (xafter_sequence))
---
>                             xtest_string.write (((xbefore).sub "uDC80").sub (xafter))
>                             xtest_sequence.write ((((xbom).sub (xbefore_sequence)).sub ((xself).xill_formed_sequence)).sub (xafter_sequence))
682,683c682,683
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtest_sequence).xdecode)).apply (((xself).xencoding)) ("ignore"))) (((xbefore).add (xafter))))
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtest_sequence).xdecode)).apply (((xself).xencoding)) ("replace"))) ((((xbefore).add ((xself).xill_formed_sequence_replace)).add (xafter))))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtest_sequence).xdecode)).apply (((xself).xencoding)) ("ignore"))) (((xbefore).sub (xafter))))
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtest_sequence).xdecode)).apply (((xself).xencoding)) ("replace"))) ((((xbefore).sub ((xself).xill_formed_sequence_replace)).sub (xafter))))
685c685
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtest_sequence).xdecode)).apply (((xself).xencoding)) ("backslashreplace"))) ((((xbefore).add (xbackslashreplace)).add (xafter))))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xtest_sequence).xdecode)).apply (((xself).xencoding)) ("backslashreplace"))) ((((xbefore).sub (xbackslashreplace)).sub (xafter))))
767c767
<                         xencoded_le.write ("xffxfex00x00".add ("x00x00x01x00".mul 1024))
---
>                         xencoded_le.write ("xffxfex00x00".sub ("x00x00x01x00".mul 1024))
769c769
<                         xencoded_be.write ("x00x00xfexff".add ("x00x01x00x00".mul 1024))
---
>                         xencoded_be.write ("x00x00xfexff".sub ("x00x01x00x00".mul 1024))
967c967
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("[uDC80]".xencode)).apply (((xself).xencoding)) ("surrogateescape"))) ((((xself).xBOM).add "[x80]")))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("[uDC80]".xencode)).apply (((xself).xencoding)) ("surrogateescape"))) ((((xself).xBOM).sub "[x80]")))
976,978c976,978
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("abcud800def".xencode)).apply (((xself).xencoding)) ("surrogatepass"))) ((((xself).xBOM).add "abcxedxa0x80def")))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("U00010fffuD800".xencode)).apply (((xself).xencoding)) ("surrogatepass"))) ((((xself).xBOM).add "xf0x90xbfxbfxedxa0x80")))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("[uD800uDC80]".xencode)).apply (((xself).xencoding)) ("surrogatepass"))) ((((xself).xBOM).add "[xedxa0x80xedxb2x80]")))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("abcud800def".xencode)).apply (((xself).xencoding)) ("surrogatepass"))) ((((xself).xBOM).sub "abcxedxa0x80def")))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("U00010fffuD800".xencode)).apply (((xself).xencoding)) ("surrogatepass"))) ((((xself).xBOM).sub "xf0x90xbfxbfxedxa0x80")))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("[uD800uDC80]".xencode)).apply (((xself).xencoding)) ("surrogatepass"))) ((((xself).xBOM).sub "[xedxa0x80xedxb2x80]")))
995c995
<                             bogusForceDataize.write ((((xcases).xappend)).apply (((xprefix).add (xsuffix))))
---
>                             bogusForceDataize.write ((((xcases).xappend)).apply (((xprefix).sub (xsuffix))))
1019,1020c1019,1020
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("a+b".xencode)).apply (((xself).xencoding)))) ("a+-b"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("a+-b".xdecode)).apply (((xself).xencoding)))) ("a+b"))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("a-b".xencode)).apply (((xself).xencoding)))) ("a--b"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("a--b".xdecode)).apply (((xself).xencoding)))) ("a-b"))
1024,1025c1024,1025
<                         xother_ascii.write ((("".xjoin)).apply ((((xsorted)).apply (((((xset)).apply (((((((xbytes)).apply ((((xrange)).apply (128)))).xdecode)).apply))).sub (((xset)).apply (((((xset_d).add (xset_o)).add "+").add (xws)))))))))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xother_ascii).xencode)).apply (((xself).xencoding)))) ("+AAAAAQACAAMABAAFAAYABwAIAAsADAAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAHAAdAB4AHwBcAH4Afw-"))
---
>                         xother_ascii.write ((("".xjoin)).apply ((((xsorted)).apply (((((xset)).apply (((((((xbytes)).apply ((((xrange)).apply (128)))).xdecode)).apply))).sub (((xset)).apply (((((xset_d).sub (xset_o)).sub "-").sub (xws)))))))))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xother_ascii).xencode)).apply (((xself).xencoding)))) ("-AAAAAQACAAMABAAFAAYABwAIAAsADAAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAHAAdAB4AHwBcAH4Afw-"))
1029c1029
<                       bogusForceDataize.write ((((xself).xcheck_partial)).apply ("a+-bx00cx80du0100eU00010000f") ((((unsupported)).apply ("a") ("a") ("a+") ("a+-") ("a+-b") ("a+-b") ("a+-b") ("a+-b") ("a+-b") ("a+-bx00") ("a+-bx00c") ("a+-bx00c") ("a+-bx00c") ("a+-bx00c") ("a+-bx00c") ("a+-bx00cx80") ("a+-bx00cx80d") ("a+-bx00cx80d") ("a+-bx00cx80d") ("a+-bx00cx80d") ("a+-bx00cx80d") ("a+-bx00cx80du0100") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100e") ("a+-bx00cx80du0100eU00010000") ("a+-bx00cx80du0100eU00010000f"))))
---
>                       bogusForceDataize.write ((((xself).xcheck_partial)).apply ("a--bx00cx80du0100eU00010000f") ((((unsupported)).apply ("a") ("a") ("a-") ("a--") ("a--b") ("a--b") ("a--b") ("a--b") ("a--b") ("a--bx00") ("a--bx00c") ("a--bx00c") ("a--bx00c") ("a--bx00c") ("a--bx00c") ("a--bx00cx80") ("a--bx00cx80d") ("a--bx00cx80d") ("a--bx00cx80d") ("a--bx00cx80d") ("a--bx00cx80d") ("a--bx00cx80du0100") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100e") ("a--bx00cx80du0100eU00010000") ("a--bx00cx80du0100eU00010000f"))))
1035c1035
<                         xtests.write (((unsupported)).apply ((((unsupported)).apply ("xffb") ("ufffdb"))) ((((unsupported)).apply ("axffb") ("aufffdb"))) ((((unsupported)).apply ("axffxffb") ("aufffdufffdb"))) ((((unsupported)).apply ("a+IK") ("aufffd"))) ((((unsupported)).apply ("a+IK-b") ("aufffdb"))) ((((unsupported)).apply ("a+IK,b") ("aufffdb"))) ((((unsupported)).apply ("a+IKx") ("au20acufffd"))) ((((unsupported)).apply ("a+IKx-b") ("au20acufffdb"))) ((((unsupported)).apply ("a+IKwgr") ("au20acufffd"))) ((((unsupported)).apply ("a+IKwgr-b") ("au20acufffdb"))) ((((unsupported)).apply ("a+IKwgr,") ("au20acufffd"))) ((((unsupported)).apply ("a+IKwgr,-b") ("au20acufffd-b"))) ((((unsupported)).apply ("a+IKwgrB") ("au20acu20acufffd"))) ((((unsupported)).apply ("a+IKwgrB-b") ("au20acu20acufffdb"))) ((((unsupported)).apply ("a+/,+IKw-b") ("aufffdu20acb"))) ((((unsupported)).apply ("a+//,+IKw-b") ("aufffdu20acb"))) ((((unsupported)).apply ("a+///,+IKw-b") ("auffffufffdu20acb"))) ((((unsupported)).apply ("a+////,+IKw-b") ("auffffufffdu20acb"))) ((((unsupported)).apply ("a+IKw-bxff") ("au20acbufffd"))) ((((unsupported)).apply ("a+IKwxffb") ("au20acufffdb"))) ((((unsupported)).apply ("a+@b") ("aufffdb"))))
---
>                         xtests.write (((unsupported)).apply ((((unsupported)).apply ("xffb") ("ufffdb"))) ((((unsupported)).apply ("axffb") ("aufffdb"))) ((((unsupported)).apply ("axffxffb") ("aufffdufffdb"))) ((((unsupported)).apply ("a-IK") ("aufffd"))) ((((unsupported)).apply ("a-IK-b") ("aufffdb"))) ((((unsupported)).apply ("a-IK,b") ("aufffdb"))) ((((unsupported)).apply ("a-IKx") ("au20acufffd"))) ((((unsupported)).apply ("a-IKx-b") ("au20acufffdb"))) ((((unsupported)).apply ("a-IKwgr") ("au20acufffd"))) ((((unsupported)).apply ("a-IKwgr-b") ("au20acufffdb"))) ((((unsupported)).apply ("a-IKwgr,") ("au20acufffd"))) ((((unsupported)).apply ("a-IKwgr,-b") ("au20acufffd-b"))) ((((unsupported)).apply ("a-IKwgrB") ("au20acu20acufffd"))) ((((unsupported)).apply ("a-IKwgrB-b") ("au20acu20acufffdb"))) ((((unsupported)).apply ("a-/,-IKw-b") ("aufffdu20acb"))) ((((unsupported)).apply ("a-//,-IKw-b") ("aufffdu20acb"))) ((((unsupported)).apply ("a-///,-IKw-b") ("auffffufffdu20acb"))) ((((unsupported)).apply ("a-////,-IKw-b") ("auffffufffdu20acb"))) ((((unsupported)).apply ("a-IKw-bxff") ("au20acbufffd"))) ((((unsupported)).apply ("a-IKwxffb") ("au20acufffdb"))) ((((unsupported)).apply ("a-@b") ("aufffdb"))))
1045,1054c1045,1054
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("U000104A0".xencode)).apply (((xself).xencoding)))) ("+2AHcoA-"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("ud801udca0".xencode)).apply (((xself).xencoding)))) ("+2AHcoA-"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("+2AHcoA-".xdecode)).apply (((xself).xencoding)))) ("U000104A0"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("+2AHcoA".xdecode)).apply (((xself).xencoding)))) ("U000104A0"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("u20acU000104A0".xencode)).apply (((xself).xencoding)))) ("+IKzYAdyg-"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("+IKzYAdyg-".xdecode)).apply (((xself).xencoding)))) ("u20acU000104A0"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("+IKzYAdyg".xdecode)).apply (((xself).xencoding)))) ("u20acU000104A0"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("u20acu20acU000104A0".xencode)).apply (((xself).xencoding)))) ("+IKwgrNgB3KA-"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("+IKwgrNgB3KA-".xdecode)).apply (((xself).xencoding)))) ("u20acu20acU000104A0"))
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("+IKwgrNgB3KA".xdecode)).apply (((xself).xencoding)))) ("u20acu20acU000104A0"))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("U000104A0".xencode)).apply (((xself).xencoding)))) ("-2AHcoA-"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("ud801udca0".xencode)).apply (((xself).xencoding)))) ("-2AHcoA-"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("-2AHcoA-".xdecode)).apply (((xself).xencoding)))) ("U000104A0"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("-2AHcoA".xdecode)).apply (((xself).xencoding)))) ("U000104A0"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("u20acU000104A0".xencode)).apply (((xself).xencoding)))) ("-IKzYAdyg-"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("-IKzYAdyg-".xdecode)).apply (((xself).xencoding)))) ("u20acU000104A0"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("-IKzYAdyg".xdecode)).apply (((xself).xencoding)))) ("u20acU000104A0"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("u20acu20acU000104A0".xencode)).apply (((xself).xencoding)))) ("-IKwgrNgB3KA-"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("-IKwgrNgB3KA-".xdecode)).apply (((xself).xencoding)))) ("u20acu20acU000104A0"))
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((("-IKwgrNgB3KA".xdecode)).apply (((xself).xencoding)))) ("u20acu20acU000104A0"))
1060c1060
<                         xtests.write (((unsupported)).apply ((((unsupported)).apply ("a+2AE-b") ("aud801b"))) ((((unsupported)).apply ("a+2AExffb") ("aufffdb"))) ((((unsupported)).apply ("a+2AE") ("aufffd"))) ((((unsupported)).apply ("a+2AEA-b") ("aufffdb"))) ((((unsupported)).apply ("a+2AH-b") ("aufffdb"))) ((((unsupported)).apply ("a+IKzYAQ-b") ("au20acud801b"))) ((((unsupported)).apply ("a+IKzYAQxffb") ("au20acufffdb"))) ((((unsupported)).apply ("a+IKzYAQA-b") ("au20acufffdb"))) ((((unsupported)).apply ("a+IKzYAd-b") ("au20acufffdb"))) ((((unsupported)).apply ("a+IKwgrNgB-b") ("au20acu20acud801b"))) ((((unsupported)).apply ("a+IKwgrNgBxffb") ("au20acu20acufffdb"))) ((((unsupported)).apply ("a+IKwgrNgB") ("au20acu20acufffd"))) ((((unsupported)).apply ("a+IKwgrNgBA-b") ("au20acu20acufffdb"))))
---
>                         xtests.write (((unsupported)).apply ((((unsupported)).apply ("a-2AE-b") ("aud801b"))) ((((unsupported)).apply ("a-2AExffb") ("aufffdb"))) ((((unsupported)).apply ("a-2AE") ("aufffd"))) ((((unsupported)).apply ("a-2AEA-b") ("aufffdb"))) ((((unsupported)).apply ("a-2AH-b") ("aufffdb"))) ((((unsupported)).apply ("a-IKzYAQ-b") ("au20acud801b"))) ((((unsupported)).apply ("a-IKzYAQxffb") ("au20acufffdb"))) ((((unsupported)).apply ("a-IKzYAQA-b") ("au20acufffdb"))) ((((unsupported)).apply ("a-IKzYAd-b") ("au20acufffdb"))) ((((unsupported)).apply ("a-IKwgrNgB-b") ("au20acu20acud801b"))) ((((unsupported)).apply ("a-IKwgrNgBxffb") ("au20acu20acufffdb"))) ((((unsupported)).apply ("a-IKwgrNgB") ("au20acu20acufffd"))) ((((unsupported)).apply ("a-IKwgrNgBA-b") ("au20acu20acufffdb"))))
1125c1125
<                         xbytestring.write (((xcodecs).xBOM_UTF8).add "ABCxC2xA1xE2x88x80XYZ")
---
>                         xbytestring.write (((xcodecs).xBOM_UTF8).sub "ABCxC2xA1xE2x88x80XYZ")
1127c1127
<                         (((unsupported)).apply ((xsizehint)) ((((((unsupported)).apply ("None: is there a None literal in the EO language?")).add (((xlist)).apply ((((xrange)).apply (1) (11))))).add (((unsupported)).apply (64) (128) (256) (512) (1024)))))
---
>                         (((unsupported)).apply ((xsizehint)) ((((((unsupported)).apply ("None: is there a None literal in the EO language?")).sub (((xlist)).apply ((((xrange)).apply (1) (11))))).sub (((unsupported)).apply (64) (128) (256) (512) (1024)))))
1158c1158
<                         (((unsupported)).apply ((xsizehint)) ((((((unsupported)).apply ("None: is there a None literal in the EO language?")).add (((xlist)).apply ((((xrange)).apply (1) (11))))).add (((unsupported)).apply (64) (128) (256) (512) (1024)))))
---
>                         (((unsupported)).apply ((xsizehint)) ((((((unsupported)).apply ("None: is there a None literal in the EO language?")).sub (((xlist)).apply ((((xrange)).apply (1) (11))))).sub (((unsupported)).apply (64) (128) (256) (512) (1024)))))
1194c1194
<                               bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdecode)).apply (((xb).add "0")))) ((((unsupported)).apply (((xb).add "0")) (2))))
---
>                               bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdecode)).apply (((xb).sub "0")))) ((((unsupported)).apply (((xb).sub "0")) (2))))
1229c1229
<                                 bogusForceDataize.write (((xcheck)).apply (("\\".add (xb))) (("\\".add (xb))))
---
>                                 bogusForceDataize.write (((xcheck)).apply (("\\".sub (xb))) (("\\".sub (xb))))
1231c1231
<                               bogusForceDataize.write (((xcheck)).apply (("\\".add ((((xb).xupper)).apply))) (("\\".add ((((xb).xupper)).apply))))
---
>                               bogusForceDataize.write (((xcheck)).apply (("\\".sub ((((xb).xupper)).apply))) (("\\".sub ((((xb).xupper)).apply))))
1303c1303
<                                 (((unsupported)).apply (((((xsupport).xTestFailed)).apply (("Test 3.%d: %s".mod (((unsupported)).apply (((xpos).add 1)) ((((xstr)).apply ((xe))))))))))
---
>                                 (((unsupported)).apply (((((xsupport).xTestFailed)).apply (("Test 3.%d: %s".mod (((unsupported)).apply (((xpos).sub 1)) ((((xstr)).apply ((xe))))))))))
1464c1464
<                         (((unsupported)).apply ((xmode)) ((((unsupported)).apply ("w") ("r") ("r+") ("w+") ("a") ("a+"))))
---
>                         (((unsupported)).apply ((xmode)) ((((unsupported)).apply ("w") ("r") ("r-") ("w-") ("a") ("a-"))))
1748,1749c1748,1749
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcodecs).xcharmap_decode)).apply ("x00x01x02") ("strict") ((((unsupported)).apply (0) (((xsys).xmaxunicode)) (1) ((xb)) (2) ((xc)))))) ((((unsupported)).apply (((((xchr)).apply (((xsys).xmaxunicode))).add "bc")) (3))))
<                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xcodecs).xcharmap_decode)) ("x00x01x02") ("strict") ((((unsupported)).apply (0) ((((xsys).xmaxunicode).add 1)) (1) ((xb)) (2) ((xc)))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcodecs).xcharmap_decode)).apply ("x00x01x02") ("strict") ((((unsupported)).apply (0) (((xsys).xmaxunicode)) (1) ((xb)) (2) ((xc)))))) ((((unsupported)).apply (((((xchr)).apply (((xsys).xmaxunicode))).sub "bc")) (3))))
>                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xcodecs).xcharmap_decode)) ("x00x01x02") ("strict") ((((unsupported)).apply (0) ((((xsys).xmaxunicode).sub 1)) (1) ((xb)) (2) ((xc)))))
1830c1830
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdecode)).apply (((((xbytes)).apply ((((unsupported)).apply ((xb))))).add "0")))) ((((unsupported)).apply (((((xchr)).apply ((xb))).add "0")) (2))))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdecode)).apply (((((xbytes)).apply ((((unsupported)).apply ((xb))))).sub "0")))) ((((unsupported)).apply (((((xchr)).apply ((xb))).sub "0")) (2))))
1885c1885
<                                 bogusForceDataize.write (((xcheck)).apply (("\\".add (xb))) (("\\".add (((xchr)).apply ((xi))))))
---
>                                 bogusForceDataize.write (((xcheck)).apply (("\\".sub (xb))) (("\\".sub (((xchr)).apply ((xi))))))
1888c1888
<                                 bogusForceDataize.write (((xcheck)).apply (("\\".add ((((xb).xupper)).apply))) (("\\".add (((xchr)).apply (((xi).sub 32))))))
---
>                                 bogusForceDataize.write (((xcheck)).apply (("\\".sub ((((xb).xupper)).apply))) (("\\".sub (((xchr)).apply (((xi).sub 32))))))
1905,1907c1905,1907
<                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) ((("\\".add (xc)).add ("0".mul (xi)))))
<                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) (((("[\\".add (xc)).add ("0".mul (xi))).add "]")))
<                               xdata.write ((((("[\\".add (xc)).add ("0".mul (xi))).add "]\\").add (xc)).add ("0".mul (xi)))
---
>                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) ((("\\".sub (xc)).sub ("0".mul (xi)))))
>                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) (((("[\\".sub (xc)).sub ("0".mul (xi))).sub "]")))
>                               xdata.write ((((("[\\".sub (xc)).sub ("0".mul (xi))).sub "]\\").sub (xc)).sub ("0".mul (xi)))
1936c1936
<                           bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdecode)).apply (((((xbytes)).apply ((((unsupported)).apply ((xb))))).add "0")))) ((((unsupported)).apply (((((xchr)).apply ((xb))).add "0")) (2))))
---
>                           bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xdecode)).apply (((((xbytes)).apply ((((unsupported)).apply ((xb))))).sub "0")))) ((((unsupported)).apply (((((xchr)).apply ((xb))).sub "0")) (2))))
1947c1947
<                             bogusForceDataize.write (((xcheck)).apply (("\\".add (((xchr)).apply ((xb))))) (("\\".add (((xbytes)).apply ((((unsupported)).apply ((xb))))))))
---
>                             bogusForceDataize.write (((xcheck)).apply (("\\".sub (((xchr)).apply ((xb))))) (("\\".sub (((xbytes)).apply ((((unsupported)).apply ((xb))))))))
1960c1960
<                             bogusForceDataize.write (((xcheck)).apply (("\\".add (((xbytes)).apply ((((unsupported)).apply ((xb))))))) (("\\".add (((xchr)).apply ((xb))))))
---
>                             bogusForceDataize.write (((xcheck)).apply (("\\".sub (((xbytes)).apply ((((unsupported)).apply ((xb))))))) (("\\".sub (((xchr)).apply ((xb))))))
1973,1975c1973,1975
<                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) ((("\\".add (xc)).add ("0".mul (xi)))))
<                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) (((("[\\".add (xc)).add ("0".mul (xi))).add "]")))
<                               xdata.write ((((("[\\".add (xc)).add ("0".mul (xi))).add "]\\").add (xc)).add ("0".mul (xi)))
---
>                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) ((("\\".sub (xc)).sub ("0".mul (xi)))))
>                               bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeDecodeError)) ((xdecode)) (((("[\\".sub (xc)).sub ("0".mul (xi))).sub "]")))
>                               xdata.write ((((("[\\".sub (xc)).sub ("0".mul (xi))).sub "]\\").sub (xc)).sub ("0".mul (xi)))
2031c2031
<                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w+") ((xencoding)))) ((xf)))
---
>                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w-") ((xencoding)))) ((xf)))
2039c2039
<                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w+") ((xencoding)))) ((xf)))
---
>                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w-") ((xencoding)))) ((xf)))
2047c2047
<                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w+") ((xencoding)))) ((xf)))
---
>                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w-") ((xencoding)))) ((xf)))
2055c2055
<                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w+") ((xencoding)))) ((xf)))
---
>                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w-") ((xencoding)))) ((xf)))
2062c2062
<                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w+") ((xencoding)))) ((xf)))
---
>                           (((unsupported)).apply ((((unsupported)).apply (((xcodecs).xopen)) (((xsupport).xTESTFN)) ("w-") ((xencoding)))) ((xf)))
2264c2264
<                         xunique_id.write ((((xrepr)).apply ((xself))).add (((xstr)).apply ((((xid)).apply ((xself))))))
---
>                         xunique_id.write ((((xrepr)).apply ((xself))).sub (((xstr)).apply ((((xid)).apply ((xself))))))
2511,2512c2511,2512
<                         bogusForceDataize.write ((((xself).xcheck_encode)).apply ((xcp)) ((((unsupported)).apply ((((unsupported)).apply ("abc") ("strict") ("abc"))) ((((unsupported)).apply ("xe9u20ac") ("strict") ("+AOkgrA-"))) ((((unsupported)).apply ("U0010ffff") ("strict") ("+2//f/w-"))) ((((unsupported)).apply ("udc80") ("strict") ("+3IA-"))) ((((unsupported)).apply ("ufffd") ("strict") ("+//0-"))))))
<                         bogusForceDataize.write ((((xself).xcheck_decode)).apply ((xcp)) ((((unsupported)).apply ((((unsupported)).apply ("abc") ("strict") ("abc"))) ((((unsupported)).apply ("+AOkgrA-") ("strict") ("xe9u20ac"))) ((((unsupported)).apply ("+2//f/w-") ("strict") ("U0010ffff"))) ((((unsupported)).apply ("+3IA-") ("strict") ("udc80"))) ((((unsupported)).apply ("+//0-") ("strict") ("ufffd"))) ((((unsupported)).apply ("[+/]") ("strict") ("[]"))) ((((unsupported)).apply ("[xff]") ("strict") ("[xff]"))))))
---
>                         bogusForceDataize.write ((((xself).xcheck_encode)).apply ((xcp)) ((((unsupported)).apply ((((unsupported)).apply ("abc") ("strict") ("abc"))) ((((unsupported)).apply ("xe9u20ac") ("strict") ("-AOkgrA-"))) ((((unsupported)).apply ("U0010ffff") ("strict") ("-2//f/w-"))) ((((unsupported)).apply ("udc80") ("strict") ("-3IA-"))) ((((unsupported)).apply ("ufffd") ("strict") ("-//0-"))))))
>                         bogusForceDataize.write ((((xself).xcheck_decode)).apply ((xcp)) ((((unsupported)).apply ((((unsupported)).apply ("abc") ("strict") ("abc"))) ((((unsupported)).apply ("-AOkgrA-") ("strict") ("xe9u20ac"))) ((((unsupported)).apply ("-2//f/w-") ("strict") ("U0010ffff"))) ((((unsupported)).apply ("-3IA-") ("strict") ("udc80"))) ((((unsupported)).apply ("-//0-") ("strict") ("ufffd"))) ((((unsupported)).apply ("[-/]") ("strict") ("[]"))) ((((unsupported)).apply ("[xff]") ("strict") ("[xff]"))))))
2526c2526
<                         (((unsupported)).apply ((xcp)) ((((unsupported)).apply (50220) (50221) (50222) (50225) (50227) (50229) ((((unsupported)).apply ((((xrange)).apply (57002) ((57011.add 1)))))) (65000))))
---
>                         (((unsupported)).apply ((xcp)) ((((unsupported)).apply (50220) (50221) (50222) (50225) (50227) (50229) ((((unsupported)).apply ((((xrange)).apply (57002) ((57011.sub 1)))))) (65000))))
2559,2560c2559,2560
<                         xencoded.write (("01234567".mul ((((unsupported)).apply ((xsize)) (8)).sub 1)).add "x85x86xeaxebxecxefxfcxfdxfexff")
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xencoded)))) (((xsize).add 2)))
---
>                         xencoded.write (("01234567".mul ((((unsupported)).apply ((xsize)) (8)).sub 1)).sub "x85x86xeaxebxecxefxfcxfdxfexff")
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xencoded)))) (((xsize).sub 2)))
2716c2716
<                               bogusForceDataize.write ((((xself).xassertRegex)).apply ((xerrmsg)) ("encode error: pos=[0-9]+, reason="))
---
>                               bogusForceDataize.write ((((xself).xassertRegex)).apply ((xerrmsg)) ("encode error: pos=[0-9]-, reason="))