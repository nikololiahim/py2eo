memory > xContext
memory > xwidget
memory > xforms
memory > xvalue
memory > xArticleForm
memory > xCategory
memory > xx
memory > xsuper
memory > xbool
memory > xWriter
memory > xhash
memory > xlen
memory > xdatetime
memory > xlist
memory > xModelChoiceIteratorValue
memory > xCustomModelChoiceValue
memory > xCustomModelMultipleChoiceField
memory > xblank
memory > xCustomModelChoiceField
memory > xstr
memory > xlabel
memory > xBook
memory > xValidationError
memory > xTestCase
memory > xAuthor
memory > xModelChoiceForm
memory > xModelChoiceIterator
memory > xargs
memory > xobj
memory > xTemplate
memory > xArticle
memory > xCustomCheckboxSelectMultiple
memory > xCheckboxSelectMultiple
memory > xCategoriesForm
memory > xkwargs
memory > xCustomModelChoiceIterator
[] > test_modelchoicefield
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_clean_to_field_name
        memory > xtest_queryset_manager
        memory > xtest_disabled_modelchoicefield
        memory > xtest_disabled_modelchoicefield_initial_model_instance
        memory > xtest_disabled_multiplemodelchoicefield
        memory > xtest_result_cache_not_shared
        memory > xtest_choice_iterator_passes_model_to_widget
        memory > xtest_overridable_choice_iterator
        memory > xtest_queryset_none
        memory > xtest_clean_model_instance
        memory > xtest_choice_value_hash
        memory > xtest_choices_radio_blank
        memory > xtest_disabled_modelchoicefield_has_changed
        memory > xtest_choices_freshness
        memory > xtest_choices_bool_empty_label
        memory > xtest_choices_bool
        memory > xsetUpTestData
        memory > xtest_choices_not_fetched_when_not_rendering
        memory > xtest_deepcopies_widget
        memory > xtest_num_queries
        memory > xtest_no_extra_query_when_accessing_attrs
        memory > xtest_custom_choice_iterator_passes_model_to_widget
        memory > xtest_disabled_modelmultiplechoicefield_has_changed
        memory > xtest_basics
        memory > xtest_choices
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xc1)) ((((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("Entertainment") ("entertainment") ("entertainment"))))
                        (((unsupported)).apply (((xcls).xc2)) ((((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("test") ("test") ("A test"))))
                        (((unsupported)).apply (((xcls).xc3)) ((((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("Third") ("third-test") ("third"))))
                xtest_basics.write
                  [xself]
                    memory > xc4
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))) ((((unsupported)).apply ((((xself).xc3).xpk)) ("Third"))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply (""))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply (0))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ((((unsupported)).apply ("fail"))))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((unsupported)).apply ((((unsupported)).apply ("foo") ("bar"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xf).xclean)).apply ((((xself).xc2).xid))).xname)) ("A test"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xf).xclean)).apply ((((xself).xc3).xid))).xname)) ("Third"))
                        xc4.write (((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("Fourth") ("4th"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xf).xclean)).apply (((xc4).xid))).xname)) ("Fourth"))
                        bogusForceDataize.write ((((((unsupported)).apply ((((xCategory).xobjects).xget)) ("4th")).xdelete)).apply)
                        xmsg.write "['Select a valid choice. That choice is not one of the available choices.']"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply (((xc4).xid)))
                xtest_clean_model_instance.write
                  [xself]
                    memory > xmsg
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xclean)).apply (((xself).xc1)))) (((xself).xc1)))
                        xmsg.write "['Select a valid choice. That choice is not one of the available choices.']"
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValidationError)) ((xmsg)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((((xBook).xobjects).xcreate)).apply)))
                xtest_clean_to_field_name.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xCategory).xobjects).xall)).apply)) ("slug"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xclean)).apply ((((xself).xc1).xslug)))) (((xself).xc1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xf).xclean)).apply (((xself).xc1)))) (((xself).xc1)))
                xtest_choices.write
                  [xself]
                    memory > xgen_two
                    memory > xgen_one
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((unsupported)).apply ((((xCategory).xobjects).xfilter)) ((((xself).xc1).xid)))) (FALSE))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xf).xclean)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xf).xclean)).apply ((((xstr)).apply ((((xself).xc1).xid))))).xname)) ("Entertainment"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ("100"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xf).xchoices)))) (2))
                        (((unsupported)).apply (((xf).xqueryset)) ((((unsupported)).apply ((((xCategory).xobjects).xexclude)) ("Third"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xf).xclean)).apply ((((xself).xc2).xid))).xname)) ("A test"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValidationError)))))
                          bogusForceDataize.write ((((xf).xclean)).apply ((((xself).xc3).xid)))
                        xgen_one.write (((xlist)).apply (((xf).xchoices)))
                        xgen_two.write ((xf).xchoices)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgen_one)) (2))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((xgen_two)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))))))
                        (((unsupported)).apply (((xf).xqueryset)) ((((((xCategory).xobjects).xall)).apply)))
                        (((unsupported)).apply (((xf).xlabel_from_instance)) ((((unsupported)).apply (("category ".add (((xstr)).apply ((xobj))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("category Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("category A test"))) ((((unsupported)).apply ((((xself).xc3).xpk)) ("category Third"))))))
                xtest_choices_freshness.write
                  [xself]
                    memory > xc4
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xf).xchoices)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))) ((((unsupported)).apply ((((xself).xc3).xpk)) ("Third"))))))
                        xc4.write (((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("Fourth") ("4th") ("4th"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xf).xchoices)))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))) ((((unsupported)).apply ((((xself).xc3).xpk)) ("Third"))) ((((unsupported)).apply (((xc4).xpk)) ("Fourth"))))))
                xtest_choices_bool.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xCategory).xobjects).xall)).apply)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xbool)).apply (((xf).xchoices)))) (TRUE))
                        bogusForceDataize.write ((((((((xCategory).xobjects).xall)).apply).xdelete)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xbool)).apply (((xf).xchoices)))) (FALSE))
                xtest_choices_bool_empty_label.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xCategory).xobjects).xall)).apply)) ("--------"))
                        bogusForceDataize.write ((((((((xCategory).xobjects).xall)).apply).xdelete)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xbool)).apply (((xf).xchoices)))) (TRUE))
                xtest_choices_radio_blank.write
                  [xself]
                    memory > xcategories
                    memory > xchoices
                    memory > xf
                    seq > @
                      seq
                        xchoices.write (((unsupported)).apply ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))) ((((unsupported)).apply ((((xself).xc3).xpk)) ("Third"))))
                        xcategories.write (((((xCategory).xobjects).xall)).apply)
                        (((unsupported)).apply ((xwidget)) ((((unsupported)).apply (((xforms).xRadioSelect)) (((((xforms).xRadioSelect)).apply)))))
                          (((unsupported)).apply ((xblank)) ((((unsupported)).apply (TRUE) (FALSE))))
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xwidget)) ((xblank)))))
                              seq
                                xf.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((xcategories)) ((xwidget)) ((xblank)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) (((xblank).if ((((unsupported)).apply ((((unsupported)).apply ("") ("---------")))).add (xchoices)) (xchoices))))
                xtest_deepcopies_widget.write
                  [xself]
                    memory > xfield1
                    memory > xform1
                    memory > xcategory
                    seq > @
                      seq
                        (((unsupported)).apply (((xforms).xForm)))
                          xcategory.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        xform1.write (((xModelChoiceForm)).apply)
                        xfield1.write (((unsupported)).apply (((xform1).xfields)) ("category"))
                        bogusForceDataize.write ((((xself).xassertIsNot)).apply ((xfield1)) ((((unsupported)).apply (((xModelChoiceForm).xbase_fields)) ("category"))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xfield1).xwidget).xchoices).xfield)) ((xfield1)))
                xtest_result_cache_not_shared.write
                  [xself]
                    memory > xform2
                    memory > xform1
                    memory > xcategory
                    seq > @
                      seq
                        (((unsupported)).apply (((xforms).xForm)))
                          xcategory.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        xform1.write (((xModelChoiceForm)).apply)
                        bogusForceDataize.write ((((xself).xassertCountEqual)).apply (((((unsupported)).apply (((xform1).xfields)) ("category")).xqueryset)) ((((unsupported)).apply (((xself).xc1)) (((xself).xc2)) (((xself).xc3)))))
                        xform2.write (((xModelChoiceForm)).apply)
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((((unsupported)).apply (((xform2).xfields)) ("category")).xqueryset).x_result_cache)))
                xtest_queryset_none.write
                  [xself]
                    memory > xform
                    memory > x__init__
                    memory > xcategory
                    seq > @
                      seq
                        (((unsupported)).apply (((xforms).xForm)))
                          seq
                            xcategory.write (((unsupported)).apply (((xforms).xModelChoiceField)) ("None: is there a None literal in the EO language?"))
                            x__init__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply)
                                    bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                                    (((unsupported)).apply (((((unsupported)).apply (((xself).xfields)) ("category")).xqueryset)) ((((unsupported)).apply ((((xCategory).xobjects).xfilter)) ("test"))))
                        xform.write (((xModelChoiceForm)).apply)
                        bogusForceDataize.write ((((xself).xassertCountEqual)).apply (((((unsupported)).apply (((xform).xfields)) ("category")).xqueryset)) ((((unsupported)).apply (((xself).xc2)) (((xself).xc3)))))
                xtest_no_extra_query_when_accessing_attrs.write
                  [xself]
                    memory > xfield
                    memory > xtemplate
                    memory > xform
                    memory > xcategory
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xforms).xForm)))
                          xcategory.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xCategory).xobjects).xall)).apply)) (((xforms).xRadioSelect)))
                        xform.write (((xModelChoiceForm)).apply)
                        xfield.write (((unsupported)).apply ((xform)) ("category"))
                        xtemplate.write (((xTemplate)).apply ("{{ field.name }}{{ field }}{{ field.help_text }}"))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("field") ((xfield)))))))
                xtest_disabled_modelchoicefield.write
                  [xself]
                    memory > xfields
                    memory > xform
                    memory > xbook
                    memory > xauthor
                    memory > xmodel
                    seq > @
                      seq
                        (((unsupported)).apply (((xforms).xModelForm)))
                          seq
                            xauthor.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xAuthor).xobjects).xall)).apply)) (TRUE))
                            (((unsupported)).apply)
                              seq
                                xmodel.write (xBook)
                                xfields.write (((unsupported)).apply ("author"))
                        xbook.write (((unsupported)).apply ((((xBook).xobjects).xcreate)) ((((unsupported)).apply ((((xWriter).xobjects).xcreate)) ("Test writer"))))
                        xform.write (((unsupported)).apply ((xModelChoiceForm)) ((((unsupported)).apply)) ((xbook)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xform).xerrors)) ("author"))) ((((unsupported)).apply ("Select a valid choice. That choice is not one of the available choices."))))
                xtest_disabled_modelchoicefield_has_changed.write
                  [xself]
                    memory > xfield
                    seq > @
                      seq
                        xfield.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xAuthor).xobjects).xall)).apply)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xfield).xhas_changed)).apply ("x") ("y"))) (FALSE))
                xtest_disabled_modelchoicefield_initial_model_instance.write
                  [xself]
                    memory > xcategories
                    seq > @
                      seq
                        (((unsupported)).apply (((xforms).xForm)))
                          xcategories.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((((((xCategory).xobjects).xall)).apply)) (TRUE) (((xself).xc1)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((unsupported)).apply ((xModelChoiceForm)) ((((unsupported)).apply ("categories") ((((xself).xc1).xpk))))).xis_valid)).apply)))
                xtest_disabled_multiplemodelchoicefield.write
                  [xself]
                    memory > xcategories
                    memory > xcategory1
                    memory > xform
                    memory > xarticle
                    memory > xmodel
                    memory > xcategory2
                    memory > xfields
                    seq > @
                      seq
                        (((unsupported)).apply (((xforms).xModelForm)))
                          seq
                            xcategories.write (((unsupported)).apply (((xforms).xModelMultipleChoiceField)) ((((((xCategory).xobjects).xall)).apply)) (FALSE))
                            (((unsupported)).apply)
                              seq
                                xmodel.write (xArticle)
                                xfields.write (((unsupported)).apply ("categories"))
                        xcategory1.write (((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("cat1"))
                        xcategory2.write (((unsupported)).apply ((((xCategory).xobjects).xcreate)) ("cat2"))
                        xarticle.write (((unsupported)).apply ((((xArticle).xobjects).xcreate)) (((((xdatetime).xdate)).apply (1988) (1) (4))) ((((unsupported)).apply ((((xWriter).xobjects).xcreate)) ("Test writer"))))
                        bogusForceDataize.write (((((xarticle).xcategories).xset)).apply ((((unsupported)).apply (((xcategory1).xpk)))))
                        xform.write (((unsupported)).apply ((xArticleForm)) ((((unsupported)).apply ("categories") ((((unsupported)).apply (((xcategory2).xpk)))))) ((xarticle)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xform).xerrors)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xx).xpk)) ((xx)) ((((unsupported)).apply (((xform).xcleaned_data)) ("categories"))))) ((((unsupported)).apply (((xcategory2).xpk)))))
                        xform.write (((unsupported)).apply ((xArticleForm)) ((((unsupported)).apply ("categories") ((((unsupported)).apply (((xcategory2).xpk)))))) ((xarticle)))
                        (((unsupported)).apply (((((unsupported)).apply (((xform).xfields)) ("categories")).xdisabled)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xform).xerrors)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xx).xpk)) ((xx)) ((((unsupported)).apply (((xform).xcleaned_data)) ("categories"))))) ((((unsupported)).apply (((xcategory1).xpk)))))
                xtest_disabled_modelmultiplechoicefield_has_changed.write
                  [xself]
                    memory > xfield
                    seq > @
                      seq
                        xfield.write (((unsupported)).apply (((xforms).xModelMultipleChoiceField)) ((((((xAuthor).xobjects).xall)).apply)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIs)).apply (((((xfield).xhas_changed)).apply ("x") ("y"))) (FALSE))
                xtest_overridable_choice_iterator.write
                  [xself]
                    memory > xfield
                    memory > xiterator
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xfield.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xfield).xchoices)) ((xModelChoiceIterator)))
                        (((unsupported)).apply ((xModelChoiceIterator)))
                        (((unsupported)).apply (((xforms).xModelChoiceField)))
                          xiterator.write (xCustomModelChoiceIterator)
                        xfield.write (((xCustomModelChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xfield).xchoices)) ((xCustomModelChoiceIterator)))
                xtest_choice_iterator_passes_model_to_widget.write
                  [xself]
                    memory > xfield
                    memory > xwidget
                    memory > xcreate_option
                    seq > @
                      seq
                        (((unsupported)).apply ((xCheckboxSelectMultiple)))
                          xcreate_option.write
                            [xself xname xvalue xlabel xselected xindex xsubindex xattrs]
                              memory > xc
                              memory > xoption
                              seq > @
                                (((unsupported)).apply)
                                  xoption.write ((((((xsuper)).apply).xcreate_option)).apply ((xname)) ((xvalue)) ((xlabel)) ((xselected)) ((xindex)) ((xsubindex)) ((xattrs)))
                                  xc.write ((xvalue).xinstance)
                                  (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xoption)) ("attrs"))) ("data-slug"))) (((xc).xslug)))
                                  (((unsupported)).apply ((xoption)))
                        (((unsupported)).apply (((xforms).xModelMultipleChoiceField)))
                          xwidget.write (xCustomCheckboxSelectMultiple)
                        xfield.write (((xCustomModelMultipleChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((((xfield).xwidget).xrender)).apply ("name") ((((unsupported)).apply)))) (("<div><div><label><input type=\"checkbox\" name=\"name\" value=\"%d\" data-slug=\"entertainment\">Entertainment</label></div><div><label><input type=\"checkbox\" name=\"name\" value=\"%d\" data-slug=\"test\">A test</label></div><div><label><input type=\"checkbox\" name=\"name\" value=\"%d\" data-slug=\"third-test\">Third</label></div></div>".mod (((unsupported)).apply ((((xself).xc1).xpk)) ((((xself).xc2).xpk)) ((((xself).xc3).xpk))))))
                xtest_custom_choice_iterator_passes_model_to_widget.write
                  [xself]
                    memory > xchoice
                    memory > xiterator
                    memory > xcreate_option
                    memory > x__init__
                    memory > x__str__
                    memory > xfield
                    memory > xwidget
                    seq > @
                      seq
                        (((unsupported)).apply)
                          seq
                            x__init__.write
                              [xself xvalue xobj]
                                seq > @
                                  seq
                                    (((unsupported)).apply (((xself).xvalue)) ((xvalue)))
                                    (((unsupported)).apply (((xself).xobj)) ((xobj)))
                            x__str__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply ((((xstr)).apply (((xself).xvalue)))))
                        (((unsupported)).apply ((xModelChoiceIterator)))
                          xchoice.write
                            [xself xobj]
                              seq > @
                                seq
                                  (((unsupported)).apply ((((unsupported)).apply ((xvalue)) ((xlabel)))) (((((((xsuper)).apply).xchoice)).apply ((xobj)))))
                                  (((unsupported)).apply ((((unsupported)).apply ((((xCustomModelChoiceValue)).apply ((xvalue)) ((xobj)))) ((xlabel)))))
                        (((unsupported)).apply ((xCheckboxSelectMultiple)))
                          xcreate_option.write
                            [xself xname xvalue xlabel xselected xindex xsubindex xattrs]
                              memory > xc
                              memory > xoption
                              seq > @
                                (((unsupported)).apply)
                                  xoption.write ((((((xsuper)).apply).xcreate_option)).apply ((xname)) ((xvalue)) ((xlabel)) ((xselected)) ((xindex)) ((xsubindex)) ((xattrs)))
                                  xc.write ((xvalue).xobj)
                                  (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xoption)) ("attrs"))) ("data-slug"))) (((xc).xslug)))
                                  (((unsupported)).apply ((xoption)))
                        (((unsupported)).apply (((xforms).xModelMultipleChoiceField)))
                          seq
                            xiterator.write (xCustomModelChoiceIterator)
                            xwidget.write (xCustomCheckboxSelectMultiple)
                        xfield.write (((xCustomModelMultipleChoiceField)).apply ((((((xCategory).xobjects).xall)).apply)))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ((((((xfield).xwidget).xrender)).apply ("name") ((((unsupported)).apply)))) (((((unsupported)).apply).mod (((unsupported)).apply ((((xself).xc1).xpk)) ((((xself).xc2).xpk)) ((((xself).xc3).xpk))))))
                xtest_choice_value_hash.write
                  [xself]
                    memory > xvalue_1
                    memory > xvalue_2
                    seq > @
                      seq
                        xvalue_1.write (((xModelChoiceIteratorValue)).apply ((((xself).xc1).xpk)) (((xself).xc1)))
                        xvalue_2.write (((xModelChoiceIteratorValue)).apply ((((xself).xc2).xpk)) (((xself).xc2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhash)).apply ((xvalue_1)))) ((((xhash)).apply ((((xModelChoiceIteratorValue)).apply ((((xself).xc1).xpk)) ("None: is there a None literal in the EO language?"))))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((xhash)).apply ((xvalue_1)))) ((((xhash)).apply ((xvalue_2)))))
                xtest_choices_not_fetched_when_not_rendering.write
                  [xself]
                    memory > xfield
                    seq > @
                      (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                        seq
                          xfield.write ((((xforms).xModelChoiceField)).apply ((((((xCategory).xobjects).xorder_by)).apply ("-name"))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ("Entertainment") ((((((xfield).xclean)).apply ((((xself).xc1).xpk))).xname)))
                xtest_queryset_manager.write
                  [xself]
                    memory > xf
                    seq > @
                      seq
                        xf.write ((((xforms).xModelChoiceField)).apply (((xCategory).xobjects)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xf).xchoices)))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((xf).xchoices)))) ((((unsupported)).apply ((((unsupported)).apply ("") ("---------"))) ((((unsupported)).apply ((((xself).xc1).xpk)) ("Entertainment"))) ((((unsupported)).apply ((((xself).xc2).xpk)) ("A test"))) ((((unsupported)).apply ((((xself).xc3).xpk)) ("Third"))))))
                xtest_num_queries.write
                  [xself]
                    memory > xcheckbox
                    memory > xradio
                    memory > xtemplate
                    memory > xcategories
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xcategories.write (((((xCategory).xobjects).xall)).apply)
                        (((unsupported)).apply (((xforms).xForm)))
                          seq
                            xradio.write (((unsupported)).apply (((xforms).xModelChoiceField)) ((xcategories)) (((xforms).xRadioSelect)))
                            xcheckbox.write (((unsupported)).apply (((xforms).xModelMultipleChoiceField)) ((xcategories)) (((xforms).xCheckboxSelectMultiple)))
                        xtemplate.write (((xTemplate)).apply ("{% for widget in form.checkbox %}{{ widget }}{% endfor %}{% for widget in form.radio %}{{ widget }}{% endfor %}"))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (2))))
                          bogusForceDataize.write ((((xtemplate).xrender)).apply ((((xContext)).apply ((((unsupported)).apply ("form") ((((xCategoriesForm)).apply)))))))