memory > xAttributeError
memory > xGreaterThan
memory > xLessThanOrEqual
memory > xwarnings
memory > xIn
memory > xOR
memory > xExact
memory > xhasattr
memory > xModel
memory > xMultiColSource
memory > xRelatedLookupMixin
memory > xisinstance
memory > xAND
memory > xIsNull
memory > xvalue
memory > xWhereNode
memory > xSubqueryConstraint
memory > xsuper
memory > xRemovedInDjango50Warning
memory > xtuple
memory > xGreaterThanOrEqual
memory > xval
memory > xgetattr
memory > xv
memory > xtarget
memory > xLessThan
memory > xzip
memory > xsource
[] > related_lookups
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xget_lookup
        memory > xcontains_aggregate
        memory > xget_prep_lookup
        memory > xas_sql
        memory > xresolve_expression
        memory > xrelabeled_clone
        memory > x__repr__
        memory > x__init__
        memory > xget_normalized_value
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                xcontains_aggregate.write FALSE
                x__init__.write
                  [xself xalias xtargets xsources xfield]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xtargets)) (((xself).xsources)) (((xself).xfield)) (((xself).xalias)))) ((((unsupported)).apply ((xtargets)) ((xsources)) ((xfield)) ((xalias)))))
                        (((unsupported)).apply (((xself).xoutput_field)) (((xself).xfield)))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((("{}({}, {})".xformat)).apply ((((xself).x__class__).x__name__)) (((xself).xalias)) (((xself).xfield)))))
                xrelabeled_clone.write
                  [xself xrelabels]
                    seq > @
                      (((unsupported)).apply (((((xself).x__class__)).apply (((((xrelabels).xget)).apply (((xself).xalias)) (((xself).xalias)))) (((xself).xtargets)) (((xself).xsources)) (((xself).xfield)))))
                xget_lookup.write
                  [xself xlookup]
                    seq > @
                      (((unsupported)).apply ((((((xself).xoutput_field).xget_lookup)).apply ((xlookup)))))
                xresolve_expression.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xself)))
            xget_normalized_value.write
              [xvalue xlhs]
                memory > xsources
                memory > xvalue_list
                memory > xsource
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((xisinstance)).apply ((xvalue)) ((xModel))).if
                      seq
                        (((unsupported)).apply (((xvalue).xpk)) ("None: is there a None literal in the EO language?")).if
                          bogusForceDataize.write ((((xwarnings).xwarn)).apply ("Passing unsaved model instances to related filters is deprecated.") ((xRemovedInDjango50Warning)))
                        xvalue_list.write (((unsupported)).apply)
                        xsources.write ((((unsupported)).apply ((((xlhs).xoutput_field).xpath_infos)) ((1.neg))).xtarget_fields)
                        (((unsupported)).apply ((xsource)) ((xsources)))
                          seq
                            while.
                              (((((xisinstance)).apply ((xvalue)) (((xsource).xmodel))).not).and ((xsource).xremote_field))
                              [unused]
                                seq > @
                                  xsource.write (((((((xsource).xremote_field).xmodel).x_meta).xget_field)).apply ((((xsource).xremote_field).xfield_name)))
                            (((unsupported)).apply ((xAttributeError)))
                              bogusForceDataize.write ((((xvalue_list).xappend)).apply ((((xgetattr)).apply ((xvalue)) (((xsource).xattname)))))
                              (((unsupported)).apply ((((unsupported)).apply (((xvalue).xpk)))))
                        (((unsupported)).apply ((((xtuple)).apply ((xvalue_list)))))
                    ((((xisinstance)).apply ((xvalue)) ((xtuple))).not).if
                      (((unsupported)).apply ((((unsupported)).apply ((xvalue)))))
                    (((unsupported)).apply ((xvalue)))
            (((unsupported)).apply ((xIn)))
              seq
                xget_prep_lookup.write
                  [xself]
                    memory > xtarget_field
                    seq > @
                      seq
                        ((((xisinstance)).apply (((xself).xlhs)) ((xMultiColSource))).not).if
                          ((((xself).xrhs_is_direct_value)).apply).if
                            seq
                              (((unsupported)).apply (((xself).xrhs)) ((((unsupported)).apply ((((unsupported)).apply ((((xget_normalized_value)).apply ((xval)) (((xself).xlhs)))) (0))) ((xval)) (((xself).xrhs)))))
                              (((xhasattr)).apply ((((xself).xlhs).xoutput_field)) ("path_infos")).if
                                seq
                                  xtarget_field.write (((unsupported)).apply (((((unsupported)).apply (((((xself).xlhs).xoutput_field).xpath_infos)) ((1.neg))).xtarget_fields)) ((1.neg)))
                                  (((unsupported)).apply (((xself).xrhs)) ((((unsupported)).apply (((((xtarget_field).xget_prep_value)).apply ((xv)))) ((xv)) (((xself).xrhs)))))
                            (((((xgetattr)).apply (((xself).xrhs)) ("has_select_fields") (TRUE)).not).and ((((xgetattr)).apply (((((xself).xlhs).xfield).xtarget_field)) ("primary_key") (FALSE)).not)).if
                              seq
                                bogusForceDataize.write (((((xself).xrhs).xclear_select_clause)).apply)
                                ((((xgetattr)).apply ((((xself).xlhs).xoutput_field)) ("primary_key") (FALSE)).and (((((xself).xlhs).xoutput_field).xmodel).eq (((xself).xrhs).xmodel))).if
                                  xtarget_field.write ((((xself).xlhs).xfield).xname)
                                  xtarget_field.write (((((xself).xlhs).xfield).xtarget_field).xname)
                                bogusForceDataize.write (((((xself).xrhs).xadd_fields)).apply ((((unsupported)).apply ((xtarget_field)))) (TRUE))
                        (((unsupported)).apply (((((((xsuper)).apply).xget_prep_lookup)).apply)))
                xas_sql.write
                  [xself xcompiler xconnection]
                    memory > xroot_constraint
                    memory > xlookup
                    memory > xlookup_class
                    memory > xvalues
                    memory > xvalue_constraint
                    seq > @
                      seq
                        (((xisinstance)).apply (((xself).xlhs)) ((xMultiColSource))).if
                          seq
                            (((unsupported)).apply)
                            (((unsupported)).apply)
                            (((unsupported)).apply)
                            (((unsupported)).apply)
                            xroot_constraint.write (((unsupported)).apply ((xWhereNode)) ((xOR)))
                            ((((xself).xrhs_is_direct_value)).apply).if
                              seq
                                xvalues.write (((unsupported)).apply ((((xget_normalized_value)).apply ((xvalue)) (((xself).xlhs)))) ((xvalue)) (((xself).xrhs)))
                                (((unsupported)).apply ((xvalue)) ((xvalues)))
                                  seq
                                    xvalue_constraint.write (((xWhereNode)).apply)
                                    (((unsupported)).apply ((((unsupported)).apply ((xsource)) ((xtarget)) ((xval)))) ((((xzip)).apply ((((xself).xlhs).xsources)) ((((xself).xlhs).xtargets)) ((xvalue)))))
                                      seq
                                        xlookup_class.write ((((xtarget).xget_lookup)).apply ("exact"))
                                        xlookup.write (((xlookup_class)).apply (((((xtarget).xget_col)).apply ((((xself).xlhs).xalias)) ((xsource)))) ((xval)))
                                        bogusForceDataize.write ((((xvalue_constraint).xadd)).apply ((xlookup)) ((xAND)))
                                    bogusForceDataize.write ((((xroot_constraint).xadd)).apply ((xvalue_constraint)) ((xOR)))
                              bogusForceDataize.write ((((xroot_constraint).xadd)).apply ((((xSubqueryConstraint)).apply ((((xself).xlhs).xalias)) ((((unsupported)).apply (((xtarget).xcolumn)) ((xtarget)) ((((xself).xlhs).xtargets)))) ((((unsupported)).apply (((xsource).xname)) ((xsource)) ((((xself).xlhs).xsources)))) (((xself).xrhs)))) ((xAND)))
                            (((unsupported)).apply (((((xroot_constraint).xas_sql)).apply ((xcompiler)) ((xconnection)))))
                        (((unsupported)).apply (((((((xsuper)).apply).xas_sql)).apply ((xcompiler)) ((xconnection)))))
            (((unsupported)).apply)
              seq
                xget_prep_lookup.write
                  [xself]
                    memory > xtarget_field
                    seq > @
                      seq
                        (((((xisinstance)).apply (((xself).xlhs)) ((xMultiColSource))).not).and ((((xhasattr)).apply (((xself).xrhs)) ("resolve_expression")).not)).if
                          seq
                            (((unsupported)).apply (((xself).xrhs)) ((((unsupported)).apply ((((xget_normalized_value)).apply (((xself).xrhs)) (((xself).xlhs)))) (0))))
                            (((xself).xprepare_rhs).and (((xhasattr)).apply ((((xself).xlhs).xoutput_field)) ("path_infos"))).if
                              seq
                                xtarget_field.write (((unsupported)).apply (((((unsupported)).apply (((((xself).xlhs).xoutput_field).xpath_infos)) ((1.neg))).xtarget_fields)) ((1.neg)))
                                (((unsupported)).apply (((xself).xrhs)) (((((xtarget_field).xget_prep_value)).apply (((xself).xrhs)))))
                        (((unsupported)).apply (((((((xsuper)).apply).xget_prep_lookup)).apply)))
                xas_sql.write
                  [xself xcompiler xconnection]
                    memory > xlookup_class
                    memory > xroot_constraint
                    seq > @
                      seq
                        (((xisinstance)).apply (((xself).xlhs)) ((xMultiColSource))).if
                          seq
                            (((unsupported)).apply (((((xself).xrhs_is_direct_value)).apply)))
                            (((unsupported)).apply (((xself).xrhs)) ((((xget_normalized_value)).apply (((xself).xrhs)) (((xself).xlhs)))))
                            (((unsupported)).apply)
                            (((unsupported)).apply)
                            xroot_constraint.write (((xWhereNode)).apply)
                            (((unsupported)).apply ((((unsupported)).apply ((xtarget)) ((xsource)) ((xval)))) ((((xzip)).apply ((((xself).xlhs).xtargets)) ((((xself).xlhs).xsources)) (((xself).xrhs)))))
                              seq
                                xlookup_class.write ((((xtarget).xget_lookup)).apply (((xself).xlookup_name)))
                                bogusForceDataize.write ((((xroot_constraint).xadd)).apply ((((xlookup_class)).apply (((((xtarget).xget_col)).apply ((((xself).xlhs).xalias)) ((xsource)))) ((xval)))) ((xAND)))
                            (((unsupported)).apply (((((xroot_constraint).xas_sql)).apply ((xcompiler)) ((xconnection)))))
                        (((unsupported)).apply (((((((xsuper)).apply).xas_sql)).apply ((xcompiler)) ((xconnection)))))
            (((unsupported)).apply ((xRelatedLookupMixin)) ((xExact)))
            (((unsupported)).apply ((xRelatedLookupMixin)) ((xLessThan)))
            (((unsupported)).apply ((xRelatedLookupMixin)) ((xGreaterThan)))
            (((unsupported)).apply ((xRelatedLookupMixin)) ((xGreaterThanOrEqual)))
            (((unsupported)).apply ((xRelatedLookupMixin)) ((xLessThanOrEqual)))
            (((unsupported)).apply ((xRelatedLookupMixin)) ((xIsNull)))