memory > xCity
memory > xPennsylvaniaCity
memory > xOuterRef
memory > xMultiFields
memory > xconnection
memory > xTrack
memory > xbad
memory > xfromstr
memory > xbad_args
memory > xc
memory > xgdal
memory > xtmp
memory > xMultiPoint
memory > xSubquery
memory > xlist
memory > xValueError
memory > xExtent
memory > xklass
memory > xFeature
memory > xTestCase
memory > xcall_command
memory > xMultiLineString
memory > xNonConcreteModel
memory > xb
memory > xLinearRing
memory > xGeometryCollection
memory > xState
memory > xtempfile
memory > xfunctions
memory > xlookup
memory > xDatabaseError
memory > xgeom
memory > xMinusOneSRID
memory > xNotSupportedError
memory > xF
memory > xpc
memory > xs
memory > xexp
memory > xCaptureQueriesContext
memory > xLineString
memory > xPoint
memory > xval
memory > xv
memory > xctx
memory > xe
memory > xCountry
memory > xStringIO
memory > xzip
memory > xMultiPolygon
memory > xGEOSGeometry
memory > xlen
memory > xMakeLine
memory > xUnion
memory > xTypeError
memory > xPolygon
[] > tests
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_lookup_insert_transform
        memory > xtest_crosses_lookup
        memory > xtest_gis_lookups_with_complex_expressions
        memory > xfixtures
        memory > xtest_unionagg_tolerance_escaping
        memory > xtest_relate_lookup
        memory > xtest_within_subquery
        memory > xtest_extent_with_limit
        memory > xtest_equals_lookups
        memory > xtest_geoagg_subquery
        memory > xtest_disjoint_lookup
        memory > xtest_empty_geometries
        memory > xtest_isvalid_lookup
        memory > xtest_non_concrete_field
        memory > xtest_extent
        memory > xtest_null_geometries
        memory > xtest_make_line
        memory > xtest_left_right_lookups
        memory > xtest_proxy
        memory > xtest_subquery_annotation
        memory > xtest_values_srid
        memory > xtest_raw_sql_query
        memory > xtest_createnull
        memory > xtest_dumpdata_loaddata_cycle
        memory > xtest_unionagg
        memory > xtest_geometryfield
        memory > xtest_null_geometries_excluded_in_lookups
        memory > xtest_strictly_above_below_lookups
        memory > xtest_fixtures
        memory > xtest_unionagg_tolerance
        memory > xtest_wkt_string_in_lookup
        memory > xtest_inherited_geofields
        memory > xtest_contains_contained_lookups
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xfixtures.write (((unsupported)).apply ("initial"))
                xtest_fixtures.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) ((((((xCountry).xobjects).xcount)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (8) ((((((xCity).xobjects).xcount)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) ((((((xState).xobjects).xcount)).apply)))
                xtest_proxy.write
                  [xself]
                    memory > xnullcity
                    memory > xnew
                    memory > xpnt
                    memory > xns
                    memory > xshell
                    memory > xnullstate
                    memory > xnew_inner
                    memory > xinner
                    memory > xply
                    seq > @
                      seq
                        unsupported
                        xpnt.write (((xPoint)).apply (0) (0))
                        xnullcity.write (((unsupported)).apply ((xCity)) ("NullCity") ((xpnt)))
                        bogusForceDataize.write ((((xnullcity).xsave)).apply)
                        (((unsupported)).apply ((xbad)) ((((unsupported)).apply (5) (2.0) ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))))))))
                          (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ("Cannot set"))))
                            (((unsupported)).apply (((xnullcity).xpoint)) ((xbad)))
                        xnew.write (((xPoint)).apply (5) (23))
                        (((unsupported)).apply (((xnullcity).xpoint)) ((xnew)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xnullcity).xpoint).xsrid)))
                        bogusForceDataize.write ((((xnullcity).xsave)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xnew)) (((((unsupported)).apply ((((xCity).xobjects).xget)) ("NullCity")).xpoint)))
                        (((unsupported)).apply ((((xnullcity).xpoint).xx)) (23))
                        (((unsupported)).apply ((((xnullcity).xpoint).xy)) (5))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((((unsupported)).apply ((xPoint)) (23) (5) (4326))) (((((unsupported)).apply ((((xCity).xobjects).xget)) ("NullCity")).xpoint)))
                        bogusForceDataize.write ((((xnullcity).xsave)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xPoint)) (23) (5) (4326))) (((((unsupported)).apply ((((xCity).xobjects).xget)) ("NullCity")).xpoint)))
                        bogusForceDataize.write ((((xnullcity).xdelete)).apply)
                        xshell.write (((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (90))) ((((unsupported)).apply (100) (90))) ((((unsupported)).apply (100) (0))) ((((unsupported)).apply (0) (0))))
                        xinner.write (((xLinearRing)).apply ((((unsupported)).apply (40) (40))) ((((unsupported)).apply (40) (60))) ((((unsupported)).apply (60) (60))) ((((unsupported)).apply (60) (40))) ((((unsupported)).apply (40) (40))))
                        xply.write (((xPolygon)).apply ((xshell)) ((xinner)))
                        xnullstate.write (((unsupported)).apply ((xState)) ("NullState") ((xply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xnullstate).xpoly).xsrid)))
                        bogusForceDataize.write ((((xnullstate).xsave)).apply)
                        xns.write (((unsupported)).apply ((((xState).xobjects).xget)) ("NullState"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xconnection).xops).xAdapter).x_fix_polygon)).apply ((xply)))) (((xns).xpoly)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xns).xpoly).xogr)) (((xgdal).xOGRGeometry)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xns).xpoly).xwkb)) (((((xns).xpoly).xogr).xwkb)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xns).xpoly).xsrs)) (((xgdal).xSpatialReference)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("WGS 84") (((((xns).xpoly).xsrs).xname)))
                        xnew_inner.write (((xLinearRing)).apply ((((unsupported)).apply (30) (30))) ((((unsupported)).apply (30) (70))) ((((unsupported)).apply (70) (70))) ((((unsupported)).apply (70) (30))) ((((unsupported)).apply (30) (30))))
                        (((unsupported)).apply ((((unsupported)).apply (((xns).xpoly)) (1))) ((xnew_inner)))
                        (((unsupported)).apply ((((unsupported)).apply ((xply)) (1))) ((xnew_inner)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xns).xpoly).xsrid)))
                        bogusForceDataize.write ((((xns).xsave)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xconnection).xops).xAdapter).x_fix_polygon)).apply ((xply)))) (((((unsupported)).apply ((((xState).xobjects).xget)) ("NullState")).xpoly)))
                        bogusForceDataize.write ((((xns).xdelete)).apply)
                xtest_lookup_insert_transform.write
                  [xself]
                    memory > xother_srid_pnt
                    memory > xwgs_pnt
                    memory > xsa
                    memory > xm1
                    memory > xtx
                    memory > xsa_4326
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xsa_4326.write "POINT (-98.493183 29.424170)"
                        xwgs_pnt.write (((unsupported)).apply ((xfromstr)) ((xsa_4326)) (4326))
                        xother_srid_pnt.write (((unsupported)).apply (((xwgs_pnt).xtransform)) (3857) (TRUE))
                        (((xconnection).xops).xoracle).if
                          xtx.write (((unsupported)).apply ((((xCountry).xobjects).xget)) ((xother_srid_pnt)))
                          xtx.write (((unsupported)).apply ((((xCountry).xobjects).xget)) ((xother_srid_pnt)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Texas") (((xtx).xname)))
                        xsa.write (((unsupported)).apply ((((xCity).xobjects).xcreate)) ("San Antonio") ((xother_srid_pnt)))
                        xsa.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("San Antonio"))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xwgs_pnt).xx)) ((((xsa).xpoint).xx)) (6))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xwgs_pnt).xy)) ((((xsa).xpoint).xy)) (6))
                        xm1.write (((unsupported)).apply ((xMinusOneSRID)) ((((unsupported)).apply ((xPoint)) (17) (23) (4326))))
                        bogusForceDataize.write ((((xm1).xsave)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((1.neg)) ((((xm1).xgeom).xsrid)))
                xtest_createnull.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        unsupported
                        xc.write (((xCity)).apply)
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xc).xpoint)))
                xtest_geometryfield.write
                  [xself]
                    memory > xf_2
                    memory > xf_3
                    memory > xf_1
                    memory > xf_4
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((((unsupported)).apply ((xFeature)) ("Point") ((((xPoint)).apply (1) (1)))).xsave)).apply)
                        bogusForceDataize.write ((((((unsupported)).apply ((xFeature)) ("LineString") ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (5) (5)))))).xsave)).apply)
                        bogusForceDataize.write ((((((unsupported)).apply ((xFeature)) ("Polygon") ((((xPolygon)).apply ((((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (5))) ((((unsupported)).apply (5) (5))) ((((unsupported)).apply (5) (0))) ((((unsupported)).apply (0) (0)))))))).xsave)).apply)
                        bogusForceDataize.write ((((((unsupported)).apply ((xFeature)) ("GeometryCollection") ((((xGeometryCollection)).apply ((((xPoint)).apply (2) (2))) ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (2) (2))))) ((((xPolygon)).apply ((((xLinearRing)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (0) (5))) ((((unsupported)).apply (5) (5))) ((((unsupported)).apply (5) (0))) ((((unsupported)).apply (0) (0)))))))))).xsave)).apply)
                        xf_1.write (((unsupported)).apply ((((xFeature).xobjects).xget)) ("Point"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xf_1).xgeom)) ((xPoint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (1.0) (1.0))) ((((xf_1).xgeom).xtuple)))
                        xf_2.write (((unsupported)).apply ((((xFeature).xobjects).xget)) ("LineString"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xf_2).xgeom)) ((xLineString)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply (0.0) (0.0))) ((((unsupported)).apply (1.0) (1.0))) ((((unsupported)).apply (5.0) (5.0))))) ((((xf_2).xgeom).xtuple)))
                        xf_3.write (((unsupported)).apply ((((xFeature).xobjects).xget)) ("Polygon"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xf_3).xgeom)) ((xPolygon)))
                        xf_4.write (((unsupported)).apply ((((xFeature).xobjects).xget)) ("GeometryCollection"))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xf_4).xgeom)) ((xGeometryCollection)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xf_3).xgeom)) ((((unsupported)).apply (((xf_4).xgeom)) (2))))
                xtest_inherited_geofields.write
                  [xself]
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xPennsylvaniaCity).xobjects).xcreate)) ("Mansfield") ("Tioga") ("POINT(-77.071445 41.823881)"))
                        xqs.write (((unsupported)).apply ((((xPennsylvaniaCity).xobjects).xannotate)) ((((unsupported)).apply (((xfunctions).xTransform)) ("point") (32128))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((((xqs).xcount)).apply)))
                        (((unsupported)).apply ((xpc)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (32128) ((((xpc).xnew_point).xsrid)))
                xtest_raw_sql_query.write
                  [xself]
                    memory > xcities2
                    memory > xpoint_select
                    memory > xcities1
                    seq > @
                      seq
                        unsupported
                        xcities1.write (((((xCity).xobjects).xall)).apply)
                        xpoint_select.write ((((xconnection).xops).xselect).mod "point")
                        xcities2.write (((xlist)).apply ((((((xCity).xobjects).xraw)).apply (("select id, name, %s as point from geoapp_city".mod (xpoint_select))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xcities1)))) ((((xlen)).apply ((xcities2)))))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((((unsupported)).apply ((xcities2)) (0)).xpoint)) ((xPoint)))
                xtest_dumpdata_loaddata_cycle.write
                  [xself]
                    memory > xout
                    memory > xresult
                    memory > xhouston
                    memory > xoriginal_data
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xout.write (((xStringIO)).apply)
                        xoriginal_data.write (((xlist)).apply ((((((xCity).xobjects).xorder_by)).apply ("name"))))
                        (((unsupported)).apply ((xcall_command)) ("dumpdata") ("geoapp.City") ((xout)))
                        xresult.write ((((xout).xgetvalue)).apply)
                        xhouston.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Houston"))
                        bogusForceDataize.write ((((xself).xassertIn)).apply (("\"point\": \"%s\"".mod (((xhouston).xpoint).xewkt))) ((xresult)))
                        (((unsupported)).apply ((((unsupported)).apply (((xtempfile).xNamedTemporaryFile)) ("w") (".json"))) ((xtmp)))
                          seq
                            bogusForceDataize.write ((((xtmp).xwrite)).apply ((xresult)))
                            bogusForceDataize.write ((((xtmp).xseek)).apply (0))
                            (((unsupported)).apply ((xcall_command)) ("loaddata") (((xtmp).xname)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoriginal_data)) ((((xlist)).apply ((((((xCity).xobjects).xorder_by)).apply ("name"))))))
                xtest_empty_geometries.write
                  [xself]
                    memory > xfeature
                    memory > xg
                    memory > xgeometry_classes
                    seq > @
                      (((unsupported)).apply)
                        xgeometry_classes.write (((unsupported)).apply ((xPoint)) ((xLineString)) ((xLinearRing)) ((xPolygon)) ((xMultiPoint)) ((xMultiLineString)) ((xMultiPolygon)) ((xGeometryCollection)))
                        (((unsupported)).apply ((xklass)) ((xgeometry_classes)))
                          seq
                            xg.write (((unsupported)).apply ((xklass)) (4326))
                            xfeature.write (((unsupported)).apply ((((xFeature).xobjects).xcreate)) (("Empty %s".mod ((xklass).x__name__))) ((xg)))
                            bogusForceDataize.write ((((xfeature).xrefresh_from_db)).apply)
                            (((unsupported)).apply ((xklass)) ((xLinearRing))).if
                              xg.write (((unsupported)).apply ((xLineString)) (4326))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfeature).xgeom)) ((xg)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xfeature).xgeom).xsrid)) (((xg).xsrid)))
            (((unsupported)).apply ((xTestCase)))
              seq
                xfixtures.write (((unsupported)).apply ("initial"))
                xtest_disjoint_lookup.write
                  [xself]
                    memory > xptown
                    memory > xqs1
                    memory > xqs2
                    seq > @
                      seq
                        unsupported
                        xptown.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Pueblo"))
                        xqs1.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) (((xptown).xpoint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (7) (((((xqs1).xcount)).apply)))
                        xqs2.write (((unsupported)).apply ((((xState).xobjects).xfilter)) (((xptown).xpoint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (1) (((((xqs2).xcount)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Kansas") (((((unsupported)).apply ((xqs2)) (0)).xname)))
                xtest_contains_contained_lookups.write
                  [xself]
                    memory > xqs
                    memory > xpueblo
                    memory > xwellington
                    memory > xlawrence
                    memory > xks
                    memory > xhouston
                    memory > xtx
                    memory > xcities
                    memory > xtexas
                    memory > xokcity
                    memory > xnz
                    seq > @
                      seq
                        unsupported
                        xtexas.write (((unsupported)).apply ((((xCountry).xobjects).xget)) ("Texas"))
                        (((xconnection).xfeatures).xsupports_contained_lookup).if
                          seq
                            xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) (((xtexas).xmpoly)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (3) (((((xqs).xcount)).apply)))
                            xcities.write (((unsupported)).apply ("Houston") ("Dallas") ("Oklahoma City"))
                            (((unsupported)).apply ((xc)) ((xqs)))
                              bogusForceDataize.write ((((xself).xassertIn)).apply (((xc).xname)) ((xcities)))
                        xhouston.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Houston"))
                        xwellington.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Wellington"))
                        xpueblo.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Pueblo"))
                        xokcity.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Oklahoma City"))
                        xlawrence.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Lawrence"))
                        xtx.write (((unsupported)).apply ((((xCountry).xobjects).xget)) (((xhouston).xpoint)))
                        xnz.write (((unsupported)).apply ((((xCountry).xobjects).xget)) ((((xwellington).xpoint).xhex)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Texas") (((xtx).xname)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("New Zealand") (((xnz).xname)))
                        xks.write (((unsupported)).apply ((((xState).xobjects).xget)) (((xlawrence).xpoint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Kansas") (((xks).xname)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply ((((xCountry).xobjects).xfilter)) (((xpueblo).xpoint)))))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply ((((xCountry).xobjects).xfilter)) ((((xokcity).xpoint).xwkt)))))) (0))
                        (((xconnection).xfeatures).xsupports_bbcontains_lookup).if
                          seq
                            xqs.write (((unsupported)).apply ((((xCountry).xobjects).xfilter)) (((xokcity).xpoint)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xlen)).apply ((xqs)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("Texas") (((((unsupported)).apply ((xqs)) (0)).xname)))
                xtest_crosses_lookup.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xTrack).xobjects).xcreate)) ("Line1") ((((xLineString)).apply ((((unsupported)).apply ((((unsupported)).apply ((95.neg)) (29))) ((((unsupported)).apply ((60.neg)) (0))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply ((((xTrack).xobjects).xfilter)) ((((xLineString)).apply ((((unsupported)).apply ((((unsupported)).apply ((95.neg)) (0))) ((((unsupported)).apply ((60.neg)) (29)))))))).xcount)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply ((((xTrack).xobjects).xfilter)) ((((xLineString)).apply ((((unsupported)).apply ((((unsupported)).apply ((95.neg)) (30))) ((((unsupported)).apply (0) (30)))))))).xcount)).apply)) (0))
                xtest_isvalid_lookup.write
                  [xself]
                    memory > xqs
                    memory > xinvalid_geom
                    seq > @
                      (((unsupported)).apply)
                        xinvalid_geom.write (((xfromstr)).apply ("POLYGON((0 0, 0 1, 1 1, 1 0, 1 1, 1 0, 0 0))"))
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("invalid") ((xinvalid_geom)))
                        xqs.write (((((xState).xobjects).xall)).apply)
                        ((((xconnection).xops).xoracle).or ((((xconnection).xops).xmysql).and (((xconnection).xmysql_version).less (((unsupported)).apply (8) (0) (0))))).if
                          seq
                            xqs.write (((unsupported)).apply (((xqs).xexclude)) ("Kansas"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply ((((xState).xobjects).xfilter)) ("Kansas") (FALSE)).xcount)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply (((xqs).xfilter)) (FALSE)).xcount)).apply)) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((unsupported)).apply (((xqs).xfilter)) (TRUE)).xcount)).apply)) ((((((xqs).xcount)).apply).sub 1)))
                xtest_left_right_lookups.write
                  [xself]
                    memory > xco_border
                    memory > xcities
                    memory > xvic
                    memory > xqs
                    memory > xks_border
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xco_border.write ((((unsupported)).apply ((((xState).xobjects).xget)) ("Colorado")).xpoly)
                        xks_border.write ((((unsupported)).apply ((((xState).xobjects).xget)) ("Kansas")).xpoly)
                        xcities.write (((unsupported)).apply ("Houston") ("Dallas") ("Oklahoma City") ("Lawrence") ("Chicago") ("Wellington"))
                        xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) ((xco_border)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (6) ((((xlen)).apply ((xqs)))))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertIn)).apply (((xc).xname)) ((xcities)))
                        xcities.write (((unsupported)).apply ("Chicago") ("Wellington"))
                        xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) ((xks_border)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) ((((xlen)).apply ((xqs)))))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertIn)).apply (((xc).xname)) ((xcities)))
                        xvic.write (((unsupported)).apply ((((xCity).xobjects).xget)) ((xco_border)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Victoria") (((xvic).xname)))
                        xcities.write (((unsupported)).apply ("Pueblo") ("Victoria"))
                        xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) ((xks_border)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) ((((xlen)).apply ((xqs)))))
                        (((unsupported)).apply ((xc)) ((xqs)))
                          bogusForceDataize.write ((((xself).xassertIn)).apply (((xc).xname)) ((xcities)))
                xtest_strictly_above_below_lookups.write
                  [xself]
                    memory > xdallas
                    seq > @
                      (((unsupported)).apply)
                        xdallas.write (((unsupported)).apply ((((xCity).xobjects).xget)) ("Dallas"))
                        bogusForceDataize.write ((((xself).xassertQuerysetEqual)).apply (((((((unsupported)).apply ((((xCity).xobjects).xfilter)) (((xdallas).xpoint))).xorder_by)).apply ("name"))) ((((unsupported)).apply ("Chicago") ("Lawrence") ("Oklahoma City") ("Pueblo") ("Victoria"))) ((((unsupported)).apply (((xb).xname)))))
                        bogusForceDataize.write ((((xself).xassertQuerysetEqual)).apply (((((((unsupported)).apply ((((xCity).xobjects).xfilter)) (((xdallas).xpoint))).xorder_by)).apply ("name"))) ((((unsupported)).apply ("Houston") ("Wellington"))) ((((unsupported)).apply (((xb).xname)))))
                xtest_equals_lookups.write
                  [xself]
                    memory > xpnt
                    memory > xc1
                    memory > xc2
                    memory > xc3
                    seq > @
                      seq
                        unsupported
                        xpnt.write (((unsupported)).apply ((xfromstr)) ("POINT (-95.363151 29.763374)") (4326))
                        xc1.write (((unsupported)).apply ((((xCity).xobjects).xget)) ((xpnt)))
                        xc2.write (((unsupported)).apply ((((xCity).xobjects).xget)) ((xpnt)))
                        xc3.write (((unsupported)).apply ((((xCity).xobjects).xget)) ((xpnt)))
                        (((unsupported)).apply ((xc)) ((((unsupported)).apply ((xc1)) ((xc2)) ((xc3)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ("Houston") (((xc).xname)))
                xtest_null_geometries.write
                  [xself]
                    memory > xvalidqs
                    memory > xstate_names
                    memory > xnmi
                    memory > xnullqs
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((xState).xobjects).xcreate)) ("Puerto Rico"))
                        xnullqs.write (((unsupported)).apply ((((xState).xobjects).xfilter)) (TRUE))
                        xvalidqs.write (((unsupported)).apply ((((xState).xobjects).xfilter)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xlen)).apply ((xnullqs)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Puerto Rico") (((((unsupported)).apply ((xnullqs)) (0)).xname)))
                        bogusForceDataize.write ((((xself).xassertCountEqual)).apply ((((unsupported)).apply ((((xState).xobjects).xfilter)) ("None: is there a None literal in the EO language?"))) ((xnullqs)))
                        bogusForceDataize.write ((((xself).xassertCountEqual)).apply ((((unsupported)).apply ((((xState).xobjects).xexclude)) ("None: is there a None literal in the EO language?"))) ((xvalidqs)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (2) ((((xlen)).apply ((xvalidqs)))))
                        xstate_names.write (((unsupported)).apply (((xs).xname)) ((xs)) ((xvalidqs)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("Colorado") ((xstate_names)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("Kansas") ((xstate_names)))
                        xnmi.write (((unsupported)).apply ((((xState).xobjects).xcreate)) ("Northern Mariana Islands") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xnmi).xpoly)))
                        (((unsupported)).apply (((xnmi).xpoly)) ("POLYGON((0 0,1 0,1 1,1 0,0 0))"))
                        bogusForceDataize.write ((((xnmi).xsave)).apply)
                        (((unsupported)).apply (((((unsupported)).apply ((((xState).xobjects).xfilter)) ("Northern Mariana Islands")).xupdate)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((unsupported)).apply ((((xState).xobjects).xget)) ("Northern Mariana Islands")).xpoly)))
                xtest_null_geometries_excluded_in_lookups.write
                  [xself]
                    memory > xqueries
                    memory > xnull
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xnull.write (((unsupported)).apply ((((xState).xobjects).xcreate)) ("NULL") ("None: is there a None literal in the EO language?"))
                        xqueries.write (((unsupported)).apply ((((unsupported)).apply ("equals") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("disjoint") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("touches") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("crosses") ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (5) (5))))))) ((((unsupported)).apply ("within") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("overlaps") ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (5) (5))))))) ((((unsupported)).apply ("contains") ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (5) (5))))))) ((((unsupported)).apply ("intersects") ((((xLineString)).apply ((((unsupported)).apply (0) (0))) ((((unsupported)).apply (1) (1))) ((((unsupported)).apply (5) (5))))))) ((((unsupported)).apply ("relate") ((((unsupported)).apply ((((xPoint)).apply (1) (1))) ("T*T***FF*"))))) ((((unsupported)).apply ("same_as") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("exact") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("coveredby") ((((xPoint)).apply (1) (1))))) ((((unsupported)).apply ("covers") ((((xPoint)).apply (1) (1))))))
                        (((unsupported)).apply ((((unsupported)).apply ((xlookup)) ((xgeom)))) ((xqueries)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xlookup)))))
                            bogusForceDataize.write ((((xself).xassertNotIn)).apply ((xnull)) ((((((xState).xobjects).xfilter)).apply ((((unsupported)).apply ((((unsupported)).apply (("poly__%s".mod (xlookup))) ((xgeom)))))))))
                xtest_wkt_string_in_lookup.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertNoLogs)).apply ("django.contrib.gis") ("ERROR"))))
                        (((unsupported)).apply ((((xState).xobjects).xfilter)) ("LINESTRING(0 0, 1 1, 5 5)"))
                xtest_relate_lookup.write
                  [xself]
                    memory > xintersects_mask
                    memory > xpnt2
                    memory > xmask
                    memory > xks
                    memory > xwithin_mask
                    memory > xcontains_mask
                    memory > xqs
                    memory > xpnt1
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        xpnt1.write (((unsupported)).apply ((xfromstr)) ("POINT (649287.0363174 4177429.4494686)") (2847))
                        xpnt2.write (((unsupported)).apply ((xfromstr)) ("POINT(-98.4919715741052 29.4333344025053)") (4326))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((((xCountry).xobjects).xfilter)) ((((unsupported)).apply (23) ("foo"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xbad_args)) ((xe)))) ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xpnt1)) (0))) ((xValueError)))) ((((unsupported)).apply ((((unsupported)).apply ((xpnt2)) ("T*T***FF*") (0))) ((xValueError)))))))
                          seq
                            xqs.write (((unsupported)).apply ((((xCountry).xobjects).xfilter)) ((xbad_args)))
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xe)))))
                              bogusForceDataize.write ((((xqs).xcount)).apply)
                        xcontains_mask.write "T*T***FF*"
                        xwithin_mask.write "T*F**F***"
                        xintersects_mask.write "T********"
                        (((xconnection).xops).xoracle).if
                          seq
                            xcontains_mask.write "contains"
                            xwithin_mask.write "inside"
                            xintersects_mask.write "overlapbdyintersect"
                        (((xconnection).xfeatures).xsupports_transform).if
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((xCountry).xobjects).xget)) ((((unsupported)).apply ((xpnt1)) ((xcontains_mask))))).xname)) ("Texas"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Texas") (((((unsupported)).apply ((((xCountry).xobjects).xget)) ((((unsupported)).apply ((xpnt2)) ((xcontains_mask))))).xname)))
                        xks.write (((unsupported)).apply ((((xState).xobjects).xget)) ("Kansas"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("Lawrence") (((((unsupported)).apply ((((xCity).xobjects).xget)) ((((unsupported)).apply (((xks).xpoly)) ((xwithin_mask))))).xname)))
                        ((((xconnection).xops).xoracle).not).if
                          seq
                            (((xconnection).xfeatures).xsupports_transform).if
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((xCountry).xobjects).xget)) ((((unsupported)).apply ((xpnt1)) ((xintersects_mask))))).xname)) ("Texas"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("Texas") (((((unsupported)).apply ((((xCountry).xobjects).xget)) ((((unsupported)).apply ((xpnt2)) ((xintersects_mask))))).xname)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ("Lawrence") (((((unsupported)).apply ((((xCity).xobjects).xget)) ((((unsupported)).apply (((xks).xpoly)) ((xintersects_mask))))).xname)))
                        xmask.write ((((xconnection).xops).xoracle).if "anyinteract" (xwithin_mask))
                        bogusForceDataize.write ((((xself).xassertFalse)).apply ((((unsupported)).apply ((((xCity).xobjects).xexclude)) ((((unsupported)).apply (((((xfunctions).xUnion)).apply ("point") ("point"))) ((xmask)))))))
                xtest_gis_lookups_with_complex_expressions.write
                  [xself]
                    memory > xlookups
                    memory > xmultiple_arg_lookups
                    seq > @
                      seq
                        xmultiple_arg_lookups.write (((unsupported)).apply ("dwithin") ("relate"))
                        xlookups.write (((((((xconnection).xops).xgis_operators).xkeys)).apply).sub (xmultiple_arg_lookups))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((xlookups)) ("No lookups found"))
                        (((unsupported)).apply ((xlookup)) ((xlookups)))
                          (((unsupported)).apply (((((xself).xsubTest)).apply ((xlookup)))))
                            bogusForceDataize.write ((((((((xCity).xobjects).xfilter)).apply ((((unsupported)).apply ((((unsupported)).apply (("point__".add (xlookup))) (((((xfunctions).xUnion)).apply ("point") ("point")))))))).xexists)).apply)
                xtest_subquery_annotation.write
                  [xself]
                    memory > xqs
                    memory > xmultifields
                    seq > @
                      seq
                        xmultifields.write (((unsupported)).apply ((((xMultiFields).xobjects).xcreate)) ((((unsupported)).apply ((((xCity).xobjects).xcreate)) ((((xPoint)).apply (1) (1))))) ((((xPoint)).apply (2) (2))) (((((xPolygon).xfrom_bbox)).apply ((((unsupported)).apply (0) (0) (2) (2))))))
                        xqs.write (((unsupported)).apply (((((unsupported)).apply ((((xMultiFields).xobjects).xannotate)) ((((xSubquery)).apply (((((((unsupported)).apply ((((xCity).xobjects).xfilter)) ((((xOuterRef)).apply ("city")))).xvalues)).apply ("point")))))).xfilter)) ((((xF)).apply ("poly"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xget)).apply)) ((xmultifields)))
            (((unsupported)).apply ((xTestCase)))
              seq
                xfixtures.write (((unsupported)).apply ("initial"))
                xtest_extent.write
                  [xself]
                    memory > xexpected
                    memory > xqs
                    memory > xextent
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xexpected.write (((unsupported)).apply ((96.8016128540039.neg)) (29.7633724212646) ((95.3631439208984.neg)) (32.782058715820))
                        xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) ((((unsupported)).apply ("Houston") ("Dallas"))))
                        xextent.write (((unsupported)).apply (((((xqs).xaggregate)).apply ((((xExtent)).apply ("point"))))) ("point__extent"))
                        (((unsupported)).apply ((((unsupported)).apply ((xval)) ((xexp)))) ((((xzip)).apply ((xextent)) ((xexpected)))))
                          bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((xexp)) ((xval)) (4))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((((((unsupported)).apply ((((xCity).xobjects).xfilter)) ("Smalltown")).xaggregate)).apply ((((xExtent)).apply ("point"))))) ("point__extent"))))
                xtest_extent_with_limit.write
                  [xself]
                    memory > xextent2
                    memory > xextent1
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xextent1.write (((unsupported)).apply ((((((xCity).xobjects).xaggregate)).apply ((((xExtent)).apply ("point"))))) ("point__extent"))
                        xextent2.write (((unsupported)).apply (((((((unsupported)).apply ((((((xCity).xobjects).xall)).apply)) ((((unsupported)).apply (3)))).xaggregate)).apply ((((xExtent)).apply ("point"))))) ("point__extent"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xextent1)) ((xextent2)))
                xtest_make_line.write
                  [xself]
                    memory > xref_line
                    memory > xline
                    seq > @
                      seq
                        (((unsupported)).apply)
                        ((((xconnection).xfeatures).xsupports_make_line_aggr).not).if
                          seq
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNotSupportedError)))))
                              bogusForceDataize.write (((((xCity).xobjects).xaggregate)).apply ((((xMakeLine)).apply ("point"))))
                            (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply ((((((xState).xobjects).xaggregate)).apply ((((xMakeLine)).apply ("poly"))))) ("poly__makeline"))))
                        xref_line.write (((unsupported)).apply ((xGEOSGeometry)) ("LINESTRING(-95.363151 29.763374,-96.801611 32.782057,-97.521157 34.464642,174.783117 -41.315268,-104.609252 38.255001,-95.23506 38.971823,-87.650175 41.850385,-123.305196 48.462611)") (4326))
                        xline.write (((unsupported)).apply ((((((xCity).xobjects).xaggregate)).apply ((((xMakeLine)).apply ("point"))))) ("point__makeline"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xref_line).xequals_exact)) ((xline)) ((((unsupported)).apply)))) (("%s != %s".mod (((unsupported)).apply ((xref_line)) ((xline))))))
                xtest_unionagg.write
                  [xself]
                    memory > xqs
                    memory > xu1
                    memory > xu2
                    memory > xunion
                    memory > xtx
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xtx.write ((((unsupported)).apply ((((xCountry).xobjects).xget)) ("Texas")).xmpoly)
                        xunion.write (((xGEOSGeometry)).apply ("MULTIPOINT(-96.801611 32.782057,-95.363151 29.763374)"))
                        xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) ((xtx)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          bogusForceDataize.write ((((xqs).xaggregate)).apply ((((xUnion)).apply ("name"))))
                        xu1.write (((unsupported)).apply (((((xqs).xaggregate)).apply ((((xUnion)).apply ("point"))))) ("point__union"))
                        xu2.write (((unsupported)).apply ((((((((xqs).xorder_by)).apply ("name")).xaggregate)).apply ((((xUnion)).apply ("point"))))) ("point__union"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xunion).xequals)).apply ((xu1)))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xunion).xequals)).apply ((xu2)))))
                        xqs.write (((unsupported)).apply ((((xCity).xobjects).xfilter)) ("NotACity"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply (((((xqs).xaggregate)).apply ((((xUnion)).apply ("point"))))) ("point__union"))))
                xtest_geoagg_subquery.write
                  [xself]
                    memory > xunion
                    memory > xtx
                    seq > @
                      (((unsupported)).apply)
                        xtx.write (((unsupported)).apply ((((xCountry).xobjects).xget)) ("Texas"))
                        xunion.write (((xGEOSGeometry)).apply ("MULTIPOINT(-96.801611 32.782057,-95.363151 29.763374)"))
                        (((unsupported)).apply ((((xCaptureQueriesContext)).apply ((xconnection)))) ((xctx)))
                          bogusForceDataize.write ((((xself).xassertIs)).apply (((((xunion).xequals)).apply ((((unsupported)).apply ((((((((((unsupported)).apply ((((xCity).xobjects).xfilter)) (((xtx).xmpoly))).xdistinct)).apply).xaggregate)).apply ((((xUnion)).apply ("point"))))) ("point__union"))))) (TRUE))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("subquery") ((((unsupported)).apply ((((unsupported)).apply (((xctx).xcaptured_queries)) (0))) ("sql"))))
                xtest_unionagg_tolerance.write
                  [xself]
                    memory > xtx
                    memory > xforney_houston
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xCity).xobjects).xcreate)) ((((unsupported)).apply ((xfromstr)) ("POINT(-96.467222 32.751389)") (4326))) ("Forney"))
                        xtx.write ((((unsupported)).apply ((((xCountry).xobjects).xget)) ("Texas")).xmpoly)
                        xforney_houston.write (((unsupported)).apply ((xGEOSGeometry)) ("MULTIPOINT(-95.363151 29.763374, -96.467222 32.751389)") (4326))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((unsupported)).apply (((xforney_houston).xequals_exact)) ((((unsupported)).apply (((((((unsupported)).apply ((((xCity).xobjects).xfilter)) ((xtx))).xaggregate)).apply ((((unsupported)).apply ((xUnion)) ("point") (32000))))) ("point__union"))) ((((unsupported)).apply)))) (TRUE))
                xtest_unionagg_tolerance_escaping.write
                  [xself]
                    memory > xtx
                    seq > @
                      (((unsupported)).apply)
                        xtx.write ((((unsupported)).apply ((((xCountry).xobjects).xget)) ("Texas")).xmpoly)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xDatabaseError)))))
                          bogusForceDataize.write ((((((unsupported)).apply ((((xCity).xobjects).xfilter)) ((xtx))).xaggregate)).apply ((((unsupported)).apply ((xUnion)) ("point") ("0.05))), (((1"))))
                xtest_within_subquery.write
                  [xself]
                    memory > xtex_cities
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xtex_cities.write ((((((unsupported)).apply ((((xCity).xobjects).xfilter)) (((((((unsupported)).apply ((((xCountry).xobjects).xfilter)) ("Texas")).xvalues)).apply ("mpoly")))).xorder_by)).apply ("name"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((unsupported)).apply (((xtex_cities).xvalues_list)) ("name") (TRUE))))) ((((unsupported)).apply ("Dallas") ("Houston"))))
                xtest_non_concrete_field.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((((xNonConcreteModel).xobjects).xcreate)) ((((xPoint)).apply (0) (0))) ("name"))
                        bogusForceDataize.write (((xlist)).apply ((((((xNonConcreteModel).xobjects).xall)).apply)))
                xtest_values_srid.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((((unsupported)).apply ((xc)) ((xv)))) ((((xzip)).apply ((((((xCity).xobjects).xall)).apply)) ((((((xCity).xobjects).xvalues)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xc).xpoint).xsrid)) (((((unsupported)).apply ((xv)) ("point")).xsrid)))