memory > xTemplateSyntaxError
memory > xlist
memory > xrange
memory > xSimpleTestCase
[] > test_resetcycle
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_resetcycle11
        memory > xtest_resetcycle05
        memory > xtest_resetcycle09
        memory > xtest_resetcycle06
        memory > xtest_resetcycle07
        memory > xtest_resetcycle02
        memory > xtest_resetcycle04
        memory > xtest_resetcycle08
        memory > xtest_resetcycle01
        memory > xtest_resetcycle03
        memory > xtest_resetcycle10
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_resetcycle01.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ("No cycles in template."))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("resetcycle01"))
                xtest_resetcycle02.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ("Named cycle 'undefinedcycle' does not exist."))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("resetcycle02"))
                xtest_resetcycle03.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ("Named cycle 'undefinedcycle' does not exist."))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("resetcycle03"))
                xtest_resetcycle04.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTemplateSyntaxError)) ("Named cycle 'undefinedcycle' does not exist."))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("resetcycle04"))
                xtest_resetcycle05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle05") ((((unsupported)).apply ("test") ((((xlist)).apply ((((xrange)).apply (5))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("aaaaa"))
                xtest_resetcycle06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle06") ((((unsupported)).apply ("test") ((((xlist)).apply ((((xrange)).apply (5))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("ab-c-a-b-c-"))
                xtest_resetcycle07.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle07") ((((unsupported)).apply ("test") ((((xlist)).apply ((((xrange)).apply (5))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("aa-a+a-a+a-"))
                xtest_resetcycle08.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle08") ((((unsupported)).apply ("outer") ((((xlist)).apply ((((xrange)).apply (2))))) ("inner") ((((xlist)).apply ((((xrange)).apply (3))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("abaaba"))
                xtest_resetcycle09.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle09") ((((unsupported)).apply ("outer") ((((xlist)).apply ((((xrange)).apply (2))))) ("inner") ((((xlist)).apply ((((xrange)).apply (3))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("aXYXbXYX"))
                xtest_resetcycle10.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle10") ((((unsupported)).apply ("test") ((((xlist)).apply ((((xrange)).apply (5))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("XaYbZaXbYc"))
                xtest_resetcycle11.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("resetcycle11") ((((unsupported)).apply ("test") ((((xlist)).apply ((((xrange)).apply (5))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("XaYbXcYaZb"))