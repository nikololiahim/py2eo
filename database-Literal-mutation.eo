memory > xalias
memory > xconnections
memory > xkwargs
[] > database
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xcheck_database_backends
        seq > @
          seq
            (((unsupported)).apply)
            seq
            seq
            (((unsupported)).apply)
            seq
            seq
            (((unsupported)).apply)
            xcheck_database_backends.write
              [xdatabases]
                memory > xissues
                memory > xconn
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply ((xdatabases)) ("None: is there a None literal in the EO language?")).if
                      (((unsupported)).apply ((((unsupported)).apply)))
                    xissues.write (((unsupported)).apply)
                    (((unsupported)).apply ((xalias)) ((xdatabases)))
                      seq
                        xconn.write (((unsupported)).apply ((xconnections)) ((xalias)))
                        bogusForceDataize.write ((((xissues).xextend)).apply ((((((xconn).xvalidation).xcheck)).apply ((((unsupported)).apply ((xkwargs)))))))
                    (((unsupported)).apply ((xissues)))