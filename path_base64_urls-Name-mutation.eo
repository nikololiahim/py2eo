memory > xsubpatterns
memory > xregister_converter
memory > xpath
memory > xinclude
memory > xconverters
memory > xviews
[] > path_base64_urls
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsubsubpatterns
        memory > xsubpatterns2
        memory > xurlpatterns
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
            seq
            (((unsupported)).apply)
            seq
            seq
            (((unsupported)).apply)
            bogusForceDataize.write (((xregister_converter)).apply (((xconverters).xBase64Converter)) ("base64"))
            xsubsubpatterns.write (((unsupported)).apply ((((unsupported)).apply ((xpath)) ("<base64:last_value>/") (((xviews).xempty_view)) ("subsubpattern-base64"))))
            xsubpatterns2.write (((unsupported)).apply ((((unsupported)).apply ((xpath)) ("<base64:value>/") (((xviews).xempty_view)) ("subpattern-base64"))) ((((xpath)).apply ("<base64:value>/") ((((xinclude)).apply ((((unsupported)).apply ((xsubsubpatterns)) ("second-layer-namespaced-base64"))) ("instance-ns-base64"))))))
            xurlpatterns.write (((unsupported)).apply ((((unsupported)).apply ((xpath)) ("base64/<base64:value>/") (((xviews).xempty_view)) ("base64"))) ((((xpath)).apply ("base64/<base64:base>/subpatterns/") ((((xinclude)).apply ((xsubpatterns)))))) ((((xpath)).apply ("base64/<base64:base>/namespaced/") ((((xinclude)).apply ((((unsupported)).apply ((xsubpatterns)) ("namespaced-base64"))))))))