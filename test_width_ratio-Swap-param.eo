memory > xTemplateSyntaxError
memory > xfloat
memory > xSimpleTestCase
[] > test_width_ratio
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_widthratio11
        memory > xlibraries
        memory > xtest_zerodivisionerror_as_var
        memory > xtest_widthratio02
        memory > xtest_widthratio07
        memory > xtest_widthratio06
        memory > xtest_widthratio03
        memory > xtest_widthratio20
        memory > xtest_widthratio17
        memory > xtest_widthratio09
        memory > xtest_widthratio13b
        memory > xtest_widthratio14b
        memory > xtest_widthratio12a
        memory > xtest_widthratio13a
        memory > xtest_typeerror_as_var
        memory > xtest_widthratio05
        memory > xtest_widthratio16
        memory > xtest_widthratio08
        memory > xtest_widthratio19
        memory > xtest_widthratio14a
        memory > xtest_widthratio01
        memory > xtest_widthratio18
        memory > xtest_widthratio12b
        memory > xtest_widthratio21
        memory > xtest_widthratio04
        memory > xtest_widthratio10
        memory > xtest_widthratio15
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xlibraries.write (((unsupported)).apply ("custom") ("template_tests.templatetags.custom"))
                xtest_widthratio01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio01") ((((unsupported)).apply ("a") (50) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("0") ((xoutput)))
                xtest_widthratio02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio02") ((((unsupported)).apply ("a") (0) ("b") (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("0"))
                xtest_widthratio03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio03") ((((unsupported)).apply ("a") (0) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("0"))
                xtest_widthratio04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio04") ((((unsupported)).apply ("a") (50) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50"))
                xtest_widthratio05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio05") ((((unsupported)).apply ("a") (100) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("100"))
                xtest_widthratio06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio06") ((((unsupported)).apply ("a") (50) ("b") (80))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("62"))
                xtest_widthratio07.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio07") ((((unsupported)).apply ("a") (50) ("b") (70))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("71"))
                xtest_widthratio08.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("widthratio08"))
                xtest_widthratio09.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("widthratio09") ((((unsupported)).apply ("a") (50) ("b") (100))))
                xtest_widthratio10.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio10") ((((unsupported)).apply ("a") (50) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50"))
                xtest_widthratio11.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio11") ((((unsupported)).apply ("a") (50) ("c") (100) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("50"))
                xtest_widthratio12a.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio12a") ((((unsupported)).apply ("a") ("a") ("c") (100) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_widthratio12b.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio12b") ((((unsupported)).apply ("a") ("None: is there a None literal in the EO language?") ("c") (100) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_widthratio13a.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio13a") ((((unsupported)).apply ("a") (0) ("c") (100) ("b") ("b"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_widthratio13b.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio13b") ((((unsupported)).apply ("a") (0) ("c") (100) ("b") ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_widthratio14a.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("widthratio14a") ((((unsupported)).apply ("a") (0) ("c") ("c") ("b") (100))))
                xtest_widthratio14b.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("widthratio14b") ((((unsupported)).apply ("a") (0) ("c") ("None: is there a None literal in the EO language?") ("b") (100))))
                xtest_widthratio15.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio15") ((((unsupported)).apply ("a") (50) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("0"))
                xtest_widthratio16.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio16") ((((unsupported)).apply ("a") (50) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("-50-"))
                xtest_widthratio17.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio17") ((((unsupported)).apply ("a") (100) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("-100-"))
                xtest_widthratio18.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("widthratio18"))
                xtest_widthratio19.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("widthratio19"))
                xtest_widthratio20.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio20") ((((unsupported)).apply ("a") ((((xfloat)).apply ("inf"))) ("b") ((((xfloat)).apply ("inf"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_widthratio21.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("widthratio21") ((((unsupported)).apply ("a") ((((xfloat)).apply ("inf"))) ("b") (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_zerodivisionerror_as_var.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("t") ((((unsupported)).apply ("a") (0) ("b") (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("-0-"))
                xtest_typeerror_as_var.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("t") ((((unsupported)).apply ("a") ("a") ("c") (100) ("b") (100))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("--"))