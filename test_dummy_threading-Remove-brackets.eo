memory > xsema
memory > xrange
memory > xprint
memory > xtime
memory > xi
memory > xsupport
memory > xrunning
memory > xunittest
memory > xmutex
memory > x__name__
[] > test_dummy_threading
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsetUp
        memory > x_threading
        memory > xtest_tasks
        memory > xrun
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                (((unsupported)).apply (((x_threading).xThread)))
                  xrun.write
                    [xself]
                      memory > xdelay
                      seq > @
                        seq
                          (((unsupported)).apply)
                          (((unsupported)).apply)
                          (((unsupported)).apply)
                          xdelay.write 0
                          ((xsupport).xverbose).if
                            bogusForceDataize.write (((xprint)).apply ("task") (((xself).xname)) ("will run for") ((xdelay)) ("sec"))
                          unsupported
                          unsupported
                          (((unsupported)).apply ((xrunning)) (1))
                          ((xsupport).xverbose).if
                            bogusForceDataize.write (((xprint)).apply ((xrunning)) ("tasks are running"))
                          unsupported
                          bogusForceDataize.write ((((xtime).xsleep)).apply ((xdelay)))
                          ((xsupport).xverbose).if
                            bogusForceDataize.write (((xprint)).apply ("task") (((xself).xname)) ("done"))
                          unsupported
                          (((unsupported)).apply ((xrunning)) (1))
                          ((xsupport).xverbose).if
                            bogusForceDataize.write (((xprint)).apply (((xself).xname)) ("is finished.") ((xrunning)) ("tasks are running"))
                          unsupported
                          unsupported
                xsetUp.write
                  [xself]
                    memory > xsema
                    memory > xrunning
                    memory > xmutex
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xnumtasks)) (10))
                        (((unsupported)).apply)
                        xsema.write (((unsupported)).apply (((x_threading).xBoundedSemaphore)) (3))
                        (((unsupported)).apply)
                        xmutex.write ((x_threading).xRLock)
                        (((unsupported)).apply)
                        xrunning.write 0
                        (((unsupported)).apply (((xself).xthreads)) ((((unsupported)).apply)))
                xtest_tasks.write
                  [xself]
                    memory > xt
                    seq > @
                      seq
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (((xself).xnumtasks)))))
                          seq
                            xt.write (((unsupported)).apply (((xself).xTestThread)) (("<thread %d>".mod (xi))))
                            bogusForceDataize.write (((((xself).xthreads).xappend)).apply ((xt)))
                            unsupported
                        ((xsupport).xverbose).if
                          bogusForceDataize.write (((xprint)).apply ("waiting for all tasks to complete"))
                        (((unsupported)).apply ((xt)) (((xself).xthreads)))
                          unsupported
                        ((xsupport).xverbose).if
                          bogusForceDataize.write (((xprint)).apply ("all tasks done"))
            ((x__name__).eq "__main__").if
              unsupported