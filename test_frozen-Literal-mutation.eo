memory > xout
memory > xcaptured_stdout
memory > xsys
memory > xunittest
memory > x__name__
[] > test_frozen
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_frozen
        seq > @
          seq
            unsupported
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)))
              xtest_frozen.write
                [xself]
                  memory > xname
                  seq > @
                    seq
                      xname.write "__hello__"
                      (((unsupported)).apply ((xname)) (((xsys).xmodules))).if
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply (((xsys).xmodules)) ((xname)))))))))
                      (((unsupported)).apply ((((xcaptured_stdout)).apply)) ((xout)))
                        (((unsupported)).apply)
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xout).xgetvalue)).apply)) ("Hello world!n"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)