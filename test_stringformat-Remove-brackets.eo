memory > xmark_safe
memory > xstringformat
memory > xobject
memory > xSimpleTestCase
[] > test_stringformat
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_invalid
        memory > xtest_stringformat01
        memory > xtest_format
        memory > xtest_stringformat02
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                (((unsupported)).apply)
                xtest_stringformat01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("stringformat01") ((((unsupported)).apply ("a") ("a<b") ("b") ((((xmark_safe)).apply ("a<b"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (".  a<b. .  a<b."))
                xtest_stringformat02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("stringformat02") ((((unsupported)).apply ("a") ("a<b") ("b") ((((xmark_safe)).apply ("a<b"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (".  a&lt;b. .  a<b."))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_format.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply (1) ("03d"))) ("001"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((((unsupported)).apply (1) ("None: is there a None literal in the EO language?"))) ("s"))) ("[1, None]"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((((unsupported)).apply (1) (2) (3))) ("s"))) ("(1, 2, 3)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((((unsupported)).apply (1))) ("s"))) ("(1,)"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((((unsupported)).apply (1) (2))) ("s"))) ("{1, 2}"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((((unsupported)).apply (1) (2) (2) (3))) ("s"))) ("{1: 2, 2: 3}"))
                xtest_invalid.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply (1) ("z"))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((xobject)) ("d"))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ("None: is there a None literal in the EO language?") ("d"))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstringformat)).apply ((((unsupported)).apply (1) (2) (3))) ("d"))) (""))