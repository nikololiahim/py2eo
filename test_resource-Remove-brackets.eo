memory > xAttributeError
memory > xcontextlib
memory > xValueError
memory > xProcessLookupError
memory > xrange
memory > xIndexError
memory > xResourceTest
memory > xmax
memory > xopen
memory > xint
memory > xsupport
memory > xtuple
memory > xBadSeq
memory > xOSError
memory > xgetattr
memory > xBadSequence
memory > xlen
memory > xtime
memory > xOverflowError
memory > xcur
memory > xi
memory > xunittest
memory > xattr
memory > xTypeError
memory > x__name__
[] > test_resource
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_freebsd_contants
        memory > xtest_prlimit
        memory > xtest_fsize_ismax
        memory > xtest_prlimit_refcount
        memory > xtest_args
        memory > xtest_fsize_toobig
        memory > xtest_fsize_enforced
        memory > xresource
        memory > xtest_pagesize
        memory > xtest_getrusage
        memory > xtest_setrusage_refcount
        memory > xtest_linux_constants
        memory > xtest_main
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xresource.write ((((xsupport).ximport_module)).apply ("resource"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xgetrlimit)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xgetrlimit)) (42) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xsetrlimit)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xsetrlimit)) (42) (42) (42))
                xtest_fsize_ismax.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xAttributeError)))
                          (((unsupported)).apply ((((unsupported)).apply ((xcur)) ((xmax)))) (((((xresource).xgetrlimit)).apply (((xresource).xRLIMIT_FSIZE)))))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresource).xRLIM_INFINITY)) ((xmax)))
                            bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_FSIZE)) ((((unsupported)).apply ((xcur)) ((xmax)))))
                xtest_fsize_enforced.write
                  [xself]
                    memory > xlimit_set
                    memory > xf
                    seq > @
                      (((unsupported)).apply ((xAttributeError)))
                        (((unsupported)).apply ((((unsupported)).apply ((xcur)) ((xmax)))) (((((xresource).xgetrlimit)).apply (((xresource).xRLIMIT_FSIZE)))))
                        (((unsupported)).apply)
                          seq
                            (((unsupported)).apply ((xValueError)))
                              seq
                                bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_FSIZE)) ((((unsupported)).apply (1024) ((xmax)))))
                                xlimit_set.write TRUE
                              xlimit_set.write FALSE
                            xf.write (((xopen)).apply (((xsupport).xTESTFN)) ("wb"))
                            (((unsupported)).apply)
                              seq
                                bogusForceDataize.write ((((xf).xwrite)).apply (("X".mul 1024)))
                                (((unsupported)).apply ((xOSError)))
                                  seq
                                    bogusForceDataize.write ((((xf).xwrite)).apply ("Y"))
                                    unsupported
                                    (((unsupported)).apply ((xi)) ((((xrange)).apply (5))))
                                      seq
                                        bogusForceDataize.write ((((xtime).xsleep)).apply ((((unsupported)).apply)))
                                        unsupported
                                  ((xlimit_set).not).if
                                    (((unsupported)).apply)
                                (xlimit_set).if
                                  bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_FSIZE)) ((((unsupported)).apply ((xcur)) ((xmax)))))
                              unsupported
                          seq
                            (xlimit_set).if
                              bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_FSIZE)) ((((unsupported)).apply ((xcur)) ((xmax)))))
                            bogusForceDataize.write ((((xsupport).xunlink)).apply (((xsupport).xTESTFN)))
                xtest_fsize_toobig.write
                  [xself]
                    memory > xtoo_big
                    seq > @
                      seq
                        xtoo_big.write (((unsupported)).apply (10) (50))
                        (((unsupported)).apply ((xAttributeError)))
                          (((unsupported)).apply ((((unsupported)).apply ((xcur)) ((xmax)))) (((((xresource).xgetrlimit)).apply (((xresource).xRLIMIT_FSIZE)))))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xOverflowError)) ((xValueError)))))
                              bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_FSIZE)) ((((unsupported)).apply ((xtoo_big)) ((xmax)))))
                            (((unsupported)).apply ((((unsupported)).apply ((xOverflowError)) ((xValueError)))))
                              bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_FSIZE)) ((((unsupported)).apply ((xmax)) ((xtoo_big)))))
                xtest_getrusage.write
                  [xself]
                    memory > xusageself
                    memory > xusagechildren
                    memory > xusage_thread
                    memory > xusageboth
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xgetrusage)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xgetrusage)) (42) (42))
                        xusageself.write ((((xresource).xgetrusage)).apply (((xresource).xRUSAGE_SELF)))
                        xusagechildren.write ((((xresource).xgetrusage)).apply (((xresource).xRUSAGE_CHILDREN)))
                        (((unsupported)).apply ((((unsupported)).apply ((xValueError)) ((xAttributeError)))))
                          xusageboth.write ((((xresource).xgetrusage)).apply (((xresource).xRUSAGE_BOTH)))
                        (((unsupported)).apply ((((unsupported)).apply ((xValueError)) ((xAttributeError)))))
                          xusage_thread.write ((((xresource).xgetrusage)).apply (((xresource).xRUSAGE_THREAD)))
                xtest_setrusage_refcount.write
                  [xself]
                    memory > x__getitem__
                    memory > x__len__
                    memory > xlimits
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xAttributeError)))
                          xlimits.write ((((xresource).xgetrlimit)).apply (((xresource).xRLIMIT_CPU)))
                          seq
                            (((unsupported)).apply)
                              seq
                                x__len__.write
                                  [xself]
                                    seq > @
                                      (((unsupported)).apply (2))
                                x__getitem__.write
                                  [xself xkey]
                                    seq > @
                                      seq
                                        (((unsupported)).apply ((xkey)) ((((unsupported)).apply (0) (1)))).if
                                          (((unsupported)).apply ((((xlen)).apply ((((xtuple)).apply ((((xrange)).apply (1000000))))))))
                                        (((unsupported)).apply ((xIndexError)))
                            bogusForceDataize.write ((((xresource).xsetrlimit)).apply (((xresource).xRLIMIT_CPU)) ((xBadSequence)))
                xtest_pagesize.write
                  [xself]
                    memory > xpagesize
                    seq > @
                      seq
                        xpagesize.write ((xresource).xgetpagesize)
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xpagesize)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertGreaterEqual)).apply ((xpagesize)) (0))
                xtest_linux_constants.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xattr)) ((((unsupported)).apply ("MSGQUEUE") ("NICE") ("RTPRIO") ("RTTIME") ("SIGPENDING"))))
                          (((unsupported)).apply (((((xcontextlib).xsuppress)).apply ((xAttributeError)))))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xgetattr)).apply ((xresource)) (("RLIMIT_".add (xattr))))) ((xint)))
                xtest_freebsd_contants.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xattr)) ((((unsupported)).apply ("SWAP") ("SBSIZE") ("NPTS"))))
                        (((unsupported)).apply (((((xcontextlib).xsuppress)).apply ((xAttributeError)))))
                          bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((((xgetattr)).apply ((xresource)) (("RLIMIT_".add (xattr))))) ((xint)))
                xtest_prlimit.write
                  [xself]
                    memory > xlimit
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xresource).xprlimit)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xProcessLookupError)) (((xresource).xprlimit)) ((1.neg)) (((xresource).xRLIMIT_AS)))
                        xlimit.write ((((xresource).xgetrlimit)).apply (((xresource).xRLIMIT_AS)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xresource).xprlimit)).apply (0) (((xresource).xRLIMIT_AS)))) ((xlimit)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xresource).xprlimit)).apply (0) (((xresource).xRLIMIT_AS)) ((xlimit)))) ((xlimit)))
                xtest_prlimit_refcount.write
                  [xself]
                    memory > x__getitem__
                    memory > x__len__
                    memory > xlimits
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (2))
                            x__getitem__.write
                              [xself xkey]
                                seq > @
                                  (((unsupported)).apply (((((unsupported)).apply ((xlimits)) ((xkey))).sub 1)))
                        xlimits.write ((((xresource).xgetrlimit)).apply (((xresource).xRLIMIT_AS)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xresource).xprlimit)).apply (0) (((xresource).xRLIMIT_AS)) ((xBadSeq)))) ((xlimits)))
            xtest_main.write
              [xverbose]
                seq > @
                  (((unsupported)).apply)
                    bogusForceDataize.write ((((xsupport).xrun_unittest)).apply ((xResourceTest)))
            ((x__name__).eq "__main__").if
              unsupported