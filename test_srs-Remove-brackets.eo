memory > xValueError
memory > xstr
memory > xAxisOrder
memory > xTestSRS
memory > xint
memory > xhasattr
memory > xs
memory > xGDALException
memory > xbad
memory > xSRSException
memory > xCoordTransform
memory > xexpected
memory > xall
memory > xvalue
memory > xpart
memory > xtup
memory > xtarget
memory > xsetattr
memory > xattr
memory > xSpatialReference
memory > xkwargs
memory > xGEOSGeometry
memory > xlen
memory > xSimpleTestCase
memory > xTypeError
memory > xsrs
memory > xkey
[] > test_srs
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_axis_order_invalid
        memory > xtest07_boolean_props
        memory > xtest01_wkt
        memory > xtest05_epsg
        memory > xsrlist
        memory > xtest13_attr_value
        memory > x__init__
        memory > xtest_axis_order
        memory > xtest04_proj
        memory > xtest03_get_wkt
        memory > xbad_srlist
        memory > xwell_known
        memory > xtest08_angular_linear
        memory > xtest09_authority
        memory > xWGS84_proj
        memory > xtest_esri
        memory > xtest10_attributes
        memory > xtest_axis_order_non_traditional_invalid
        memory > xtest02_bad_wkt
        memory > xtest_unicode
        memory > xtest12_coordtransform
        memory > xtest11_wellknown
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              x__init__.write
                [xself xwkt]
                  seq > @
                    (((unsupported)).apply)
                      (((unsupported)).apply (((xself).xwkt)) ((xwkt)))
                      (((unsupported)).apply ((((unsupported)).apply ((xkey)) ((xvalue)))) (((xkwargs).xitems)))
                        bogusForceDataize.write (((xsetattr)).apply ((xself)) ((xkey)) ((xvalue)))
            xWGS84_proj.write "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs "
            xsrlist.write (((unsupported)).apply ((((unsupported)).apply ((xTestSRS)) ("GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]") (4326) (FALSE) (TRUE) (FALSE) ("unknown") ("degree") (1.0) (0.0174532925199) ((((unsupported)).apply ("GEOGCS") ((((unsupported)).apply ("EPSG") ("4326"))) ("spheroid") ((((unsupported)).apply ("EPSG") ("7030"))))) ((((unsupported)).apply ((((unsupported)).apply ("DATUM") ("WGS_1984"))) ((((unsupported)).apply ((((unsupported)).apply ("SPHEROID") (1))) ("6378137"))) ((((unsupported)).apply ("primem|authority") ("EPSG"))))))) ((((unsupported)).apply ((xTestSRS)) ("PROJCS[\"NAD83 / Texas South Central\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Lambert_Conformal_Conic_2SP\"],PARAMETER[\"standard_parallel_1\",30.2833333333333],PARAMETER[\"standard_parallel_2\",28.3833333333333],PARAMETER[\"latitude_of_origin\",27.8333333333333],PARAMETER[\"central_meridian\",-99],PARAMETER[\"false_easting\",600000],PARAMETER[\"false_northing\",4000000],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32140\"]]") (32140) (TRUE) (FALSE) (FALSE) ("metre") ("degree") (1.0) (0.0174532925199) ((((unsupported)).apply ("PROJCS") ((((unsupported)).apply ("EPSG") ("32140"))) ("spheroid") ((((unsupported)).apply ("EPSG") ("7019"))) ("unit") ((((unsupported)).apply ("EPSG") ("9001"))))) ((((unsupported)).apply ((((unsupported)).apply ("DATUM") ("North_American_Datum_1983"))) ((((unsupported)).apply ((((unsupported)).apply ("SPHEROID") (2))) ("298.257222101"))) ((((unsupported)).apply ("PROJECTION") ("Lambert_Conformal_Conic_2SP"))))))) ((((unsupported)).apply ((xTestSRS)) ("PROJCS[\"NAD83 / Texas South Central (ftUS)\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Lambert_Conformal_Conic_2SP\"],PARAMETER[\"false_easting\",1968500],PARAMETER[\"false_northing\",13123333.3333333],PARAMETER[\"central_meridian\",-99],PARAMETER[\"standard_parallel_1\",28.3833333333333],PARAMETER[\"standard_parallel_2\",30.2833333333333],PARAMETER[\"latitude_of_origin\",27.8333333333333],UNIT[\"US survey foot\",0.304800609601219],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH]]") ("None: is there a None literal in the EO language?") (TRUE) (FALSE) (FALSE) ("US survey foot") ("Degree") (0.3048006096012192) (0.0174532925199) ((((unsupported)).apply ("PROJCS") ((((unsupported)).apply ("None: is there a None literal in the EO language?") ("None: is there a None literal in the EO language?"))))) ((((unsupported)).apply ((((unsupported)).apply ("PROJCS|GeOgCs|spheroid") ("GRS 1980"))) ((((unsupported)).apply ((((unsupported)).apply ("projcs") (9))) ("UNIT"))) ((((unsupported)).apply ((((unsupported)).apply ("projcs") (11))) ("AXIS"))))))) ((((unsupported)).apply ((xTestSRS)) ("LOCAL_CS[\"Non-Earth (Meter)\",LOCAL_DATUM[\"Local Datum\",32767],UNIT[\"Meter\",1],AXIS[\"X\",EAST],AXIS[\"Y\",NORTH]]") (TRUE) ("None: is there a None literal in the EO language?") (FALSE) (FALSE) (TRUE) ("Meter") ("degree") (1.0) (0.0174532925199) ((((unsupported)).apply ((((unsupported)).apply ("LOCAL_DATUM") ("Local Datum"))))))))
            xwell_known.write (((unsupported)).apply ((((unsupported)).apply ((xTestSRS)) ("GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]]") ("WGS84") ("WGS 84") ((((unsupported)).apply ((((unsupported)).apply ("GEOGCS|AUTHORITY") (1) ("4326"))) ((((unsupported)).apply ("SPHEROID") ("WGS 84"))))))) ((((unsupported)).apply ((xTestSRS)) ("GEOGCS[\"WGS 72\",DATUM[\"WGS_1972\",SPHEROID[\"WGS 72\",6378135,298.26,AUTHORITY[\"EPSG\",\"7043\"]],AUTHORITY[\"EPSG\",\"6322\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4322\"]]") ("WGS72") ("WGS 72") ((((unsupported)).apply ((((unsupported)).apply ("GEOGCS|AUTHORITY") (1) ("4322"))) ((((unsupported)).apply ("SPHEROID") ("WGS 72"))))))) ((((unsupported)).apply ((xTestSRS)) ("GEOGCS[\"NAD27\",DATUM[\"North_American_Datum_1927\",SPHEROID[\"Clarke 1866\",6378206.4,294.9786982138982,AUTHORITY[\"EPSG\",\"7008\"]],AUTHORITY[\"EPSG\",\"6267\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4267\"]]") ("NAD27") ("NAD27") ((((unsupported)).apply ((((unsupported)).apply ("GEOGCS|AUTHORITY") (1) ("4267"))) ((((unsupported)).apply ("SPHEROID") ("Clarke 1866"))))))) ((((unsupported)).apply ((xTestSRS)) ("GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]]") ("NAD83") ("NAD83") ((((unsupported)).apply ((((unsupported)).apply ("GEOGCS|AUTHORITY") (1) ("4269"))) ((((unsupported)).apply ("SPHEROID") ("GRS 1980"))))))) ((((unsupported)).apply ((xTestSRS)) ("PROJCS[\"NZGD49 / Karamea Circuit\",GEOGCS[\"NZGD49\",DATUM[\"New_Zealand_Geodetic_Datum_1949\",SPHEROID[\"International 1924\",6378388,297,AUTHORITY[\"EPSG\",\"7022\"]],TOWGS84[59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993],AUTHORITY[\"EPSG\",\"6272\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4272\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",-41.28991152777778],PARAMETER[\"central_meridian\",172.1090281944444],PARAMETER[\"scale_factor\",1],PARAMETER[\"false_easting\",300000],PARAMETER[\"false_northing\",700000],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AUTHORITY[\"EPSG\",\"27216\"]]") ("EPSG:27216") ("NZGD49 / Karamea Circuit") ((((unsupported)).apply ((((unsupported)).apply ("PROJECTION") ("Transverse_Mercator"))) ((((unsupported)).apply ("SPHEROID") ("International 1924"))))))))
            xbad_srlist.write (((unsupported)).apply ("Foobar") ("OOJCS[\"NAD83 / Texas South Central\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Lambert_Conformal_Conic_2SP\"],PARAMETER[\"standard_parallel_1\",30.28333333333333],PARAMETER[\"standard_parallel_2\",28.38333333333333],PARAMETER[\"latitude_of_origin\",27.83333333333333],PARAMETER[\"central_meridian\",-99],PARAMETER[\"false_easting\",600000],PARAMETER[\"false_northing\",4000000],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AUTHORITY[\"EPSG\",\"32140\"]]"))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest01_wkt.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          bogusForceDataize.write (((xSpatialReference)).apply (((xs).xwkt)))
                xtest02_bad_wkt.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xbad)) ((xbad_srlist)))
                          (((unsupported)).apply ((((unsupported)).apply ((xSRSException)) ((xGDALException)))))
                            seq
                              xsrs.write (((xSpatialReference)).apply ((xbad)))
                              unsupported
                            bogusForceDataize.write ((((xself).xfail)).apply ("Should not have initialized on bad WKT \"%s\"!"))
                xtest03_get_wkt.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          seq
                            xsrs.write (((xSpatialReference)).apply (((xs).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xs).xwkt).xreplace)).apply (",UNIT[\"Meter\",1]") (""))) ((((((xsrs).xwkt).xreplace)).apply (",UNIT[\"Meter\",1]") (""))))
                xtest04_proj.write
                  [xself]
                    memory > xsrs1
                    memory > xsrs2
                    memory > xproj_parts
                    seq > @
                      seq
                        unsupported
                        xproj_parts.write (((unsupported)).apply ("+proj=longlat") ("+ellps=WGS84") ("+towgs84=0,0,0,0,0,0,0") ("+datum=WGS84") ("+no_defs"))
                        xsrs1.write (((xSpatialReference)).apply (((((unsupported)).apply ((xsrlist)) (0)).xwkt)))
                        xsrs2.write (((xSpatialReference)).apply ((xWGS84_proj)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply ((((unsupported)).apply ((xpart)) ((xproj_parts)))) ((xpart)) ((((xsrs1).xproj).xsplit)))))))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply ((((unsupported)).apply ((xpart)) ((xproj_parts)))) ((xpart)) ((((xsrs2).xproj).xsplit)))))))
                xtest05_epsg.write
                  [xself]
                    memory > xsrs4
                    memory > xsrs1
                    memory > xsrs2
                    memory > xsrs3
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          ((xs).xepsg).if
                            seq
                              xsrs1.write (((xSpatialReference)).apply (((xs).xwkt)))
                              xsrs2.write (((xSpatialReference)).apply (((xs).xepsg)))
                              xsrs3.write (((xSpatialReference)).apply ((((xstr)).apply (((xs).xepsg)))))
                              xsrs4.write (((xSpatialReference)).apply (("EPSG:%d".mod ((xs).xepsg))))
                              (((unsupported)).apply ((xsrs)) ((((unsupported)).apply ((xsrs1)) ((xsrs2)) ((xsrs3)) ((xsrs4)))))
                                (((unsupported)).apply ((((unsupported)).apply ((xattr)) ((xexpected)))) (((xs).xattr)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((xexpected)) ((((unsupported)).apply ((xsrs)) ((xattr)))))
                xtest07_boolean_props.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          seq
                            xsrs.write (((xSpatialReference)).apply (((xs).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).xprojected)) (((xsrs).xprojected)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).xgeographic)) (((xsrs).xgeographic)))
                xtest08_angular_linear.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          seq
                            xsrs.write (((xSpatialReference)).apply (((xs).xwkt)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).xang_name)) (((xsrs).xangular_name)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).xlin_name)) (((xsrs).xlinear_name)))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xs).xang_units)) (((xsrs).xangular_units)) (9))
                            bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xs).xlin_units)) (((xsrs).xlinear_units)) (9))
                xtest09_authority.write
                  [xself]
                    memory > xsrs
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          (((xhasattr)).apply ((xs)) ("auth")).if
                            seq
                              xsrs.write (((xSpatialReference)).apply (((xs).xwkt)))
                              (((unsupported)).apply ((((unsupported)).apply ((xtarget)) ((xtup)))) ((((xs).xauth).xitems)))
                                seq
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xtup)) (0))) (((((xsrs).xauth_name)).apply ((xtarget)))))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xtup)) (1))) (((((xsrs).xauth_code)).apply ((xtarget)))))
                xtest10_attributes.write
                  [xself]
                    memory > xexp
                    memory > xsrs
                    memory > xatt
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xsrlist)))
                          seq
                            xsrs.write (((xSpatialReference)).apply (((xs).xwkt)))
                            (((unsupported)).apply ((xtup)) (((xs).xattr)))
                              seq
                                xatt.write (((unsupported)).apply ((xtup)) (0))
                                xexp.write (((unsupported)).apply ((xtup)) (1))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((xexp)) ((((unsupported)).apply ((xsrs)) ((xatt)))))
                xtest11_wellknown.write
                  [xself]
                    memory > xexp
                    memory > xsrs
                    memory > xkey
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xs)) ((xwell_known)))
                          seq
                            xsrs.write (((xSpatialReference)).apply (((xs).xwk)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xs).xname)) (((xsrs).xname)))
                            (((unsupported)).apply ((xtup)) (((xs).xattrs)))
                              seq
                                ((((xlen)).apply ((xtup))).eq 2).if
                                  seq
                                    xkey.write (((unsupported)).apply ((xtup)) (0))
                                    xexp.write (((unsupported)).apply ((xtup)) (1))
                                  ((((xlen)).apply ((xtup))).eq 3).if
                                    seq
                                      xkey.write (((unsupported)).apply ((xtup)) ((((unsupported)).apply (2))))
                                      xexp.write (((unsupported)).apply ((xtup)) (2))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xsrs)) ((xkey)))) ((xexp)))
                xtest12_coordtransform.write
                  [xself]
                    memory > xtarget
                    seq > @
                      seq
                        unsupported
                        xtarget.write (((xSpatialReference)).apply ("WGS84"))
                        bogusForceDataize.write (((xCoordTransform)).apply ((((xSpatialReference)).apply (((((unsupported)).apply ((xsrlist)) (0)).xwkt)))) ((xtarget)))
                xtest13_attr_value.write
                  [xself]
                    memory > xs1
                    seq > @
                      seq
                        unsupported
                        xs1.write (((xSpatialReference)).apply ("WGS84"))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xs1).x__getitem__)).apply (0))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write ((((xs1).x__getitem__)).apply ((((unsupported)).apply ("GEOGCS") ("foo"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("WGS 84") ((((unsupported)).apply ((xs1)) ("GEOGCS"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("WGS_1984") ((((unsupported)).apply ((xs1)) ("DATUM"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ("EPSG") ((((unsupported)).apply ((xs1)) ("AUTHORITY"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (4326) ((((xint)).apply ((((unsupported)).apply ((xs1)) ((((unsupported)).apply ("AUTHORITY") (1))))))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((unsupported)).apply ((xs1)) ("FOOBAR"))))
                xtest_unicode.write
                  [xself]
                    memory > xwkt
                    memory > xsrs_list
                    memory > xsrs
                    seq > @
                      seq
                        xwkt.write "PROJCS[\"DHDN / Soldner 39 Langschoß\",GEOGCS[\"DHDN\",DATUM[\"Deutsches_Hauptdreiecksnetz\",SPHEROID[\"Bessel 1841\",6377397.155,299.1528128,AUTHORITY[\"EPSG\",\"7004\"]],AUTHORITY[\"EPSG\",\"6314\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4314\"]],PROJECTION[\"Cassini_Soldner\"],PARAMETER[\"latitude_of_origin\",50.66738711],PARAMETER[\"central_meridian\",6.28935703],PARAMETER[\"false_easting\",0],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"X\",NORTH],AXIS[\"Y\",EAST],AUTHORITY[\"mj10777.de\",\"187939\"]]"
                        xsrs.write (((xSpatialReference)).apply ((xwkt)))
                        xsrs_list.write (((unsupported)).apply ((xsrs)) (((xsrs).xclone)))
                        bogusForceDataize.write ((((xsrs).ximport_wkt)).apply ((xwkt)))
                        (((unsupported)).apply ((xsrs)) ((xsrs_list)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsrs).xname)) ("DHDN / Soldner 39 Langschoß"))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xsrs).xwkt)) ((xwkt)))
                            bogusForceDataize.write ((((xself).xassertIn)).apply ("Langschoß") (((xsrs).xpretty_wkt)))
                            bogusForceDataize.write ((((xself).xassertIn)).apply ("Langschoß") (((xsrs).xxml)))
                xtest_axis_order.write
                  [xself]
                    memory > xwgs84_trad
                    memory > xpt_trad
                    memory > xpt
                    memory > xpt_auth
                    memory > xwgs84_auth
                    seq > @
                      (((unsupported)).apply)
                        xwgs84_trad.write (((unsupported)).apply ((xSpatialReference)) (4326) (((xAxisOrder).xTRADITIONAL)))
                        xwgs84_auth.write (((unsupported)).apply ((xSpatialReference)) (4326) (((xAxisOrder).xAUTHORITY)))
                        xpt.write (((xGEOSGeometry)).apply ("POINT (992385.4472045 481455.4944650)") (2774))
                        xpt_trad.write (((unsupported)).apply (((xpt).xtransform)) ((xwgs84_trad)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xpt_trad).xx)) ((104.609.neg)) (3))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xpt_trad).xy)) (38.255) (3))
                        xpt_auth.write (((unsupported)).apply (((xpt).xtransform)) ((xwgs84_auth)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xpt_auth).xx)) (38.255) (3))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xpt_auth).xy)) ((104.609.neg)) (3))
                        xpt_auth.write (((unsupported)).apply (((xpt).xtransform)) (((xwgs84_auth).xclone)) (TRUE))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xpt_auth).xx)) (38.255) (3))
                        bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply (((xpt_auth).xy)) ((104.609.neg)) (3))
                xtest_axis_order_invalid.write
                  [xself]
                    memory > xmsg
                    seq > @
                      seq
                        xmsg.write "SpatialReference.axis_order must be an AxisOrder instance."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply ((xSpatialReference)) (4326) ("other"))
                xtest_axis_order_non_traditional_invalid.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "AxisOrder.AUTHORITY is not supported in GDAL < 3.0."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply ((xSpatialReference)) (4326) (((xAxisOrder).xAUTHORITY)))
                xtest_esri.write
                  [xself]
                    memory > xsrs
                    memory > xpre_esri_wkt
                    seq > @
                      seq
                        xsrs.write (((xSpatialReference)).apply ("NAD83"))
                        xpre_esri_wkt.write ((xsrs).xwkt)
                        unsupported
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply (((xsrs).xwkt)) ((xpre_esri_wkt)))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("DATUM[\"D_North_American_1983\"") (((xsrs).xwkt)))
                        unsupported
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("DATUM[\"North_American_Datum_1983\"") (((xsrs).xwkt)))