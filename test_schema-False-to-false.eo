memory > xfalse
memory > xexpected
memory > xTestCase
memory > xvalue
memory > xconnection
memory > xMySQLdb
memory > xunittest
[] > test_schema
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_quote_value
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)) (((((xunittest).xskipUnless)).apply ((((xconnection).xvendor).eq "mysql")) ("MySQL tests"))))
              xtest_quote_value.write
                [xself]
                  memory > xtested_values
                  memory > xeditor
                  seq > @
                    seq
                      (((unsupported)).apply)
                      xeditor.write ((((xconnection).xschema_editor)).apply)
                      xtested_values.write (((unsupported)).apply ((((unsupported)).apply ("string") ("'string'"))) ((((unsupported)).apply ("¿Tú hablas inglés?") ("'¿Tú hablas inglés?'"))) ((((unsupported)).apply ("bytes") ("'bytes'"))) ((((unsupported)).apply (42) ("42"))) ((((unsupported)).apply (1.754) (((((xMySQLdb).xversion_info).geq (((unsupported)).apply (1) (3) (14))).if "1.754e0" "1.754")))) ((((unsupported)).apply ((xfalse)) (((((xMySQLdb).xversion_info).geq (((unsupported)).apply (1) (4) (0))).if "0" "0")))))
                      (((unsupported)).apply ((((unsupported)).apply ((xvalue)) ((xexpected)))) ((xtested_values)))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xvalue)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xeditor).xquote_value)).apply ((xvalue)))) ((xexpected)))