memory > xGeneratorExit
memory > xstr
memory > xDeserializationError
memory > xException
memory > xsuper
memory > xbytes
memory > xDjangoJSONEncoder
memory > xexc
memory > xjson
memory > xoptions
memory > xisinstance
memory > xline
[] > jsonl
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xgetvalue
        memory > xstart_serialization
        memory > xend_object
        memory > xinternal_use_only
        memory > x_init_options
        memory > xPythonSerializer
        memory > xPythonDeserializer
        memory > xDeserializer
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xPythonSerializer)))
              seq
                unsupported
                xinternal_use_only.write FALSE
                x_init_options.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).x_current)) ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply (((xself).xjson_kwargs)) ((((((xself).xoptions).xcopy)).apply)))
                        bogusForceDataize.write (((((xself).xjson_kwargs).xpop)).apply ("stream") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write (((((xself).xjson_kwargs).xpop)).apply ("fields") ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write (((((xself).xjson_kwargs).xpop)).apply ("indent") ("None: is there a None literal in the EO language?"))
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xjson_kwargs)) ("separators"))) ((((unsupported)).apply (",") (": "))))
                        bogusForceDataize.write (((((xself).xjson_kwargs).xsetdefault)).apply ("cls") ((xDjangoJSONEncoder)))
                        bogusForceDataize.write (((((xself).xjson_kwargs).xsetdefault)).apply ("ensure_ascii") (FALSE))
                xstart_serialization.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).x_init_options)).apply)
                xend_object.write
                  [xself xobj]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xjson).xdump)).apply (((((xself).xget_dump_object)).apply ((xobj)))) (((xself).xstream)) ((((unsupported)).apply (((xself).xjson_kwargs)))))
                        bogusForceDataize.write (((((xself).xstream).xwrite)).apply ("n"))
                        (((unsupported)).apply (((xself).x_current)) ("None: is there a None literal in the EO language?"))
                xgetvalue.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((((xsuper)).apply ((xPythonSerializer)) ((xself))).xgetvalue)).apply)))
            xDeserializer.write
              [xstream_or_string]
                seq > @
                  (((unsupported)).apply)
                    unsupported
                    (((xisinstance)).apply ((xstream_or_string)) ((xbytes))).if
                      xstream_or_string.write ((((xstream_or_string).xdecode)).apply)
                    (((xisinstance)).apply ((xstream_or_string)) ((((unsupported)).apply ((xbytes)) ((xstr))))).if
                      xstream_or_string.write ((((xstream_or_string).xsplit)).apply ("n"))
                    (((unsupported)).apply ((xline)) ((xstream_or_string)))
                      seq
                        (((((xline).xstrip)).apply).not).if
                          (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xGeneratorExit)) ((xDeserializationError)))) ((xException)))
                          (((unsupported)).apply ((((xPythonDeserializer)).apply ((((unsupported)).apply (((((xjson).xloads)).apply ((xline)))))) ((((unsupported)).apply ((xoptions)))))))
                          (((unsupported)).apply)
                          (((unsupported)).apply ((((xDeserializationError)).apply)) ((xexc)))