memory > xmultibytecodec_support
memory > xunittest
memory > x__name__
[] > test_codecencodings_jp
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xcodectests
        memory > xxmlcharnametest
        memory > xencoding
        memory > xtstring
        memory > xeuc_commontests
        memory > xshiftjis_commonenctests
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "cp932"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("shift_jis"))
                xcodectests.write (((unsupported)).apply ((((unsupported)).apply ("abcx81x00x81x00x82x84") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("abcxf8") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("abcx81x00x82x84") ("replace") ("abcufffdx00uff44"))) ((((unsupported)).apply ("abcx81x00x82x84x88") ("replace") ("abcufffdx00uff44ufffd"))) ((((unsupported)).apply ("abcx81x00x82x84") ("ignore") ("abcx00uff44"))) ((((unsupported)).apply ("abxEBxy") ("replace") ("abuFFFDxy"))) ((((unsupported)).apply ("abxF0x39xy") ("replace") ("abuFFFD9xy"))) ((((unsupported)).apply ("abxEAxF0xy") ("replace") ("abufffdue038y"))) ((((unsupported)).apply ((((unsupported)).apply)) ("replace") ((((unsupported)).apply)))) ((((unsupported)).apply ("x81x5fx81x61x81x7c") ("replace") ("uff3cu2225uff0d"))))
            xeuc_commontests.write (((unsupported)).apply ((((unsupported)).apply ("abcx80x80xc1xc4") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("abcx80x80xc1xc4") ("replace") ("abcufffdufffdu7956"))) ((((unsupported)).apply ("abcx80x80xc1xc4xc8") ("replace") ("abcufffdufffdu7956ufffd"))) ((((unsupported)).apply ("abcx80x80xc1xc4") ("ignore") ("abcu7956"))) ((((unsupported)).apply ("abcxc8") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("abcx8fx83x83") ("replace") ("abcufffdufffdufffd"))) ((((unsupported)).apply ("x82xFCxy") ("replace") ("ufffdufffdxy"))) ((((unsupported)).apply ("xc1x64") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("xa1xc0") ("strict") ("uff3c"))) ((((unsupported)).apply ("xa1xc0\\") ("strict") ("uff3c\\"))) ((((unsupported)).apply ("x8eXY") ("replace") ("ufffdXY"))))
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "euc_jis_2004"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("euc_jisx0213"))
                xcodectests.write (xeuc_commontests)
                xxmlcharnametest.write (((unsupported)).apply ("xabu211cxbb = u2329u1234u232a") ("xa9xa8&real;xa9xb2 = &lang;&#4660;&rang;"))
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "euc_jisx0213"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("euc_jisx0213"))
                xcodectests.write (xeuc_commontests)
                xxmlcharnametest.write (((unsupported)).apply ("xabu211cxbb = u2329u1234u232a") ("xa9xa8&real;xa9xb2 = &lang;&#4660;&rang;"))
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "euc_jp"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("euc_jp"))
                xcodectests.write ((xeuc_commontests).add (((unsupported)).apply ((((unsupported)).apply ("xa5") ("strict") ("x5c"))) ((((unsupported)).apply ("u203e") ("strict") ("x7e")))))
            xshiftjis_commonenctests.write (((unsupported)).apply ((((unsupported)).apply ("abcx80x80x82x84") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("abcxf8") ("strict") ("None: is there a None literal in the EO language?"))) ((((unsupported)).apply ("abcx80x80x82x84def") ("ignore") ("abcuff44def"))))
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "shift_jis"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("shift_jis"))
                xcodectests.write ((xshiftjis_commonenctests).add (((unsupported)).apply ((((unsupported)).apply ("abcx80x80x82x84") ("replace") ("abcufffdufffduff44"))) ((((unsupported)).apply ("abcx80x80x82x84x88") ("replace") ("abcufffdufffduff44ufffd"))) ((((unsupported)).apply ((((unsupported)).apply)) ("strict") ((((unsupported)).apply)))) ((((unsupported)).apply ("x81x5fx81x61x81x7c") ("strict") ("uff3cu2016u2212"))) ((((unsupported)).apply ("abcx81x39") ("replace") ("abcufffd9"))) ((((unsupported)).apply ("abcxEAxFC") ("replace") ("abcufffdufffd"))) ((((unsupported)).apply ("abcxFFx58") ("replace") ("abcufffdX")))))
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "shift_jis_2004"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("shift_jis"))
                xcodectests.write ((xshiftjis_commonenctests).add (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply)) ("strict") ("xa5u203e"))) ((((unsupported)).apply ("x81x5fx81x61x81x7c") ("strict") ((((unsupported)).apply)))) ((((unsupported)).apply ("abcxEAxFC") ("strict") ("abcu64bf"))) ((((unsupported)).apply ("x81x39xy") ("replace") ("ufffd9xy"))) ((((unsupported)).apply ("xFFx58xy") ("replace") ("ufffdXxy"))) ((((unsupported)).apply ("x80x80x82x84xy") ("replace") ("ufffdufffduff44xy"))) ((((unsupported)).apply ("x80x80x82x84x88xy") ("replace") ("ufffdufffduff44u5864y"))) ((((unsupported)).apply ("xFCxFBxy") ("replace") ("ufffdu95b4y")))))
                xxmlcharnametest.write (((unsupported)).apply ("xabu211cxbb = u2329u1234u232a") ("x85G&real;x85Q = &lang;&#4660;&rang;"))
            (((unsupported)).apply (((xmultibytecodec_support).xTestBase)) (((xunittest).xTestCase)))
              seq
                xencoding.write "shift_jisx0213"
                xtstring.write ((((xmultibytecodec_support).xload_teststring)).apply ("shift_jisx0213"))
                xcodectests.write ((xshiftjis_commonenctests).add (((unsupported)).apply ((((unsupported)).apply ("abcx80x80x82x84") ("replace") ("abcufffdufffduff44"))) ((((unsupported)).apply ("abcx80x80x82x84x88") ("replace") ("abcufffdufffduff44ufffd"))) ((((unsupported)).apply ((((unsupported)).apply)) ("replace") ("xa5u203e"))) ((((unsupported)).apply ("x81x5fx81x61x81x7c") ("replace") ("x5cu2016u2212")))))
                xxmlcharnametest.write (((unsupported)).apply ("xabu211cxbb = u2329u1234u232a") ("x85G&real;x85Q = &lang;&#4660;&rang;"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)