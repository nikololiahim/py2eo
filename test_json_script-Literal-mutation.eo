memory > xSimpleTestCase
[] > test_json_script
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_basic
        memory > xtest_without_id
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_basic.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("json-tag01") ((((unsupported)).apply ("value") ((((unsupported)).apply ("a") ("testingrnjson 'string\" <b>escaping</b>"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ((((unsupported)).apply)))
                xtest_without_id.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("json-tag02") ((((unsupported)).apply ("value") ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("<script type=\"application/json\">{}</script>"))