memory > xget_digit
memory > xSimpleTestCase
[] > test_get_digit
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_string
        memory > xtest_values
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_values.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_digit)).apply (123) (1))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_digit)).apply (123) (2))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_digit)).apply (123) (3))) (1))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_digit)).apply (123) (4))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_digit)).apply (123) (0))) (123))
                xtest_string.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xget_digit)).apply ("xyz") (0))) ("xyz"))