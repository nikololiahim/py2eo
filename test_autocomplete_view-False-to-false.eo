memory > xPKOrderingQuestionAdmin
memory > xBonus
memory > xdatetime
memory > xWorkHour
memory > xBook
memory > xAuthor
memory > xAdminViewBasicTestCase
memory > xrelated_name
memory > xPermissionDenied
memory > xDistinctQuestionAdmin
memory > xParent
memory > xTarget
memory > xEmployee
memory > xreverse
memory > xContentType
memory > xfalse
memory > xadmin
memory > xAnswerAdmin
memory > xSelect
memory > xAdminSeleniumTestCase
memory > xstr
memory > xq
memory > xrange
memory > xManager
memory > xAutocompleteJsonView
memory > x_
memory > xAnswer
memory > xToy
memory > xKeys
memory > xAuthorship
memory > xBy
memory > xQuestion
memory > xPKChild
memory > xAuthorshipInline
memory > xAutocompleteJsonSerializeResultView
memory > xpermission
memory > xAuthorAdmin
memory > xi
memory > xPermission
memory > xRequestFactory
memory > xsuper
memory > xoverride_settings
memory > xHttp404
memory > xRemote
memory > xNoSuchElementException
memory > xjson
memory > xEmptySearchAdmin
memory > xUser
memory > xlen
memory > xBookAdmin
memory > xreverse_lazy
memory > xQuestionAdmin
[] > test_autocomplete_view
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_select
        memory > xordering
        memory > xtest_must_be_logged_in
        memory > xtest_field_no_related_field
        memory > xtest_select_multiple
        memory > xtest_success
        memory > xtest_custom_to_field_permission_denied
        memory > xtest_to_field_resolution_with_mti
        memory > xtest_field_does_not_exist
        memory > xtest_limit_choices_to
        memory > xmodel
        memory > xavailable_apps
        memory > xtest_missing_search_fields
        memory > xinlines
        memory > xselect2_ajax_wait
        memory > xsite
        memory > xtest_to_field_resolution_with_fk_pk
        memory > xtest_get_paginator
        memory > xtest_custom_to_field
        memory > xtest_serialize_result
        memory > xfactory
        memory > xtest_inline_add_another_widgets
        memory > xtest_search_use_distinct
        memory > xopts
        memory > xPAGINATOR_SIZE
        memory > xsetUpTestData
        memory > xas_view_args
        memory > xurl
        memory > xtest_has_view_or_change_permission_required
        memory > xtest_custom_to_field_custom_pk
        memory > xsetUp
        memory > xmodel_admin
        memory > xsearch_fields
        memory > xtest_field_does_not_allowed
        memory > xautocomplete_fields
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            xPAGINATOR_SIZE.write ((xAutocompleteJsonView).xpaginate_by)
            (((unsupported)).apply (((xadmin).xModelAdmin)))
              seq
                xordering.write (((unsupported)).apply ("id"))
                xsearch_fields.write (((unsupported)).apply ("id"))
            (((unsupported)).apply (((xadmin).xTabularInline)))
              seq
                xmodel.write (xAuthorship)
                xautocomplete_fields.write (((unsupported)).apply ("author"))
            (((unsupported)).apply (((xadmin).xModelAdmin)))
              xinlines.write (((unsupported)).apply ((xAuthorshipInline)))
            xsite.write (((unsupported)).apply (((xadmin).xAdminSite)) ("autocomplete_admin"))
            bogusForceDataize.write ((((xsite).xregister)).apply ((xQuestion)) ((xQuestionAdmin)))
            bogusForceDataize.write ((((xsite).xregister)).apply ((xAnswer)) ((xAnswerAdmin)))
            bogusForceDataize.write ((((xsite).xregister)).apply ((xAuthor)) ((xAuthorAdmin)))
            bogusForceDataize.write ((((xsite).xregister)).apply ((xBook)) ((xBookAdmin)))
            (((unsupported)).apply (((xsite).xregister)) ((xEmployee)) ((((unsupported)).apply ("name"))))
            (((unsupported)).apply (((xsite).xregister)) ((xWorkHour)) ((((unsupported)).apply ("employee"))))
            (((unsupported)).apply (((xsite).xregister)) ((xManager)) ((((unsupported)).apply ("name"))))
            (((unsupported)).apply (((xsite).xregister)) ((xBonus)) ((((unsupported)).apply ("recipient"))))
            (((unsupported)).apply (((xsite).xregister)) ((xPKChild)) ((((unsupported)).apply ("name"))))
            (((unsupported)).apply (((xsite).xregister)) ((xToy)) ((((unsupported)).apply ("child"))))
            xmodel_admin.write
              [xmodel xmodel_admin xadmin_site]
                memory > xorg_admin
                seq > @
                  (((unsupported)).apply)
                    xorg_admin.write (((((xadmin_site).x_registry).xget)).apply ((xmodel)))
                    (xorg_admin).if
                      bogusForceDataize.write ((((xadmin_site).xunregister)).apply ((xmodel)))
                    bogusForceDataize.write ((((xadmin_site).xregister)).apply ((xmodel)) ((xmodel_admin)))
                    (((unsupported)).apply)
                      (((unsupported)).apply)
                      (xorg_admin).if
                        (((unsupported)).apply ((((unsupported)).apply (((xadmin_site).x_registry)) ((xmodel)))) ((xorg_admin)))
            (((unsupported)).apply ((xAdminViewBasicTestCase)))
              seq
                xas_view_args.write (((unsupported)).apply ("admin_site") ((xsite)))
                xopts.write (((unsupported)).apply ("app_label") ((((xAnswer).x_meta).xapp_label)) ("model_name") ((((xAnswer).x_meta).xmodel_name)) ("field_name") ("question"))
                xfactory.write (((xRequestFactory)).apply)
                xurl.write (((xreverse_lazy)).apply ("autocomplete_admin:autocomplete"))
                xsetUpTestData.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((xcls).xuser)) ((((unsupported)).apply ((((xUser).xobjects).xcreate_user)) ("user") ("secret") ("user@example.com") (TRUE))))
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUpTestData)).apply)
                xtest_success.write
                  [xself]
                    memory > xresponse
                    memory > xrequest
                    memory > xq
                    memory > xdata
                    seq > @
                      seq
                        xq.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Is this a question?"))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xpk)))) ("text") (((xq).xquestion)))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_custom_to_field.write
                  [xself]
                    memory > xresponse
                    memory > xrequest
                    memory > xq
                    memory > xdata
                    seq > @
                      seq
                        xq.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Is this a question?"))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)) ("field_name") ("question_with_to_field"))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xuuid)))) ("text") (((xq).xquestion)))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_custom_to_field_permission_denied.write
                  [xself]
                    memory > xrequest
                    seq > @
                      seq
                        (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Is this a question?"))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)) ("field_name") ("question_with_to_field"))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xuser)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xPermissionDenied)))))
                          bogusForceDataize.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                xtest_custom_to_field_custom_pk.write
                  [xself]
                    memory > xdata
                    memory > xrequest
                    memory > xq
                    memory > xopts
                    memory > xresponse
                    seq > @
                      seq
                        xq.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Is this a question?"))
                        xopts.write (((unsupported)).apply ("app_label") ((((xQuestion).x_meta).xapp_label)) ("model_name") ((((xQuestion).x_meta).xmodel_name)) ("field_name") ("related_questions"))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") ((xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xbig_id)))) ("text") (((xq).xquestion)))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_to_field_resolution_with_mti.write
                  [xself]
                    memory > xdata
                    memory > xopts
                    memory > xresponse
                    memory > xtests
                    memory > xrequest
                    memory > xo
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xtests.write (((unsupported)).apply ((((unsupported)).apply ((xEmployee)) ((xWorkHour)) ("employee"))) ((((unsupported)).apply ((xManager)) ((xBonus)) ("recipient"))))
                        (((unsupported)).apply ((((unsupported)).apply ((xTarget)) ((xRemote)) ((xrelated_name)))) ((xtests)))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xTarget)) ((xRemote)) ((xrelated_name)))))
                            seq
                              xo.write (((unsupported)).apply ((((xTarget).xobjects).xcreate)) ("Frida Kahlo") (2) ("painter") ((xfalse)))
                              xopts.write (((unsupported)).apply ("app_label") ((((xRemote).x_meta).xapp_label)) ("model_name") ((((xRemote).x_meta).xmodel_name)) ("field_name") ((xrelated_name)))
                              xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("frida") ((xopts)))))
                              (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                              xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                              xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xo).xpk)))) ("text") (((xo).xname)))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_to_field_resolution_with_fk_pk.write
                  [xself]
                    memory > xc
                    memory > xdata
                    memory > xrequest
                    memory > xopts
                    memory > xp
                    memory > xresponse
                    seq > @
                      seq
                        xp.write (((unsupported)).apply ((((xParent).xobjects).xcreate)) ("Bertie"))
                        xc.write (((unsupported)).apply ((((xPKChild).xobjects).xcreate)) ((xp)) ("Anna"))
                        xopts.write (((unsupported)).apply ("app_label") ((((xToy).x_meta).xapp_label)) ("model_name") ((((xToy).x_meta).xmodel_name)) ("field_name") ("child"))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("anna") ((xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xc).xpk)))) ("text") (((xc).xname)))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_field_does_not_exist.write
                  [xself]
                    memory > xrequest
                    seq > @
                      seq
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)) ("field_name") ("does_not_exist"))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xPermissionDenied)))))
                          bogusForceDataize.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                xtest_field_no_related_field.write
                  [xself]
                    memory > xrequest
                    seq > @
                      seq
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)) ("field_name") ("answer"))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xPermissionDenied)))))
                          bogusForceDataize.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                xtest_field_does_not_allowed.write
                  [xself]
                    memory > xrequest
                    seq > @
                      seq
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)) ("field_name") ("related_questions"))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xPermissionDenied)))))
                          bogusForceDataize.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                xtest_limit_choices_to.write
                  [xself]
                    memory > xresponse
                    memory > xrequest
                    memory > xq
                    memory > xdata
                    seq > @
                      seq
                        xq.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Is this a question?"))
                        (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Not a question."))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)) ("field_name") ("question_with_to_field"))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xuuid)))) ("text") (((xq).xquestion)))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_must_be_logged_in.write
                  [xself]
                    memory > xresponse
                    seq > @
                      seq
                        xresponse.write (((((xself).xclient).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("") (((xself).xopts)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        bogusForceDataize.write (((((xself).xclient).xlogout)).apply)
                        xresponse.write (((((xself).xclient).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("") (((xself).xopts)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (302))
                xtest_has_view_or_change_permission_required.write
                  [xself]
                    memory > xresponse
                    memory > xp
                    memory > xrequest
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("is") (((xself).xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xuser)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xPermissionDenied)))))
                          bogusForceDataize.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        (((unsupported)).apply ((xpermission)) ((((unsupported)).apply ("view") ("change"))))
                          (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xpermission)))))
                            seq
                              bogusForceDataize.write ((((((xself).xuser).xuser_permissions).xclear)).apply)
                              xp.write (((unsupported)).apply ((((xPermission).xobjects).xget)) ((((((xContentType).xobjects).xget_for_model)).apply ((xQuestion)))) (("%s_question".mod (xpermission))))
                              bogusForceDataize.write ((((((xself).xuser).xuser_permissions).xadd)).apply ((xp)))
                              (((unsupported)).apply (((xrequest).xuser)) ((((unsupported)).apply ((((xUser).xobjects).xget)) ((((xself).xuser).xpk)))))
                              xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                xtest_search_use_distinct.write
                  [xself]
                    memory > xdata
                    memory > xsearch_fields
                    memory > xq1
                    memory > xresponse
                    memory > xq2
                    memory > xrequest
                    memory > xq3
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xq1.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("question 1"))
                        xq2.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("question 2"))
                        bogusForceDataize.write (((((xq2).xrelated_questions).xadd)).apply ((xq1)))
                        xq3.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("question 3"))
                        bogusForceDataize.write (((((xq3).xrelated_questions).xadd)).apply ((xq1)))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("question") (((xself).xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        (((unsupported)).apply ((xQuestionAdmin)))
                          xsearch_fields.write (((unsupported)).apply ("related_questions__question") ("question"))
                        (((unsupported)).apply ((((xmodel_admin)).apply ((xQuestion)) ((xDistinctQuestionAdmin)))))
                          xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((((unsupported)).apply ((xdata)) ("results"))))) (3))
                xtest_missing_search_fields.write
                  [xself]
                    memory > xsearch_fields
                    memory > xmsg
                    seq > @
                      seq
                        (((unsupported)).apply ((xQuestionAdmin)))
                          xsearch_fields.write (((unsupported)).apply)
                        (((unsupported)).apply ((((xmodel_admin)).apply ((xQuestion)) ((xEmptySearchAdmin)))))
                          seq
                            xmsg.write "EmptySearchAdmin must have search_fields for the autocomplete_view."
                            (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xHttp404)) ((xmsg)))))
                              bogusForceDataize.write ((((xsite).xautocomplete_view)).apply ((((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("") (((xself).xopts)))))))
                xtest_get_paginator.write
                  [xself]
                    memory > xresponse
                    memory > xrequest
                    memory > xdata
                    memory > xordering
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply ((xQuestionAdmin)))
                          xordering.write (((unsupported)).apply ("pk"))
                        bogusForceDataize.write (((((xQuestion).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xQuestion)) ((((xstr)).apply ((xi)))))) ((xi)) ((((xrange)).apply (((xPAGINATOR_SIZE).add 10)))))))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("") (((xself).xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        (((unsupported)).apply ((((xmodel_admin)).apply ((xQuestion)) ((xPKOrderingQuestionAdmin)))))
                          xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xpk)))) ("text") (((xq).xquestion)))) ((xq)) ((((unsupported)).apply ((((((xQuestion).xobjects).xall)).apply)) ((((unsupported)).apply ((xPAGINATOR_SIZE)))))))) ("pagination") ((((unsupported)).apply ("more") (TRUE))))))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("") ("page") ("2") (((xself).xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        (((unsupported)).apply ((((xmodel_admin)).apply ((xQuestion)) ((xPKOrderingQuestionAdmin)))))
                          xresponse.write ((((((xAutocompleteJsonView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xpk)))) ("text") (((xq).xquestion)))) ((xq)) ((((unsupported)).apply ((((((xQuestion).xobjects).xall)).apply)) ((((unsupported)).apply ((xPAGINATOR_SIZE)))))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
                xtest_serialize_result.write
                  [xself]
                    memory > xresponse
                    memory > xserialize_result
                    memory > xrequest
                    memory > xdata
                    seq > @
                      seq
                        (((unsupported)).apply ((xAutocompleteJsonView)))
                          xserialize_result.write
                            [xself xobj xto_field_name]
                              seq > @
                                (((unsupported)).apply ((((unsupported)).apply (((((((xsuper)).apply).xserialize_result)).apply ((xobj)) ((xto_field_name)))) ("posted") ((((xstr)).apply (((xobj).xposted)))))))
                        (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Question 1") (((((xdatetime).xdate)).apply (2021) (8) (9))))
                        (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Question 2") (((((xdatetime).xdate)).apply (2021) (8) (7))))
                        xrequest.write (((((xself).xfactory).xget)).apply (((xself).xurl)) ((((unsupported)).apply ("term") ("question") (((xself).xopts)))))
                        (((unsupported)).apply (((xrequest).xuser)) (((xself).xsuperuser)))
                        xresponse.write ((((((xAutocompleteJsonSerializeResultView).xas_view)).apply ((((unsupported)).apply (((xself).xas_view_args)))))).apply ((xrequest)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xresponse).xstatus_code)) (200))
                        xdata.write ((((xjson).xloads)).apply ((((((xresponse).xcontent).xdecode)).apply ("utf-8"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xdata)) ((((unsupported)).apply ("results") ((((unsupported)).apply ((((unsupported)).apply ("id") ((((xstr)).apply (((xq).xpk)))) ("text") (((xq).xquestion)) ("posted") ((((xstr)).apply (((xq).xposted)))))) ((xq)) ((((((xQuestion).xobjects).xorder_by)).apply ("-posted"))))) ("pagination") ((((unsupported)).apply ("more") ((xfalse)))))))
            (((unsupported)).apply ((xAdminSeleniumTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("admin_views.urls"))))
              seq
                xavailable_apps.write ((((unsupported)).apply ("admin_views")).add ((xAdminSeleniumTestCase).xavailable_apps))
                xsetUp.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((xself).xsuperuser)) ((((unsupported)).apply ((((xUser).xobjects).xcreate_superuser)) ("super") ("secret") ("super@example.com"))))
                        (((unsupported)).apply (((xself).xadmin_login)) ("super") ("secret") ((((xreverse)).apply ("autocomplete_admin:index"))))
                xselect2_ajax_wait.write
                  [xself xtimeout]
                    memory > xec
                    memory > xloading_element
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xdisable_implicit_wait)).apply)))
                          (((unsupported)).apply ((xNoSuchElementException)))
                            xloading_element.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) ("li.select2-results__option.loading-results"))
                            (((unsupported)).apply (((xself).xwait_until)) (((((xec).xstaleness_of)).apply ((xloading_element)))) ((xtimeout)))
                xtest_select.write
                  [xself]
                    memory > xresult_container
                    memory > xoption
                    memory > xselect
                    memory > xq1
                    memory > xelem
                    memory > xresults
                    memory > xsearch
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).xselenium).xget)).apply ((((xself).xlive_server_url).add (((xreverse)).apply ("autocomplete_admin:admin_views_answer_add")))))
                        xelem.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-selection"))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        xresults.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresults).xis_displayed)).apply)))
                        xoption.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results__option"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xoption).xtext)) ("No results found"))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        xq1.write (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Who am I?"))
                        bogusForceDataize.write (((((xQuestion).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xQuestion)) ((((xstr)).apply ((xi)))))) ((xi)) ((((xrange)).apply (((xPAGINATOR_SIZE).add 10)))))))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        xresult_container.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresult_container).xis_displayed)).apply)))
                        (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (((xPAGINATOR_SIZE).add 1)) ((xresult_container)))
                        xsearch.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-search__field"))
                        (((unsupported)).apply (((((xself).xselect2_ajax_wait)).apply)))
                          (((unsupported)).apply ((x_)) ((((xrange)).apply (((xPAGINATOR_SIZE).add 1)))))
                            bogusForceDataize.write ((((xsearch).xsend_keys)).apply (((xKeys).xARROW_DOWN)))
                        (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (((xPAGINATOR_SIZE).add 11)) ((xresult_container)))
                        (((unsupported)).apply (((((xself).xselect2_ajax_wait)).apply)))
                          seq
                            bogusForceDataize.write ((((xsearch).xsend_keys)).apply ("Who"))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresult_container).xis_displayed)).apply)))
                            (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (((xPAGINATOR_SIZE).add 12)) ((xresult_container)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresult_container).xis_displayed)).apply)))
                        (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (1) ((xresult_container)))
                        bogusForceDataize.write ((((xsearch).xsend_keys)).apply (((xKeys).xRETURN)))
                        xselect.write (((xSelect)).apply ((((((xself).xselenium).xfind_element)).apply (((xBy).xID)) ("id_question"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xselect).xfirst_selected_option).xget_attribute)).apply ("value"))) ((((xstr)).apply (((xq1).xpk)))))
                xtest_select_multiple.write
                  [xself]
                    memory > xresult_container
                    memory > xoption
                    memory > xselect
                    memory > xelem
                    memory > xresults
                    memory > xsearch
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).xselenium).xget)).apply ((((xself).xlive_server_url).add (((xreverse)).apply ("autocomplete_admin:admin_views_question_add")))))
                        xelem.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-selection"))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        xresults.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresults).xis_displayed)).apply)))
                        xoption.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results__option"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xoption).xtext)) ("No results found"))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        (((unsupported)).apply ((((xQuestion).xobjects).xcreate)) ("Who am I?"))
                        bogusForceDataize.write (((((xQuestion).xobjects).xbulk_create)).apply ((((unsupported)).apply ((((unsupported)).apply ((xQuestion)) ((((xstr)).apply ((xi)))))) ((xi)) ((((xrange)).apply (((xPAGINATOR_SIZE).add 10)))))))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        xresult_container.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results"))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresult_container).xis_displayed)).apply)))
                        (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (((xPAGINATOR_SIZE).add 1)) ((xresult_container)))
                        xsearch.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-search__field"))
                        (((unsupported)).apply (((((xself).xselect2_ajax_wait)).apply)))
                          (((unsupported)).apply ((x_)) ((((xrange)).apply (((xPAGINATOR_SIZE).add 1)))))
                            bogusForceDataize.write ((((xsearch).xsend_keys)).apply (((xKeys).xARROW_DOWN)))
                        (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (31) ((xresult_container)))
                        (((unsupported)).apply (((((xself).xselect2_ajax_wait)).apply)))
                          seq
                            bogusForceDataize.write ((((xsearch).xsend_keys)).apply ("Who"))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresult_container).xis_displayed)).apply)))
                            (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (32) ((xresult_container)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresult_container).xis_displayed)).apply)))
                        (((unsupported)).apply (((xself).xassertCountSeleniumElements)) (".select2-results__option") (1) ((xresult_container)))
                        bogusForceDataize.write ((((xsearch).xsend_keys)).apply (((xKeys).xRETURN)))
                        bogusForceDataize.write ((((xelem).xclick)).apply)
                        bogusForceDataize.write ((((xsearch).xsend_keys)).apply (((xKeys).xARROW_DOWN)))
                        bogusForceDataize.write ((((xsearch).xsend_keys)).apply (((xKeys).xRETURN)))
                        xselect.write (((xSelect)).apply ((((((xself).xselenium).xfind_element)).apply (((xBy).xID)) ("id_related_questions"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((xselect).xall_selected_options)))) (2))
                xtest_inline_add_another_widgets.write
                  [xself]
                    memory > xrows
                    memory > xassertNoResults
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xassertNoResults.write
                          [xrow]
                            memory > xelem
                            memory > xresults
                            memory > xoption
                            seq > @
                              seq
                                xelem.write ((((xrow).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-selection"))
                                bogusForceDataize.write ((((xelem).xclick)).apply)
                                xresults.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results"))
                                bogusForceDataize.write ((((xself).xassertTrue)).apply (((((xresults).xis_displayed)).apply)))
                                xoption.write (((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) (".select2-results__option"))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply (((xoption).xtext)) ("No results found"))
                        bogusForceDataize.write (((((xself).xselenium).xget)).apply ((((xself).xlive_server_url).add (((xreverse)).apply ("autocomplete_admin:admin_views_book_add")))))
                        xrows.write (((((xself).xselenium).xfind_elements)).apply (((xBy).xCSS_SELECTOR)) (".dynamic-authorship_set"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xrows)))) (3))
                        bogusForceDataize.write (((xassertNoResults)).apply ((((unsupported)).apply ((xrows)) (0))))
                        bogusForceDataize.write ((((((((xself).xselenium).xfind_element)).apply (((xBy).xLINK_TEXT)) ("Add another Authorship")).xclick)).apply)
                        xrows.write (((((xself).xselenium).xfind_elements)).apply (((xBy).xCSS_SELECTOR)) (".dynamic-authorship_set"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xrows)))) (4))
                        bogusForceDataize.write (((xassertNoResults)).apply ((((unsupported)).apply ((xrows)) ((1.neg)))))