283c283
<                       bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply)) (0))
---
>                       bogusForceDataize.write ((((xself).xassertEqual)).apply ((xint)) (0))
354c354
<                         xfactories.write (((unsupported)).apply ((xbytes)) ((xbytearray)) ((((unsupported)).apply ((((xCustomStr)).apply (((((xb).xdecode)).apply)))))) ((xCustomBytes)) ((xCustomByteArray)) ((xmemoryview)))
---
>                         xfactories.write (((unsupported)).apply ((xbytes)) ((xbytearray)) ((((unsupported)).apply ((((xCustomStr)).apply (((xb).xdecode)))))) ((xCustomBytes)) ((xCustomByteArray)) ((xmemoryview)))
393c393
<                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((((xClassicMissingMethods)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((xClassicMissingMethods)))
395c395
<                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((((xMissingMethods)).apply)))
---
>                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((xMissingMethods)))
401c401
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xFoo0)).apply)))) (42))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xFoo0)))) (42))
415c415
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xIntOverridesTrunc)).apply)))) (42))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xIntOverridesTrunc)))) (42))
421c421
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xJustTrunc)).apply)))) (42))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xJustTrunc)))) (42))
428c428
<                               bogusForceDataize.write (((xint)).apply ((((xExceptionalTrunc)).apply)))
---
>                               bogusForceDataize.write (((xint)).apply ((xExceptionalTrunc)))
440,441c440,441
<                                         (((unsupported)).apply ((((xIndex)).apply)))
<                                 bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xTruncReturnsNonInt)).apply)))) (42))
---
>                                         (((unsupported)).apply ((xIndex)))
>                                 bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xTruncReturnsNonInt)))) (42))
451,452c451,452
<                                         (((unsupported)).apply ((((xIntable)).apply)))
<                                 bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xTruncReturnsNonInt)).apply)))) (42))
---
>                                         (((unsupported)).apply ((xIntable)))
>                                 bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xTruncReturnsNonInt)))) (42))
457c457
<                                         (((unsupported)).apply ((((xNonIntegral)).apply)))
---
>                                         (((unsupported)).apply ((xNonIntegral)))
462c462
<                                         (((unsupported)).apply ((((xNonIntegral)).apply)))
---
>                                         (((unsupported)).apply ((xNonIntegral)))
464c464
<                                   bogusForceDataize.write (((xint)).apply ((((xTruncReturnsNonIntegral)).apply)))
---
>                                   bogusForceDataize.write (((xint)).apply ((xTruncReturnsNonIntegral)))
476c476
<                                         (((unsupported)).apply ((((xBadInt)).apply)))
---
>                                         (((unsupported)).apply ((xBadInt)))
478c478
<                                   bogusForceDataize.write (((xint)).apply ((((xTruncReturnsBadInt)).apply)))
---
>                                   bogusForceDataize.write (((xint)).apply ((xTruncReturnsBadInt)))
498c498
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xBadIndex)).apply)))) (0))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xBadIndex)))) (0))
555c555
<                                 (((unsupported)).apply ((((xBadIndex)).apply)))
---
>                                 (((unsupported)).apply ((xBadIndex)))
560c560
<                                 (((unsupported)).apply ((((xBadInt)).apply)))
---
>                                 (((unsupported)).apply ((xBadInt)))
566c566
<                         xbad_int.write (((xBadIndex)).apply)
---
>                         xbad_int.write (xBadIndex)
571c571
<                         xbad_int.write (((xBadIndex2)).apply)
---
>                         xbad_int.write (xBadIndex2)
575c575
<                         xbad_int.write (((xBadInt)).apply)
---
>                         xbad_int.write (xBadInt)
580c580
<                         xbad_int.write (((xBadInt2)).apply)
---
>                         xbad_int.write (xBadInt2)
585c585
<                         xbad_int.write (((xTruncReturnsBadIndex)).apply)
---
>                         xbad_int.write (xTruncReturnsBadIndex)
590c590
<                         xbad_int.write (((xTruncReturnsBadInt)).apply)
---
>                         xbad_int.write (xTruncReturnsBadInt)
595c595
<                         xgood_int.write (((xTruncReturnsIntSubclass)).apply)
---
>                         xgood_int.write (xTruncReturnsIntSubclass)
615c615
<                                 bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) (("invalid literal for int() with base %d: %r".mod (((unsupported)).apply (((((unsupported)).apply ((xbase)) ("None: is there a None literal in the EO language?")).if 10 (xbase))) ((xs))))))
---
>                                 bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) (("invalid literal for int with base %d: %r".mod (((unsupported)).apply (((((unsupported)).apply ((xbase)) ("None: is there a None literal in the EO language?")).if 10 (xbase))) ((xs))))))
640c640
<               bogusForceDataize.write ((((xunittest).xmain)).apply)
\ No newline at end of file
---
>               unsupported
\ No newline at end of file