memory > xd
memory > xSelect
memory > xmodify_settings
memory > xoption
memory > xWebDriverWait
memory > xdriver
memory > xSeleniumTestCase
memory > xMiddlewareMixin
memory > xlen
memory > xStaticLiveServerTestCase
memory > xBy
[] > tests
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xwait_for_text
        memory > xprocess_response
        memory > xwait_for_value
        memory > xwait_until_invisible
        memory > x_
        memory > xwait_for
        memory > xdeselect_option
        memory > xadmin_login
        memory > xhas_css_class
        memory > xwait_until
        memory > xwait_page_loaded
        memory > xselect_option
        memory > x_assertOptionsValues
        memory > xassertSelectedOptions
        memory > xwait_for_and_switch_to_popup
        memory > xassertCountSeleniumElements
        memory > xassertSelectOptions
        memory > xwait_page_ready
        memory > xavailable_apps
        memory > xwait_until_visible
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xMiddlewareMixin)))
              seq
                unsupported
                xprocess_response.write
                  [xself xrequest xresponse]
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply (((xresponse).xheaders)) ("Content-Security-Policy"))) ("default-src 'self'"))
                        (((unsupported)).apply ((xresponse)))
            (((unsupported)).apply ((xSeleniumTestCase)) ((xStaticLiveServerTestCase)) ((((unsupported)).apply ((xmodify_settings)) ((((unsupported)).apply ("append") ("django.contrib.admin.tests.CSPMiddleware"))))))
              seq
                xavailable_apps.write (((unsupported)).apply ("django.contrib.admin") ("django.contrib.auth") ("django.contrib.contenttypes") ("django.contrib.sessions") ("django.contrib.sites"))
                xwait_until.write
                  [xself xcallback xtimeout]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((((xWebDriverWait)).apply (((xself).xselenium)) ((xtimeout))).xuntil)).apply ((xcallback)))
                xwait_for_and_switch_to_popup.write
                  [xself xnum_windows xtimeout]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply ((((unsupported)).apply (((((xlen)).apply (((xd).xwindow_handles))).eq (xnum_windows))))) ((xtimeout)))
                        bogusForceDataize.write ((((((xself).xselenium).xswitch_to).xwindow)).apply ((((unsupported)).apply ((((xself).xselenium).xwindow_handles)) ((1.neg)))))
                        unsupported
                xwait_for.write
                  [xself xcss_selector xtimeout]
                    memory > xec
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply (((((xec).xpresence_of_element_located)).apply ((((unsupported)).apply (((xBy).xCSS_SELECTOR)) ((xcss_selector)))))) ((xtimeout)))
                xwait_for_text.write
                  [xself xcss_selector xtext xtimeout]
                    memory > xec
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply (((((xec).xtext_to_be_present_in_element)).apply ((((unsupported)).apply (((xBy).xCSS_SELECTOR)) ((xcss_selector)))) ((xtext)))) ((xtimeout)))
                xwait_for_value.write
                  [xself xcss_selector xtext xtimeout]
                    memory > xec
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply (((((xec).xtext_to_be_present_in_element_value)).apply ((((unsupported)).apply (((xBy).xCSS_SELECTOR)) ((xcss_selector)))) ((xtext)))) ((xtimeout)))
                xwait_until_visible.write
                  [xself xcss_selector xtimeout]
                    memory > xec
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply (((((xec).xvisibility_of_element_located)).apply ((((unsupported)).apply (((xBy).xCSS_SELECTOR)) ((xcss_selector)))))) ((xtimeout)))
                xwait_until_invisible.write
                  [xself xcss_selector xtimeout]
                    memory > xec
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply (((((xec).xinvisibility_of_element_located)).apply ((((unsupported)).apply (((xBy).xCSS_SELECTOR)) ((xcss_selector)))))) ((xtimeout)))
                xwait_page_ready.write
                  [xself xtimeout]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xwait_until)).apply ((((unsupported)).apply ((((((xdriver).xexecute_script)).apply ("return document.readyState;")).eq "complete")))) ((xtimeout)))
                xwait_page_loaded.write
                  [xself xtimeout]
                    memory > xec
                    memory > xold_page
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        xold_page.write (((((xself).xselenium).xfind_element)).apply (((xBy).xTAG_NAME)) ("html"))
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xwait_until)) (((((xec).xstaleness_of)).apply ((xold_page)))) ((xtimeout)))
                        (((unsupported)).apply (((xself).xwait_page_ready)) ((xtimeout)))
                xadmin_login.write
                  [xself xusername xpassword xlogin_url]
                    memory > xlogin_text
                    memory > xpassword_input
                    memory > xusername_input
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write (((((xself).xselenium).xget)).apply (("%s%s".mod (((unsupported)).apply (((xself).xlive_server_url)) ((xlogin_url))))))
                        xusername_input.write (((((xself).xselenium).xfind_element)).apply (((xBy).xNAME)) ("username"))
                        bogusForceDataize.write ((((xusername_input).xsend_keys)).apply ((xusername)))
                        xpassword_input.write (((((xself).xselenium).xfind_element)).apply (((xBy).xNAME)) ("password"))
                        bogusForceDataize.write ((((xpassword_input).xsend_keys)).apply ((xpassword)))
                        xlogin_text.write (((x_)).apply ("Log in"))
                        (((unsupported)).apply (((xself).xwait_page_loaded)))
                          unsupported
                xselect_option.write
                  [xself xselector xvalue]
                    memory > xselect
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        xselect.write (((xSelect)).apply ((((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) ((xselector)))))
                        bogusForceDataize.write ((((xselect).xselect_by_value)).apply ((xvalue)))
                xdeselect_option.write
                  [xself xselector xvalue]
                    memory > xselect
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        xselect.write (((xSelect)).apply ((((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) ((xselector)))))
                        bogusForceDataize.write ((((xselect).xdeselect_by_value)).apply ((xvalue)))
                xassertCountSeleniumElements.write
                  [xself xselector xcount xroot_element]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        xroot_element.write ((xroot_element).or ((xself).xselenium))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply (((((xroot_element).xfind_elements)).apply (((xBy).xCSS_SELECTOR)) ((xselector)))))) ((xcount)))
                x_assertOptionsValues.write
                  [xself xoptions_selector xvalues]
                    memory > xoptions
                    memory > xactual_values
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (xvalues).if
                          seq
                            xoptions.write (((((xself).xselenium).xfind_elements)).apply (((xBy).xCSS_SELECTOR)) ((xoptions_selector)))
                            xactual_values.write (((unsupported)).apply)
                            (((unsupported)).apply ((xoption)) ((xoptions)))
                              bogusForceDataize.write ((((xactual_values).xappend)).apply (((((xoption).xget_attribute)).apply ("value"))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((xvalues)) ((xactual_values)))
                          (((unsupported)).apply (((xself).xdisable_implicit_wait)))
                            bogusForceDataize.write ((((xself).xwait_until)).apply ((((unsupported)).apply ((((((xdriver).xfind_elements)).apply (((xBy).xCSS_SELECTOR)) ((xoptions_selector))).not)))))
                xassertSelectOptions.write
                  [xself xselector xvalues]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).x_assertOptionsValues)).apply (("%s > option".mod (xselector))) ((xvalues)))
                xassertSelectedOptions.write
                  [xself xselector xvalues]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).x_assertOptionsValues)).apply (("%s > option:checked".mod (xselector))) ((xvalues)))
                xhas_css_class.write
                  [xself xselector xklass]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((((((((((xself).xselenium).xfind_element)).apply (((xBy).xCSS_SELECTOR)) ((xselector))).xget_attribute)).apply ("class")).xfind)).apply ((xklass))).neq (1.neg))))