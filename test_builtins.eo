memory > xSimpleTestCase
[] > test_builtins
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_builtins02
        memory > xtest_builtins01
        memory > xtest_builtins03
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_builtins01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("builtins01"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("True"))
                xtest_builtins02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("builtins02"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("False"))
                xtest_builtins03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("builtins03"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("None"))