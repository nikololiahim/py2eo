memory > xstr
memory > xContentTypeManager
memory > xTestRouter
memory > xoverride_settings
memory > xProxyModel
memory > xModelCreatedOnTheFly
memory > xmodels
memory > xFooWithUrl
memory > xContentType
memory > xConcreteModel
memory > xTestCase
memory > xAuthor
[] > test_models
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xdatabases
        memory > xtest_get_for_model_create_contenttype
        memory > xdb_for_write
        memory > xtest_get_for_concrete_model
        memory > xtest_lookup_cache
        memory > xtest_get_for_models_empty_cache
        memory > xsetUp
        memory > xtest_missing_model
        memory > xtest_get_for_concrete_models
        memory > xtest_str
        memory > xtest_get_for_models_full_cache
        memory > xtest_cache_not_shared_between_managers
        memory > xtest_multidb
        memory > xdb_for_read
        memory > xtest_get_for_models_partial_cache
        memory > xtest_missing_model_with_existing_model_name
        memory > xtest_app_labeled_name
        memory > xtest_get_for_models_creation
        memory > xtearDown
        memory > xtest_app_labeled_name_unknown_model
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xTestCase)))
              seq
                xsetUp.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((((xContentType).xobjects).xclear_cache)).apply)
                xtearDown.write
                  [xself]
                    seq > @
                      bogusForceDataize.write (((((xContentType).xobjects).xclear_cache)).apply)
                xtest_lookup_cache.write
                  [xself]
                    memory > xct
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          xct.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_for_id)).apply (((xct).xid)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_by_natural_key)).apply ("contenttypes") ("contenttype"))
                        bogusForceDataize.write (((((xContentType).xobjects).xclear_cache)).apply)
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        bogusForceDataize.write (((((xContentType).xobjects).xclear_cache)).apply)
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_by_natural_key)).apply ("contenttypes") ("contenttype"))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_by_natural_key)).apply ("contenttypes") ("contenttype"))
                xtest_get_for_models_creation.write
                  [xself]
                    memory > xcts
                    seq > @
                      seq
                        bogusForceDataize.write ((((((((xContentType).xobjects).xall)).apply).xdelete)).apply)
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (4))))
                          xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xContentType)) ((xFooWithUrl)) ((xProxyModel)) ((xConcreteModel)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xContentType)) ((((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))) ((xFooWithUrl)) ((((((xContentType).xobjects).xget_for_model)).apply ((xFooWithUrl)))) ((xProxyModel)) ((((((xContentType).xobjects).xget_for_model)).apply ((xProxyModel)))) ((xConcreteModel)) ((((((xContentType).xobjects).xget_for_model)).apply ((xConcreteModel)))))))
                xtest_get_for_models_empty_cache.write
                  [xself]
                    memory > xcts
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xContentType)) ((xFooWithUrl)) ((xProxyModel)) ((xConcreteModel)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xContentType)) ((((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))) ((xFooWithUrl)) ((((((xContentType).xobjects).xget_for_model)).apply ((xFooWithUrl)))) ((xProxyModel)) ((((((xContentType).xobjects).xget_for_model)).apply ((xProxyModel)))) ((xConcreteModel)) ((((((xContentType).xobjects).xget_for_model)).apply ((xConcreteModel)))))))
                xtest_get_for_models_partial_cache.write
                  [xself]
                    memory > xcts
                    seq > @
                      seq
                        bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xContentType)) ((xFooWithUrl)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xContentType)) ((((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))) ((xFooWithUrl)) ((((((xContentType).xobjects).xget_for_model)).apply ((xFooWithUrl)))))))
                xtest_get_for_models_full_cache.write
                  [xself]
                    memory > xcts
                    seq > @
                      seq
                        bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xFooWithUrl)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xContentType)) ((xFooWithUrl)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xContentType)) ((((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))) ((xFooWithUrl)) ((((((xContentType).xobjects).xget_for_model)).apply ((xFooWithUrl)))))))
                xtest_get_for_model_create_contenttype.write
                  [xself]
                    memory > xname
                    memory > xct
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xmodels).xModel)))
                          xname.write ((((xmodels).xCharField)).apply)
                        xct.write (((((xContentType).xobjects).xget_for_model)).apply ((xModelCreatedOnTheFly)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xct).xapp_label)) ("contenttypes_tests"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xct).xmodel)) ("modelcreatedonthefly"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xct)))) ("modelcreatedonthefly"))
                xtest_get_for_concrete_model.write
                  [xself]
                    memory > xDeferredProxyModel
                    memory > xproxy_model_ct
                    memory > xDeferredConcreteModel
                    memory > xconcrete_model_ct
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xconcrete_model_ct.write (((((xContentType).xobjects).xget_for_model)).apply ((xConcreteModel)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xconcrete_model_ct)) ((((((xContentType).xobjects).xget_for_model)).apply ((xProxyModel)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xconcrete_model_ct)) ((((unsupported)).apply ((((xContentType).xobjects).xget_for_model)) ((xConcreteModel)) (FALSE))))
                        xproxy_model_ct.write (((unsupported)).apply ((((xContentType).xobjects).xget_for_model)) ((xProxyModel)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xconcrete_model_ct)) ((xproxy_model_ct)))
                        (((unsupported)).apply ((((xConcreteModel).xobjects).xcreate)) ("Concrete"))
                        xDeferredConcreteModel.write (((((((((xConcreteModel).xobjects).xonly)).apply ("pk")).xget)).apply).x__class__)
                        xDeferredProxyModel.write (((((((((xProxyModel).xobjects).xonly)).apply ("pk")).xget)).apply).x__class__)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xconcrete_model_ct)) ((((((xContentType).xobjects).xget_for_model)).apply ((xDeferredConcreteModel)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xconcrete_model_ct)) ((((unsupported)).apply ((((xContentType).xobjects).xget_for_model)) ((xDeferredConcreteModel)) (FALSE))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xconcrete_model_ct)) ((((((xContentType).xobjects).xget_for_model)).apply ((xDeferredProxyModel)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xproxy_model_ct)) ((((unsupported)).apply ((((xContentType).xobjects).xget_for_model)) ((xDeferredProxyModel)) (FALSE))))
                xtest_get_for_concrete_models.write
                  [xself]
                    memory > xproxy_model_ct
                    memory > xconcrete_model_ct
                    memory > xDeferredConcreteModel
                    memory > xDeferredProxyModel
                    memory > xcts
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xconcrete_model_ct.write (((((xContentType).xobjects).xget_for_model)).apply ((xConcreteModel)))
                        xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xConcreteModel)) ((xProxyModel)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xConcreteModel)) ((xconcrete_model_ct)) ((xProxyModel)) ((xconcrete_model_ct)))))
                        xproxy_model_ct.write (((unsupported)).apply ((((xContentType).xobjects).xget_for_model)) ((xProxyModel)) (FALSE))
                        xcts.write (((unsupported)).apply ((((xContentType).xobjects).xget_for_models)) ((xConcreteModel)) ((xProxyModel)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xConcreteModel)) ((xconcrete_model_ct)) ((xProxyModel)) ((xproxy_model_ct)))))
                        (((unsupported)).apply ((((xConcreteModel).xobjects).xcreate)) ("Concrete"))
                        xDeferredConcreteModel.write (((((((((xConcreteModel).xobjects).xonly)).apply ("pk")).xget)).apply).x__class__)
                        xDeferredProxyModel.write (((((((((xProxyModel).xobjects).xonly)).apply ("pk")).xget)).apply).x__class__)
                        xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xDeferredConcreteModel)) ((xDeferredProxyModel)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xDeferredConcreteModel)) ((xconcrete_model_ct)) ((xDeferredProxyModel)) ((xconcrete_model_ct)))))
                        xcts.write (((unsupported)).apply ((((xContentType).xobjects).xget_for_models)) ((xDeferredConcreteModel)) ((xDeferredProxyModel)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xDeferredConcreteModel)) ((xconcrete_model_ct)) ((xDeferredProxyModel)) ((xproxy_model_ct)))))
                xtest_cache_not_shared_between_managers.write
                  [xself]
                    memory > xother_manager
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))
                        xother_manager.write (((xContentTypeManager)).apply)
                        (((unsupported)).apply (((xother_manager).xmodel)) ((xContentType)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (1))))
                          bogusForceDataize.write ((((xother_manager).xget_for_model)).apply ((xContentType)))
                        (((unsupported)).apply (((((xself).xassertNumQueries)).apply (0))))
                          bogusForceDataize.write ((((xother_manager).xget_for_model)).apply ((xContentType)))
                xtest_missing_model.write
                  [xself]
                    memory > xct
                    memory > xct_fetched
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xct.write (((unsupported)).apply ((((xContentType).xobjects).xcreate)) ("contenttypes") ("OldModel"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xct)))) ("OldModel"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xct).xmodel_class)).apply)))
                        xct_fetched.write (((((xContentType).xobjects).xget_for_id)).apply (((xct).xpk)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((xct_fetched).xmodel_class)).apply)))
                xtest_missing_model_with_existing_model_name.write
                  [xself]
                    memory > xcts
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((xContentType).xobjects).xcreate)) ("contenttypes") ("author"))
                        bogusForceDataize.write (((((xContentType).xobjects).xclear_cache)).apply)
                        xcts.write (((((xContentType).xobjects).xget_for_models)).apply ((xContentType)) ((xAuthor)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xcts)) ((((unsupported)).apply ((xContentType)) ((((((xContentType).xobjects).xget_for_model)).apply ((xContentType)))) ((xAuthor)) ((((((xContentType).xobjects).xget_for_model)).apply ((xAuthor)))))))
                xtest_str.write
                  [xself]
                    memory > xct
                    seq > @
                      seq
                        xct.write (((unsupported)).apply ((((xContentType).xobjects).xget)) ("contenttypes_tests") ("site"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xct)))) ("contenttypes_tests | site"))
                xtest_app_labeled_name.write
                  [xself]
                    memory > xct
                    seq > @
                      seq
                        xct.write (((unsupported)).apply ((((xContentType).xobjects).xget)) ("contenttypes_tests") ("site"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xct).xapp_labeled_name)) ("contenttypes_tests | site"))
                xtest_app_labeled_name_unknown_model.write
                  [xself]
                    memory > xct
                    seq > @
                      seq
                        xct.write (((unsupported)).apply ((xContentType)) ("contenttypes_tests") ("unknown"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xct).xapp_labeled_name)) ("unknown"))
            (((unsupported)).apply)
              seq
                xdb_for_read.write
                  [xself xmodel]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ("other"))
                xdb_for_write.write
                  [xself xmodel]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ("default"))
            (((unsupported)).apply ((xTestCase)) ((((unsupported)).apply ((xoverride_settings)) ((((unsupported)).apply ((((xTestRouter)).apply)))))))
              seq
                xdatabases.write (((unsupported)).apply ("default") ("other"))
                xtest_multidb.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write (((((xContentType).xobjects).xclear_cache)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xassertNumQueries)) (0) ("default"))) ((((unsupported)).apply (((xself).xassertNumQueries)) (1) ("other"))))
                          bogusForceDataize.write (((((xContentType).xobjects).xget_for_model)).apply ((xAuthor)))