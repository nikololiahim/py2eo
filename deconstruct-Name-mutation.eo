memory > xobj2
memory > x_
memory > xtype
memory > xhasattr
memory > xsuper
memory > xargs
memory > xstaticmethod
memory > xValueError
memory > ximport_module
memory > xkwargs
memory > xget_docs_version
[] > deconstruct
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xdeconstructible
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            xdeconstructible.write
              [xpath]
                memory > xdecorator
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    xdecorator.write
                      [xklass]
                        memory > x__new__
                        memory > xdeconstruct
                        seq > @
                          seq
                            x__new__.write
                              [xcls]
                                memory > xobj
                                seq > @
                                  (((unsupported)).apply)
                                    xobj.write ((((((xsuper)).apply ((xklass)) ((xcls))).x__new__)).apply ((xcls)))
                                    (((unsupported)).apply (((xobj).x_constructor_args)) ((((unsupported)).apply ((xargs)) ((xkwargs)))))
                                    (((unsupported)).apply ((xobj2)))
                            xdeconstruct.write
                              [xobj]
                                memory > xname
                                memory > xmodule_name
                                memory > xmodule
                                seq > @
                                  seq
                                    (((unsupported)).apply)
                                    ((xpath).and (((unsupported)).apply ((((xtype)).apply ((xobj)))) ((xklass)))).if
                                      (((unsupported)).apply ((((unsupported)).apply ((xmodule_name)) ((x_)) ((xname)))) (((((xpath).xrpartition)).apply ("."))))
                                      seq
                                        xmodule_name.write ((xobj).x__module__)
                                        xname.write (((xobj).x__class__).x__name__)
                                    xmodule.write (((ximport_module)).apply ((xmodule_name)))
                                    ((((xhasattr)).apply ((xmodule)) ((xname))).not).if
                                      (((unsupported)).apply ((((xValueError)).apply (("Could not find object %s in %s.nPlease note that you cannot serialize things like inner classes. Please move the object into the main module body to use migrations.nFor more information, see https://docs.djangoproject.com/en/%s/topics/migrations/#serializing-values".mod (((unsupported)).apply ((xname)) ((xmodule_name)) ((((xget_docs_version)).apply))))))))
                                    (((unsupported)).apply ((((unsupported)).apply ((((xpath).and (((unsupported)).apply ((((xtype)).apply ((xobj)))) ((xklass)))).if (xpath) "{obj.__class__.__module__}.{name}")) ((((unsupported)).apply (((xobj).x_constructor_args)) (0))) ((((unsupported)).apply (((xobj).x_constructor_args)) (1))))))
                            (((unsupported)).apply (((xklass).x__new__)) ((((xstaticmethod)).apply ((x__new__)))))
                            (((unsupported)).apply (((xklass).xdeconstruct)) ((xdeconstruct)))
                            (((unsupported)).apply ((xklass)))
                    ((xargs).not).if
                      (((unsupported)).apply ((xdecorator)))
                    (((unsupported)).apply ((((xdecorator)).apply ((((unsupported)).apply ((xargs)))))))