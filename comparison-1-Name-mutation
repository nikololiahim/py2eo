+package org.eolang
+alias goto org.eolang.gray.goto
+alias stdout org.eolang.io.stdout
+alias cage org.eolang.gray.cage
+junit

[unused] > comparison-1
  [raiseme] > apply
    [x] > mkCopy
      x' > copy
      copy.< > @
    [] > newUID
      memory > cur
      seq > apply
        cur.write (cur.is-empty.if 2 (cur.add 1))
        cur
    [] > raiseEmpty
      [] > xclass
        1 > xid
    [] > raiseNothing
      [] > xclass
        0 > xid
    cage > xcurrent-exception
    cage > result
    cage > tmp
    cage > xcomp1
    goto > @
      [returnLabel]
        seq > @
          stdout "comparison-1\n"
          write.
            xcomp1
            []
              [raiseme] > apply
                cage > result
                cage > tmp
                cage > lhs18
                cage > e1
                cage > lhs14
                cage > lhs17
                cage > lhs21
                cage > e0
                cage > lhs22
                cage > lhs9
                cage > lhs16
                cage > lhs11
                cage > lhs15
                cage > e6
                cage > lhs20
                cage > lhs0
                cage > lhs25
                cage > lhs4
                cage > e5
                cage > lhs1
                cage > e7
                cage > lhs28
                cage > lhs10
                cage > lhs5
                cage > e4
                cage > lhs13
                cage > lhs24
                cage > e8
                cage > lhs2
                cage > lhs8
                cage > lhs27
                cage > e3
                cage > lhs6
                cage > lhs23
                cage > lhs12
                cage > lhs3
                cage > e9
                cage > lhs19
                cage > lhs26
                cage > e2
                cage > lhs7
                goto > @
                  [returnLabel]
                    seq > @
                      stdout "xcomp1\n"
                      (lhs0).write (1)
                      (lhs1).write (TRUE)
                      (lhs1).if
                        seq
                          (lhs2).write (2)
                          mkCopy (lhs1) > tmp1
                          (lhs11).write (tmp1.copy)
                          (lhs11).if
                            seq
                              [] > tmp2
                                memory > dddata
                                dddata.write (((lhs0).leq (lhs2))) > @
                              (e0).write (tmp2.dddata)
                              TRUE
                            seq
                              (lhs12).write (FALSE)
                              mkCopy (lhs12) > tmp3
                              (e0).write (tmp3.copy)
                              TRUE
                          mkCopy (e0) > tmp4
                          (lhs1).write (tmp4.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs3).write (3)
                          mkCopy (lhs1) > tmp5
                          (lhs13).write (tmp5.copy)
                          (lhs13).if
                            seq
                              [] > tmp6
                                memory > dddata
                                dddata.write (((lhs2).leq (lhs3))) > @
                              (e1).write (tmp6.dddata)
                              TRUE
                            seq
                              (lhs14).write (FALSE)
                              mkCopy (lhs14) > tmp7
                              (e1).write (tmp7.copy)
                              TRUE
                          mkCopy (e1) > tmp8
                          (lhs1).write (tmp8.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs4).write (4)
                          mkCopy (lhs1) > tmp9
                          (lhs15).write (tmp9.copy)
                          (lhs15).if
                            seq
                              [] > tmp10
                                memory > dddata
                                dddata.write (((lhs3).leq (lhs4))) > @
                              (e2).write (tmp10.dddata)
                              TRUE
                            seq
                              (lhs16).write (FALSE)
                              mkCopy (lhs16) > tmp11
                              (e2).write (tmp11.copy)
                              TRUE
                          mkCopy (e2) > tmp12
                          (lhs1).write (tmp12.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs5).write (4)
                          mkCopy (lhs1) > tmp13
                          (lhs17).write (tmp13.copy)
                          (lhs17).if
                            seq
                              [] > tmp14
                                memory > dddata
                                dddata.write (((lhs4).eq (lhs5))) > @
                              (e3).write (tmp14.dddata)
                              TRUE
                            seq
                              (lhs18).write (FALSE)
                              mkCopy (lhs18) > tmp15
                              (e3).write (tmp15.copy)
                              TRUE
                          mkCopy (e3) > tmp16
                          (lhs1).write (tmp16.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs6).write (3)
                          mkCopy (lhs1) > tmp17
                          (lhs19).write (tmp17.copy)
                          (lhs19).if
                            seq
                              [] > tmp18
                                memory > dddata
                                dddata.write (((lhs5).greater (lhs6))) > @
                              (e4).write (tmp18.dddata)
                              TRUE
                            seq
                              (lhs20).write (FALSE)
                              mkCopy (lhs20) > tmp19
                              (e4).write (tmp19.copy)
                              TRUE
                          mkCopy (e4) > tmp20
                          (lhs1).write (tmp20.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs7).write (4)
                          mkCopy (lhs1) > tmp21
                          (lhs21).write (tmp21.copy)
                          (lhs21).if
                            seq
                              [] > tmp22
                                memory > dddata
                                dddata.write (((lhs6).less (lhs7))) > @
                              (e5).write (tmp22.dddata)
                              TRUE
                            seq
                              (lhs22).write (FALSE)
                              mkCopy (lhs22) > tmp23
                              (e5).write (tmp23.copy)
                              TRUE
                          mkCopy (e5) > tmp24
                          (lhs1).write (tmp24.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs8).write (2)
                          mkCopy (lhs1) > tmp25
                          (lhs23).write (tmp25.copy)
                          (lhs23).if
                            seq
                              [] > tmp26
                                memory > dddata
                                dddata.write (((lhs7).greater (lhs8))) > @
                              (e6).write (tmp26.dddata)
                              TRUE
                            seq
                              (lhs24).write (FALSE)
                              mkCopy (lhs24) > tmp27
                              (e6).write (tmp27.copy)
                              TRUE
                          mkCopy (e6) > tmp28
                          (lhs1).write (tmp28.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          (lhs9).write (5)
                          mkCopy (lhs1) > tmp29
                          (lhs25).write (tmp29.copy)
                          (lhs25).if
                            seq
                              [] > tmp30
                                memory > dddata
                                dddata.write (((lhs8).less (lhs9))) > @
                              (e7).write (tmp30.dddata)
                              TRUE
                            seq
                              (lhs26).write (FALSE)
                              mkCopy (lhs26) > tmp31
                              (e7).write (tmp31.copy)
                              TRUE
                          mkCopy (e7) > tmp32
                          (lhs1).write (tmp32.copy)
                          TRUE
                        seq
                          TRUE
                      (lhs1).if
                        seq
                          [] > tmp33
                            memory > dddata
                            dddata.write ((1.neg)) > @
                          (e8).write (tmp33.dddata)
                          mkCopy (e8) > tmp34
                          (lhs10).write (tmp34.copy)
                          mkCopy (lhs1) > tmp35
                          (lhs27).write (tmp35.copy)
                          (lhs27).if
                            seq
                              [] > tmp36
                                memory > dddata
                                dddata.write (((lhs9).neq (lhs10))) > @
                              (e9).write (tmp36.dddata)
                              TRUE
                            seq
                              (lhs28).write (FALSE)
                              mkCopy (lhs28) > tmp37
                              (e9).write (tmp37.copy)
                              TRUE
                          mkCopy (e9) > tmp38
                          (lhs1).write (tmp38.copy)
                          TRUE
                        seq
                          TRUE
                      mkCopy (lhs1) > tmp39
                      (result).write (tmp39.copy)
                      returnLabel.forward 0
                      123
          tmp.write (((xcomp1)).apply raiseme)
          (tmp.@)
          (result).write (tmp.result)
          result
  apply 0 > @