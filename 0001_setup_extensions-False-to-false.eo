memory > xfalse
memory > xImportError
memory > xconnection
memory > xmigrations
memory > xmock
memory > xCryptoExtension
[] > 0001_setup_extensions
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xoperations
        memory > xUnaccentExtension
        memory > xHStoreExtension
        memory > xTrigramExtension
        memory > xBtreeGinExtension
        memory > xCreateExtension
        memory > xBtreeGistExtension
        memory > xneeds_crypto_extension
        memory > xBloomExtension
        memory > xCITextExtension
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xImportError)))
              seq
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
                (((unsupported)).apply)
              seq
                xBloomExtension.write ((((xmock).xMock)).apply)
                xBtreeGinExtension.write ((((xmock).xMock)).apply)
                xBtreeGistExtension.write ((((xmock).xMock)).apply)
                xCITextExtension.write ((((xmock).xMock)).apply)
                xCreateExtension.write ((((xmock).xMock)).apply)
                xHStoreExtension.write ((((xmock).xMock)).apply)
                xTrigramExtension.write ((((xmock).xMock)).apply)
                xUnaccentExtension.write ((((xmock).xMock)).apply)
                xneeds_crypto_extension.write (xfalse)
              xneeds_crypto_extension.write ((((xconnection).xvendor).eq "postgresql").and ((((xconnection).xfeatures).xis_postgresql_13).not))
            (((unsupported)).apply (((xmigrations).xMigration)))
              xoperations.write (((unsupported)).apply ((((xBloomExtension)).apply)) ((((xBtreeGinExtension)).apply)) ((((xBtreeGistExtension)).apply)) ((((xCITextExtension)).apply)) ((((xCreateExtension)).apply ("uuid-ossp"))) (((xneeds_crypto_extension).if (((xCryptoExtension)).apply) ((((xmock).xMock)).apply))) ((((xHStoreExtension)).apply)) ((((xTrigramExtension)).apply)) ((((xUnaccentExtension)).apply)))