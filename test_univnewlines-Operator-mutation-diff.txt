59,64c59,64
<             xDATA_TEMPLATE.write (((unsupported)).apply ("line1=1") ((("line2='this is a very long line designed to go past any default ".add "buffer limits that exist in io.py but we also want to test ").add "the uncommon case, naturally.'")) ("def line3():pass") (("line4 = '%s'".mod (xFATX))))
<             xDATA_LF.write (((("n".xjoin)).apply ((xDATA_TEMPLATE))).add "n")
<             xDATA_CR.write (((("r".xjoin)).apply ((xDATA_TEMPLATE))).add "r")
<             xDATA_CRLF.write (((("rn".xjoin)).apply ((xDATA_TEMPLATE))).add "rn")
<             xDATA_MIXED.write (((("n".xjoin)).apply ((xDATA_TEMPLATE))).add "r")
<             xDATA_SPLIT.write (((unsupported)).apply (((xx).add "n")) ((xx)) ((xDATA_TEMPLATE)))
---
>             xDATA_TEMPLATE.write (((unsupported)).apply ("line1=1") ((("line2='this is a very long line designed to go past any default ".sub "buffer limits that exist in io.py but we also want to test ").sub "the uncommon case, naturally.'")) ("def line3():pass") (("line4 = '%s'".mod (xFATX))))
>             xDATA_LF.write (((("n".xjoin)).apply ((xDATA_TEMPLATE))).sub "n")
>             xDATA_CR.write (((("r".xjoin)).apply ((xDATA_TEMPLATE))).sub "r")
>             xDATA_CRLF.write (((("rn".xjoin)).apply ((xDATA_TEMPLATE))).sub "rn")
>             xDATA_MIXED.write (((("n".xjoin)).apply ((xDATA_TEMPLATE))).sub "r")
>             xDATA_SPLIT.write (((unsupported)).apply (((xx).sub "n")) ((xx)) ((xDATA_TEMPLATE)))