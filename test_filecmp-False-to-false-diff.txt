1d0
< memory > xstdout
7a7,8
> memory > xfalse
> memory > xstdout
76c77
<                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname)) (FALSE))) ("Comparing file to itself fails"))
---
>                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname)) ((xfalse)))) ("Comparing file to itself fails"))
78c79
<                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname_same)) (FALSE))) ("Comparing file to identical file fails"))
---
>                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname_same)) ((xfalse)))) ("Comparing file to identical file fails"))
83,84c84,85
<                         bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xfilecmp).xcmp)).apply (((xself).xname)) (((xself).xname_diff)))) ("Mismatched files compare as equal"))
<                         bogusForceDataize.write ((((xself).xassertFalse)).apply (((((xfilecmp).xcmp)).apply (((xself).xname)) (((xself).xdir)))) ("File and directory compare as equal"))
---
>                         bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xfilecmp).xcmp)).apply (((xself).xname)) (((xself).xname_diff)))) ("Mismatched files compare as equal"))
>                         bogusForceDataize.write ((((xself).xassertfalse)).apply (((((xfilecmp).xcmp)).apply (((xself).xname)) (((xself).xdir)))) ("File and directory compare as equal"))
91,92c92,93
<                         xfirst_compare.write (((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname_same)) (FALSE))
<                         xsecond_compare.write (((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname_diff)) (FALSE))
---
>                         xfirst_compare.write (((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname_same)) ((xfalse)))
>                         xsecond_compare.write (((unsupported)).apply (((xfilecmp).xcmp)) (((xself).xname)) (((xself).xname_diff)) ((xfalse)))
137,138c138,139
<                         bogusForceDataize.write ((((xself).xassertTrue)).apply (((((unsupported)).apply (((xfilecmp).xcmpfiles)) (((xself).xdir)) (((xself).xdir)) ((((unsupported)).apply ("file"))) (FALSE)).eq (((unsupported)).apply ((((unsupported)).apply ("file"))) ((((unsupported)).apply)) ((((unsupported)).apply))))) ("Comparing directory to itself fails"))
<                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xfilecmp).xcmpfiles)) (((xself).xdir)) (((xself).xdir_same)) ((((unsupported)).apply ("file"))) (FALSE))) ("Comparing directory to same fails"))
---
>                         bogusForceDataize.write ((((xself).xassertTrue)).apply (((((unsupported)).apply (((xfilecmp).xcmpfiles)) (((xself).xdir)) (((xself).xdir)) ((((unsupported)).apply ("file"))) ((xfalse))).eq (((unsupported)).apply ((((unsupported)).apply ("file"))) ((((unsupported)).apply)) ((((unsupported)).apply))))) ("Comparing directory to itself fails"))
>                         bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((xfilecmp).xcmpfiles)) (((xself).xdir)) (((xself).xdir_same)) ((((unsupported)).apply ("file"))) ((xfalse)))) ("Comparing directory to same fails"))
141c142
<                         bogusForceDataize.write ((((xself).xassertFalse)).apply ((((((xfilecmp).xcmpfiles)).apply (((xself).xdir)) (((xself).xdir_same)) ((((unsupported)).apply ("file") ("file2")))).eq (((unsupported)).apply ((((unsupported)).apply ("file"))) ((((unsupported)).apply ("file2"))) ((((unsupported)).apply))))) ("Comparing mismatched directories fails"))
---
>                         bogusForceDataize.write ((((xself).xassertfalse)).apply ((((((xfilecmp).xcmpfiles)).apply (((xself).xdir)) (((xself).xdir_same)) ((((unsupported)).apply ("file") ("file2")))).eq (((unsupported)).apply ((((unsupported)).apply ("file"))) ((((unsupported)).apply ("file2"))) ((((unsupported)).apply))))) ("Comparing mismatched directories fails"))