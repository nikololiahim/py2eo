memory > xlist
memory > xRuntimeError
memory > xstr
memory > xrange
memory > xcollections
memory > xKeyError
memory > xerr
memory > xhasattr
memory > xd1
memory > xmapping_tests
memory > xMyUserDict
memory > xlen
memory > xk
memory > xD
memory > xb
memory > xG
memory > xkw
memory > xprint
memory > xset
memory > xrepr
memory > xi
memory > xF
memory > xsorted
memory > xDeprecationWarning
memory > xE
memory > xunittest
memory > xTypeError
memory > x__name__
memory > xa
[] > test_userdict
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_missing
        memory > xtest_init
        memory > xd0
        memory > xd3
        memory > xd4
        memory > xd12
        memory > xtype2test
        memory > xd5
        memory > xd2
        memory > xtest_update
        memory > xtest_all
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xd0.write (((unsupported)).apply)
            xd12.write (((unsupported)).apply ("one") (1))
            xd2.write (((unsupported)).apply ("one") (1) ("two") (2))
            xd3.write (((unsupported)).apply ("one") (1) ("two") (3) ("three") (5))
            xd4.write (((unsupported)).apply ("one") ("None: is there a None literal in the EO language?") ("two") ("None: is there a None literal in the EO language?"))
            xd5.write (((unsupported)).apply ("one") (1) ("two") (1))
            (((unsupported)).apply (((xmapping_tests).xTestHashMappingProtocol)))
              seq
                xtype2test.write ((xcollections).xUserDict)
                xtest_all.write
                  [xself]
                    memory > xuu0
                    memory > xu
                    memory > xall
                    memory > xu2
                    memory > xikeys
                    memory > xkeys
                    memory > xuu2
                    memory > xu2a
                    memory > xu0
                    memory > xuu
                    memory > xm2
                    memory > xm2a
                    memory > xu2b
                    memory > xu1
                    memory > xuu1
                    memory > xt
                    memory > xdisplay
                    memory > xu3
                    memory > xu2c
                    seq > @
                      seq
                        xu.write ((((xcollections).xUserDict)).apply)
                        xu0.write ((((xcollections).xUserDict)).apply ((xd0)))
                        xu1.write ((((xcollections).xUserDict)).apply ((xd1)))
                        xu2.write ((((xcollections).xUserDict)).apply ((xd2)))
                        xuu.write ((((xcollections).xUserDict)).apply ((xu)))
                        xuu0.write ((((xcollections).xUserDict)).apply ((xu0)))
                        xuu1.write ((((xcollections).xUserDict)).apply ((xu1)))
                        xuu2.write ((((xcollections).xUserDict)).apply ((xu2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xcollections).xUserDict)) (1) (2))) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xcollections).xUserDict)).apply ((((unsupported)).apply ((((unsupported)).apply ("one") (1))) ((((unsupported)).apply ("two") (2))))))) ((xd2)))
                        (((unsupported)).apply (((((xself).xassertWarnsRegex)).apply ((xDeprecationWarning)) ("'dict'"))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xcollections).xUserDict)) ((((unsupported)).apply ((((unsupported)).apply ("one") (1))) ((((unsupported)).apply ("two") (2))))))) ((xd2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xcollections).xUserDict)) ((((unsupported)).apply ((((unsupported)).apply ("one") (1))) ((((unsupported)).apply ("two") (2))))) (3) (5))) ((xd3)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xcollections).xUserDict).xfromkeys)).apply (((("one two".xsplit)).apply)))) ((xd4)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xcollections).xUserDict)).apply).xfromkeys)).apply (((("one two".xsplit)).apply)))) ((xd4)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xcollections).xUserDict).xfromkeys)).apply (((("one two".xsplit)).apply)) (1))) ((xd5)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((((xcollections).xUserDict)).apply).xfromkeys)).apply (((("one two".xsplit)).apply)) (1))) ((xd5)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply (((((xu1).xfromkeys)).apply (((("one two".xsplit)).apply)))) ((xu1)))))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((((xu1).xfromkeys)).apply (((("one two".xsplit)).apply)))) (((xcollections).xUserDict)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((((xu2).xfromkeys)).apply (((("one two".xsplit)).apply)))) (((xcollections).xUserDict)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xu0)))) ((((xstr)).apply ((xd0)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xu1)))) ((((xrepr)).apply ((xd1)))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xrepr)).apply ((xu2)))) ((((unsupported)).apply ("{'one': 1, 'two': 2}") ("{'two': 2, 'one': 1}"))))
                        xall.write (((unsupported)).apply ((xd0)) ((xd1)) ((xd2)) ((xu)) ((xu0)) ((xu1)) ((xu2)) ((xuu)) ((xuu0)) ((xuu1)) ((xuu2)))
                        (((unsupported)).apply ((xa)) ((xall)))
                          (((unsupported)).apply ((xb)) ((xall)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((xa).eq (xb))) (((((xlen)).apply ((xa))).eq (((xlen)).apply ((xb))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xu2)) ("one"))) (1))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xu1).x__getitem__)) ("two"))
                        xu3.write ((((xcollections).xUserDict)).apply ((xu2)))
                        (((unsupported)).apply ((((unsupported)).apply ((xu3)) ("two"))) (2))
                        (((unsupported)).apply ((((unsupported)).apply ((xu3)) ("three"))) (3))
                        (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply ((xu3)) ("three"))))))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xu3).x__delitem__)) ("three"))
                        bogusForceDataize.write ((((xu3).xclear)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu3)) ((((unsupported)).apply)))
                        xu2a.write ((((xu2).xcopy)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu2a)) ((xu2)))
                        xu2b.write (((unsupported)).apply (((xcollections).xUserDict)) (42) (23))
                        xu2c.write ((((xu2b).xcopy)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xu2b)) ((xu2c)))
                        (((unsupported)).apply (((xcollections).xUserDict)))
                          xdisplay.write
                            [xself]
                              seq > @
                                bogusForceDataize.write (((xprint)).apply ((xself)))
                        xm2.write (((xMyUserDict)).apply ((xu2)))
                        xm2a.write ((((xm2).xcopy)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xm2a)) ((xm2)))
                        (((unsupported)).apply ((((unsupported)).apply ((xm2)) ("foo"))) ("bar"))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xm2a)) ((xm2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply (((((xu2).xkeys)).apply)))) ((((xsorted)).apply (((((xd2).xkeys)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply (((((xu2).xitems)).apply)))) ((((xsorted)).apply (((((xd2).xitems)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xsorted)).apply (((((xu2).xvalues)).apply)))) ((((xsorted)).apply (((((xd2).xvalues)).apply)))))
                        (((unsupported)).apply ((xi)) (((((xu2).xkeys)).apply)))
                          seq
                            bogusForceDataize.write ((((xself).xassertIn)).apply ((xi)) ((xu2)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xi)) ((xu1)))) ((((unsupported)).apply ((xi)) ((xd1)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xi)) ((xu0)))) ((((unsupported)).apply ((xi)) ((xd0)))))
                        xt.write ((((xcollections).xUserDict)).apply)
                        bogusForceDataize.write ((((xt).xupdate)).apply ((xu2)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xt)) ((xu2)))
                        (((unsupported)).apply ((xi)) (((((xu2).xkeys)).apply)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu2).xget)).apply ((xi)))) ((((unsupported)).apply ((xu2)) ((xi)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu1).xget)).apply ((xi)))) (((((xd1).xget)).apply ((xi)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xu0).xget)).apply ((xi)))) (((((xd0).xget)).apply ((xi)))))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (20))))
                          (((unsupported)).apply ((((unsupported)).apply ((xu2)) ((xi)))) ((((xstr)).apply ((xi)))))
                        xikeys.write (((unsupported)).apply)
                        (((unsupported)).apply ((xk)) ((xu2)))
                          bogusForceDataize.write ((((xikeys).xappend)).apply ((xk)))
                        xkeys.write ((((xu2).xkeys)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xset)).apply ((xikeys)))) ((((xset)).apply ((xkeys)))))
                        xt.write ((((xcollections).xUserDict)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xt).xsetdefault)).apply ("x") (42))) (42))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ("x") ((xt)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xt).xsetdefault)).apply ("x") (23))) (42))
                        xt.write (((unsupported)).apply (((xcollections).xUserDict)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xt).xpop)).apply ("x"))) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xt).xpop)) ("x"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xt).xpop)).apply ("x") (1))) (1))
                        (((unsupported)).apply ((((unsupported)).apply ((xt)) ("x"))) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xt).xpop)).apply ("x") (1))) (42))
                        xt.write (((unsupported)).apply (((xcollections).xUserDict)) (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xt).xpopitem)).apply)) ((((unsupported)).apply ("x") (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xt).xpopitem)))
                xtest_init.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xkw)) ((((unsupported)).apply ("self") ("other") ("iterable"))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply ((((((((xcollections).xUserDict)).apply ((((unsupported)).apply ((((unsupported)).apply ((xkw)) (42)))))).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xkw)) (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((((unsupported)).apply (((xcollections).xUserDict)) ((((unsupported)).apply)) (42)).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ("dict") (42))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((((unsupported)).apply (((xcollections).xUserDict)) ((((unsupported)).apply)) ("None: is there a None literal in the EO language?")).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ("dict") ("None: is there a None literal in the EO language?"))))))
                        (((unsupported)).apply (((((xself).xassertWarnsRegex)).apply ((xDeprecationWarning)) ("'dict'"))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((((unsupported)).apply (((xcollections).xUserDict)) ((((unsupported)).apply ("a") (42)))).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ("a") (42))))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xcollections).xUserDict)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xcollections).xUserDict)) ((((unsupported)).apply)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((xcollections).xUserDict).x__init__)))
                xtest_update.write
                  [xself]
                    memory > xd
                    seq > @
                      seq
                        (((unsupported)).apply ((xkw)) ((((unsupported)).apply ("self") ("dict") ("other") ("iterable"))))
                          seq
                            xd.write ((((xcollections).xUserDict)).apply)
                            bogusForceDataize.write ((((xd).xupdate)).apply ((((unsupported)).apply ((((unsupported)).apply ((xkw)) (42))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlist)).apply (((((xd).xitems)).apply)))) ((((unsupported)).apply ((((unsupported)).apply ((xkw)) (42))))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((((xcollections).xUserDict)).apply).xupdate)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((((xcollections).xUserDict)).apply).xupdate)) ((((unsupported)).apply)) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((((xcollections).xUserDict).xupdate)))
                xtest_missing.write
                  [xself]
                    memory > xd
                    memory > x__missing__
                    memory > xg
                    memory > xf
                    memory > x__init__
                    memory > xe
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xhasattr)).apply (((xcollections).xUserDict)) ("__missing__"))) (FALSE))
                        (((unsupported)).apply (((xcollections).xUserDict)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)).apply (42))
                        xd.write (((xD)).apply ((((unsupported)).apply (1) (2) (3) (4))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) (1))) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) (3))) (4))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply (2) ((xd)))
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply (2) (((((xd).xkeys)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xd)) (2))) (42))
                        (((unsupported)).apply (((xcollections).xUserDict)))
                          x__missing__.write
                            [xself xkey]
                              seq > @
                                (((unsupported)).apply ((((xRuntimeError)).apply ((xkey)))))
                        xe.write (((xE)).apply)
                        (((unsupported)).apply ((xRuntimeError)))
                          (((unsupported)).apply ((xe)) (42))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((xerr).xargs)) ((((unsupported)).apply (42))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("e[42] didn't raise RuntimeError"))
                        (((unsupported)).apply (((xcollections).xUserDict)))
                          x__init__.write
                            [xself]
                              seq > @
                                seq
                                  (((unsupported)).apply (((xself).x__missing__)) ((((unsupported)).apply ("None: is there a None literal in the EO language?"))))
                                  bogusForceDataize.write (((((xcollections).xUserDict).x__init__)).apply ((xself)))
                        xf.write (((xF)).apply)
                        (((unsupported)).apply ((xKeyError)))
                          (((unsupported)).apply ((xf)) (42))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((xerr).xargs)) ((((unsupported)).apply (42))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("f[42] didn't raise KeyError"))
                        (((unsupported)).apply (((xcollections).xUserDict)))
                        xg.write (((xG)).apply)
                        (((unsupported)).apply ((xKeyError)))
                          (((unsupported)).apply ((xg)) (42))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (((xerr).xargs)) ((((unsupported)).apply (42))))
                          bogusForceDataize.write ((((xself).xfail)).apply ("g[42] didn't raise KeyError"))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)