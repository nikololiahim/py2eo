memory > xBadInt
memory > xtuple
memory > xFloat
memory > xgetargs_D
memory > xFloatSubclass
memory > xfalse
memory > xgetargs_w_star
memory > xgetargs_d
memory > xgetargs_et_hash
memory > xBadComplex2
memory > xULONG_MAX
memory > xcomplex
memory > xLONG_MIN
memory > xc
memory > xPY_SSIZE_T_MIN
memory > xUINT_MAX
memory > xComplexSubclass
memory > xgetargs_keyword_only
memory > xBadFloat
memory > xlocals
memory > xINT_MAX
memory > xFLT_MIN
memory > xseq
memory > xBadIndex2
memory > xgetargs_z_star
memory > xgetargs_H
memory > xValueError
memory > xgetargs_keywords
memory > xLONG_MAX
memory > xgetargs_c
memory > xBadFloat2
memory > xgetargs_C
memory > xstr
memory > xgetargs_h
memory > xc2
memory > xget_kwargs
memory > xgetargs_I
memory > xBadIndex
memory > xgetargs_y_hash
memory > xBadFloat3
memory > xrange
memory > xmath
memory > xUCHAR_MAX
memory > xgetargs_tuple
memory > xgetargs_p
memory > xgetargs_u_hash
memory > xSHRT_MAX
memory > xgetargs_L
memory > xNotImplementedError
memory > xbytearray
memory > xINT_MIN
memory > xgetargs_z_hash
memory > xgetargs_l
memory > xgetargs_i
memory > xDictSubclass
memory > xgetargs_b
memory > xgetargs_B
memory > xerr
memory > xgetargs_s_hash
memory > xgetargs_es_hash
memory > xParadox
memory > xInt
memory > xgetargs_u
memory > xgetargs_Y
memory > xgetargs_f
memory > xIndex
memory > xtype
memory > xstring
memory > xTupleSubclass
memory > xDBL_MIN
memory > xint
memory > xget_args
memory > xUSHRT_MAX
memory > xPY_SSIZE_T_MAX
memory > xgetargs_U
memory > xOverflowError
memory > xgetargs_y_star
memory > xx
memory > xi
memory > xgetargs_es
memory > xFloatSubclass2
memory > xsupport
memory > xsys
memory > xDeprecationWarning
memory > xfloat
memory > xgetargs_y
memory > xchr
memory > xBadComplex3
memory > xComplex
memory > xLookupError
memory > xdir
memory > xSystemError
memory > xIndexIntSubclass
memory > xgetattr
memory > xDBL_MAX
memory > xUnicodeEncodeError
memory > xe
memory > xgetargs_et
memory > xBadInt2
memory > xgetargs_z
memory > xname
memory > xunittest
memory > xgetargs_k
memory > xFLT_MAX
memory > xmap
memory > xgetargs_K
memory > xSHRT_MIN
memory > xgetargs_Z
memory > xIntSubclass
memory > xmemoryview
memory > xgetargs_n
memory > xgetargs_Z_hash
memory > xBadComplex
memory > xBadInt3
memory > xgetargs_s_star
memory > xComplexSubclass2
memory > xdict
memory > xgetargs_s
memory > x__name__
memory > xgetargs_S
memory > xTypeError
memory > xBadIndex3
[] > test_getargs2
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > x__complex__
        memory > xtest_f_rounding
        memory > xtest_required_args
        memory > xLARGE
        memory > xtest_b
        memory > xtest_mixed_args
        memory > xtest_keyword_args
        memory > xtest_es_hash
        memory > xtest_bad_use
        memory > xtest_u
        memory > xtest_positional_only
        memory > xtest_s_hash
        memory > xtest_c
        memory > x__index__
        memory > xtest_optional_args
        memory > xtest_C
        memory > xtest_z_hash
        memory > xtest_p
        memory > xtest_tuple
        memory > xVERY_LARGE
        memory > xtest_skipitem
        memory > xtest_U
        memory > xtest_u_hash
        memory > x_testcapi
        memory > xtest_parse_tuple_and_keywords
        memory > xtest
        memory > xtest_w_star
        memory > xtest_D
        memory > xtest_d
        memory > xtest_I
        memory > xtest_args
        memory > xtest_z
        memory > xtest_i
        memory > xtest_et
        memory > xtest_too_many_args
        memory > xtest_Z
        memory > xtest_skipitem_with_suffix
        memory > xtest_empty_keyword
        memory > xULLONG_MAX
        memory > xtest_kwargs
        memory > xtest_surrogate_keyword
        memory > xtest_L
        memory > xLLONG_MAX
        memory > xtest_l
        memory > xDBL_MAX_EXP
        memory > xtest_positional_args
        memory > xtest_s_star
        memory > xtest_y_hash
        memory > xtest_es
        memory > xtest_Y
        memory > xtest_y
        memory > xtest_f
        memory > xtest_invalid_keyword
        memory > xassertEqualWithSign
        memory > xgetargs
        memory > xtest_k
        memory > xtest_Z_hash
        memory > xtest_et_hash
        memory > xtest_B
        memory > xtest_n
        memory > xtest_K
        memory > xtest_H
        memory > xtest_h
        memory > xtest_z_star
        memory > xINF
        memory > xtest_y_star
        memory > x__float__
        memory > xtest_S
        memory > x__bool__
        memory > xtest_s
        memory > x__int__
        memory > xLLONG_MIN
        memory > xNAN
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            x_testcapi.write ((((xsupport).ximport_module)).apply ("_testcapi"))
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            xLARGE.write 2147483647
            xVERY_LARGE.write (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            xDBL_MAX_EXP.write (((xsys).xfloat_info).xmax_exp)
            xINF.write (((xfloat)).apply ("inf"))
            xNAN.write (((xfloat)).apply ("nan"))
            xLLONG_MAX.write ((((unsupported)).apply (2) (63)).sub 1)
            xLLONG_MIN.write ((((unsupported)).apply (2) (63)).neg)
            xULLONG_MAX.write ((((unsupported)).apply (2) (64)).sub 1)
            (((unsupported)).apply)
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (99))
            (((unsupported)).apply ((xint)))
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (99))
            (((unsupported)).apply)
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (1.0))
            (((unsupported)).apply)
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (TRUE))
            (((unsupported)).apply ((xint)))
              x__index__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (TRUE))
            (((unsupported)).apply)
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (99))
            (((unsupported)).apply ((xint)))
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (99))
            (((unsupported)).apply)
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (1.0))
            (((unsupported)).apply)
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (TRUE))
            (((unsupported)).apply ((xint)))
              x__int__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (TRUE))
            (((unsupported)).apply)
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (4.25))
            (((unsupported)).apply ((xfloat)))
            (((unsupported)).apply ((xfloat)))
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (4.25))
            (((unsupported)).apply)
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (687))
            (((unsupported)).apply)
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((((xFloatSubclass)).apply (4.25))))
            (((unsupported)).apply ((xfloat)))
              x__float__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((((xFloatSubclass)).apply (4.25))))
            (((unsupported)).apply)
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((4.25.add (((unsupported)).apply))))
            (((unsupported)).apply ((xcomplex)))
            (((unsupported)).apply ((xcomplex)))
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((4.25.add (((unsupported)).apply))))
            (((unsupported)).apply)
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)).apply (1.25))
            (((unsupported)).apply)
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((((xComplexSubclass)).apply ((4.25.add (((unsupported)).apply))))))
            (((unsupported)).apply ((xcomplex)))
              x__complex__.write
                [xself]
                  seq > @
                    (((unsupported)).apply ((((xComplexSubclass)).apply ((4.25.add (((unsupported)).apply))))))
            (((unsupported)).apply ((xtuple)))
            (((unsupported)).apply ((xdict)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_b.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_b)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_b)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_b)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_b)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_b)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_b)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_b)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_b)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_b)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_b)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_b)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_b)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_b)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUCHAR_MAX)) ((((xgetargs_b)).apply ((xUCHAR_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_b)) (((xUCHAR_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_b)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_b)) ((xVERY_LARGE)))
                xtest_B.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_B)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_B)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_B)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_B)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_B)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_B)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_B)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_B)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_B)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_B)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_B)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUCHAR_MAX)) ((((xgetargs_B)).apply ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_B)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUCHAR_MAX)) ((((xgetargs_B)).apply ((xUCHAR_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_B)).apply (((xUCHAR_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_B)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xUCHAR_MAX).and (xVERY_LARGE))) ((((xgetargs_B)).apply ((xVERY_LARGE)))))
                xtest_H.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_H)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_H)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_H)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_H)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_H)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_H)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_H)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_H)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_H)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_H)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_H)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUSHRT_MAX)) ((((xgetargs_H)).apply ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_H)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUSHRT_MAX)) ((((xgetargs_H)).apply ((xUSHRT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_H)).apply (((xUSHRT_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_H)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xVERY_LARGE).and (xUSHRT_MAX))) ((((xgetargs_H)).apply ((xVERY_LARGE)))))
                xtest_I.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_I)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_I)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_I)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_I)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_I)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_I)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_I)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_I)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_I)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_I)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_I)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUINT_MAX)) ((((xgetargs_I)).apply ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_I)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xUINT_MAX)) ((((xgetargs_I)).apply ((xUINT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_I)).apply (((xUINT_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_I)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xVERY_LARGE).and (xUINT_MAX))) ((((xgetargs_I)).apply ((xVERY_LARGE)))))
                xtest_k.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) ((((xIndex)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_k)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) ((((xBadIndex)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) ((((xBadIndex2)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_k)).apply ((((xBadIndex3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) ((((xInt)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_k)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) ((((xBadInt)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_k)) ((((xBadInt2)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_k)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xULONG_MAX)) ((((xgetargs_k)).apply ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_k)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xULONG_MAX)) ((((xgetargs_k)).apply ((xULONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_k)).apply (((xULONG_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_k)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xVERY_LARGE).and (xULONG_MAX))) ((((xgetargs_k)).apply ((xVERY_LARGE)))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_h.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_h)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_h)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_h)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_h)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_h)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_h)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_h)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_h)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_h)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_h)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_h)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_h)) (((xSHRT_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xSHRT_MIN)) ((((xgetargs_h)).apply ((xSHRT_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xSHRT_MAX)) ((((xgetargs_h)).apply ((xSHRT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_h)) (((xSHRT_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_h)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_h)) ((xVERY_LARGE)))
                xtest_i.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_i)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_i)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_i)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_i)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_i)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_i)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_i)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_i)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_i)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_i)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_i)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_i)) (((xINT_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xINT_MIN)) ((((xgetargs_i)).apply ((xINT_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xINT_MAX)) ((((xgetargs_i)).apply ((xINT_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_i)) (((xINT_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_i)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_i)) ((xVERY_LARGE)))
                xtest_l.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_l)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_l)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_l)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_l)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_l)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_l)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_l)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_l)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_l)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_l)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_l)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_l)) (((xLONG_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xLONG_MIN)) ((((xgetargs_l)).apply ((xLONG_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xLONG_MAX)) ((((xgetargs_l)).apply ((xLONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_l)) (((xLONG_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_l)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_l)) ((xVERY_LARGE)))
                xtest_n.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_n)) (3.14))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_n)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_n)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_n)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_n)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_n)).apply ((((xBadIndex3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_n)) ((((xInt)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_n)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_n)) ((((xBadInt)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_n)) ((((xBadInt2)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_n)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_n)) (((xPY_SSIZE_T_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xPY_SSIZE_T_MIN)) ((((xgetargs_n)).apply ((xPY_SSIZE_T_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xPY_SSIZE_T_MAX)) ((((xgetargs_n)).apply ((xPY_SSIZE_T_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_n)) (((xPY_SSIZE_T_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_n)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_n)) ((xVERY_LARGE)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_L.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_L)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_L)) ("Hello"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_L)).apply ((((xIndex)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_L)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_L)) ((((xBadIndex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_L)).apply ((((xBadIndex2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_L)).apply ((((xBadIndex3)).apply)))))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (99) ((((xgetargs_L)).apply ((((xInt)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_L)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_L)) ((((xBadInt)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_L)).apply ((((xBadInt2)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_L)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_L)) (((xLLONG_MIN).sub 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xLLONG_MIN)) ((((xgetargs_L)).apply ((xLLONG_MIN)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xLLONG_MAX)) ((((xgetargs_L)).apply ((xLLONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_L)) (((xLLONG_MAX).add 1)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_L)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_L)) ((xVERY_LARGE)))
                xtest_K.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) ((((xIndex)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_K)).apply ((((xIndexIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) ((((xBadIndex)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) ((((xBadIndex2)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_K)).apply ((((xBadIndex3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) ((((xInt)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_K)).apply ((((xIntSubclass)).apply)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) ((((xBadInt)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_K)) ((((xBadInt2)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_K)).apply ((((xBadInt3)).apply)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xULLONG_MAX)) ((((xgetargs_K)).apply ((xULLONG_MAX)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_K)).apply (0))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_K)).apply (((xULLONG_MAX).add 1)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (42) ((((xgetargs_K)).apply (42))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xVERY_LARGE).and (xULLONG_MAX))) ((((xgetargs_K)).apply ((xVERY_LARGE)))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xassertEqualWithSign.write
                  [xself xactual xexpected]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xactual)) ((xexpected)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xmath).xcopysign)).apply (1) ((xactual)))) (((((xmath).xcopysign)).apply (1) ((xexpected)))))
                xtest_f.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply (4.25))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply (4))) (4.0))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_f)) ((4.25.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((xFloat)).apply)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((xFloatSubclass)).apply (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((xFloatSubclass2)).apply (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_f)) ((((xBadFloat)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((xBadFloat2)).apply)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((xBadFloat3)).apply (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((xIndex)).apply)))) (99.0))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_f)) ((((xInt)).apply)))
                        (((unsupported)).apply ((xx)) ((((unsupported)).apply ((xFLT_MIN)) (((xFLT_MIN).neg)) ((xFLT_MAX)) (((xFLT_MAX).neg)) ((xINF)) (((xINF).neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((xx)))) ((xx)))
                        ((xFLT_MAX).less (xDBL_MAX)).if
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((xDBL_MAX)))) ((xINF)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply (((xDBL_MAX).neg)))) (((xINF).neg)))
                        ((xFLT_MIN).greater (xDBL_MIN)).if
                          seq
                            bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply ((((xgetargs_f)).apply ((xDBL_MIN)))) (0.0))
                            bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply ((((xgetargs_f)).apply (((xDBL_MIN).neg)))) ((0.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply ((((xgetargs_f)).apply (0.0))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply ((((xgetargs_f)).apply ((0.0.neg)))) ((0.0.neg)))
                        xr.write (((xgetargs_f)).apply ((xNAN)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xr)) ((xr)))
                xtest_f_rounding.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply ((((unsupported)).apply)))) ((xFLT_MAX)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_f)).apply (((((unsupported)).apply).neg)))) (((xFLT_MAX).neg)))
                xtest_d.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply (4.25))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply (4))) (4.0))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_d)) ((4.25.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((((xFloat)).apply)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((((xFloatSubclass)).apply (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((((xFloatSubclass2)).apply (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_d)) ((((xBadFloat)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((((xBadFloat2)).apply)))) (4.25))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((((xBadFloat3)).apply (7.5))))) (7.5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((((xIndex)).apply)))) (99.0))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_d)) ((((xInt)).apply)))
                        (((unsupported)).apply ((xx)) ((((unsupported)).apply ((xDBL_MIN)) (((xDBL_MIN).neg)) ((xDBL_MAX)) (((xDBL_MAX).neg)) ((xINF)) (((xINF).neg)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_d)).apply ((xx)))) ((xx)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_d)) ((((unsupported)).apply (1) ((xDBL_MAX_EXP)))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xOverflowError)) ((xgetargs_d)) ((((unsupported)).apply ((1.neg)) ((xDBL_MAX_EXP)))))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply ((((xgetargs_d)).apply (0.0))) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply ((((xgetargs_d)).apply ((0.0.neg)))) ((0.0.neg)))
                        xr.write (((xgetargs_d)).apply ((xNAN)))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xr)) ((xr)))
                xtest_D.write
                  [xself]
                    memory > xc
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((4.25.add (((unsupported)).apply))))) ((4.25.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply (4.25))) ((4.25.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply (4))) ((4.0.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((((xComplex)).apply)))) ((4.25.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((((xComplexSubclass)).apply ((7.5.add (((unsupported)).apply))))))) ((7.5.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((((xComplexSubclass2)).apply ((7.5.add (((unsupported)).apply))))))) ((7.5.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_D)) ((((xBadComplex)).apply)))
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((((xBadComplex2)).apply)))) ((4.25.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((((xBadComplex3)).apply ((7.5.add (((unsupported)).apply))))))) ((7.5.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((((xIndex)).apply)))) ((99.0.add (((unsupported)).apply))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_D)) ((((xInt)).apply)))
                        (((unsupported)).apply ((xx)) ((((unsupported)).apply ((xDBL_MIN)) (((xDBL_MIN).neg)) ((xDBL_MAX)) (((xDBL_MAX).neg)) ((xINF)) (((xINF).neg)))))
                          seq
                            xc.write (((xcomplex)).apply ((xx)) (1.0))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((xc)))) ((xc)))
                            xc.write (((xcomplex)).apply (1.0) ((xx)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_D)).apply ((xc)))) ((xc)))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply (((((xgetargs_D)).apply ((((xcomplex)).apply (0.0) (1.0)))).xreal)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply (((((xgetargs_D)).apply ((((xcomplex)).apply ((0.0.neg)) (1.0)))).xreal)) ((0.0.neg)))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply (((((xgetargs_D)).apply ((((xcomplex)).apply (1.0) (0.0)))).ximag)) (0.0))
                        bogusForceDataize.write ((((xself).xassertEqualWithSign)).apply (((((xgetargs_D)).apply ((((xcomplex)).apply (1.0) ((0.0.neg))))).ximag)) ((0.0.neg)))
            (((unsupported)).apply)
              seq
                unsupported
                x__bool__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xNotImplementedError)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              xtest_p.write
                [xself]
                  seq > @
                    seq
                      (((unsupported)).apply)
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply ((xfalse)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply ("None: is there a None literal in the EO language?"))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply (0))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply (0.0))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply ((((unsupported)).apply)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply (""))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply ((((unsupported)).apply)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply ((((unsupported)).apply)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (0) ((((xgetargs_p)).apply ((((unsupported)).apply)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply (TRUE))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply (1))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply (1.0))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply ((((unsupported)).apply)))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply ("x"))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply ((((unsupported)).apply (1))))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply ((((unsupported)).apply (1))))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply ((((unsupported)).apply (1) (2))))))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((((xgetargs_p)).apply (((xunittest).xTestCase)))))
                      bogusForceDataize.write ((((xself).xassertRaises)).apply ((xNotImplementedError)) ((xgetargs_p)) ((((xParadox)).apply)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_args.write
                  [xself]
                    memory > xret
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xret.write (((xget_args)).apply (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xtuple)))
                        xret.write (((xget_args)).apply (1) ((((unsupported)).apply ((((unsupported)).apply (2) (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply (1) (2) (3))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xtuple)))
                        xret.write (((xget_args)).apply ((((unsupported)).apply ((((unsupported)).apply (1) (2))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xtuple)))
                        xret.write (((xget_args)).apply ((((unsupported)).apply ((((xTupleSubclass)).apply ((((unsupported)).apply (1) (2))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xtuple)))
                        xret.write (((xget_args)).apply)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((xret)) ((((unsupported)).apply ((((unsupported)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xtype)).apply ((xret)))) ((((unsupported)).apply ((xtuple)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                        xret.write (((xget_args)).apply ((((unsupported)).apply ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((xret)) ((((unsupported)).apply ((((unsupported)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xtype)).apply ((xret)))) ((((unsupported)).apply ((xtuple)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                xtest_tuple.write
                  [xself]
                    memory > xret
                    memory > x__getitem__
                    memory > x__len__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xret.write (((xgetargs_tuple)).apply (1) ((((unsupported)).apply (2) (3))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply (1) (2) (3))))
                        (((unsupported)).apply)
                          seq
                            x__len__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (2))
                            x__getitem__.write
                              [xself xn]
                                seq > @
                                  (((unsupported)).apply ((xValueError)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_tuple)) (1) ((((xseq)).apply)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_kwargs.write
                  [xself]
                    memory > xret
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xret.write (((unsupported)).apply ((xget_kwargs)) (1) (2))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply ("a") (1) ("b") (2))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xdict)))
                        xret.write (((unsupported)).apply ((xget_kwargs)) (1) ((((unsupported)).apply ((((unsupported)).apply ("b") (2) ("c") (3))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply ("a") (1) ("b") (2) ("c") (3))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xdict)))
                        xret.write (((xget_kwargs)).apply ((((unsupported)).apply ((((xDictSubclass)).apply ((((unsupported)).apply ("a") (1) ("b") (2))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xret)) ((((unsupported)).apply ("a") (1) ("b") (2))))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xret)))) ((xdict)))
                        xret.write (((xget_kwargs)).apply)
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((xret)) ((((unsupported)).apply ((((unsupported)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xtype)).apply ((xret)))) ((((unsupported)).apply ((xdict)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                        xret.write (((xget_kwargs)).apply ((((unsupported)).apply ((((unsupported)).apply)))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((xret)) ((((unsupported)).apply ((((unsupported)).apply)) ("None: is there a None literal in the EO language?"))))
                        bogusForceDataize.write ((((xself).xassertIn)).apply ((((xtype)).apply ((xret)))) ((((unsupported)).apply ((xdict)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                xtest_positional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_keywords)).apply ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) (6))))) ((((unsupported)).apply (7) (8) (9))) (10))) ((((unsupported)).apply (1) (2) (3) (4) (5) (6) (7) (8) (9) (10))))
                xtest_mixed_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keywords)) ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) (6))))) ((((unsupported)).apply (7) (8) (9))) (10))) ((((unsupported)).apply (1) (2) (3) (4) (5) (6) (7) (8) (9) (10))))
                xtest_keyword_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keywords)) ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) (6))))) ((((unsupported)).apply (7) (8) (9))) (10))) ((((unsupported)).apply (1) (2) (3) (4) (5) (6) (7) (8) (9) (10))))
                xtest_optional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keywords)) ((((unsupported)).apply (1) (2))) (3) (10))) ((((unsupported)).apply (1) (2) (3) ((1.neg)) ((1.neg)) ((1.neg)) ((1.neg)) ((1.neg)) ((1.neg)) (10))))
                xtest_required_args.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xTypeError)))
                        (((unsupported)).apply ((xgetargs_keywords)) ((((unsupported)).apply (1) (2))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xerr)))) ("function missing required argument 'arg2' (pos 2)"))
                        bogusForceDataize.write ((((xself).xfail)).apply ("TypeError should have been raised"))
                xtest_too_many_args.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xTypeError)))
                        bogusForceDataize.write (((xgetargs_keywords)).apply ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) (6))))) ((((unsupported)).apply (7) (8) (9))) (10) (111))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xerr)))) ("function takes at most 5 arguments (6 given)"))
                        bogusForceDataize.write ((((xself).xfail)).apply ("TypeError should have been raised"))
                xtest_invalid_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xTypeError)))
                        (((unsupported)).apply ((xgetargs_keywords)) ((((unsupported)).apply (1) (2))) (3) (10) (666))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xerr)))) ("'arg666' is an invalid keyword argument for this function"))
                        bogusForceDataize.write ((((xself).xfail)).apply ("TypeError should have been raised"))
                xtest_surrogate_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xTypeError)))
                        bogusForceDataize.write (((xgetargs_keywords)).apply ((((unsupported)).apply (1) (2))) (3) ((((unsupported)).apply (4) ((((unsupported)).apply (5) (6))))) ((((unsupported)).apply (7) (8) (9))) ((((unsupported)).apply ((((unsupported)).apply ("uDC80") (10))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xerr)))) ("'udc80' is an invalid keyword argument for this function"))
                        bogusForceDataize.write ((((xself).xfail)).apply ("TypeError should have been raised"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_positional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_keyword_only)).apply (1) (2))) ((((unsupported)).apply (1) (2) ((1.neg)))))
                xtest_mixed_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keyword_only)) (1) (2) (3))) ((((unsupported)).apply (1) (2) (3))))
                xtest_keyword_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keyword_only)) (1) (2) (3))) ((((unsupported)).apply (1) (2) (3))))
                xtest_optional_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keyword_only)) (1) (2))) ((((unsupported)).apply (1) (2) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keyword_only)) (1) (3))) ((((unsupported)).apply (1) ((1.neg)) (3))))
                xtest_required_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_keyword_only)).apply (1))) ((((unsupported)).apply (1) ((1.neg)) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xgetargs_keyword_only)) (1))) ((((unsupported)).apply (1) ((1.neg)) ((1.neg)))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function missing required argument 'required' (pos 1)"))))
                          (((unsupported)).apply ((xgetargs_keyword_only)) (2))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function missing required argument 'required' (pos 1)"))))
                          (((unsupported)).apply ((xgetargs_keyword_only)) (3))
                xtest_too_many_args.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at most 2 positional arguments (3 given)"))))
                          bogusForceDataize.write (((xgetargs_keyword_only)).apply (1) (2) (3))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at most 3 arguments (4 given)"))))
                          (((unsupported)).apply ((xgetargs_keyword_only)) (1) (2) (3) (5))
                xtest_invalid_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("'monster' is an invalid keyword argument for this function"))))
                        (((unsupported)).apply ((xgetargs_keyword_only)) (1) (2) (666))
                xtest_surrogate_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("'udc80' is an invalid keyword argument for this function"))))
                        bogusForceDataize.write (((xgetargs_keyword_only)).apply (1) (2) ((((unsupported)).apply ((((unsupported)).apply ("uDC80") (10))))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                (((unsupported)).apply)
                xtest_positional_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xself).xgetargs)).apply (1) (2) (3))) ((((unsupported)).apply (1) (2) (3))))
                xtest_mixed_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xself).xgetargs)) (1) (2) (3))) ((((unsupported)).apply (1) (2) (3))))
                xtest_optional_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xself).xgetargs)).apply (1) (2))) ((((unsupported)).apply (1) (2) ((1.neg)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (((xself).xgetargs)) (1) (3))) ((((unsupported)).apply (1) ((1.neg)) (3))))
                xtest_required_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xself).xgetargs)).apply (1))) ((((unsupported)).apply (1) ((1.neg)) ((1.neg)))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          bogusForceDataize.write ((((xself).xgetargs)).apply)
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          (((unsupported)).apply (((xself).xgetargs)) (3))
                xtest_empty_keyword.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("'' is an invalid keyword argument for this function"))))
                        bogusForceDataize.write ((((xself).xgetargs)).apply (1) (2) ((((unsupported)).apply ((((unsupported)).apply ("") (666))))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_c.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_c)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_c)).apply ("a"))) (97))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_c)).apply ((((xbytearray)).apply ("a"))))) (97))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_c)) ((((xmemoryview)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_c)) ("s"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_c)) (97))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_c)) ("None: is there a None literal in the EO language?"))
                xtest_y.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_y)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y)) ("None: is there a None literal in the EO language?"))
                xtest_y_star.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y_star)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y_star)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y_star)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y_star)).apply ((((xbytearray)).apply ("bytearray"))))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y_star)).apply ((((xmemoryview)).apply ("memoryview"))))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y_star)) ("None: is there a None literal in the EO language?"))
                xtest_y_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y_hash)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y_hash)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_y_hash)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y_hash)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y_hash)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_y_hash)) ("None: is there a None literal in the EO language?"))
                xtest_w_star.write
                  [xself]
                    memory > xbuf
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_w_star)) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_w_star)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_w_star)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_w_star)) ((((xmemoryview)).apply ("bytes"))))
                        xbuf.write (((xbytearray)).apply ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_w_star)).apply ((xbuf)))) ("[ytearra]"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply ("[ytearra]"))))
                        xbuf.write (((xbytearray)).apply ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_w_star)).apply ((((xmemoryview)).apply ((xbuf)))))) ("[emoryvie]"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply ("[emoryvie]"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_w_star)) ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_C.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_C)) ("abc"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_C)).apply ("a"))) (97))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_C)).apply ("u20ac"))) (8364))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_C)).apply ("U0001f40d"))) (128013))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_C)) ("a"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_C)) ((((xbytearray)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_C)) ((((xmemoryview)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_C)) (97))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_C)) ("None: is there a None literal in the EO language?"))
                xtest_s.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_s)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s)) ("None: is there a None literal in the EO language?"))
                xtest_s_star.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_star)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_star)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_star)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_star)).apply ((((xbytearray)).apply ("bytearray"))))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_star)).apply ((((xmemoryview)).apply ("memoryview"))))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s_star)) ("None: is there a None literal in the EO language?"))
                xtest_s_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_hash)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_hash)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_s_hash)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s_hash)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s_hash)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_s_hash)) ("None: is there a None literal in the EO language?"))
                xtest_z.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_z)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_z)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_z)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_z)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xgetargs_z)).apply ("None: is there a None literal in the EO language?"))))
                xtest_z_star.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_star)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_star)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_star)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_star)).apply ((((xbytearray)).apply ("bytearray"))))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_star)).apply ((((xmemoryview)).apply ("memoryview"))))) ("memoryview"))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xgetargs_z_star)).apply ("None: is there a None literal in the EO language?"))))
                xtest_z_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_hash)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_hash)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_z_hash)).apply ("bytes"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_z_hash)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_z_hash)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xgetargs_z_hash)).apply ("None: is there a None literal in the EO language?"))))
                xtest_es.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es)).apply ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeEncodeError)) ((xgetargs_es)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xLookupError)) ((xgetargs_es)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es)) ("bytes") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es)) ((((xbytearray)).apply ("bytearray"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es)) ((((xmemoryview)).apply ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es)) ("nul:0") ("latin1"))
                xtest_et.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et)).apply ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeEncodeError)) ((xgetargs_et)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xLookupError)) ((xgetargs_et)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et)).apply ("bytes") ("latin1"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et)).apply ((((xbytearray)).apply ("bytearray"))) ("latin1"))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et)) ((((xmemoryview)).apply ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et)) ("nul:0") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et)) ("nul:0") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et)) ((((xbytearray)).apply ("nul:0"))) ("latin1"))
                xtest_es_hash.write
                  [xself]
                    memory > xbuf
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es_hash)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es_hash)).apply ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeEncodeError)) ((xgetargs_es_hash)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xLookupError)) ((xgetargs_es_hash)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es_hash)) ("bytes") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es_hash)) ((((xbytearray)).apply ("bytearray"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es_hash)) ((((xmemoryview)).apply ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_es_hash)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es_hash)).apply ("nul:0") ("latin1"))) ("nul:0"))
                        xbuf.write (((xbytearray)).apply (("x".mul 8)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es_hash)).apply ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply ("abcxe9x00xxx"))))
                        xbuf.write (((xbytearray)).apply (("x".mul 5)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_es_hash)).apply ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply ("abcxe9x00"))))
                        xbuf.write (((xbytearray)).apply (("x".mul 4)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_es_hash)) ("abcxe9") ("latin1") ((xbuf)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply (("x".mul 4)))))
                        xbuf.write (((xbytearray)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_es_hash)) ("abcxe9") ("latin1") ((xbuf)))
                xtest_et_hash.write
                  [xself]
                    memory > xbuf
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("abcxe9"))) ("abcxc3xa9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("abcxe9") ("latin1"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xUnicodeEncodeError)) ((xgetargs_et_hash)) ("abcxe9") ("ascii"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xLookupError)) ((xgetargs_et_hash)) ("abcxe9") ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("bytes") ("latin1"))) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ((((xbytearray)).apply ("bytearray"))) ("latin1"))) ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et_hash)) ((((xmemoryview)).apply ("memoryview"))) ("latin1"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_et_hash)) ("None: is there a None literal in the EO language?") ("latin1"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("nul:0") ("latin1"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("nul:0") ("latin1"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ((((xbytearray)).apply ("nul:0"))) ("latin1"))) ("nul:0"))
                        xbuf.write (((xbytearray)).apply (("x".mul 8)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply ("abcxe9x00xxx"))))
                        xbuf.write (((xbytearray)).apply (("x".mul 5)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_et_hash)).apply ("abcxe9") ("latin1") ((xbuf)))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply ("abcxe9x00"))))
                        xbuf.write (((xbytearray)).apply (("x".mul 4)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_et_hash)) ("abcxe9") ("latin1") ((xbuf)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xbuf)) ((((xbytearray)).apply (("x".mul 4)))))
                        xbuf.write (((xbytearray)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_et_hash)) ("abcxe9") ("latin1") ((xbuf)))
                xtest_u.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_u)).apply ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_u)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u)) ("None: is there a None literal in the EO language?"))
                xtest_u_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_u_hash)).apply ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_u_hash)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u_hash)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u_hash)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u_hash)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_u_hash)) ("None: is there a None literal in the EO language?"))
                xtest_Z.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_Z)).apply ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xgetargs_Z)) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Z)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Z)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Z)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xgetargs_Z)).apply ("None: is there a None literal in the EO language?"))))
                xtest_Z_hash.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_Z_hash)).apply ("abcxe9"))) ("abcxe9"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xgetargs_Z_hash)).apply ("nul:0"))) ("nul:0"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Z_hash)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Z_hash)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Z_hash)) ((((xmemoryview)).apply ("memoryview"))))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply ((((xgetargs_Z_hash)).apply ("None: is there a None literal in the EO language?"))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_S.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xobj.write "bytes"
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xgetargs_S)).apply ((xobj)))) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_S)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_S)) ("str"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_S)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_S)) ((((xmemoryview)).apply ((xobj)))))
                xtest_Y.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xobj.write (((xbytearray)).apply ("bytearray"))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xgetargs_Y)).apply ((xobj)))) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Y)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Y)) ("str"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Y)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_Y)) ((((xmemoryview)).apply ((xobj)))))
                xtest_U.write
                  [xself]
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xobj.write "str"
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xgetargs_U)).apply ((xobj)))) ((xobj)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_U)) ("bytes"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_U)) ((((xbytearray)).apply ("bytearray"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xgetargs_U)) ("None: is there a None literal in the EO language?"))
            (((unsupported)).apply (((xunittest).xTestCase)))
              xtest.write
                [xself]
                  seq > @
                    bogusForceDataize.write ((((xself).xassertEqual)).apply (((((x_testcapi).xargparsing)).apply ("Hello") ("World"))) (1))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_skipitem.write
                  [xself]
                    memory > xc
                    memory > xwhen_skipped
                    memory > xoptional_format
                    memory > xs
                    memory > xkeywords
                    memory > xwhen_not_skipped
                    memory > xempty_tuple
                    memory > xmessage
                    memory > xtuple_1
                    memory > xformat
                    memory > xdict_b
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xempty_tuple.write (((unsupported)).apply)
                        xtuple_1.write (((unsupported)).apply (0))
                        xdict_b.write (((unsupported)).apply ("b") (1))
                        xkeywords.write (((unsupported)).apply ("a") ("b"))
                        (((unsupported)).apply ((xi)) ((((xrange)).apply (32) (127))))
                          seq
                            xc.write (((xchr)).apply ((xi)))
                            (((unsupported)).apply ((xc)) ("()e|$")).if
                              (((unsupported)).apply)
                            xformat.write ((xc).add "i")
                            (((unsupported)).apply ((xSystemError)) ((xTypeError)))
                              seq
                                bogusForceDataize.write ((((x_testcapi).xparse_tuple_and_keywords)).apply ((xtuple_1)) ((xdict_b)) ((xformat)) ((xkeywords)))
                                xwhen_not_skipped.write (xfalse)
                              seq
                                xs.write "argument 1 (impossible<bad format char>)"
                                xwhen_not_skipped.write ((((xstr)).apply ((xe))).eq (xs))
                              xwhen_not_skipped.write (xfalse)
                            xoptional_format.write ("|".add (xformat))
                            (((unsupported)).apply ((xSystemError)))
                              seq
                                bogusForceDataize.write ((((x_testcapi).xparse_tuple_and_keywords)).apply ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                                xwhen_skipped.write (xfalse)
                              seq
                                xs.write ((("impossible<bad format char>: '{}'".xformat)).apply ((xformat)))
                                xwhen_skipped.write ((((xstr)).apply ((xe))).eq (xs))
                            xmessage.write ((("test_skipitem_parity: detected mismatch between convertsimple and skipitem for format unit '{}' ({}), not skipped {}, skipped {}".xformat)).apply ((xc)) ((xi)) ((xwhen_skipped)) ((xwhen_not_skipped)))
                            bogusForceDataize.write ((((xself).xassertIs)).apply ((xwhen_skipped)) ((xwhen_not_skipped)) ((xmessage)))
                xtest_skipitem_with_suffix.write
                  [xself]
                    memory > xsupported
                    memory > xparse
                    memory > xf
                    memory > xoptional_format
                    memory > xkeywords
                    memory > xdict_b
                    memory > xempty_tuple
                    memory > xtuple_1
                    seq > @
                      seq
                        xparse.write ((x_testcapi).xparse_tuple_and_keywords)
                        xempty_tuple.write (((unsupported)).apply)
                        xtuple_1.write (((unsupported)).apply (0))
                        xdict_b.write (((unsupported)).apply ("b") (1))
                        xkeywords.write (((unsupported)).apply ("a") ("b"))
                        xsupported.write (((unsupported)).apply ("s#") ("s*") ("z#") ("z*") ("u#") ("Z#") ("y#") ("y*") ("w#") ("w*"))
                        (((unsupported)).apply ((xc)) (((xstring).xascii_letters)))
                          (((unsupported)).apply ((xc2)) ("#*"))
                            seq
                              xf.write ((xc).add (xc2))
                              (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xf)))))
                                seq
                                  xoptional_format.write (("|".add (xf)).add "i")
                                  (((unsupported)).apply ((xf)) ((xsupported))).if
                                    bogusForceDataize.write (((xparse)).apply ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                                    (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSystemError)) ("impossible<bad format char>"))))
                                      bogusForceDataize.write (((xparse)).apply ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                        (((unsupported)).apply ((xc)) ((((xmap)).apply ((xchr)) ((((xrange)).apply (32) (128))))))
                          seq
                            xf.write ("e".add (xc))
                            xoptional_format.write (("|".add (xf)).add "i")
                            (((unsupported)).apply ((((unsupported)).apply (((xself).xsubTest)) ((xf)))))
                              (((unsupported)).apply ((xc)) ("st")).if
                                bogusForceDataize.write (((xparse)).apply ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
                                (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSystemError)) ("impossible<bad format char>"))))
                                  bogusForceDataize.write (((xparse)).apply ((xempty_tuple)) ((xdict_b)) ((xoptional_format)) ((xkeywords)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_parse_tuple_and_keywords.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply)) (42) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply)) ("") (42))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply)) ("") (((((unsupported)).apply ("")).mul 42)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply)) ("") ((((unsupported)).apply (42))))
                xtest_bad_use.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("||O") ((((unsupported)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply (1) (2))) ((((unsupported)).apply)) ("|O|O") ((((unsupported)).apply ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply ("a") (1))) ("$$O") ((((unsupported)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply ("a") (1) ("b") (2))) ("$O$O") ((((unsupported)).apply ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply ("a") (1))) ("$|O") ((((unsupported)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply ("a") (1) ("b") (2))) ("$O|O") ((((unsupported)).apply ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("|O") ((((unsupported)).apply ("a") ("b"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("|OO") ((((unsupported)).apply ("a"))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply)) ("|$O") ((((unsupported)).apply (""))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSystemError)) (((x_testcapi).xparse_tuple_and_keywords)) ((((unsupported)).apply)) ((((unsupported)).apply)) ("|OO") ((((unsupported)).apply ("a") (""))))
                xtest_positional_only.write
                  [xself]
                    memory > xparse
                    seq > @
                      seq
                        xparse.write ((x_testcapi).xparse_tuple_and_keywords)
                        bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1) (2) (3))) ((((unsupported)).apply)) ("OOO") ((((unsupported)).apply ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply ("a") (3))) ("OOO") ((((unsupported)).apply ("") ("") ("a"))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at least 2 positional arguments (1 given)"))))
                          bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply ("a") (3))) ("OOO") ((((unsupported)).apply ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("O|OO") ((((unsupported)).apply ("") ("") ("a"))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply)) ((((unsupported)).apply)) ("O|OO") ((((unsupported)).apply ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1) (2))) ((((unsupported)).apply ("a") (3))) ("OO$O") ((((unsupported)).apply ("") ("") ("a"))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes exactly 2 positional arguments (1 given)"))))
                          bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply ("a") (3))) ("OO$O") ((((unsupported)).apply ("") ("") ("a"))))
                        bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("O|O$O") ((((unsupported)).apply ("") ("") ("a"))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("function takes at least 1 positional argument (0 given)"))))
                          bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply)) ((((unsupported)).apply)) ("O|O$O") ((((unsupported)).apply ("") ("") ("a"))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSystemError)) ("Empty parameter name after $"))))
                          bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("O|$OO") ((((unsupported)).apply ("") ("") ("a"))))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xSystemError)) ("Empty keyword"))))
                          bogusForceDataize.write (((xparse)).apply ((((unsupported)).apply (1))) ((((unsupported)).apply)) ("O|OO") ((((unsupported)).apply ("") ("a") (""))))
            (((unsupported)).apply (((xunittest).xTestCase)))
              bogusForceDataize.write ((((((xlocals)).apply).xupdate)).apply ((((unsupported)).apply ((((unsupported)).apply ((xname)) ((((xgetattr)).apply ((x_testcapi)) ((xname)))))) ((xname)) ((((xdir)).apply ((x_testcapi)))) ((((((xname).xstartswith)).apply ("test_")).and ((((xname).xendswith)).apply ("_code")))))))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)