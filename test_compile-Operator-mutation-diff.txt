223c223
<                       bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSyntaxError)) ((xcompile)) ("1+*3") ("filename") ("exec"))
---
>                       bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSyntaxError)) ((xcompile)) ("1-*3") ("filename") ("exec"))
297c297
<                         xlongexpr.write ("x = x or ".add ("-x".mul 2500))
---
>                         xlongexpr.write ("x = x or ".sub ("-x".mul 2500))
311c311
<                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSyntaxError)) ((xeval)) ("2.0e+"))
---
>                         bogusForceDataize.write ((((xself).xassertRaises)).apply ((xSyntaxError)) ((xeval)) ("2.0e-"))
327c327
<                         xs256.write ((("".xjoin)).apply ((((((unsupported)).apply ("n")).mul 256).add (((unsupported)).apply ("spam")))))
---
>                         xs256.write ((("".xjoin)).apply ((((((unsupported)).apply ("n")).mul 256).sub (((unsupported)).apply ("spam")))))
370c370
<                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("-".add (xall_one_bits))))) (((((unsupported)).apply).neg)))
---
>                             bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("-".sub (xall_one_bits))))) (((((unsupported)).apply).neg)))
375c375
<                               bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("-".add (xall_one_bits))))) (((((unsupported)).apply).neg)))
---
>                               bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xeval)).apply (("-".sub (xall_one_bits))))) (((((unsupported)).apply).neg)))
392c392
<                           xa.write ((((unsupported)).apply))
---
>                           xa.write ((((unsupported)).apply).neg)
394c394
<                           xc.write ((((unsupported)).apply))
---
>                           xc.write ((((unsupported)).apply).neg)
396c396
<                           xe.write ((((unsupported)).apply))
---
>                           xe.write ((((unsupported)).apply).neg)
398c398
<                           xg.write ((((unsupported)).apply))
---
>                           xg.write ((((unsupported)).apply).neg)
415c415
<                         xstmts.write (((unsupported)).apply ("None = 0") ("None += 0") ("__builtins__.None = 0") ("def None(): pass") ("class None: pass") ("(a, None) = 0, 0") ("for None in range(10): pass") ("def f(None): pass") ("import None") ("import x as None") ("from x import None") ("from x import y as None"))
---
>                         xstmts.write (((unsupported)).apply ("None = 0") ("None -= 0") ("__builtins__.None = 0") ("def None(): pass") ("class None: pass") ("(a, None) = 0, 0") ("for None in range(10): pass") ("def f(None): pass") ("import None") ("import x as None") ("from x import None") ("from x import y as None"))
666,672c666,672
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 + 2"))
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("n1 + 2"))
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 + 2n"))
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 + 2nn"))
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 + 2ttn"))
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 + 2ttn        "))
<                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 + 2 # one plus two"))
---
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 - 2"))
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("n1 - 2"))
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 - 2n"))
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 - 2nn"))
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 - 2ttn"))
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 - 2ttn        "))
>                         bogusForceDataize.write ((((xself).xcompile_single)).apply ("1 - 2 # one plus two"))
738c738
<                                 xexpect_ok.write ((xprefix).add ((xrepeated).mul (xsuccess_depth)))
---
>                                 xexpect_ok.write ((xprefix).sub ((xrepeated).mul (xsuccess_depth)))
740,741c740,741
<                                 xbroken.write ((xprefix).add ((xrepeated).mul (xfail_depth)))
<                                 xdetails.write ((("Compiling ({!r} + {!r} * {})".xformat)).apply ((xprefix)) ((xrepeated)) ((xfail_depth)))
---
>                                 xbroken.write ((xprefix).sub ((xrepeated).mul (xfail_depth)))
>                                 xdetails.write ((("Compiling ({!r} - {!r} * {})".xformat)).apply ((xprefix)) ((xrepeated)) ((xfail_depth)))
850c850
<                         bogusForceDataize.write (((xcheck_different_constants)).apply ((0.0)) ((0.0.neg)))
---
>                         bogusForceDataize.write (((xcheck_different_constants)).apply ((0.0.neg)) ((0.0.neg)))
854c854
<                         (((unsupported)).apply ((((unsupported)).apply ((xf1)) ((xf2)))) ((((unsupported)).apply ((((unsupported)).apply (((((unsupported)).apply))))) ((((unsupported)).apply (((((unsupported)).apply).neg)))))))
---
>                         (((unsupported)).apply ((((unsupported)).apply ((xf1)) ((xf2)))) ((((unsupported)).apply ((((unsupported)).apply (((((unsupported)).apply).neg)))) ((((unsupported)).apply (((((unsupported)).apply).neg)))))))
856c856
<                         bogusForceDataize.write ((((xself).xcheck_constant)).apply ((xf1)) (((((unsupported)).apply))))
---
>                         bogusForceDataize.write ((((xself).xcheck_constant)).apply ((xf1)) (((((unsupported)).apply).neg)))
858c858
<                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xf1)).apply)))) ((((xrepr)).apply (((((unsupported)).apply))))))
---
>                         bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((((xf1)).apply)))) ((((xrepr)).apply (((((unsupported)).apply).neg)))))
964c964
<                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x and ".mul ((xself).xN)).add "x")))
---
>                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x and ".mul ((xself).xN)).sub "x")))
968c968
<                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x or ".mul ((xself).xN)).add "x")))
---
>                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x or ".mul ((xself).xN)).sub "x")))
972c972
<                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x and x or ".mul ((xself).xN)).add "x")))
---
>                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x and x or ".mul ((xself).xN)).sub "x")))
976c976
<                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x < ".mul ((xself).xN)).add "x")))
---
>                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x < ".mul ((xself).xN)).sub "x")))
980c980
<                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x if x else ".mul ((xself).xN)).add "x")))
---
>                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x if x else ".mul ((xself).xN)).sub "x")))
984c984
<                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x + ".mul ((xself).xN)).add "x")))
---
>                       bogusForceDataize.write ((((xself).xcheck_stack_size)).apply ((("x - ".mul ((xself).xN)).sub "x")))
1010c1010
<                                 xscript.write ("def func():n".add ((xi).mul (xsnippet)))
---
>                                 xscript.write ("def func():n".sub ((xi).mul (xsnippet)))
1012c1012
<                                   xscript.write ("async ".add (xscript))
---
>                                   xscript.write ("async ".sub (xscript))