memory > xstr
memory > xsuper
memory > xargs
memory > xgetattr
memory > xattr
memory > xmodels
memory > xkwargs
memory > xisinstance
memory > xTypeError
memory > xall
memory > xCheckMessage
memory > xsettings
memory > xint
[] > messages
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xCRITICAL
        memory > x__str__
        memory > xis_silenced
        memory > xis_serious
        memory > xINFO
        memory > xDEBUG
        memory > xWARNING
        memory > x__init__
        memory > xERROR
        memory > x__eq__
        memory > x__repr__
        seq > @
          seq
            xDEBUG.write 10
            xINFO.write 20
            xWARNING.write 30
            xERROR.write 40
            xCRITICAL.write 50
            (((unsupported)).apply)
              seq
                x__init__.write
                  [xself xlevel xmsg xhint xobj xid]
                    seq > @
                      (((unsupported)).apply)
                        ((((xisinstance)).apply ((xlevel)) ((xint))).not).if
                          (((unsupported)).apply ((((xTypeError)).apply ("The first argument should be level."))))
                        (((unsupported)).apply (((xself).xlevel)) ((xlevel)))
                        (((unsupported)).apply (((xself).xmsg)) ((xmsg)))
                        (((unsupported)).apply (((xself).xhint)) ((xhint)))
                        (((unsupported)).apply (((xself).xobj)) ((xobj)))
                        (((unsupported)).apply (((xself).xid)) ((xid)))
                x__eq__.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply (((((xisinstance)).apply ((xother)) (((xself).x__class__))).and (((xall)).apply ((((unsupported)).apply (((((xgetattr)).apply ((xself)) ((xattr))).eq (((xgetattr)).apply ((xother)) ((xattr))))) ((xattr)) ((((unsupported)).apply ("level") ("msg") ("hint") ("obj") ("id")))))))))
                x__str__.write
                  [xself]
                    memory > xhint
                    memory > xid
                    memory > xobj
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply (((xself).xobj)) ("None: is there a None literal in the EO language?")).if
                          xobj.write "?"
                          (((xisinstance)).apply (((xself).xobj)) ((((xmodels).xbase).xModelBase))).if
                            xobj.write ((((xself).xobj).x_meta).xlabel)
                            xobj.write (((xstr)).apply (((xself).xobj)))
                        xid.write (((xself).xid).if ("(%s) ".mod ((xself).xid)) "")
                        xhint.write (((xself).xhint).if ("ntHINT: %s".mod ((xself).xhint)) "")
                        (((unsupported)).apply (("%s: %s%s%s".mod (((unsupported)).apply ((xobj)) ((xid)) (((xself).xmsg)) ((xhint))))))
                x__repr__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (("<%s: level=%r, msg=%r, hint=%r, obj=%r, id=%r>".mod (((unsupported)).apply ((((xself).x__class__).x__name__)) (((xself).xlevel)) (((xself).xmsg)) (((xself).xhint)) (((xself).xobj)) (((xself).xid))))))
                xis_serious.write
                  [xself xlevel]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((xself).xlevel).geq (xlevel))))
                xis_silenced.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xself).xid)) (((xsettings).xSILENCED_SYSTEM_CHECKS)))))
            (((unsupported)).apply ((xCheckMessage)))
              x__init__.write
                [xself]
                  seq > @
                    (((unsupported)).apply)
                      bogusForceDataize.write ((((xsuper).x__init__)).apply ((xDEBUG)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
            (((unsupported)).apply ((xCheckMessage)))
              x__init__.write
                [xself]
                  seq > @
                    (((unsupported)).apply)
                      bogusForceDataize.write ((((xsuper).x__init__)).apply ((xINFO)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
            (((unsupported)).apply ((xCheckMessage)))
              x__init__.write
                [xself]
                  seq > @
                    (((unsupported)).apply)
                      bogusForceDataize.write ((((xsuper).x__init__)).apply ((xWARNING)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
            (((unsupported)).apply ((xCheckMessage)))
              x__init__.write
                [xself]
                  seq > @
                    (((unsupported)).apply)
                      bogusForceDataize.write ((((xsuper).x__init__)).apply ((xERROR)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
            (((unsupported)).apply ((xCheckMessage)))
              x__init__.write
                [xself]
                  seq > @
                    (((unsupported)).apply)
                      bogusForceDataize.write ((((xsuper).x__init__)).apply ((xCRITICAL)) ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))