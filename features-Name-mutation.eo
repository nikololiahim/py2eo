memory > xcount
memory > xset
memory > xcursor
memory > xProgrammingError
[] > features
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xsupports_aggregate_filter_clause
        memory > xignores_unnecessary_order_by_in_subqueries
        memory > xignores_table_name_case
        memory > xsupports_covering_indexes
        memory > xhas_native_duration_field
        memory > xdjango_test_skips
        memory > xcan_introspect_default
        memory > xsupports_select_difference
        memory > xbare_select_suffix
        memory > xempty_fetchmany_value
        memory > xonly_supports_unbounded_with_preceding_and_following
        memory > xmax_query_params
        memory > xallows_multiple_constraints_on_same_fields
        memory > xsupports_json_field_contains
        memory > ximplied_column_null
        memory > xsupports_select_intersection
        memory > xtruncates_names
        memory > xtest_now_utc_template
        memory > xgreatest_least_ignores_nulls
        memory > xsupports_update_conflicts_with_target
        memory > xsupports_logical_xor
        memory > xsupported_explain_formats
        memory > xhas_json_object_function
        memory > xsupports_combined_alters
        memory > xsupports_unspecified_pk
        memory > xcan_return_columns_from_insert
        memory > xselect_for_update_of_column
        memory > xnulls_order_largest
        memory > xsupports_ignore_conflicts
        memory > xorder_by_nulls_first
        memory > xsupports_callproc_kwargs
        memory > xhas_select_for_update_nowait
        memory > xhas_select_for_update_skip_locked
        memory > xsupports_json_field
        memory > xsupports_update_conflicts
        memory > xsupports_transactions
        memory > xcan_return_rows_from_bulk_insert
        memory > xsupports_over_clause
        memory > xcan_introspect_foreign_keys
        memory > xsupports_select_for_update_with_limit
        memory > xclosed_cursor_error_class
        memory > xsupports_regex_backreferencing
        memory > xrelated_fields_match_type
        memory > xsupports_sequence_reset
        memory > xsupports_partial_indexes
        memory > xcan_use_chunked_reads
        memory > xsupports_timezones
        memory > xsupports_cast_with_precision
        memory > xatomic_transactions
        memory > xsupports_default_in_lead_lag
        memory > xsupports_foreign_keys
        memory > xhas_real_datatype
        memory > xsupports_nullable_unique_constraints
        memory > xhas_select_for_update
        memory > xsupports_partially_nullable_unique_constraints
        memory > xsupports_primitives_in_json_field
        memory > xhas_case_insensitive_like
        memory > xcreate_test_procedure_with_int_param_sql
        memory > xconnection_persists_old_columns
        memory > xcan_introspect_materialized_views
        memory > xcollate_as_index_expression
        memory > xsupports_tablespaces
        memory > xallows_group_by_pk
        memory > xsupports_order_by_nulls_modifier
        memory > xvalidates_explain_options
        memory > xsupports_atomic_references_rename
        memory > xsupports_explaining_query_execution
        memory > xcan_clone_databases
        memory > xrequires_explicit_null_ordering_when_grouping
        memory > xrequires_casted_case_in_updates
        memory > xsupports_expression_indexes
        memory > xrequires_literal_defaults
        memory > xhas_select_for_update_of
        memory > xminimum_database_version
        memory > xsupports_temporal_subtraction
        memory > xsupports_frame_range_fixed_distance
        memory > xcan_defer_constraint_checks
        memory > xindexes_foreign_keys
        memory > xcan_introspect_json_field
        memory > xcan_rollback_ddl
        memory > xfor_update_after_from
        memory > xsupports_non_deterministic_collations
        memory > xsupports_index_column_ordering
        memory > xcan_create_inline_fk
        memory > xhas_json_operators
        memory > xallow_sliced_subqueries_with_in
        memory > xallows_auto_pk_0
        memory > xsupports_select_union
        memory > xinterprets_empty_strings_as_nulls
        memory > xhas_native_uuid_field
        memory > xsupports_boolean_expr_in_select_clause
        memory > xsupports_collation_on_textfield
        memory > xhas_select_for_no_key_update
        memory > xdjango_test_expected_failures
        memory > xsupports_parentheses_in_compound
        memory > xsupports_slicing_ordering_in_compound
        memory > xsupports_subqueries_in_group_by
        memory > xsupports_collation_on_charfield
        memory > xsupports_date_lookup_using_string
        memory > xsupports_paramstyle_pyformat
        memory > xhas_zoneinfo_database
        memory > x__init__
        memory > xsupports_deferrable_unique_constraints
        memory > xhas_native_json_field
        memory > xcan_distinct_on_fields
        memory > xhas_bulk_insert
        memory > xtest_collations
        memory > xtest_db_allows_multiple_connections
        memory > xsupports_forward_references
        memory > xintrospected_field_types
        memory > xcreate_test_procedure_without_params_sql
        memory > xcan_introspect_check_constraints
        memory > xgis_enabled2
        memory > xtime_cast_precision
        memory > xallows_group_by_lob
        memory > xcan_release_savepoints
        memory > xjson_key_contains_list_matching_requires_list
        memory > xsupports_functions_in_partial_indexes
        memory > xsupports_index_on_text_field
        memory > xuses_savepoints
        memory > xallows_group_by_selected_pks_on_model
        memory > xallows_group_by_selected_pks
        memory > xsupports_table_check_constraints
        memory > xsupports_column_check_constraints
        memory > xupdate_can_self_select
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                xminimum_database_version.write "None: is there a None literal in the EO language?"
                xgis_enabled2.write FALSE
                xallows_group_by_lob.write TRUE
                xallows_group_by_pk.write FALSE
                xallows_group_by_selected_pks.write FALSE
                xempty_fetchmany_value.write (((unsupported)).apply)
                xupdate_can_self_select.write TRUE
                xinterprets_empty_strings_as_nulls.write FALSE
                xsupports_nullable_unique_constraints.write TRUE
                xsupports_partially_nullable_unique_constraints.write TRUE
                xsupports_deferrable_unique_constraints.write FALSE
                xcan_use_chunked_reads.write TRUE
                xcan_return_columns_from_insert.write FALSE
                xcan_return_rows_from_bulk_insert.write FALSE
                xhas_bulk_insert.write TRUE
                xuses_savepoints.write TRUE
                xcan_release_savepoints.write FALSE
                xrelated_fields_match_type.write FALSE
                xallow_sliced_subqueries_with_in.write TRUE
                xhas_select_for_update.write FALSE
                xhas_select_for_update_nowait.write FALSE
                xhas_select_for_update_skip_locked.write FALSE
                xhas_select_for_update_of.write FALSE
                xhas_select_for_no_key_update.write FALSE
                xselect_for_update_of_column.write FALSE
                xtest_db_allows_multiple_connections.write TRUE
                xsupports_unspecified_pk.write FALSE
                xsupports_forward_references.write TRUE
                xtruncates_names.write FALSE
                xhas_real_datatype.write FALSE
                xsupports_subqueries_in_group_by.write TRUE
                xignores_unnecessary_order_by_in_subqueries.write TRUE
                xhas_native_uuid_field.write FALSE
                xhas_native_duration_field.write FALSE
                xsupports_temporal_subtraction.write FALSE
                xsupports_regex_backreferencing.write TRUE
                xsupports_date_lookup_using_string.write TRUE
                xsupports_timezones.write TRUE
                xhas_zoneinfo_database.write TRUE
                xrequires_explicit_null_ordering_when_grouping.write FALSE
                xnulls_order_largest.write FALSE
                xsupports_order_by_nulls_modifier.write TRUE
                xorder_by_nulls_first.write FALSE
                xmax_query_params.write "None: is there a None literal in the EO language?"
                xallows_auto_pk_0.write TRUE
                xcan_defer_constraint_checks.write FALSE
                xsupports_tablespaces.write FALSE
                xsupports_sequence_reset.write TRUE
                xcan_introspect_default.write TRUE
                xcan_introspect_foreign_keys.write TRUE
                xintrospected_field_types.write (((unsupported)).apply ("AutoField") ("AutoField") ("BigAutoField") ("BigAutoField") ("BigIntegerField") ("BigIntegerField") ("BinaryField") ("BinaryField") ("BooleanField") ("BooleanField") ("CharField") ("CharField") ("DurationField") ("DurationField") ("GenericIPAddressField") ("GenericIPAddressField") ("IntegerField") ("IntegerField") ("PositiveBigIntegerField") ("PositiveBigIntegerField") ("PositiveIntegerField") ("PositiveIntegerField") ("PositiveSmallIntegerField") ("PositiveSmallIntegerField") ("SmallAutoField") ("SmallAutoField") ("SmallIntegerField") ("SmallIntegerField") ("TimeField") ("TimeField"))
                xsupports_index_column_ordering.write TRUE
                xcan_introspect_materialized_views.write FALSE
                xcan_distinct_on_fields.write FALSE
                xatomic_transactions.write TRUE
                xcan_rollback_ddl.write FALSE
                xsupports_atomic_references_rename.write TRUE
                xsupports_combined_alters.write FALSE
                xsupports_foreign_keys.write TRUE
                xcan_create_inline_fk.write TRUE
                xindexes_foreign_keys.write TRUE
                xsupports_column_check_constraints.write TRUE
                xsupports_table_check_constraints.write TRUE
                xcan_introspect_check_constraints.write TRUE
                xsupports_paramstyle_pyformat.write TRUE
                xrequires_literal_defaults.write FALSE
                xconnection_persists_old_columns.write FALSE
                xclosed_cursor_error_class.write (xProgrammingError)
                xhas_case_insensitive_like.write FALSE
                xbare_select_suffix.write ""
                ximplied_column_null.write FALSE
                xsupports_select_for_update_with_limit.write TRUE
                xgreatest_least_ignores_nulls.write FALSE
                xcan_clone_databases.write FALSE
                xignores_table_name_case.write FALSE
                xfor_update_after_from.write FALSE
                xsupports_select_union.write TRUE
                xsupports_select_intersection.write TRUE
                xsupports_select_difference.write TRUE
                xsupports_slicing_ordering_in_compound.write FALSE
                xsupports_parentheses_in_compound.write TRUE
                xsupports_aggregate_filter_clause.write FALSE
                xsupports_index_on_text_field.write TRUE
                xsupports_over_clause.write FALSE
                xsupports_frame_range_fixed_distance.write FALSE
                xonly_supports_unbounded_with_preceding_and_following.write FALSE
                xsupports_cast_with_precision.write TRUE
                xtime_cast_precision.write 6
                xcreate_test_procedure_without_params_sql.write "None: is there a None literal in the EO language?"
                xcreate_test_procedure_with_int_param_sql.write "None: is there a None literal in the EO language?"
                xsupports_callproc_kwargs.write FALSE
                xsupported_explain_formats.write (((xset)).apply)
                xvalidates_explain_options.write TRUE
                xsupports_default_in_lead_lag.write TRUE
                xsupports_ignore_conflicts.write TRUE
                xsupports_update_conflicts.write FALSE
                xsupports_update_conflicts_with_target.write FALSE
                xrequires_casted_case_in_updates.write FALSE
                xsupports_partial_indexes.write TRUE
                xsupports_functions_in_partial_indexes.write TRUE
                xsupports_covering_indexes.write FALSE
                xsupports_expression_indexes.write TRUE
                xcollate_as_index_expression.write FALSE
                xallows_multiple_constraints_on_same_fields.write TRUE
                xsupports_boolean_expr_in_select_clause.write TRUE
                xsupports_json_field.write TRUE
                xcan_introspect_json_field.write TRUE
                xsupports_primitives_in_json_field.write TRUE
                xhas_native_json_field.write FALSE
                xhas_json_operators.write FALSE
                xsupports_json_field_contains.write TRUE
                xjson_key_contains_list_matching_requires_list.write FALSE
                xhas_json_object_function.write TRUE
                xsupports_collation_on_charfield.write TRUE
                xsupports_collation_on_textfield.write TRUE
                xsupports_non_deterministic_collations.write TRUE
                xsupports_logical_xor.write FALSE
                xtest_collations.write (((unsupported)).apply ("ci") ("None: is there a None literal in the EO language?") ("cs") ("None: is there a None literal in the EO language?") ("non_default") ("None: is there a None literal in the EO language?") ("swedish_ci") ("None: is there a None literal in the EO language?"))
                xtest_now_utc_template.write "None: is there a None literal in the EO language?"
                xdjango_test_expected_failures.write (((xset)).apply)
                xdjango_test_skips.write (((unsupported)).apply)
                x__init__.write
                  [xself xconnection]
                    seq > @
                      (((unsupported)).apply (((xself).xconnection)) ((xconnection)))
                xsupports_explaining_query_execution.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((unsupported)).apply (((((xself).xconnection).xops).xexplain_prefix)) ("None: is there a None literal in the EO language?"))))
                xsupports_transactions.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        unsupported
                        (((unsupported)).apply ((((((xself).xconnection).xcursor)).apply)) ((xcursor)))
                          seq
                            bogusForceDataize.write ((((xcursor).xexecute)).apply ("CREATE TABLE ROLLBACK_TEST (X INT)"))
                            bogusForceDataize.write (((((xself).xconnection).xset_autocommit)).apply (FALSE))
                            bogusForceDataize.write ((((xcursor).xexecute)).apply ("INSERT INTO ROLLBACK_TEST (X) VALUES (8)"))
                            bogusForceDataize.write (((((xself).xconnection).xrollback)).apply)
                            bogusForceDataize.write (((((xself).xconnection).xset_autocommit)).apply (TRUE))
                            bogusForceDataize.write ((((xcursor).xexecute)).apply ("SELECT COUNT(X) FROM ROLLBACK_TEST"))
                            (((unsupported)).apply ((((unsupported)).apply ((xcount)))) (((((xcursor).xfetchone)).apply)))
                            bogusForceDataize.write ((((xcursor).xexecute)).apply ("DROP TABLE ROLLBACK_TEST"))
                        (((unsupported)).apply (((xcount).eq 0)))
                xallows_group_by_selected_pks_on_model.write
                  [xself xmodel]
                    seq > @
                      seq
                        (((xself).xallows_group_by_selected_pks).not).if
                          (((unsupported)).apply (FALSE))
                        (((unsupported)).apply ((((xmodel).x_meta).xmanaged)))