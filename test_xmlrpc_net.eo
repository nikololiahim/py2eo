memory > xPythonBuildersTest
memory > xcollections
memory > xx
memory > xsupport
memory > xOSError
memory > xe
memory > xunittest
memory > x__name__
[] > test_xmlrpc_net
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_python_builders
        memory > xxmlrpclib
        memory > xtest_main
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply (((xunittest).xTestCase)) (((((xunittest).xskip)).apply ("XXX: buildbot.python.org/all/xmlrpc/ is gone"))))
              xtest_python_builders.write
                [xself]
                  memory > xserver
                  memory > xbuilders
                  seq > @
                    seq
                      xserver.write ((((xxmlrpclib).xServerProxy)).apply ("http://buildbot.python.org/all/xmlrpc/"))
                      (((unsupported)).apply ((xOSError)))
                        xbuilders.write ((((xserver).xgetAllBuilders)).apply)
                        bogusForceDataize.write ((((xself).xskipTest)).apply (("network error: %s".mod (xe))))
                      bogusForceDataize.write ((((xself).xaddCleanup)).apply ((((unsupported)).apply ((((((xserver)).apply ("close"))).apply)))))
                      bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xbuilders)) ((((xcollections).xabc).xSequence)))
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((unsupported)).apply ((xx)) ((xx)) ((xbuilders)) ((((unsupported)).apply ("3.x") ((xx)))))) ((xbuilders)))
            xtest_main.write
              []
                seq > @
                  seq
                    bogusForceDataize.write ((((xsupport).xrequires)).apply ("network"))
                    bogusForceDataize.write ((((xsupport).xrun_unittest)).apply ((xPythonBuildersTest)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)).apply)