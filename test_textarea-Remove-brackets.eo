memory > xTextarea
memory > xCharField
memory > xTestForm
memory > xmark_safe
memory > xForm
memory > xWidgetTest
[] > test_textarea
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_escaping
        memory > xtest_render_empty
        memory > xtest_render_none
        memory > xtest_render
        memory > xtest_render_required
        memory > xtest_mark_safe
        memory > xtest_fieldset
        memory > xwidget
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xWidgetTest)))
              seq
                xwidget.write (xTextarea)
                xtest_render.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).xcheck_html)) (((xself).xwidget)) ("msg") ("value") ("<textarea rows=\"10\" cols=\"40\" name=\"msg\">value</textarea>"))
                xtest_render_required.write
                  [xself]
                    memory > xwidget
                    seq > @
                      seq
                        xwidget.write (xTextarea)
                        (((unsupported)).apply (((xwidget).xis_required)) (TRUE))
                        (((unsupported)).apply (((xself).xcheck_html)) ((xwidget)) ("msg") ("value") ("<textarea rows=\"10\" cols=\"40\" name=\"msg\">value</textarea>"))
                xtest_render_empty.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).xcheck_html)) (((xself).xwidget)) ("msg") ("") ("<textarea rows=\"10\" cols=\"40\" name=\"msg\"></textarea>"))
                xtest_render_none.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).xcheck_html)) (((xself).xwidget)) ("msg") ("None: is there a None literal in the EO language?") ("<textarea rows=\"10\" cols=\"40\" name=\"msg\"></textarea>"))
                xtest_escaping.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).xcheck_html)) (((xself).xwidget)) ("msg") ("some \"quoted\" & ampersanded value") ("<textarea rows=\"10\" cols=\"40\" name=\"msg\">some &quot;quoted&quot; &amp; ampersanded value</textarea>"))
                xtest_mark_safe.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((xself).xcheck_html)) (((xself).xwidget)) ("msg") ((((xmark_safe)).apply ("pre &quot;quoted&quot; value"))) ("<textarea rows=\"10\" cols=\"40\" name=\"msg\">pre &quot;quoted&quot; value</textarea>"))
                xtest_fieldset.write
                  [xself]
                    memory > xfield
                    memory > xtemplate_name
                    memory > xform
                    seq > @
                      seq
                        (((unsupported)).apply ((xForm)))
                          seq
                            xtemplate_name.write "forms_tests/use_fieldset.html"
                            xfield.write (((unsupported)).apply ((xCharField)) (((xself).xwidget)))
                        xform.write (xTestForm)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xself).xwidget).xuse_fieldset)) (FALSE))
                        bogusForceDataize.write ((((xself).xassertHTMLEqual)).apply ("<div><label for=\"id_field\">Field:</label><textarea cols=\"40\" id=\"id_field\" name=\"field\" required rows=\"10\"></textarea></div>") (((xform).xrender)))