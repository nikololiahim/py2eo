memory > xD
memory > xC
memory > xB
memory > xKeyError
memory > xtest_descrtut
memory > xdict
memory > xsuper
memory > xsupport
memory > xobject
memory > xA
memory > x__name__
memory > xkey
[] > test_descrtut
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_1
        memory > xmerge
        memory > xget
        memory > xtest_2
        memory > xtest_3
        memory > xtest_main
        memory > x__getitem__
        memory > xtest_7
        memory > x__slots__
        memory > xtest_4
        memory > xm
        memory > x__init__
        memory > x__test__
        memory > xtest_5
        memory > xtest_8
        memory > xtest_6
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xdict)))
              seq
                x__init__.write
                  [xself xdefault]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xdict).x__init__)).apply ((xself)))
                        (((unsupported)).apply (((xself).xdefault)) ((xdefault)))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((xKeyError)))
                        (((unsupported)).apply (((((xdict).x__getitem__)).apply ((xself)) ((xkey)))))
                        (((unsupported)).apply (((xself).xdefault)))
                xget.write
                  [xself xkey]
                    memory > xargs
                    seq > @
                      (((unsupported)).apply)
                        ((xargs).not).if
                          xargs.write (((unsupported)).apply (((xself).xdefault)))
                        (((unsupported)).apply (((((xdict).xget)).apply ((xself)) ((xkey)) ((((unsupported)).apply ((xargs)))))))
                xmerge.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply ((xkey)) ((xother)))
                        (((unsupported)).apply ((xkey)) ((xself))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))) ((((unsupported)).apply ((xother)) ((xkey)))))
            xtest_1.write (((unsupported)).apply)
            (((unsupported)).apply ((xdict)))
              seq
                x__slots__.write (((unsupported)).apply ("default"))
                x__init__.write
                  [xself xdefault]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xdict).x__init__)).apply ((xself)))
                        (((unsupported)).apply (((xself).xdefault)) ((xdefault)))
                x__getitem__.write
                  [xself xkey]
                    seq > @
                      (((unsupported)).apply ((xKeyError)))
                        (((unsupported)).apply (((((xdict).x__getitem__)).apply ((xself)) ((xkey)))))
                        (((unsupported)).apply (((xself).xdefault)))
                xget.write
                  [xself xkey]
                    memory > xargs
                    seq > @
                      (((unsupported)).apply)
                        ((xargs).not).if
                          xargs.write (((unsupported)).apply (((xself).xdefault)))
                        (((unsupported)).apply (((((xdict).xget)).apply ((xself)) ((xkey)) ((((unsupported)).apply ((xargs)))))))
                xmerge.write
                  [xself xother]
                    seq > @
                      (((unsupported)).apply ((xkey)) ((xother)))
                        (((unsupported)).apply ((xkey)) ((xself))).if
                          (((unsupported)).apply ((((unsupported)).apply ((xself)) ((xkey)))) ((((unsupported)).apply ((xother)) ((xkey)))))
            xtest_2.write (((unsupported)).apply)
            xtest_3.write (((unsupported)).apply)
            xtest_4.write (((unsupported)).apply)
            xtest_5.write (((unsupported)).apply)
            xtest_6.write (((unsupported)).apply)
            (((unsupported)).apply ((xobject)))
              xm.write
                [xself]
                  seq > @
                    (((unsupported)).apply ("A"))
            (((unsupported)).apply ((xA)))
              xm.write
                [xself]
                  seq > @
                    (((unsupported)).apply (("B".add ((((((xsuper)).apply ((xB)) ((xself))).xm)).apply))))
            (((unsupported)).apply ((xA)))
              xm.write
                [xself]
                  seq > @
                    (((unsupported)).apply (("C".add ((((((xsuper)).apply ((xC)) ((xself))).xm)).apply))))
            (((unsupported)).apply ((xC)) ((xB)))
              xm.write
                [xself]
                  seq > @
                    (((unsupported)).apply (("D".add ((((((xsuper)).apply ((xD)) ((xself))).xm)).apply))))
            xtest_7.write (((unsupported)).apply)
            xtest_8.write (((unsupported)).apply)
            x__test__.write (((unsupported)).apply ("tut1") ((xtest_1)) ("tut2") ((xtest_2)) ("tut3") ((xtest_3)) ("tut4") ((xtest_4)) ("tut5") ((xtest_5)) ("tut6") ((xtest_6)) ("tut7") ((xtest_7)) ("tut8") ((xtest_8)))
            xtest_main.write
              [xverbose]
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    (((unsupported)).apply)
                    bogusForceDataize.write ((((xsupport).xrun_doctest)).apply ((xtest_descrtut)) ((xverbose)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write (((xtest_main)).apply (1))