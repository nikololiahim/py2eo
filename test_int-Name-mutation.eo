memory > xImportError
memory > xBadIndex2
memory > xTruncReturnsNonInt
memory > xCustomBytes
memory > xsys
memory > xDeprecationWarning
memory > xTruncReturnsBadIndex
memory > xv
memory > xcm
memory > xTruncReturnsNonIntegral
memory > xarray
memory > xTruncReturnsIntSubclass
memory > xValueError
memory > xsign
memory > xstr
memory > xBadInt
memory > xlit
memory > xBadIndex
memory > xTruncReturnsBadInt
memory > xrange
memory > xb
memory > xZeroDivisionError
memory > xeval
memory > xbytearray
memory > xprefix
memory > xNonIntegral
memory > xbase
memory > xany
memory > xIndex
memory > xtype
memory > xf
memory > xrepr
memory > xint
memory > xJustTrunc
memory > xINVALID_UNDERSCORE_LITERALS
memory > xIntOverridesTrunc
memory > xExceptionalTrunc
memory > xMyInt
memory > xClassic
memory > xbytes
memory > xFoo0
memory > xVALID_UNDERSCORE_LITERALS
memory > xch
memory > xint2
memory > xe
memory > xMissingMethods
memory > xBadInt2
memory > xunittest
memory > xCustomStr
memory > xMyIndexable
memory > xIntable
memory > xobject
memory > xIntSubclass
memory > xCustomByteArray
memory > xmemoryview
memory > xMyIndex
memory > xClassicMissingMethods
memory > xisinstance
memory > xtrunc_result_base
memory > xTypeError
memory > x__name__
[] > test_int
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_issue31619
        memory > xtest_no_args
        memory > xtest_keyword_args
        memory > xtest_int_subclass_with_index
        memory > xtest_int_returns_int_subclass
        memory > xL
        memory > xtest_int_base_indexable
        memory > xtest_non_numeric_input_types
        memory > xtest_string_float
        memory > xtest_int_subclass_with_int
        memory > xtest_int_memoryview
        memory > xtest_int_base_bad_types
        memory > xtest_error_message
        memory > xtest_small_ints
        memory > xtest_int_base_limits
        memory > xtest_underscores
        memory > xtest_intconversion
        memory > xtest_basic
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xL.write (((unsupported)).apply ((((unsupported)).apply ("0") (0))) ((((unsupported)).apply ("1") (1))) ((((unsupported)).apply ("9") (9))) ((((unsupported)).apply ("10") (10))) ((((unsupported)).apply ("99") (99))) ((((unsupported)).apply ("100") (100))) ((((unsupported)).apply ("314") (314))) ((((unsupported)).apply (" 314") (314))) ((((unsupported)).apply ("314 ") (314))) ((((unsupported)).apply ("  tt  314  tt  ") (314))) ((((unsupported)).apply ((((xrepr)).apply (((xsys).xmaxsize)))) (((xsys).xmaxsize)))) ((((unsupported)).apply ("  1x") ((xValueError)))) ((((unsupported)).apply ("  1  ") (1))) ((((unsupported)).apply ("  102  ") ((xValueError)))) ((((unsupported)).apply ("") ((xValueError)))) ((((unsupported)).apply (" ") ((xValueError)))) ((((unsupported)).apply ("  tt  ") ((xValueError)))) ((((unsupported)).apply ("u0200") ((xValueError)))))
            (((unsupported)).apply ((xint2)))
            (((unsupported)).apply (((xunittest).xTestCase)))
              seq
                xtest_basic.write
                  [xself]
                    memory > xvv
                    memory > xss
                    memory > xx
                    memory > xs
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (314))) (314))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (3.14))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((3.14.neg)))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (3.9))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((3.9.neg)))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (3.5))) (3))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((3.5.neg)))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("-3"))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (" -3 "))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("N{EM SPACE}-3N{EN SPACE}"))) ((3.neg)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("10") (16))) (16))
                        (((unsupported)).apply ((((unsupported)).apply ((xs)) ((xv)))) ((xL)))
                          (((unsupported)).apply ((xsign)) ((((unsupported)).apply ("") ("+") ("-"))))
                            (((unsupported)).apply ((xprefix)) ((((unsupported)).apply ("") (" ") ("t") ("  tt  "))))
                              seq
                                xss.write (((xprefix).add (xsign)).add (xs))
                                xvv.write (xv)
                                (((xsign).eq "-").and (((unsupported)).apply ((xv)) ((xValueError)))).if
                                  xvv.write ((xv).neg)
                                (((unsupported)).apply ((xValueError)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xss)))) ((xvv)))
                        xs.write (((xrepr)).apply (((1.neg).sub ((xsys).xmaxsize))))
                        xx.write (((xint)).apply ((xs)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xx).add 1)) ((((xsys).xmaxsize).neg)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xx)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((unsupported)).apply ((xs)) ((((unsupported)).apply (1))))))) ((((xsys).xmaxsize).add 1)))
                        xx.write (((xint)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xx)) ((xint)))
                        xx.write (((xint)).apply (((((unsupported)).apply).neg)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xx)) ((xint)))
                        xx.write ((1.neg).sub ((xsys).xmaxsize))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xx)) (1))) ((((unsupported)).apply ((xx)) (2))))
                        xx.write (((xint)).apply (("1".mul 600)))
                        bogusForceDataize.write ((((xself).xassertIsInstance)).apply ((xx)) ((xint)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) (1) (12))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0o123") (0))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0x123") (16))) (291))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0x") (16))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0x") (0))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0o") (8))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0o") (0))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0b") (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0b") (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("100000000000000000000000000000000") (2))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("102002022201221111211") (3))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("10000000000000000") (4))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("32244002423141") (5))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1550104015504") (6))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("211301422354") (7))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("40000000000") (8))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("12068657454") (9))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4294967296") (10))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1904440554") (11))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("9ba461594") (12))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("535a79889") (13))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("2ca5b7464") (14))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1a20dcd81") (15))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("100000000") (16))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("a7ffda91") (17))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("704he7g4") (18))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4f5aff66") (19))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("3723ai4g") (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("281d55i4") (21))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1fj8b184") (22))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1606k7ic") (23))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("mb994ag") (24))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("hek2mgl") (25))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("dnchbnm") (26))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("b28jpdm") (27))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("8pfgih4") (28))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("76beigg") (29))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("5qmcpqg") (30))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4q0jto4") (31))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4000000") (32))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("3aokq94") (33))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("2qhxjli") (34))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("2br45qb") (35))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1z141z4") (36))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (" 0o123  ") (0))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (" 0o123  ") (0))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("000") (0))) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0o123") (0))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0x123") (0))) (291))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0b100") (0))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (" 0O123   ") (0))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (" 0X123  ") (0))) (291))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply (" 0B100 ") (0))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0123"))) (123))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0123") (10))) (123))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0x123") (16))) (291))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0o123") (8))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0b100") (2))) (4))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0X123") (16))) (291))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0O123") (8))) (83))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0B100") (2))) (4))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0b2") (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0b02") (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0B2") (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0B02") (2))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0o8") (8))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0o08") (8))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0O8") (8))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0O08") (8))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0xg") (16))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0x0g") (16))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0Xg") (16))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("0X0g") (16))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("100000000000000000000000000000001") (2))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("102002022201221111212") (3))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("10000000000000001") (4))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("32244002423142") (5))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1550104015505") (6))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("211301422355") (7))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("40000000001") (8))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("12068657455") (9))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4294967297") (10))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1904440555") (11))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("9ba461595") (12))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("535a7988a") (13))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("2ca5b7465") (14))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1a20dcd82") (15))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("100000001") (16))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("a7ffda92") (17))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("704he7g5") (18))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4f5aff67") (19))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("3723ai4h") (20))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("281d55i5") (21))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1fj8b185") (22))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1606k7id") (23))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("mb994ah") (24))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("hek2mgm") (25))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("dnchbnn") (26))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("b28jpdn") (27))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("8pfgih5") (28))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("76beigh") (29))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("5qmcpqh") (30))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4q0jto5") (31))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("4000001") (32))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("3aokq95") (33))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("2qhxjlj") (34))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("2br45qc") (35))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1z141z5") (36))) ((((unsupported)).apply)))
                xtest_underscores.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((xlit)) ((xVALID_UNDERSCORE_LITERALS)))
                          seq
                            (((xany)).apply ((((unsupported)).apply ((((unsupported)).apply ((xch)) ((xlit)))) ((xch)) (".eEjJ")))).if
                              (((unsupported)).apply)
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xlit)) (0))) ((((xeval)).apply ((xlit)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xlit)) (0))) ((((xint)).apply (((((xlit).xreplace)).apply ("_") (""))) (0))))
                        (((unsupported)).apply ((xlit)) ((xINVALID_UNDERSCORE_LITERALS)))
                          seq
                            (((xany)).apply ((((unsupported)).apply ((((unsupported)).apply ((xch)) ((xlit)))) ((xch)) (".eEjJ")))).if
                              (((unsupported)).apply)
                            bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ((xlit)) (0))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1_00") (3))) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0_100"))) (100))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1_00"))) (100))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("_100"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("+_100"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("1__00"))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("100_"))
                xtest_small_ints.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xint)).apply ("10"))) (10))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xint)).apply ("-1"))) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xint)).apply ("10"))) (10))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xint)).apply ("-1"))) ((1.neg)))
                xtest_no_args.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply)) (0))
                xtest_keyword_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xint)) ("100") (2))) (4))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xint)) (1.2))
                        (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ("keyword argument"))))
                          (((unsupported)).apply ((xint)) ("100") (2))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xTypeError)) ((xint)) (10))
                        (((unsupported)).apply (((xself).xassertRaises)) ((xTypeError)) ((xint)) (0))
                xtest_int_base_limits.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("0") (5))) (0))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          bogusForceDataize.write (((xint)).apply ("0") (1))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          bogusForceDataize.write (((xint)).apply ("0") (37))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          bogusForceDataize.write (((xint)).apply ("0") ((909.neg)))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((xint)) ("0") ((0.sub (((unsupported)).apply (2) (234)))))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                          (((unsupported)).apply ((xint)) ("0") ((((unsupported)).apply (2) (234))))
                        (((unsupported)).apply ((xbase)) ((((xrange)).apply (2) (37))))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xint)) ("0") ((xbase)))) (0))
                xtest_int_base_bad_types.write
                  [xself]
                    seq > @
                      seq
                        unsupported
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write (((xint)).apply ("0") (5.5))
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                          bogusForceDataize.write (((xint)).apply ("0") (5.0))
                xtest_int_base_indexable.write
                  [xself]
                    memory > x__index__
                    memory > x__init__
                    seq > @
                      seq
                        (((unsupported)).apply ((xobject)))
                          seq
                            x__init__.write
                              [xself xvalue]
                                seq > @
                                  (((unsupported)).apply (((xself).xvalue)) ((xvalue)))
                            x__index__.write
                              [xself]
                                seq > @
                                  (((unsupported)).apply (((xself).xvalue)))
                        (((unsupported)).apply ((xbase)) ((((unsupported)).apply ((((unsupported)).apply (2) (100))) (((((unsupported)).apply (2) (100)).neg)) (1) (37))))
                          (((unsupported)).apply (((((xself).xassertRaises)).apply ((xValueError)))))
                            bogusForceDataize.write (((xint)).apply ("43") ((xbase)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xint)) ("101") ((((xMyIndexable)).apply (2))))) (5))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xint)) ("101") ((((xMyIndexable)).apply (10))))) (101))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xint)) ("101") ((((xMyIndexable)).apply (36))))) ((1.add (((unsupported)).apply (36) (2)))))
                xtest_non_numeric_input_types.write
                  [xself]
                    memory > xx
                    memory > xmsg
                    memory > xfactories
                    seq > @
                      seq
                        (((unsupported)).apply ((xstr)))
                        (((unsupported)).apply ((xbytes)))
                        (((unsupported)).apply ((xbytearray)))
                        xfactories.write (((unsupported)).apply ((xbytes)) ((xbytearray)) ((((unsupported)).apply ((((xCustomStr)).apply (((((xb).xdecode)).apply)))))) ((xCustomBytes)) ((xCustomByteArray)) ((xmemoryview)))
                        (((unsupported)).apply ((xImportError)))
                          (((unsupported)).apply)
                          bogusForceDataize.write ((((xfactories).xappend)).apply ((((unsupported)).apply ((((xarray)).apply ("B") ((xb)))))))
                        (((unsupported)).apply ((xf)) ((xfactories)))
                          seq
                            xx.write (((xf)).apply ("100"))
                            (((unsupported)).apply (((((xself).xsubTest)).apply ((((xtype)).apply ((xx)))))))
                              seq
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xx)))) (100))
                                (((xisinstance)).apply ((xx)) ((((unsupported)).apply ((xstr)) ((xbytes)) ((xbytearray))))).if
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xx)) (2))) (4))
                                  seq
                                    xmsg.write "can't convert non-string"
                                    (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xTypeError)) ((xmsg)))))
                                      bogusForceDataize.write (((xint)).apply ((xx)) (2))
                                (((unsupported)).apply (((((xself).xassertRaisesRegex)).apply ((xValueError)) ("invalid literal"))))
                                  bogusForceDataize.write (((xint)).apply ((((xf)).apply (("A".mul 16)))))
                xtest_int_memoryview.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((unsupported)).apply ((((xmemoryview)).apply ("123"))) ((((unsupported)).apply (1) (3))))))) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((unsupported)).apply ((((xmemoryview)).apply ("123x00"))) ((((unsupported)).apply (1) (3))))))) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((unsupported)).apply ((((xmemoryview)).apply ("123 "))) ((((unsupported)).apply (1) (3))))))) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((unsupported)).apply ((((xmemoryview)).apply ("123A"))) ((((unsupported)).apply (1) (3))))))) (23))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((unsupported)).apply ((((xmemoryview)).apply ("1234"))) ((((unsupported)).apply (1) (3))))))) (23))
                xtest_string_float.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertRaises)).apply ((xValueError)) ((xint)) ("1.2"))
                xtest_intconversion.write
                  [xself]
                    memory > x__index__
                    memory > x__trunc__
                    memory > x__int__
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((((xClassicMissingMethods)).apply)))
                        (((unsupported)).apply ((xobject)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((((xMissingMethods)).apply)))
                        (((unsupported)).apply)
                          x__int__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (42))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xFoo0)).apply)))) (42))
                        (((unsupported)).apply)
                        (((unsupported)).apply ((xbase)) ((((unsupported)).apply ((xobject)) ((xClassic)))))
                          seq
                            (((unsupported)).apply ((xbase)))
                              seq
                                x__int__.write
                                  [xself]
                                    seq > @
                                      (((unsupported)).apply (42))
                                x__trunc__.write
                                  [xself]
                                    seq > @
                                      (((unsupported)).apply ((12.neg)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xIntOverridesTrunc)).apply)))) (42))
                            (((unsupported)).apply ((xbase)))
                              x__trunc__.write
                                [xself]
                                  seq > @
                                    (((unsupported)).apply (42))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xJustTrunc)).apply)))) (42))
                            (((unsupported)).apply ((xbase)))
                              x__trunc__.write
                                [xself]
                                  seq > @
                                    unsupported
                            (((unsupported)).apply (((((xself).xassertRaises)).apply ((xZeroDivisionError)))))
                              bogusForceDataize.write (((xint)).apply ((((xExceptionalTrunc)).apply)))
                            (((unsupported)).apply ((xtrunc_result_base)) ((((unsupported)).apply ((xobject)) ((xClassic)))))
                              seq
                                (((unsupported)).apply ((xtrunc_result_base)))
                                  x__index__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply (42))
                                (((unsupported)).apply ((xbase)))
                                  x__trunc__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply ((((xIndex)).apply)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xTruncReturnsNonInt)).apply)))) (42))
                                (((unsupported)).apply ((xtrunc_result_base)))
                                  x__int__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply (42))
                                (((unsupported)).apply ((xbase)))
                                  x__trunc__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply ((((xIntable)).apply)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xTruncReturnsNonInt)).apply)))) (42))
                                (((unsupported)).apply ((xtrunc_result_base)))
                                  x__trunc__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply ((((xNonIntegral)).apply)))
                                (((unsupported)).apply ((xbase)))
                                  x__trunc__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply ((((xNonIntegral)).apply)))
                                (((unsupported)).apply ((xTypeError)))
                                  bogusForceDataize.write (((xint)).apply ((((xTruncReturnsNonIntegral)).apply)))
                                  bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xstr)).apply ((xe)))) ("__trunc__ returned non-Integral (type NonIntegral)"))
                                  bogusForceDataize.write ((((xself).xfail)).apply (("Failed to raise TypeError with %s".mod (((unsupported)).apply ((((unsupported)).apply ((xbase)) ((xtrunc_result_base))))))))
                                (((unsupported)).apply ((xtrunc_result_base)))
                                  x__int__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply (42.0))
                                (((unsupported)).apply ((xbase)))
                                  x__trunc__.write
                                    [xself]
                                      seq > @
                                        (((unsupported)).apply ((((xBadInt)).apply)))
                                (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTypeError)))))
                                  bogusForceDataize.write (((xint)).apply ((((xTruncReturnsBadInt)).apply)))
                xtest_int_subclass_with_index.write
                  [xself]
                    memory > x__index__
                    memory > xmy_int
                    seq > @
                      seq
                        (((unsupported)).apply ((xint)))
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (42))
                        (((unsupported)).apply ((xint)))
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (42.0))
                        xmy_int.write (((xMyIndex)).apply (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmy_int)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xmy_int)))) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((((xBadIndex)).apply)))) (0))
                xtest_int_subclass_with_int.write
                  [xself]
                    memory > xmy_int
                    memory > x__int__
                    seq > @
                      seq
                        (((unsupported)).apply ((xint)))
                          x__int__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (42))
                        (((unsupported)).apply ((xint)))
                          x__int__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (42.0))
                        xmy_int.write (((xMyInt)).apply (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmy_int)) (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ((xmy_int)))) (42))
                        xmy_int.write (((xBadInt)).apply (7))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xmy_int)) (7))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) ((xint)) ((xmy_int)))
                xtest_int_returns_int_subclass.write
                  [xself]
                    memory > x__index__
                    memory > x__trunc__
                    memory > xgood_int
                    memory > xbad_int
                    memory > xn
                    memory > x__int__
                    seq > @
                      seq
                        (((unsupported)).apply)
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (TRUE))
                        (((unsupported)).apply ((xint)))
                          x__index__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (TRUE))
                        (((unsupported)).apply)
                          x__int__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (TRUE))
                        (((unsupported)).apply ((xint)))
                          x__int__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (TRUE))
                        (((unsupported)).apply)
                          x__trunc__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((xBadIndex)).apply)))
                        (((unsupported)).apply)
                          x__trunc__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply ((((xBadInt)).apply)))
                        (((unsupported)).apply)
                          x__trunc__.write
                            [xself]
                              seq > @
                                (((unsupported)).apply (TRUE))
                        xbad_int.write (((xBadIndex)).apply)
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          xn.write (((xint)).apply ((xbad_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xbad_int.write (((xBadIndex2)).apply)
                        xn.write (((xint)).apply ((xbad_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (0))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xbad_int.write (((xBadInt)).apply)
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          xn.write (((xint)).apply ((xbad_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xbad_int.write (((xBadInt2)).apply)
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          xn.write (((xint)).apply ((xbad_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xbad_int.write (((xTruncReturnsBadIndex)).apply)
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          xn.write (((xint)).apply ((xbad_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xbad_int.write (((xTruncReturnsBadInt)).apply)
                        (((unsupported)).apply (((((xself).xassertWarns)).apply ((xDeprecationWarning)))))
                          xn.write (((xint)).apply ((xbad_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xgood_int.write (((xTruncReturnsIntSubclass)).apply)
                        xn.write (((xint)).apply ((xgood_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xint)))
                        xn.write (((xIntSubclass)).apply ((xgood_int)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xn)) (1))
                        bogusForceDataize.write ((((xself).xassertIs)).apply ((((xtype)).apply ((xn)))) ((xIntSubclass)))
                xtest_error_message.write
                  [xself]
                    memory > xcheck
                    seq > @
                      seq
                        xcheck.write
                          [xs xbase]
                            seq > @
                              (((unsupported)).apply)
                                (((unsupported)).apply ((((unsupported)).apply (((xself).xassertRaises)) ((xValueError)) (("int(%r, %r)".mod (((unsupported)).apply ((xs)) ((xbase))))))) ((xcm)))
                                  (((unsupported)).apply ((xbase)) ("None: is there a None literal in the EO language?")).if
                                    bogusForceDataize.write (((xint)).apply ((xs)))
                                    bogusForceDataize.write (((xint)).apply ((xs)) ((xbase)))
                                bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((xcm).xexception).xargs)) (0))) (("invalid literal for int() with base %d: %r".mod (((unsupported)).apply (((((unsupported)).apply ((xbase)) ("None: is there a None literal in the EO language?")).if 10 (xbase))) ((xs))))))
                        bogusForceDataize.write (((xcheck)).apply ("xbd"))
                        bogusForceDataize.write (((xcheck)).apply ("123xbd"))
                        bogusForceDataize.write (((xcheck)).apply ("  123 456  "))
                        bogusForceDataize.write (((xcheck)).apply ("123x00"))
                        bogusForceDataize.write (((xcheck)).apply ("123x00") (10))
                        bogusForceDataize.write (((xcheck)).apply ("123x00 245") (20))
                        bogusForceDataize.write (((xcheck)).apply ("123x00 245") (16))
                        bogusForceDataize.write (((xcheck)).apply ("123x00245") (20))
                        bogusForceDataize.write (((xcheck)).apply ("123x00245") (16))
                        bogusForceDataize.write (((xcheck)).apply ("123x00"))
                        bogusForceDataize.write (((xcheck)).apply ("123x00") (10))
                        bogusForceDataize.write (((xcheck)).apply ("123xbd"))
                        bogusForceDataize.write (((xcheck)).apply ("123xbd") (10))
                        bogusForceDataize.write (((xcheck)).apply ("123ud800"))
                        bogusForceDataize.write (((xcheck)).apply ("123ud800") (10))
                xtest_issue31619.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1_0_1") (2))) (1431655765))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1_2_3_4_5_6_7_0_1_2_3") (8))) (1402433619))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1_2_3_4_5_6_7_8_9") (16))) ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xint)).apply ("1_2_3_4_5_6_7") (32))) (1144132807))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)