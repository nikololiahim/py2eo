memory > xTemplateSyntaxError
memory > xURLNode
memory > xRequestContext
memory > xrepr
memory > xRequestFactory
memory > xoverride_settings
memory > xSimpleTestCase
memory > xNoReverseMatch
memory > xresolve
[] > test_url
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_url_asvar03
        memory > xtest_url12
        memory > xtest_url20
        memory > xtest_url06
        memory > xtest_url15
        memory > xtest_url_fail16
        memory > xtest_url_fail03
        memory > xtest_url_fail14
        memory > xtest_url01
        memory > xtest_url_fail07
        memory > xtest_url_namespace01
        memory > xtest_url05
        memory > xtest_url_fail04
        memory > xtest_url_fail17
        memory > xtest_url08
        memory > xtest_url19
        memory > xtest_url02c
        memory > xtest_url_fail06
        memory > xtest_url_fail15
        memory > xtest_url_asvar02
        memory > xtest_repr
        memory > xtest_url_asvar01
        memory > xtest_url02
        memory > xtest_url13
        memory > xtest_url02b
        memory > xtest_url_fail11
        memory > xtest_url_fail05
        memory > xtest_url_fail12
        memory > xtest_url_namespace03
        memory > xtest_url02a
        memory > xtest_url_namespace_no_current_app
        memory > xtest_url_fail01
        memory > xtest_url03
        memory > xrequest_factory
        memory > xtest_url14
        memory > xtest_url_fail09
        memory > xtest_url18
        memory > xtest_url_fail08
        memory > xtest_url_fail13
        memory > xtest_url09
        memory > xtest_url_namespace02
        memory > xtest_url_fail19
        memory > xtest_url10
        memory > xtest_url_fail02
        memory > xtest_url11
        memory > xtest_url21
        memory > xtest_url_namespace_explicit_current_app
        memory > xtest_url_fail18
        memory > xtest_url04
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xSimpleTestCase)) ((((unsupported)).apply ((xoverride_settings)) ("template_tests.urls"))))
              seq
                xrequest_factory.write (((xRequestFactory)).apply)
                xtest_url01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url01") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/"))
                xtest_url02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url02") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/update/"))
                xtest_url02a.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url02a") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/update/"))
                xtest_url02b.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url02b") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/update/"))
                xtest_url02c.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url02c") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/update/"))
                xtest_url03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url03"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/"))
                xtest_url04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url04") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/named-client/1/"))
                xtest_url05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url05") ((((unsupported)).apply ("v") ("立"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/"))
                xtest_url06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url06") ((((unsupported)).apply ("v") ("立"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/"))
                xtest_url08.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url08") ((((unsupported)).apply ("v") ("立"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/"))
                xtest_url09.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url09") ((((unsupported)).apply ("v") ("立"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/%D0%AE%D0%BD%D0%B8%D0%BA%D0%BE%D0%B4/%CE%A9/"))
                xtest_url10.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url10") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/two%20words/"))
                xtest_url11.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url11") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/==/"))
                xtest_url12.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url12") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/!$&amp;&#x27;()*+,;=~:@,/"))
                xtest_url13.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url13") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))) ("arg") ((((unsupported)).apply ("a") ("b"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/a-b/"))
                xtest_url14.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url14") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))) ("arg") ((((unsupported)).apply ("a") ("b"))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/a-b/"))
                xtest_url15.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url15"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/12/test/"))
                xtest_url18.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url18"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1,2/"))
                xtest_url19.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url19") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))) ("named_url") ("client"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/"))
                xtest_url20.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url20") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))) ("url_name_in_var") ("named.client"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/named-client/1/"))
                xtest_url21.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url21") ((((unsupported)).apply ("client") ((((unsupported)).apply ("id") (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/client/1/!$&'()*+,;=~:@,/"))
                xtest_url_fail01.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail01"))
                xtest_url_fail02.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNoReverseMatch)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail02"))
                xtest_url_fail03.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNoReverseMatch)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail03"))
                xtest_url_fail04.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail04"))
                xtest_url_fail05.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail05"))
                xtest_url_fail06.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail06"))
                xtest_url_fail07.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail07"))
                xtest_url_fail08.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail08"))
                xtest_url_fail09.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xget_template)).apply ("url-fail09"))
                xtest_url_fail11.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNoReverseMatch)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail11"))
                xtest_url_fail12.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNoReverseMatch)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail12") ((((unsupported)).apply ("named_url") ("no_such_view"))))
                xtest_url_fail13.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xNoReverseMatch)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail13") ((((unsupported)).apply ("named_url") ("template_tests.views.client"))))
                xtest_url_fail14.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail14") ((((unsupported)).apply ("named_url") ("view"))))
                xtest_url_fail15.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail15") ((((unsupported)).apply ("named_url") ("view"))))
                xtest_url_fail16.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail16") ((((unsupported)).apply ("named_url") ("view"))))
                xtest_url_fail17.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail17") ((((unsupported)).apply ("named_url") ("view"))))
                xtest_url_fail18.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail18") ((((unsupported)).apply ("named_url") ("view"))))
                xtest_url_fail19.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xself).xassertRaises)).apply ((xTemplateSyntaxError)))))
                          bogusForceDataize.write (((((xself).xengine).xrender_to_string)).apply ("url-fail19") ((((unsupported)).apply ("named_url") ("view"))))
                xtest_url_asvar01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url-asvar01"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_url_asvar02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url-asvar02"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/"))
                xtest_url_asvar03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("url-asvar03"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_url_namespace01.write
                  [xself]
                    memory > xrequest
                    memory > xoutput
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        (((unsupported)).apply (((xrequest).xresolver_match)) ((((xresolve)).apply ("/ns1/"))))
                        xtemplate.write (((((xself).xengine).xget_template)).apply ("url-namespace01"))
                        xcontext.write (((xRequestContext)).apply ((xrequest)))
                        xoutput.write ((((xtemplate).xrender)).apply ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/ns1/named-client/42/"))
                xtest_url_namespace02.write
                  [xself]
                    memory > xrequest
                    memory > xoutput
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        (((unsupported)).apply (((xrequest).xresolver_match)) ((((xresolve)).apply ("/ns2/"))))
                        xtemplate.write (((((xself).xengine).xget_template)).apply ("url-namespace02"))
                        xcontext.write (((xRequestContext)).apply ((xrequest)))
                        xoutput.write ((((xtemplate).xrender)).apply ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/ns2/named-client/42/"))
                xtest_url_namespace03.write
                  [xself]
                    memory > xrequest
                    memory > xoutput
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        xtemplate.write (((((xself).xengine).xget_template)).apply ("url-namespace03"))
                        xcontext.write (((xRequestContext)).apply ((xrequest)))
                        xoutput.write ((((xtemplate).xrender)).apply ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/ns2/named-client/42/"))
                xtest_url_namespace_no_current_app.write
                  [xself]
                    memory > xrequest
                    memory > xoutput
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        (((unsupported)).apply (((xrequest).xresolver_match)) ((((xresolve)).apply ("/ns1/"))))
                        (((unsupported)).apply (((xrequest).xcurrent_app)) ("None: is there a None literal in the EO language?"))
                        xtemplate.write (((((xself).xengine).xget_template)).apply ("url-namespace-no-current-app"))
                        xcontext.write (((xRequestContext)).apply ((xrequest)))
                        xoutput.write ((((xtemplate).xrender)).apply ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/ns2/named-client/42/"))
                xtest_url_namespace_explicit_current_app.write
                  [xself]
                    memory > xrequest
                    memory > xoutput
                    memory > xtemplate
                    memory > xcontext
                    seq > @
                      (((unsupported)).apply)
                        xrequest.write (((((xself).xrequest_factory).xget)).apply ("/"))
                        (((unsupported)).apply (((xrequest).xresolver_match)) ((((xresolve)).apply ("/ns1/"))))
                        (((unsupported)).apply (((xrequest).xcurrent_app)) ("app"))
                        xtemplate.write (((((xself).xengine).xget_template)).apply ("url-namespace-explicit-current-app"))
                        xcontext.write (((xRequestContext)).apply ((xrequest)))
                        xoutput.write ((((xtemplate).xrender)).apply ((xcontext)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("/ns2/named-client/42/"))
            (((unsupported)).apply ((xSimpleTestCase)))
              xtest_repr.write
                [xself]
                  memory > xurl_node
                  seq > @
                    seq
                      xurl_node.write (((unsupported)).apply ((xURLNode)) ("named-view") ((((unsupported)).apply)) ((((unsupported)).apply)) ("None: is there a None literal in the EO language?"))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xurl_node)))) ("<URLNode view_name='named-view' args=[] kwargs={} as=None>"))
                      xurl_node.write (((unsupported)).apply ((xURLNode)) ("named-view") ((((unsupported)).apply (1) (2))) ((((unsupported)).apply ("action") ("update"))) ("my_url"))
                      bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xrepr)).apply ((xurl_node)))) ("<URLNode view_name='named-view' args=[1, 2] kwargs={'action': 'update'} as='my_url'>"))