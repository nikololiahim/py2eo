memory > xCsOperation
memory > xCsInt
memory > xPOINTER
memory > xCS_PTR
memory > xc_int
memory > xsuper
memory > xCsOutput
memory > xargs
memory > xGEOSException
memory > xkwargs
memory > xGEOM_PTR
memory > xc_double
memory > xc_uint
memory > xstaticmethod
memory > xc_byte
memory > xGEOSFuncFactory
memory > xlast_arg_byref
[] > coordseq
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xargtypes
        memory > xcs_getx
        memory > xrestype
        memory > xcs_getsize
        memory > xcs_getz
        memory > x__init__
        memory > xcs_getdims
        memory > xget_cs
        memory > xcheck_cs_op
        memory > xcs_setordinate
        memory > xcs_sety
        memory > xcs_is_ccw
        memory > xcs_clone
        memory > xcs_setz
        memory > xcs_getordinate
        memory > xerrcheck
        memory > xcs_setx
        memory > xcs_gety
        memory > xcreate_cs
        memory > xcheck_cs_get
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xcheck_cs_op.write
              [xresult xfunc xcargs]
                seq > @
                  seq
                    unsupported
                    ((xresult).eq 0).if
                      (((unsupported)).apply ((((xGEOSException)).apply ("Could not set value on coordinate sequence"))))
                      (((unsupported)).apply ((xresult)))
            xcheck_cs_get.write
              [xresult xfunc xcargs]
                seq > @
                  seq
                    unsupported
                    bogusForceDataize.write (((xcheck_cs_op)).apply ((xcargs)) ((xfunc)) ((xresult)))
                    (((unsupported)).apply ((((xlast_arg_byref)).apply ((xcargs)))))
            (((unsupported)).apply ((xGEOSFuncFactory)))
              seq
                unsupported
                xargtypes.write (((unsupported)).apply ((xCS_PTR)) ((((xPOINTER)).apply ((xc_uint)))))
                xrestype.write (xc_int)
                xerrcheck.write (((xstaticmethod)).apply ((xcheck_cs_get)))
            (((unsupported)).apply ((xGEOSFuncFactory)))
              seq
                unsupported
                xrestype.write (xc_int)
                x__init__.write
                  [xself xordinate xget]
                    memory > xerrcheck
                    memory > xargtypes
                    memory > xdbl_param
                    seq > @
                      (((unsupported)).apply)
                        (xget).if
                          seq
                            xerrcheck.write (xcheck_cs_get)
                            xdbl_param.write (((xPOINTER)).apply ((xc_double)))
                          seq
                            xerrcheck.write (xcheck_cs_op)
                            xdbl_param.write (xc_double)
                        (xordinate).if
                          xargtypes.write (((unsupported)).apply ((xCS_PTR)) ((xc_uint)) ((xc_uint)) ((xdbl_param)))
                          xargtypes.write (((unsupported)).apply ((xCS_PTR)) ((xc_uint)) ((xdbl_param)))
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((((unsupported)).apply ((xkwargs)) ("errcheck") ((xerrcheck)) ("argtypes") ((xargtypes)))))))
            (((unsupported)).apply ((xGEOSFuncFactory)))
              seq
                xrestype.write (xCS_PTR)
                xerrcheck.write
                  [xresult xfunc xcargs]
                    seq > @
                      (((unsupported)).apply)
                        ((xresult).not).if
                          (((unsupported)).apply ((((xGEOSException)).apply (("Error encountered checking Coordinate Sequence returned from GEOS C function \"%s\".".mod ((xfunc).x__name__))))))
                        (((unsupported)).apply ((xresult)))
            xcs_clone.write (((unsupported)).apply ((xCsOutput)) ("GEOSCoordSeq_clone") ((((unsupported)).apply ((xCS_PTR)))))
            xcreate_cs.write (((unsupported)).apply ((xCsOutput)) ("GEOSCoordSeq_create") ((((unsupported)).apply ((xc_uint)) ((xc_uint)))))
            xget_cs.write (((unsupported)).apply ((xCsOutput)) ("GEOSGeom_getCoordSeq") ((((unsupported)).apply ((xGEOM_PTR)))))
            xcs_getordinate.write (((unsupported)).apply ((xCsOperation)) ("GEOSCoordSeq_getOrdinate") (TRUE) (TRUE))
            xcs_setordinate.write (((unsupported)).apply ((xCsOperation)) ("GEOSCoordSeq_setOrdinate") (TRUE))
            xcs_getx.write (((unsupported)).apply ((xCsOperation)) ("GEOSCoordSeq_getX") (TRUE))
            xcs_gety.write (((unsupported)).apply ((xCsOperation)) ("GEOSCoordSeq_getY") (TRUE))
            xcs_getz.write (((unsupported)).apply ((xCsOperation)) ("GEOSCoordSeq_getZ") (TRUE))
            xcs_setx.write (((xCsOperation)).apply ("GEOSCoordSeq_setX"))
            xcs_sety.write (((xCsOperation)).apply ("GEOSCoordSeq_setY"))
            xcs_setz.write (((xCsOperation)).apply ("GEOSCoordSeq_setZ"))
            xcs_getsize.write (((xCsInt)).apply ("GEOSCoordSeq_getSize"))
            xcs_getdims.write (((xCsInt)).apply ("GEOSCoordSeq_getDimensions"))
            xcs_is_ccw.write (((unsupported)).apply ((xGEOSFuncFactory)) ("GEOSCoordSeq_isCCW") ((xc_int)) ((((unsupported)).apply ((xCS_PTR)) ((((xPOINTER)).apply ((xc_byte)))))))