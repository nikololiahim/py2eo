memory > xdecimal
memory > xstr
memory > xopts
memory > xchanged_fields
memory > xKeyError
memory > xsuper
memory > xjson
memory > xTypeError
memory > xadded_object
memory > xk
memory > xreverse
memory > xdeleted_object
memory > xfield
memory > xNoReverseMatch
memory > xtimezone
memory > xAttributeError
memory > xFieldDoesNotExist
memory > x_lazy_re_compile
memory > xdatetime
memory > x_boolean_icon
memory > xlist
memory > xsingular
memory > xNestedObjects
memory > xNotRelationField
memory > xpretty_name
memory > xformats
memory > xLOOKUP_SEP
memory > xngettext
memory > xrouter
memory > xrelated_field
memory > xpiece
memory > xIndexError
memory > xformset
memory > xcallable
memory > xpath
memory > xplural
memory > xany
memory > xset
memory > xint
memory > xException
memory > xhasattr
memory > xproperty
memory > xx
memory > xi
memory > xbool
memory > xCollector
memory > xm
memory > xtuple
memory > xcapfirst
memory > xfloat
memory > xchr
memory > xargs
memory > xobj
memory > xchild
memory > xgetattr
memory > xv
memory > xchanged_object
memory > xdefaultdict
memory > xe
memory > xformat_html
memory > xname
memory > xmodels
memory > xFieldIsAForeignKeyColumnName
memory > xkwargs
memory > xmodel
memory > xisinstance
memory > xfield_name
memory > xlen
memory > xdict
memory > xroot
[] > utils
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xlookup_field
        memory > xquote
        memory > xdisplay_for_value
        memory > x_get_changed_field_labels_from_form
        memory > xcollect
        memory > xQUOTE_MAP
        memory > xtranslation_override
        memory > xget_fields_from_path
        memory > xflatten_fieldsets
        memory > xdisplay_for_field
        memory > xmodel_format_dict
        memory > xreverse_field_path
        memory > xlookup_spawns_duplicates
        memory > xflatten
        memory > x_nested
        memory > xlabel_for_field
        memory > xmodel_ngettext
        memory > xrelated_objects
        memory > xUNQUOTE_RE
        memory > xUNQUOTE_MAP
        memory > xhelp_text_for_field
        memory > xunquote
        memory > xprepare_lookup_value
        memory > x__init__
        memory > xget_deleted_objects
        memory > x_get_non_gfk_field
        memory > xnested
        memory > xcan_fast_delete
        memory > xconstruct_change_message
        memory > xget_model_from_relation
        memory > xadd_edge
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xQUOTE_MAP.write (((unsupported)).apply ((xi)) (("_%02X".mod (xi))) ((xi)) ("\":/_#?;@&=+$,\"[]<>%n\\"))
            xUNQUOTE_MAP.write (((unsupported)).apply ((xv)) ((((xchr)).apply ((xk)))) ((((unsupported)).apply ((xk)) ((xv)))) (((((xQUOTE_MAP).xitems)).apply)))
            xUNQUOTE_RE.write (((x_lazy_re_compile)).apply (("_(?:%s)".mod ((("|".xjoin)).apply ((((unsupported)).apply ((((unsupported)).apply ((xx)) ((((unsupported)).apply (1))))) ((xx)) ((xUNQUOTE_MAP))))))))
            (((unsupported)).apply ((xException)))
              seq
                unsupported
            xlookup_spawns_duplicates.write
              [xopts xlookup_path]
                memory > xfield
                memory > xfield_name
                memory > xlookup_fields
                memory > xpath_info
                seq > @
                  seq
                    (((unsupported)).apply)
                    xlookup_fields.write ((((xlookup_path).xsplit)).apply ((xLOOKUP_SEP)))
                    (((unsupported)).apply ((xfield_name)) ((xlookup_fields)))
                      seq
                        ((xfield_name).eq "pk").if
                          xfield_name.write (((xopts).xpk).xname)
                        (((unsupported)).apply ((xFieldDoesNotExist)))
                          xfield.write ((((xopts).xget_field)).apply ((xfield_name)))
                          (((unsupported)).apply)
                          (((xhasattr)).apply ((xfield)) ("path_infos")).if
                            seq
                              xpath_info.write ((xfield).xpath_infos)
                              xopts.write ((((unsupported)).apply ((xpath_info)) ((1.neg))).xto_opts)
                              (((xany)).apply ((((unsupported)).apply (((xpath).xm2m)) ((xpath)) ((xpath_info))))).if
                                (((unsupported)).apply (TRUE))
                    (((unsupported)).apply (FALSE))
            xprepare_lookup_value.write
              [xkey xvalue xseparator]
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    ((((xkey).xendswith)).apply ("__in")).if
                      xvalue.write ((((xvalue).xsplit)).apply ((xseparator)))
                      ((((xkey).xendswith)).apply ("__isnull")).if
                        xvalue.write (((unsupported)).apply (((((xvalue).xlower)).apply)) ((((unsupported)).apply ("") ("false") ("0"))))
                    (((unsupported)).apply ((xvalue)))
            xquote.write
              [xs]
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((unsupported)).apply (((((xisinstance)).apply ((xs)) ((xstr))).if ((((xs).xtranslate)).apply ((xQUOTE_MAP))) (xs))))
            xunquote.write
              [xs]
                seq > @
                  seq
                    unsupported
                    (((unsupported)).apply (((((xUNQUOTE_RE).xsub)).apply ((((unsupported)).apply ((((unsupported)).apply ((xUNQUOTE_MAP)) ((((unsupported)).apply ((xm)) (0))))))) ((xs)))))
            xflatten.write
              [xfields]
                memory > xflat
                seq > @
                  seq
                    (((unsupported)).apply)
                    xflat.write (((unsupported)).apply)
                    (((unsupported)).apply ((xfield)) ((xfields)))
                      (((xisinstance)).apply ((xfield)) ((((unsupported)).apply ((xlist)) ((xtuple))))).if
                        bogusForceDataize.write ((((xflat).xextend)).apply ((xfield)))
                        bogusForceDataize.write ((((xflat).xappend)).apply ((xfield)))
                    (((unsupported)).apply ((xflat)))
            xflatten_fieldsets.write
              [xfieldsets]
                memory > xfield_names
                seq > @
                  seq
                    unsupported
                    xfield_names.write (((unsupported)).apply)
                    (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xopts)))) ((xfieldsets)))
                      bogusForceDataize.write ((((xfield_names).xextend)).apply ((((xflatten)).apply ((((unsupported)).apply ((xopts)) ("fields"))))))
                    (((unsupported)).apply ((xfield_names)))
            xget_deleted_objects.write
              [xobjs xrequest xadmin_site]
                memory > xusing
                memory > xmodel_count
                memory > xprotected
                memory > xformat_callback
                memory > xobj
                memory > xto_delete
                memory > xcollector
                memory > xperms_needed
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((unsupported)).apply ((xIndexError)))
                      xobj.write (((unsupported)).apply ((xobjs)) (0))
                      (((unsupported)).apply ((((unsupported)).apply ((((unsupported)).apply)) ((((unsupported)).apply)) ((((xset)).apply)) ((((unsupported)).apply)))))
                      xusing.write ((((xrouter).xdb_for_write)).apply ((((xobj).x_meta).xmodel)))
                    xcollector.write (((unsupported)).apply ((xNestedObjects)) ((xusing)) ((xobjs)))
                    bogusForceDataize.write ((((xcollector).xcollect)).apply ((xobjs)))
                    xperms_needed.write (((xset)).apply)
                    xformat_callback.write
                      [xobj]
                        memory > xhas_admin
                        memory > xopts
                        memory > xadmin_url
                        memory > xno_edit_link
                        memory > xmodel
                        seq > @
                          seq
                            xmodel.write ((xobj).x__class__)
                            xhas_admin.write (((unsupported)).apply ((xmodel)) (((xadmin_site).x_registry)))
                            xopts.write ((xobj).x_meta)
                            xno_edit_link.write ("%s: %s".mod (((unsupported)).apply ((((xcapfirst)).apply (((xopts).xverbose_name)))) ((xobj))))
                            (xhas_admin).if
                              seq
                                (((((((unsupported)).apply (((xadmin_site).x_registry)) ((xmodel))).xhas_delete_permission)).apply ((xrequest)) ((xobj))).not).if
                                  bogusForceDataize.write ((((xperms_needed).xadd)).apply (((xopts).xverbose_name)))
                                (((unsupported)).apply ((xNoReverseMatch)))
                                  xadmin_url.write (((xreverse)).apply (("%s:%s_%s_change".mod (((unsupported)).apply (((xadmin_site).xname)) (((xopts).xapp_label)) (((xopts).xmodel_name))))) ("None: is there a None literal in the EO language?") ((((unsupported)).apply ((((xquote)).apply (((xobj).xpk)))))))
                                  (((unsupported)).apply ((xno_edit_link)))
                                (((unsupported)).apply ((((xformat_html)).apply ("{}: <a href=\"{}\">{}</a>") ((((xcapfirst)).apply (((xopts).xverbose_name)))) ((xadmin_url)) ((xobj)))))
                              (((unsupported)).apply ((xno_edit_link)))
                    xto_delete.write ((((xcollector).xnested)).apply ((xformat_callback)))
                    xprotected.write (((unsupported)).apply ((((xformat_callback)).apply ((xobj)))) ((xobj)) (((xcollector).xprotected)))
                    xmodel_count.write (((unsupported)).apply ((((xmodel).x_meta).xverbose_name_plural)) ((((xlen)).apply ((xobjs)))) ((((unsupported)).apply ((xmodel)) ((xobjs)))) ((((((xcollector).xmodel_objs).xitems)).apply)))
                    (((unsupported)).apply ((((unsupported)).apply ((xto_delete)) ((xmodel_count)) ((xperms_needed)) ((xprotected)))))
            (((unsupported)).apply ((xCollector)))
              seq
                x__init__.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).x__init__)).apply ((((unsupported)).apply ((xargs)))) ((((unsupported)).apply ((xkwargs)))))
                        (((unsupported)).apply (((xself).xedges)) ((((unsupported)).apply)))
                        (((unsupported)).apply (((xself).xprotected)) ((((xset)).apply)))
                        (((unsupported)).apply (((xself).xmodel_objs)) ((((xdefaultdict)).apply ((xset)))))
                xadd_edge.write
                  [xself xsource xtarget]
                    seq > @
                      bogusForceDataize.write ((((((((xself).xedges).xsetdefault)).apply ((xsource)) ((((unsupported)).apply))).xappend)).apply ((xtarget)))
                xcollect.write
                  [xself xobjs xsource xsource_attr]
                    memory > xrelated_name
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((xobj)) ((xobjs)))
                          seq
                            ((xsource_attr).and (((((xsource_attr).xendswith)).apply ("+")).not)).if
                              seq
                                xrelated_name.write ((xsource_attr).mod (((unsupported)).apply ("class") ((((xsource).x_meta).xmodel_name)) ("app_label") ((((xsource).x_meta).xapp_label))))
                                bogusForceDataize.write ((((xself).xadd_edge)).apply ((((xgetattr)).apply ((xobj)) ((xrelated_name)))) ((xobj)))
                              bogusForceDataize.write ((((xself).xadd_edge)).apply ("None: is there a None literal in the EO language?") ((xobj)))
                            bogusForceDataize.write ((((((unsupported)).apply (((xself).xmodel_objs)) ((((xobj).x_meta).xmodel))).xadd)).apply ((xobj)))
                        (((unsupported)).apply (((xmodels).xProtectedError)) (((xmodels).xRestrictedError)))
                          (((unsupported)).apply ((((unsupported)).apply (((((xsuper)).apply).xcollect)) ((xobjs)) ((xsource_attr)) ((((unsupported)).apply ((xkwargs)))))))
                          bogusForceDataize.write (((((xself).xprotected).xupdate)).apply (((xe).xprotected_objects)))
                          bogusForceDataize.write (((((xself).xprotected).xupdate)).apply (((xe).xrestricted_objects)))
                xrelated_objects.write
                  [xself xrelated_model xrelated_fields xobjs]
                    memory > xqs
                    seq > @
                      seq
                        xqs.write ((((((xsuper)).apply).xrelated_objects)).apply ((xrelated_model)) ((xrelated_fields)) ((xobjs)))
                        (((unsupported)).apply (((((xqs).xselect_related)).apply ((((unsupported)).apply ((((unsupported)).apply (((xrelated_field).xname)) ((xrelated_field)) ((xrelated_fields)))))))))
                x_nested.write
                  [xself xobj xseen xformat_callback]
                    memory > xret
                    memory > xchildren
                    seq > @
                      seq
                        (((unsupported)).apply ((xobj)) ((xseen))).if
                          (((unsupported)).apply ((((unsupported)).apply)))
                        bogusForceDataize.write ((((xseen).xadd)).apply ((xobj)))
                        xchildren.write (((unsupported)).apply)
                        (((unsupported)).apply ((xchild)) ((((((xself).xedges).xget)).apply ((xobj)) ((((unsupported)).apply)))))
                          bogusForceDataize.write ((((xchildren).xextend)).apply (((((xself).x_nested)).apply ((xchild)) ((xseen)) ((xformat_callback)))))
                        (xformat_callback).if
                          xret.write (((unsupported)).apply ((((xformat_callback)).apply ((xobj)))))
                          xret.write (((unsupported)).apply ((xobj)))
                        (xchildren).if
                          bogusForceDataize.write ((((xret).xappend)).apply ((xchildren)))
                        (((unsupported)).apply ((xret)))
                xnested.write
                  [xself xformat_callback]
                    memory > xroots
                    memory > xseen
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xseen.write (((xset)).apply)
                        xroots.write (((unsupported)).apply)
                        (((unsupported)).apply ((xroot)) ((((((xself).xedges).xget)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply)))))
                          bogusForceDataize.write ((((xroots).xextend)).apply (((((xself).x_nested)).apply ((xroot)) ((xseen)) ((xformat_callback)))))
                        (((unsupported)).apply ((xroots)))
                xcan_fast_delete.write
                  [xself]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        (((unsupported)).apply (FALSE))
            xmodel_format_dict.write
              [xobj]
                memory > xopts
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((xisinstance)).apply ((xobj)) ((((unsupported)).apply (((xmodels).xModel)) ((((xmodels).xbase).xModelBase))))).if
                      xopts.write ((xobj).x_meta)
                      (((xisinstance)).apply ((xobj)) ((((xmodels).xquery).xQuerySet))).if
                        xopts.write (((xobj).xmodel).x_meta)
                        xopts.write (xobj)
                    (((unsupported)).apply ((((unsupported)).apply ("verbose_name") (((xopts).xverbose_name)) ("verbose_name_plural") (((xopts).xverbose_name_plural)))))
            xmodel_ngettext.write
              [xobj xn]
                memory > xd
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    (((xisinstance)).apply ((xobj)) ((((xmodels).xquery).xQuerySet))).if
                      seq
                        (((unsupported)).apply ((xn)) ("None: is there a None literal in the EO language?")).if
                          xn.write ((((xobj).xcount)).apply)
                        xobj.write ((xobj).xmodel)
                    xd.write (((xmodel_format_dict)).apply ((xobj)))
                    (((unsupported)).apply ((((unsupported)).apply ((xsingular)) ((xplural)))) ((((unsupported)).apply ((((unsupported)).apply ((xd)) ("verbose_name"))) ((((unsupported)).apply ((xd)) ("verbose_name_plural"))))))
                    (((unsupported)).apply ((((xngettext)).apply ((xsingular)) ((xplural)) (((xn).or 0)))))
            xlookup_field.write
              [xname xobj xmodel_admin]
                memory > xvalue
                memory > xopts
                memory > xattr
                memory > xf
                seq > @
                  (((unsupported)).apply)
                    xopts.write ((xobj).x_meta)
                    (((unsupported)).apply ((((unsupported)).apply ((xFieldDoesNotExist)) ((xFieldIsAForeignKeyColumnName)))))
                      xf.write (((x_get_non_gfk_field)).apply ((xopts)) ((xname)))
                      seq
                        (((xcallable)).apply ((xname))).if
                          seq
                            xattr.write (xname)
                            xvalue.write (((xattr)).apply ((xobj)))
                          ((((xhasattr)).apply ((xmodel_admin)) ((xname))).and ((xname).neq "__str__")).if
                            seq
                              xattr.write (((xgetattr)).apply ((xmodel_admin)) ((xname)))
                              xvalue.write (((xattr)).apply ((xobj)))
                            seq
                              xattr.write (((xgetattr)).apply ((xobj)) ((xname)))
                              (((xcallable)).apply ((xattr))).if
                                xvalue.write (((xattr)).apply)
                                xvalue.write (xattr)
                        xf.write "None: is there a None literal in the EO language?"
                      seq
                        xattr.write "None: is there a None literal in the EO language?"
                        xvalue.write (((xgetattr)).apply ((xobj)) ((xname)))
                    (((unsupported)).apply ((((unsupported)).apply ((xf)) ((xattr)) ((xvalue)))))
            x_get_non_gfk_field.write
              [xopts xname]
                memory > xfield
                seq > @
                  seq
                    (((unsupported)).apply)
                    xfield.write ((((xopts).xget_field)).apply ((xname)))
                    (((xfield).xis_relation).and ((((xfield).xmany_to_one).and (((xfield).xrelated_model).not)).or ((xfield).xone_to_many))).if
                      (((unsupported)).apply ((((xFieldDoesNotExist)).apply)))
                    (((((xfield).xis_relation).and (((xfield).xmany_to_many).not)).and (((xhasattr)).apply ((xfield)) ("attname"))).and (((xfield).xattname).eq (xname))).if
                      (((unsupported)).apply ((((xFieldIsAForeignKeyColumnName)).apply)))
                    (((unsupported)).apply ((xfield)))
            xlabel_for_field.write
              [xname xmodel xmodel_admin xreturn_attr xform]
                memory > xfield
                memory > xmessage
                memory > xattr
                memory > xlabel
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    xattr.write "None: is there a None literal in the EO language?"
                    (((unsupported)).apply ((xFieldDoesNotExist)) ((xFieldIsAForeignKeyColumnName)))
                      seq
                        xfield.write (((x_get_non_gfk_field)).apply (((xmodel).x_meta)) ((xname)))
                        (((unsupported)).apply ((xAttributeError)))
                          xlabel.write ((xfield).xverbose_name)
                          xlabel.write ((((xfield).xrelated_model).x_meta).xverbose_name)
                      ((xname).eq "__str__").if
                        seq
                          xlabel.write (((xstr)).apply ((((xmodel).x_meta).xverbose_name)))
                          xattr.write (xstr)
                        seq
                          (((xcallable)).apply ((xname))).if
                            xattr.write (xname)
                            (((xhasattr)).apply ((xmodel_admin)) ((xname))).if
                              xattr.write (((xgetattr)).apply ((xmodel_admin)) ((xname)))
                              (((xhasattr)).apply ((xmodel)) ((xname))).if
                                xattr.write (((xgetattr)).apply ((xmodel)) ((xname)))
                                ((xform).and (((unsupported)).apply ((xname)) (((xform).xfields)))).if
                                  xattr.write (((unsupported)).apply (((xform).xfields)) ((xname)))
                                  seq
                                    xmessage.write ("Unable to lookup '%s' on %s".mod (((unsupported)).apply ((xname)) ((((xmodel).x_meta).xobject_name))))
                                    (xmodel_admin).if
                                      (((unsupported)).apply ((xmessage)) ((" or %s".mod (((xmodel_admin).x__class__).x__name__))))
                                    (xform).if
                                      (((unsupported)).apply ((xmessage)) ((" or %s".mod (((xform).x__class__).x__name__))))
                                    (((unsupported)).apply ((((xAttributeError)).apply ((xmessage)))))
                          (((xhasattr)).apply ((xattr)) ("short_description")).if
                            xlabel.write ((xattr).xshort_description)
                            (((((xisinstance)).apply ((xattr)) ((xproperty))).and (((xhasattr)).apply ((xattr)) ("fget"))).and (((xhasattr)).apply (((xattr).xfget)) ("short_description"))).if
                              xlabel.write (((xattr).xfget).xshort_description)
                              (((xcallable)).apply ((xattr))).if
                                (((xattr).x__name__).eq "<lambda>").if
                                  xlabel.write "--"
                                  xlabel.write (((xpretty_name)).apply (((xattr).x__name__)))
                                xlabel.write (((xpretty_name)).apply ((xname)))
                      seq
                        xlabel.write (((xpretty_name)).apply ((xname)))
                        xattr.write (xname)
                    (xreturn_attr).if
                      (((unsupported)).apply ((((unsupported)).apply ((xlabel)) ((xattr)))))
                      (((unsupported)).apply ((xlabel)))
            xhelp_text_for_field.write
              [xname xmodel]
                memory > xfield
                memory > xhelp_text
                seq > @
                  seq
                    xhelp_text.write ""
                    (((unsupported)).apply ((((unsupported)).apply ((xFieldDoesNotExist)) ((xFieldIsAForeignKeyColumnName)))))
                      xfield.write (((x_get_non_gfk_field)).apply (((xmodel).x_meta)) ((xname)))
                      (((xhasattr)).apply ((xfield)) ("help_text")).if
                        xhelp_text.write ((xfield).xhelp_text)
                    (((unsupported)).apply ((xhelp_text)))
            xdisplay_for_field.write
              [xvalue xfield xempty_value_display]
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((xgetattr)).apply ((xfield)) ("flatchoices") ("None: is there a None literal in the EO language?")).if
                      (((unsupported)).apply (((((((xdict)).apply (((xfield).xflatchoices))).xget)).apply ((xvalue)) ((xempty_value_display)))))
                      (((xisinstance)).apply ((xfield)) (((xmodels).xBooleanField))).if
                        (((unsupported)).apply ((((x_boolean_icon)).apply ((xvalue)))))
                        (((unsupported)).apply ((xvalue)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((xempty_value_display)))
                          (((xisinstance)).apply ((xfield)) (((xmodels).xDateTimeField))).if
                            (((unsupported)).apply (((((xformats).xlocalize)).apply (((((xtimezone).xtemplate_localtime)).apply ((xvalue)))))))
                            (((xisinstance)).apply ((xfield)) ((((unsupported)).apply (((xmodels).xDateField)) (((xmodels).xTimeField))))).if
                              (((unsupported)).apply (((((xformats).xlocalize)).apply ((xvalue)))))
                              (((xisinstance)).apply ((xfield)) (((xmodels).xDecimalField))).if
                                (((unsupported)).apply (((((xformats).xnumber_format)).apply ((xvalue)) (((xfield).xdecimal_places)))))
                                (((xisinstance)).apply ((xfield)) ((((unsupported)).apply (((xmodels).xIntegerField)) (((xmodels).xFloatField))))).if
                                  (((unsupported)).apply (((((xformats).xnumber_format)).apply ((xvalue)))))
                                  ((((xisinstance)).apply ((xfield)) (((xmodels).xFileField))).and (xvalue)).if
                                    (((unsupported)).apply ((((xformat_html)).apply ("<a href=\"{}\">{}</a>") (((xvalue).xurl)) ((xvalue)))))
                                    ((((xisinstance)).apply ((xfield)) (((xmodels).xJSONField))).and (xvalue)).if
                                      (((unsupported)).apply ((xTypeError)))
                                        (((unsupported)).apply ((((unsupported)).apply (((xjson).xdumps)) ((xvalue)) (FALSE) (((xfield).xencoder)))))
                                        (((unsupported)).apply ((((xdisplay_for_value)).apply ((xvalue)) ((xempty_value_display)))))
                                      (((unsupported)).apply ((((xdisplay_for_value)).apply ((xvalue)) ((xempty_value_display)))))
            xdisplay_for_value.write
              [xvalue xempty_value_display xboolean]
                seq > @
                  (((unsupported)).apply)
                    (((unsupported)).apply)
                    (xboolean).if
                      (((unsupported)).apply ((((x_boolean_icon)).apply ((xvalue)))))
                      (((unsupported)).apply ((xvalue)) ("None: is there a None literal in the EO language?")).if
                        (((unsupported)).apply ((xempty_value_display)))
                        (((xisinstance)).apply ((xvalue)) ((xbool))).if
                          (((unsupported)).apply ((((xstr)).apply ((xvalue)))))
                          (((xisinstance)).apply ((xvalue)) (((xdatetime).xdatetime))).if
                            (((unsupported)).apply (((((xformats).xlocalize)).apply (((((xtimezone).xtemplate_localtime)).apply ((xvalue)))))))
                            (((xisinstance)).apply ((xvalue)) ((((unsupported)).apply (((xdatetime).xdate)) (((xdatetime).xtime))))).if
                              (((unsupported)).apply (((((xformats).xlocalize)).apply ((xvalue)))))
                              (((xisinstance)).apply ((xvalue)) ((((unsupported)).apply ((xint)) (((xdecimal).xDecimal)) ((xfloat))))).if
                                (((unsupported)).apply (((((xformats).xnumber_format)).apply ((xvalue)))))
                                (((xisinstance)).apply ((xvalue)) ((((unsupported)).apply ((xlist)) ((xtuple))))).if
                                  (((unsupported)).apply ((((", ".xjoin)).apply ((((unsupported)).apply ((((xstr)).apply ((xv)))) ((xv)) ((xvalue)))))))
                                  (((unsupported)).apply ((((xstr)).apply ((xvalue)))))
            (((unsupported)).apply ((xException)))
            xget_model_from_relation.write
              [xfield]
                seq > @
                  (((xhasattr)).apply ((xfield)) ("path_infos")).if
                    (((unsupported)).apply ((((((unsupported)).apply (((xfield).xpath_infos)) ((1.neg))).xto_opts).xmodel)))
                    (((unsupported)).apply ((xNotRelationField)))
            xreverse_field_path.write
              [xmodel xpath]
                memory > xfield
                memory > xparent
                memory > xpieces
                memory > xreversed_path
                memory > xrelated_name
                seq > @
                  seq
                    (((unsupported)).apply)
                    xreversed_path.write (((unsupported)).apply)
                    xparent.write (xmodel)
                    xpieces.write ((((xpath).xsplit)).apply ((xLOOKUP_SEP)))
                    (((unsupported)).apply ((xpiece)) ((xpieces)))
                      seq
                        xfield.write (((((xparent).x_meta).xget_field)).apply ((xpiece)))
                        ((((xlen)).apply ((xreversed_path))).eq ((((xlen)).apply ((xpieces))).sub 1)).if
                          (((unsupported)).apply ((xNotRelationField)))
                            bogusForceDataize.write (((xget_model_from_relation)).apply ((xfield)))
                            (((unsupported)).apply)
                        (((xfield).xis_relation).and ((((xfield).xauto_created).and (((xfield).xconcrete).not)).not)).if
                          seq
                            xrelated_name.write ((((xfield).xrelated_query_name)).apply)
                            xparent.write (((xfield).xremote_field).xmodel)
                          seq
                            xrelated_name.write (((xfield).xfield).xname)
                            xparent.write ((xfield).xrelated_model)
                        bogusForceDataize.write ((((xreversed_path).xinsert)).apply (0) ((xrelated_name)))
                    (((unsupported)).apply ((((unsupported)).apply ((xparent)) (((((xLOOKUP_SEP).xjoin)).apply ((xreversed_path)))))))
            xget_fields_from_path.write
              [xmodel xpath]
                memory > xpieces
                memory > xparent
                memory > xfields
                seq > @
                  seq
                    (((unsupported)).apply)
                    xpieces.write ((((xpath).xsplit)).apply ((xLOOKUP_SEP)))
                    xfields.write (((unsupported)).apply)
                    (((unsupported)).apply ((xpiece)) ((xpieces)))
                      seq
                        (xfields).if
                          xparent.write (((xget_model_from_relation)).apply ((((unsupported)).apply ((xfields)) ((1.neg)))))
                          xparent.write (xmodel)
                        bogusForceDataize.write ((((xfields).xappend)).apply ((((((xparent).x_meta).xget_field)).apply ((xpiece)))))
                    (((unsupported)).apply ((xfields)))
            xconstruct_change_message.write
              [xform xformsets xadd]
                memory > xchanged_data
                memory > xchanged_field_labels
                memory > xchange_message
                seq > @
                  seq
                    (((unsupported)).apply)
                    xchanged_data.write ((xform).xchanged_data)
                    (((unsupported)).apply ((((xtranslation_override)).apply ("None: is there a None literal in the EO language?"))))
                      xchanged_field_labels.write (((x_get_changed_field_labels_from_form)).apply ((xform)) ((xchanged_data)))
                    xchange_message.write (((unsupported)).apply)
                    (xadd).if
                      bogusForceDataize.write ((((xchange_message).xappend)).apply ((((unsupported)).apply ("added") ((((unsupported)).apply)))))
                      ((xform).xchanged_data).if
                        bogusForceDataize.write ((((xchange_message).xappend)).apply ((((unsupported)).apply ("changed") ((((unsupported)).apply ("fields") ((xchanged_field_labels)))))))
                    (xformsets).if
                      (((unsupported)).apply ((((xtranslation_override)).apply ("None: is there a None literal in the EO language?"))))
                        (((unsupported)).apply ((xformset)) ((xformsets)))
                          seq
                            (((unsupported)).apply ((xadded_object)) (((xformset).xnew_objects)))
                              bogusForceDataize.write ((((xchange_message).xappend)).apply ((((unsupported)).apply ("added") ((((unsupported)).apply ("name") ((((xstr)).apply ((((xadded_object).x_meta).xverbose_name)))) ("object") ((((xstr)).apply ((xadded_object)))))))))
                            (((unsupported)).apply ((((unsupported)).apply ((xchanged_object)) ((xchanged_fields)))) (((xformset).xchanged_objects)))
                              bogusForceDataize.write ((((xchange_message).xappend)).apply ((((unsupported)).apply ("changed") ((((unsupported)).apply ("name") ((((xstr)).apply ((((xchanged_object).x_meta).xverbose_name)))) ("object") ((((xstr)).apply ((xchanged_object)))) ("fields") ((((x_get_changed_field_labels_from_form)).apply ((((unsupported)).apply (((xformset).xforms)) (0))) ((xchanged_fields)))))))))
                            (((unsupported)).apply ((xdeleted_object)) (((xformset).xdeleted_objects)))
                              bogusForceDataize.write ((((xchange_message).xappend)).apply ((((unsupported)).apply ("deleted") ((((unsupported)).apply ("name") ((((xstr)).apply ((((xdeleted_object).x_meta).xverbose_name)))) ("object") ((((xstr)).apply ((xdeleted_object)))))))))
                    (((unsupported)).apply ((xchange_message)))
            x_get_changed_field_labels_from_form.write
              [xform xchanged_data]
                memory > xverbose_field_name
                memory > xchanged_field_labels
                seq > @
                  seq
                    xchanged_field_labels.write (((unsupported)).apply)
                    (((unsupported)).apply ((xfield_name)) ((xchanged_data)))
                      seq
                        (((unsupported)).apply ((xKeyError)))
                          xverbose_field_name.write (((((unsupported)).apply (((xform).xfields)) ((xfield_name))).xlabel).or (xfield_name))
                          xverbose_field_name.write (xfield_name)
                        bogusForceDataize.write ((((xchanged_field_labels).xappend)).apply ((((xstr)).apply ((xverbose_field_name)))))
                    (((unsupported)).apply ((xchanged_field_labels)))