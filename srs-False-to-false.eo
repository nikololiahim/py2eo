memory > xvoid_output
memory > xfalse
memory > xdouble_output
memory > xGDAL_VERSION
memory > xsrs_output
memory > xPOINTER
memory > xc_int
memory > xc_char_p
memory > xconst_string_output
memory > xint_output
memory > xc_void_p
memory > xstd_call
memory > xlgdal
memory > xstring_output
[] > srs
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xunits_func
        memory > xdestroy_ct
        memory > xnew_ct
        memory > xsemi_major
        memory > xislocal
        memory > xinvflattening
        memory > xangular_units
        memory > xclone_srs
        memory > xto_wkt
        memory > xset_axis_strategy
        memory > xmorph_to_esri
        memory > xsrs_validate
        memory > xlinear_units
        memory > xmorph_from_esri
        memory > xget_attr_value
        memory > xisgeographic
        memory > xfrom_proj
        memory > xfrom_epsg
        memory > xsrs_double
        memory > xto_pretty_wkt
        memory > xto_proj
        memory > xisprojected
        memory > xnew_srs
        memory > xfrom_user_input
        memory > xget_auth_name
        memory > xget_auth_code
        memory > xdestroy_srs
        memory > xto_xml
        memory > xidentify_epsg
        memory > xrelease_srs
        memory > xfrom_wkt
        memory > xsemi_minor
        memory > xfrom_xml
        seq > @
          seq
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            xsrs_double.write
              [xf]
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((unsupported)).apply ((((unsupported)).apply ((xdouble_output)) ((xf)) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_int)))))) (TRUE))))
            xunits_func.write
              [xf]
                seq > @
                  seq
                    (((unsupported)).apply)
                    (((unsupported)).apply ((((unsupported)).apply ((xdouble_output)) ((xf)) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_char_p)))))) (TRUE))))
            xclone_srs.write (((xsrs_output)).apply ((((xstd_call)).apply ("OSRClone"))) ((((unsupported)).apply ((xc_void_p)))))
            xnew_srs.write (((xsrs_output)).apply ((((xstd_call)).apply ("OSRNewSpatialReference"))) ((((unsupported)).apply ((xc_char_p)))))
            xrelease_srs.write (((unsupported)).apply ((xvoid_output)) (((xlgdal).xOSRRelease)) ((((unsupported)).apply ((xc_void_p)))) ((xfalse)))
            xdestroy_srs.write (((unsupported)).apply ((xvoid_output)) ((((xstd_call)).apply ("OSRDestroySpatialReference"))) ((((unsupported)).apply ((xc_void_p)))) ((xfalse)))
            xsrs_validate.write (((xvoid_output)).apply (((xlgdal).xOSRValidate)) ((((unsupported)).apply ((xc_void_p)))))
            ((xGDAL_VERSION).geq (((unsupported)).apply (3) (0))).if
              xset_axis_strategy.write (((unsupported)).apply ((xvoid_output)) (((xlgdal).xOSRSetAxisMappingStrategy)) ((((unsupported)).apply ((xc_void_p)) ((xc_int)))) ((xfalse)))
            xsemi_major.write (((xsrs_double)).apply (((xlgdal).xOSRGetSemiMajor)))
            xsemi_minor.write (((xsrs_double)).apply (((xlgdal).xOSRGetSemiMinor)))
            xinvflattening.write (((xsrs_double)).apply (((xlgdal).xOSRGetInvFlattening)))
            xfrom_wkt.write (((xvoid_output)).apply (((xlgdal).xOSRImportFromWkt)) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_char_p)))))))
            xfrom_proj.write (((xvoid_output)).apply (((xlgdal).xOSRImportFromProj4)) ((((unsupported)).apply ((xc_void_p)) ((xc_char_p)))))
            xfrom_epsg.write (((xvoid_output)).apply ((((xstd_call)).apply ("OSRImportFromEPSG"))) ((((unsupported)).apply ((xc_void_p)) ((xc_int)))))
            xfrom_xml.write (((xvoid_output)).apply (((xlgdal).xOSRImportFromXML)) ((((unsupported)).apply ((xc_void_p)) ((xc_char_p)))))
            xfrom_user_input.write (((xvoid_output)).apply ((((xstd_call)).apply ("OSRSetFromUserInput"))) ((((unsupported)).apply ((xc_void_p)) ((xc_char_p)))))
            xmorph_to_esri.write (((xvoid_output)).apply (((xlgdal).xOSRMorphToESRI)) ((((unsupported)).apply ((xc_void_p)))))
            xmorph_from_esri.write (((xvoid_output)).apply (((xlgdal).xOSRMorphFromESRI)) ((((unsupported)).apply ((xc_void_p)))))
            xidentify_epsg.write (((xvoid_output)).apply (((xlgdal).xOSRAutoIdentifyEPSG)) ((((unsupported)).apply ((xc_void_p)))))
            xlinear_units.write (((xunits_func)).apply (((xlgdal).xOSRGetLinearUnits)))
            xangular_units.write (((xunits_func)).apply (((xlgdal).xOSRGetAngularUnits)))
            xto_wkt.write (((unsupported)).apply ((xstring_output)) ((((xstd_call)).apply ("OSRExportToWkt"))) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_char_p)))))) ("utf-8"))
            xto_proj.write (((unsupported)).apply ((xstring_output)) ((((xstd_call)).apply ("OSRExportToProj4"))) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_char_p)))))) ("ascii"))
            xto_pretty_wkt.write (((unsupported)).apply ((xstring_output)) ((((xstd_call)).apply ("OSRExportToPrettyWkt"))) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_char_p)))) ((xc_int)))) ((2.neg)) ("utf-8"))
            xto_xml.write (((unsupported)).apply ((xstring_output)) (((xlgdal).xOSRExportToXML)) ((((unsupported)).apply ((xc_void_p)) ((((xPOINTER)).apply ((xc_char_p)))) ((xc_char_p)))) ((2.neg)) ("utf-8"))
            xget_attr_value.write (((unsupported)).apply ((xconst_string_output)) ((((xstd_call)).apply ("OSRGetAttrValue"))) ((((unsupported)).apply ((xc_void_p)) ((xc_char_p)) ((xc_int)))) ("utf-8"))
            xget_auth_name.write (((unsupported)).apply ((xconst_string_output)) (((xlgdal).xOSRGetAuthorityName)) ((((unsupported)).apply ((xc_void_p)) ((xc_char_p)))) ("ascii"))
            xget_auth_code.write (((unsupported)).apply ((xconst_string_output)) (((xlgdal).xOSRGetAuthorityCode)) ((((unsupported)).apply ((xc_void_p)) ((xc_char_p)))) ("ascii"))
            xisgeographic.write (((xint_output)).apply (((xlgdal).xOSRIsGeographic)) ((((unsupported)).apply ((xc_void_p)))))
            xislocal.write (((xint_output)).apply (((xlgdal).xOSRIsLocal)) ((((unsupported)).apply ((xc_void_p)))))
            xisprojected.write (((xint_output)).apply (((xlgdal).xOSRIsProjected)) ((((unsupported)).apply ((xc_void_p)))))
            xnew_ct.write (((xsrs_output)).apply ((((xstd_call)).apply ("OCTNewCoordinateTransformation"))) ((((unsupported)).apply ((xc_void_p)) ((xc_void_p)))))
            xdestroy_ct.write (((unsupported)).apply ((xvoid_output)) ((((xstd_call)).apply ("OCTDestroyCoordinateTransformation"))) ((((unsupported)).apply ((xc_void_p)))) ((xfalse)))