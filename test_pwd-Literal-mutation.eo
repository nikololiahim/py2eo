memory > xd
memory > xu
memory > xlist
memory > xstr
memory > xg
memory > xrange
memory > xIndexError
memory > xKeyError
memory > xp
memory > xtype
memory > xint
memory > xhasattr
memory > xi
memory > xchr
memory > xgecos
memory > xe
memory > xn
memory > xlen
memory > xs
memory > xsupport
memory > xsys
memory > xord
memory > xunittest
memory > xTypeError
memory > x__name__
[] > test_pwd
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_errors
        memory > xpwd
        memory > xtest_values
        memory > xtest_values_extended
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xpwd.write ((((xsupport).ximport_module)).apply ("pwd"))
            (((unsupported)).apply (((xunittest).xTestCase)) (((((xunittest).xskipUnless)).apply ((((xhasattr)).apply ((xpwd)) ("getpwall"))) ("Does not have getpwall()"))))
              seq
                xtest_values.write
                  [xself]
                    memory > xentries
                    seq > @
                      seq
                        xentries.write ((((xpwd).xgetpwall)).apply)
                        (((unsupported)).apply ((xe)) ((xentries)))
                          seq
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xe)))) (7))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (0))) (((xe).xpw_name)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xe).xpw_name)) ((xstr)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (1))) (((xe).xpw_passwd)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xe).xpw_passwd)) ((xstr)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (2))) (((xe).xpw_uid)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xe).xpw_uid)) ((xint)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (3))) (((xe).xpw_gid)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xe).xpw_gid)) ((xint)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (4))) (((xe).xpw_gecos)))
                            bogusForceDataize.write ((((xself).xassertIn)).apply ((((xtype)).apply (((xe).xpw_gecos)))) ((((unsupported)).apply ((xstr)) ((((xtype)).apply ("None: is there a None literal in the EO language?"))))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (5))) (((xe).xpw_dir)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xe).xpw_dir)) ((xstr)))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xe)) (6))) (((xe).xpw_shell)))
                            bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((xe).xpw_shell)) ((xstr)))
                xtest_values_extended.write
                  [xself]
                    memory > xentries
                    memory > xentriesbyuid
                    memory > xentriesbyname
                    seq > @
                      seq
                        xentries.write ((((xpwd).xgetpwall)).apply)
                        xentriesbyname.write (((unsupported)).apply)
                        xentriesbyuid.write (((unsupported)).apply)
                        ((((xlen)).apply ((xentries))).greater 1000).if
                          bogusForceDataize.write ((((xself).xskipTest)).apply ("passwd file is huge; extended test skipped"))
                        (((unsupported)).apply ((xe)) ((xentries)))
                          seq
                            bogusForceDataize.write (((((((xentriesbyname).xsetdefault)).apply (((xe).xpw_name)) ((((unsupported)).apply))).xappend)).apply ((xe)))
                            bogusForceDataize.write (((((((xentriesbyuid).xsetdefault)).apply (((xe).xpw_uid)) ((((unsupported)).apply))).xappend)).apply ((xe)))
                        (((unsupported)).apply ((xe)) ((xentries)))
                          seq
                            (((((unsupported)).apply ((xe)) (0)).not).or ((((unsupported)).apply ((xe)) (0)).eq "+")).if
                              (((unsupported)).apply)
                            bogusForceDataize.write ((((xself).xassertIn)).apply (((((xpwd).xgetpwnam)).apply (((xe).xpw_name)))) ((((unsupported)).apply ((xentriesbyname)) (((xe).xpw_name)))))
                            bogusForceDataize.write ((((xself).xassertIn)).apply (((((xpwd).xgetpwuid)).apply (((xe).xpw_uid)))) ((((unsupported)).apply ((xentriesbyuid)) (((xe).xpw_uid)))))
                xtest_errors.write
                  [xself]
                    memory > xfakeuid
                    memory > xfakename
                    memory > xbynames
                    memory > xchars
                    memory > xnamei
                    memory > xbyuids
                    memory > xallnames
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xpwd).xgetpwuid)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xpwd).xgetpwuid)) (3.14))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xpwd).xgetpwnam)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xpwd).xgetpwnam)) (42))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xTypeError)) (((xpwd).xgetpwall)) (42))
                        xbynames.write (((unsupported)).apply)
                        xbyuids.write (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply ((xn)) ((xp)) ((xu)) ((xg)) ((xgecos)) ((xd)) ((xs)))) (((((xpwd).xgetpwall)).apply)))
                          seq
                            (((unsupported)).apply ((((unsupported)).apply ((xbynames)) ((xn)))) ((xu)))
                            (((unsupported)).apply ((((unsupported)).apply ((xbyuids)) ((xu)))) ((xn)))
                        xallnames.write (((xlist)).apply (((((xbynames).xkeys)).apply)))
                        xnamei.write 0
                        xfakename.write (((unsupported)).apply ((xallnames)) ((xnamei)))
                        while.
                          (((unsupported)).apply ((xfakename)) ((xbynames)))
                          [unused]
                            seq > @
                              seq
                                xchars.write (((xlist)).apply ((xfakename)))
                                (((unsupported)).apply ((xi)) ((((xrange)).apply ((((xlen)).apply ((xchars)))))))
                                  ((((unsupported)).apply ((xchars)) ((xi))).eq "z").if
                                    seq
                                      (((unsupported)).apply ((((unsupported)).apply ((xchars)) ((xi)))) ("A"))
                                      (((unsupported)).apply)
                                    ((((unsupported)).apply ((xchars)) ((xi))).eq "Z").if
                                      (((unsupported)).apply)
                                      seq
                                        (((unsupported)).apply ((((unsupported)).apply ((xchars)) ((xi)))) ((((xchr)).apply (((((xord)).apply ((((unsupported)).apply ((xchars)) ((xi))))).add 1)))))
                                        (((unsupported)).apply)
                                  seq
                                    xnamei.write ((xnamei).add 1)
                                    (((unsupported)).apply ((xIndexError)))
                                      xfakename.write (((unsupported)).apply ((xallnames)) ((xnamei)))
                                      (((unsupported)).apply)
                                xfakename.write ((("".xjoin)).apply ((xchars)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xpwd).xgetpwnam)) ((xfakename)))
                        xfakeuid.write ((xsys).xmaxsize)
                        bogusForceDataize.write ((((xself).xassertNotIn)).apply ((xfakeuid)) ((xbyuids)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xpwd).xgetpwuid)) ((xfakeuid)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xpwd).xgetpwuid)) ((1.neg)))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xpwd).xgetpwuid)) ((((unsupported)).apply (2) (128))))
                        bogusForceDataize.write ((((xself).xassertRaises)).apply ((xKeyError)) (((xpwd).xgetpwuid)) (((((unsupported)).apply (2) (128)).neg)))
            ((x__name__).eq "__main__").if
              bogusForceDataize.write ((((xunittest).xmain)).apply)