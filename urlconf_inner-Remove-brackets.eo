memory > xContext
memory > xpath
memory > xHttpResponse
memory > xTemplate
[] > urlconf_inner
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xinner_view
        memory > xurlpatterns
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            xinner_view.write
              [xrequest]
                memory > xcontent
                seq > @
                  seq
                    xcontent.write ((((((xTemplate)).apply ("{% url \"outer\" as outer_url %}outer:{{ outer_url }},{% url \"inner\" as inner_url %}inner:{{ inner_url }}")).xrender)).apply ((xContext)))
                    (((unsupported)).apply ((((xHttpResponse)).apply ((xcontent)))))
            xurlpatterns.write (((unsupported)).apply ((((unsupported)).apply ((xpath)) ("second_test/") ((xinner_view)) ("inner"))))