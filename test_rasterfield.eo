memory > xfield
memory > xRasterRelatedModel
memory > xDistanceLookupBase
memory > xValueError
memory > xQ
memory > xBaseSpatialField
memory > xrange
memory > xconnection
memory > xnumpy
memory > xGDALRaster
memory > xk
memory > xD
memory > xenumerate
memory > xFunc
memory > xlookup
memory > xPostGISOperations
memory > xx
memory > xDistance
memory > xTransactionTestCase
memory > xF
memory > xissubclass
memory > xexp
memory > xCaptureQueriesContext
memory > xval
memory > xv
memory > xqueries
memory > xskipUnlessDBFeature
memory > xname
memory > xzip
memory > xJSON_RASTER
memory > xRasterModel
memory > xn
memory > xjson
memory > xGISLookup
memory > xGEOSGeometry
memory > xlen
memory > xTypeError
memory > xcombo
[] > test_rasterfield
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_lhs_with_index_rhs_without_index
        memory > xtest_lookup_with_polygonized_raster
        memory > xtest_verbose_name_arg
        memory > xtest_dwithin_gis_lookup_output_with_rasters
        memory > xsetUp
        memory > xtest_field_null_value
        memory > xtest_result_of_gis_lookup_with_rasters
        memory > xtest_lookup_with_raster_bbox
        memory > xtest_db_function_errors
        memory > xavailable_apps
        memory > xtest_implicit_raster_transformation
        memory > xtest_deserialize_with_pixeltype_flags
        memory > xtest_isvalid_lookup_with_raster_error
        memory > xtest_lookup_input_band_not_allowed
        memory > xtest_lookup_input_tuple_too_long
        memory > xtest_all_gis_lookups_with_rasters
        memory > xtest_model_creation
        memory > xtest_access_band_data_directly_from_queryset
        memory > xtest_lookup_value_error
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply ((xTransactionTestCase)) ((((xskipUnlessDBFeature)).apply ("supports_raster"))))
              seq
                xavailable_apps.write (((unsupported)).apply ("gis_tests.rasterapp"))
                xsetUp.write
                  [xself]
                    memory > xrast
                    memory > xmodel_instance
                    seq > @
                      seq
                        xrast.write (((xGDALRaster)).apply ((((unsupported)).apply ("srid") (4326) ("origin") ((((unsupported)).apply (0) (0))) ("scale") ((((unsupported)).apply ((1.neg)) (1))) ("skew") ((((unsupported)).apply (0) (0))) ("width") (5) ("height") (5) ("nr_of_bands") (2) ("bands") ((((unsupported)).apply ((((unsupported)).apply ("data") ((((xrange)).apply (25))))) ((((unsupported)).apply ("data") ((((xrange)).apply (25) (50))))))))))
                        xmodel_instance.write (((unsupported)).apply ((((xRasterModel).xobjects).xcreate)) ((xrast)) ((xrast)) ("POINT (-95.37040 29.70486)"))
                        (((unsupported)).apply ((((xRasterRelatedModel).xobjects).xcreate)) ((xmodel_instance)))
                xtest_field_null_value.write
                  [xself]
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xr.write (((unsupported)).apply ((((xRasterModel).xobjects).xcreate)) ("None: is there a None literal in the EO language?"))
                        bogusForceDataize.write ((((xr).xrefresh_from_db)).apply)
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((xr).xrast)))
                xtest_access_band_data_directly_from_queryset.write
                  [xself]
                    memory > xqs
                    seq > @
                      seq
                        (((unsupported)).apply ((((xRasterModel).xobjects).xcreate)) ((xJSON_RASTER)))
                        xqs.write (((((xRasterModel).xobjects).xall)).apply)
                        bogusForceDataize.write ((((((unsupported)).apply ((((((unsupported)).apply ((xqs)) (0)).xrast).xbands)) (0)).xdata)).apply)
                xtest_deserialize_with_pixeltype_flags.write
                  [xself]
                    memory > xband
                    memory > xno_data
                    memory > xr
                    memory > xrast
                    seq > @
                      seq
                        xno_data.write 3
                        xrast.write (((xGDALRaster)).apply ((((unsupported)).apply ("srid") (4326) ("origin") ((((unsupported)).apply (0) (0))) ("scale") ((((unsupported)).apply ((1.neg)) (1))) ("skew") ((((unsupported)).apply (0) (0))) ("width") (1) ("height") (1) ("nr_of_bands") (1) ("bands") ((((unsupported)).apply ((((unsupported)).apply ("data") ((((unsupported)).apply ((xno_data)))) ("nodata_value") ((xno_data)))))))))
                        xr.write (((unsupported)).apply ((((xRasterModel).xobjects).xcreate)) ((xrast)))
                        (((unsupported)).apply (((((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) (((xr).xpk))).xupdate)) ((((unsupported)).apply ((xFunc)) ((((xF)).apply ("rast"))) ("ST_SetBandIsNoData"))))
                        bogusForceDataize.write ((((xr).xrefresh_from_db)).apply)
                        xband.write ((((((unsupported)).apply ((((xr).xrast).xbands)) (0)).xdata)).apply)
                        (xnumpy).if
                          xband.write (((((((xband).xflatten)).apply).xtolist)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xband)) ((((unsupported)).apply ((xno_data)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((unsupported)).apply ((((xr).xrast).xbands)) (0)).xnodata_value)) ((xno_data)))
                xtest_model_creation.write
                  [xself]
                    memory > xband
                    memory > xr
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xr.write (((unsupported)).apply ((((xRasterModel).xobjects).xcreate)) ((xJSON_RASTER)))
                        bogusForceDataize.write ((((xr).xrefresh_from_db)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (5) (5))) ((((unsupported)).apply ((((xr).xrast).xwidth)) ((((xr).xrast).xheight)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (0.0) ((1.0.neg)) (0.0) (0.0) (0.0) (1.0))) ((((xr).xrast).xgeotransform)))
                        bogusForceDataize.write ((((xself).xassertIsNone)).apply (((((unsupported)).apply ((((xr).xrast).xbands)) (0)).xnodata_value)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xr).xrast).xsrs).xsrid)) (4326))
                        xband.write ((((((unsupported)).apply ((((xr).xrast).xbands)) (0)).xdata)).apply)
                        (xnumpy).if
                          xband.write (((((((xband).xflatten)).apply).xtolist)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply (0.0) (1.0) (2.0) (3.0) (4.0) (5.0) (6.0) (7.0) (8.0) (9.0) (10.0) (11.0) (12.0) (13.0) (14.0) (15.0) (16.0) (17.0) (18.0) (19.0) (20.0) (21.0) (22.0) (23.0) (24.0))) ((xband)))
                xtest_implicit_raster_transformation.write
                  [xself]
                    memory > xexpected
                    memory > xr
                    memory > xrast
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xrast.write ((((xjson).xloads)).apply ((xJSON_RASTER)))
                        (((unsupported)).apply ((((unsupported)).apply ((xrast)) ("srid"))) (3086))
                        xr.write (((unsupported)).apply ((((xRasterModel).xobjects).xcreate)) ((xrast)))
                        bogusForceDataize.write ((((xr).xrefresh_from_db)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xr).xrast).xsrs).xsrid)) (4326))
                        xexpected.write (((unsupported)).apply ((87.9298551266551.neg)) ((((unsupported)).apply)) (0.0) (23.94249275457565) (0.0) (((((unsupported)).apply).neg)))
                        (((unsupported)).apply ((((unsupported)).apply ((xval)) ((xexp)))) ((((xzip)).apply ((((xr).xrast).xgeotransform)) ((xexpected)))))
                          bogusForceDataize.write ((((xself).xassertAlmostEqual)).apply ((xexp)) ((xval)))
                xtest_verbose_name_arg.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((((xRasterModel).x_meta).xget_field)).apply ("rast")).xverbose_name)) ("A Verbose Raster Name"))
                xtest_all_gis_lookups_with_rasters.write
                  [xself]
                    memory > xqs
                    memory > xstx_pnt
                    memory > xlookups
                    memory > xcombo_keys
                    memory > xcombos
                    memory > xrast
                    memory > xcombo_values
                    seq > @
                      seq
                        (((unsupported)).apply)
                        (((unsupported)).apply)
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        xstx_pnt.write (((xGEOSGeometry)).apply ("POINT (-95.370401017314293 29.704867409475465)") (4326))
                        bogusForceDataize.write ((((xstx_pnt).xtransform)).apply (3086))
                        xlookups.write (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xlookup)))) ((((unsupported)).apply ((xname)) ((xlookup)))) ((((((((xBaseSpatialField).xget_lookups)).apply).xitems)).apply)) ((((xissubclass)).apply ((xlookup)) ((xGISLookup)))))
                        bogusForceDataize.write ((((xself).xassertNotEqual)).apply ((xlookups)) ((((unsupported)).apply)) ("No lookups found"))
                        (((unsupported)).apply ((((unsupported)).apply ((xname)) ((xlookup)))) ((xlookups)))
                          seq
                            xcombo_keys.write (((unsupported)).apply (((xfield).add (xname))) ((xfield)) ((((unsupported)).apply ("rast__") ("rast__") ("rastprojected__0__") ("rast__") ("rastprojected__") ("geom__") ("rast__"))))
                            (((xissubclass)).apply ((xlookup)) ((xDistanceLookupBase))).if
                              xcombo_values.write (((unsupported)).apply ((((unsupported)).apply ((xrast)) (50) ("spheroid"))) ((((unsupported)).apply ((xrast)) (0) (50) ("spheroid"))) ((((unsupported)).apply ((xrast)) (0) ((((unsupported)).apply ((xD)) (1))))) ((((unsupported)).apply ((xstx_pnt)) (0) (500))) ((((unsupported)).apply ((xstx_pnt)) ((((unsupported)).apply ((xD)) (1000))))) ((((unsupported)).apply ((xrast)) (500))) ((((unsupported)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))) (500))))
                              ((xname).eq "relate").if
                                xcombo_values.write (((unsupported)).apply ((((unsupported)).apply ((xrast)) ("T*T***FF*"))) ((((unsupported)).apply ((xrast)) (0) ("T*T***FF*"))) ((((unsupported)).apply ((xrast)) (0) ("T*T***FF*"))) ((((unsupported)).apply ((xstx_pnt)) (0) ("T*T***FF*"))) ((((unsupported)).apply ((xstx_pnt)) ("T*T***FF*"))) ((((unsupported)).apply ((xrast)) ("T*T***FF*"))) ((((unsupported)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))) ("T*T***FF*"))))
                                ((xname).eq "isvalid").if
                                  (((unsupported)).apply)
                                  ((((unsupported)).apply (((xPostGISOperations).xgis_operators)) ((xname))).xfunc).if
                                    xcombo_values.write (((unsupported)).apply ((xrast)) ((((unsupported)).apply ((xrast)) (0))) ((((unsupported)).apply ((xrast)) (0))) ((((unsupported)).apply ((xstx_pnt)) (0))) ((xstx_pnt)) ((xrast)) (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                                    seq
                                      (((unsupported)).apply ((((unsupported)).apply ((xcombo_keys)) (2))) (("rastprojected__".add (xname))))
                                      xcombo_values.write (((unsupported)).apply ((xrast)) ("None: is there a None literal in the EO language?") ((xrast)) ((xstx_pnt)) ((xstx_pnt)) ((xrast)) (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xlen)).apply ((xcombo_keys)))) ((((xlen)).apply ((xcombo_values)))) ("Number of lookup names and values should be the same"))
                            xcombos.write (((unsupported)).apply ((xx)) ((xx)) ((((xzip)).apply ((xcombo_keys)) ((xcombo_values)))) ((((unsupported)).apply ((xx)) (1))))
                            bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((((unsupported)).apply ((xn)) ((xx)))) ((((unsupported)).apply ((xn)) ((xx)))) ((((xenumerate)).apply ((xcombos)))) ((((unsupported)).apply ((xx)) ((((unsupported)).apply ((xcombos)) ((((unsupported)).apply ((xn)))))))))) ((((unsupported)).apply)) ("There are repeated test lookups"))
                            xcombos.write (((unsupported)).apply ((((unsupported)).apply ((xk)) ((xv)))) ((((unsupported)).apply ((xk)) ((xv)))) ((xcombos)))
                            (((unsupported)).apply ((xcombo)) ((xcombos)))
                              seq
                                xqs.write (((((xRasterModel).xobjects).xfilter)).apply ((((unsupported)).apply ((xcombo)))))
                                bogusForceDataize.write ((((xself).xassertIn)).apply (((((xqs).xcount)).apply)) ((((unsupported)).apply (0) (1))))
                            xqs.write (((((xRasterModel).xobjects).xfilter)).apply (((((xQ)).apply ((((unsupported)).apply ((((unsupported)).apply ((xcombos)) (0)))))).and (((xQ)).apply ((((unsupported)).apply ((((unsupported)).apply ((xcombos)) (1)))))))))
                            bogusForceDataize.write ((((xself).xassertIn)).apply (((((xqs).xcount)).apply)) ((((unsupported)).apply (0) (1))))
                xtest_dwithin_gis_lookup_output_with_rasters.write
                  [xself]
                    memory > xqs
                    memory > xrast
                    memory > xstx_pnt
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        xstx_pnt.write (((xGEOSGeometry)).apply ("POINT (-95.370401017314293 29.704867409475465)") (4326))
                        bogusForceDataize.write ((((xstx_pnt).xtransform)).apply (3086))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) ((((unsupported)).apply ((xD)) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))) ((((unsupported)).apply ((xD)) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xJSON_RASTER)) ((((unsupported)).apply ((xD)) (1))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (1) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (1) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xstx_pnt)) (500))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xstx_pnt)) ((((unsupported)).apply ((xD)) (10000))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xstx_pnt)) (5))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (0))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xstx_pnt)) ((((unsupported)).apply ((xD)) (100))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (0))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (500))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterRelatedModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterRelatedModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (40))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((((xRasterModel).xobjects).xfilter)).apply (((((unsupported)).apply ((xQ)) ((((unsupported)).apply ((xrast)) (40)))).and (((unsupported)).apply ((xQ)) ((((unsupported)).apply ((xstx_pnt)) ((((unsupported)).apply ((xD)) (10000)))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xrast)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                xtest_lookup_input_tuple_too_long.write
                  [xself]
                    memory > xrast
                    memory > xmsg
                    seq > @
                      seq
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        xmsg.write "Tuple too long for lookup bbcontains."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (1) (2))))
                xtest_lookup_input_band_not_allowed.write
                  [xself]
                    memory > xqs
                    memory > xrast
                    memory > xmsg
                    seq > @
                      seq
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((unsupported)).apply ((xrast)) (1))))
                        xmsg.write "Band indices are not allowed for this operator, it works on bbox only."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          bogusForceDataize.write ((((xqs).xcount)).apply)
                xtest_isvalid_lookup_with_raster_error.write
                  [xself]
                    memory > xqs
                    memory > xmsg
                    seq > @
                      seq
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) (TRUE))
                        xmsg.write "IsValid function requires a GeometryField in position 1, got RasterField."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write ((((xqs).xcount)).apply)
                xtest_result_of_gis_lookup_with_rasters.write
                  [xself]
                    memory > xqs
                    seq > @
                      seq
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((xGEOSGeometry)).apply ("POINT (-0.5 0.5)") (4326))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((xGEOSGeometry)).apply ("POINT (0.5 0.5)") (4326))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (0))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((xGEOSGeometry)).apply ("POINT (0 0)") (4326))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (0))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((((xGEOSGeometry)).apply ("POINT (1 0)") (4326))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                xtest_lookup_with_raster_bbox.write
                  [xself]
                    memory > xqs
                    memory > xrast
                    seq > @
                      seq
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        (((unsupported)).apply ((((xrast).xorigin).xy)) (2))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xrast)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (0))
                        (((unsupported)).apply ((((xrast).xorigin).xy)) (6))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xrast)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                xtest_lookup_with_polygonized_raster.write
                  [xself]
                    memory > xqs
                    memory > xrast
                    seq > @
                      seq
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        (((unsupported)).apply ((((xrast).xorigin).xx)) (((95.37040.neg).add 1)))
                        (((unsupported)).apply ((((xrast).xorigin).xy)) (29.70486))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xrast)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (1))
                        (((unsupported)).apply (((((unsupported)).apply (((xrast).xbands)) (0)).xdata)) ((((unsupported)).apply (0) (0) (0) (1) (1))) ((((unsupported)).apply (5) (1))))
                        (((unsupported)).apply (((((unsupported)).apply (((xrast).xbands)) (0)).xnodata_value)) (0))
                        xqs.write (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xrast)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((((xqs).xcount)).apply)) (0))
                xtest_lookup_value_error.write
                  [xself]
                    memory > xmsg
                    memory > xobj
                    seq > @
                      seq
                        xobj.write (((unsupported)).apply)
                        xmsg.write ("Couldn't create spatial object from lookup value '%s'.".mod (xobj))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xobj)))
                        xobj.write "00000"
                        xmsg.write ("Couldn't create spatial object from lookup value '%s'.".mod (xobj))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xValueError)) ((xmsg)))))
                          (((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) ((xobj)))
                xtest_db_function_errors.write
                  [xself]
                    memory > xrast
                    memory > xmsg
                    memory > xpoint
                    seq > @
                      seq
                        (((unsupported)).apply)
                        xpoint.write (((xGEOSGeometry)).apply ("SRID=3086;POINT (-697024.9213808845 683729.1705516104)"))
                        xrast.write (((xGDALRaster)).apply (((((xjson).xloads)).apply ((xJSON_RASTER)))))
                        xmsg.write "Distance function requires a geometric argument in position 2."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          (((unsupported)).apply ((((xRasterModel).xobjects).xannotate)) ((((xDistance)).apply ("geom") ((xrast)))))
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          (((unsupported)).apply ((((xRasterModel).xobjects).xannotate)) ((((xDistance)).apply ("rastprojected") ((xrast)))))
                        xmsg.write "Distance function requires a GeometryField in position 1, got RasterField."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xTypeError)) ((xmsg)))))
                          bogusForceDataize.write ((((((unsupported)).apply ((((xRasterModel).xobjects).xannotate)) ((((xDistance)).apply ("rastprojected") ((xpoint))))).xcount)).apply)
                xtest_lhs_with_index_rhs_without_index.write
                  [xself]
                    seq > @
                      seq
                        (((unsupported)).apply ((((xCaptureQueriesContext)).apply ((xconnection)))) ((xqueries)))
                          bogusForceDataize.write ((((((unsupported)).apply ((((xRasterModel).xobjects).xfilter)) (((((xjson).xloads)).apply ((xJSON_RASTER))))).xexists)).apply)
                        bogusForceDataize.write ((((xself).xassertRegex)).apply ((((unsupported)).apply ((((unsupported)).apply ((xqueries)) ((1.neg)))) ("sql"))) ("WHERE ST_Contains([^)]*, 1, [^)]*, 1)"))