memory > xtimezone
memory > xtranslation
memory > xtime
memory > xTimezoneTestCase
memory > xSimpleTestCase
[] > test_time
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_no_args
        memory > xtest_time06
        memory > xtest_time03
        memory > xtest_time02
        memory > xtest_time00_l10n
        memory > xtime_filter
        memory > xtest_time05
        memory > xtest_inputs
        memory > xtest_time00
        memory > xtest_time04
        memory > xtest_time01
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply ((xTimezoneTestCase)))
              seq
                (((unsupported)).apply)
                xtest_time00.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time00") ((((unsupported)).apply ("dt") ((((xtime)).apply (16) (25))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("4:25 p.m."))
                xtest_time00_l10n.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply (((((xtranslation).xoverride)).apply ("fr"))))
                          xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time00_l10n") ((((unsupported)).apply ("dt") ((((xtime)).apply (16) (25))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("16:25"))
                xtest_time01.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time01") ((((unsupported)).apply ("dt") (((xself).xnow_tz_i)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("+0315:+0315:+0315:11700"))
                xtest_time02.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time02") ((((unsupported)).apply ("dt") (((xself).xnow)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ((":".add ((((((xself).xnow_tz).xtzinfo).xtzname)).apply (((xself).xnow_tz))))))
                xtest_time03.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time03") ((((unsupported)).apply ("t") ((((unsupported)).apply ((xtime)) (4) (0) (((((xtimezone).xget_fixed_timezone)).apply (30))))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("4 a.m.::::"))
                xtest_time04.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time04") ((((unsupported)).apply ("t") ((((xtime)).apply (4) (0))))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) ("4 a.m.::::"))
                xtest_time05.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time05") ((((unsupported)).apply ("d") (((xself).xtoday)))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
                xtest_time06.write
                  [xself]
                    memory > xoutput
                    seq > @
                      (((unsupported)).apply)
                        xoutput.write (((((xself).xengine).xrender_to_string)).apply ("time06") ((((unsupported)).apply ("obj") ("non-datetime-value"))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xoutput)) (""))
            (((unsupported)).apply ((xSimpleTestCase)))
              seq
                xtest_no_args.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtime_filter)).apply (""))) (""))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtime_filter)).apply ("None: is there a None literal in the EO language?"))) (""))
                xtest_inputs.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtime_filter)).apply ((((xtime)).apply (13))) ("h"))) ("01"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((xtime_filter)).apply ((((xtime)).apply (0))) ("h"))) ("12"))