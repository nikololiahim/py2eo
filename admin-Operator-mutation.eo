memory > xupdate_session_auth_hash
memory > xlist
memory > xadmin
memory > xmessages
memory > xAdminPasswordChangeForm
memory > xTemplateResponse
memory > xpath
memory > xUserChangeForm
memory > xcsrf_protect
memory > xsuper
memory > xHttp404
memory > xGroup
memory > xIS_POPUP_VAR
memory > xkwargs
memory > xreverse
memory > xmethod_decorator
memory > xUserCreationForm
memory > xrouter
memory > xPermissionDenied
memory > xgettext
memory > xsettings
memory > xsensitive_post_parameters
memory > xunquote
memory > xHttpResponseRedirect
memory > xescape
memory > xtransaction
memory > xUser
[] > admin
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xadd_form
        memory > xfieldsets
        memory > xresponse_add
        memory > xuser_change_password
        memory > xchange_user_password_template
        memory > xsearch_fields
        memory > xlookup_allowed
        memory > xget_form
        memory > xlist_filter
        memory > xfilter_horizontal
        memory > x_add_view
        memory > xlist_display
        memory > xadd_form_template
        memory > xordering
        memory > xcsrf_protect_m
        memory > xadd_fieldsets
        memory > xform
        memory > xformfield_for_manytomany
        memory > x_
        memory > xadd_view
        memory > xchange_password_form
        memory > xget_fieldsets
        memory > xsensitive_post_parameters_m
        memory > xget_urls
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xcsrf_protect_m.write (((xmethod_decorator)).apply ((xcsrf_protect)))
            xsensitive_post_parameters_m.write (((xmethod_decorator)).apply ((((xsensitive_post_parameters)).apply)))
            (((unsupported)).apply (((xadmin).xModelAdmin)) (((((xadmin).xregister)).apply ((xGroup)))))
              seq
                xsearch_fields.write (((unsupported)).apply ("name"))
                xordering.write (((unsupported)).apply ("name"))
                xfilter_horizontal.write (((unsupported)).apply ("permissions"))
                xformfield_for_manytomany.write
                  [xself xdb_field xrequest]
                    memory > xqs
                    seq > @
                      (((unsupported)).apply)
                        (((xdb_field).xname).eq "permissions").if
                          seq
                            xqs.write ((((xkwargs).xget)).apply ("queryset") (((((xdb_field).xremote_field).xmodel).xobjects)))
                            (((unsupported)).apply ((((unsupported)).apply ((xkwargs)) ("queryset"))) (((((xqs).xselect_related)).apply ("content_type"))))
                        (((unsupported)).apply ((((unsupported)).apply (((((xsuper)).apply).xformfield_for_manytomany)) ((xdb_field)) ((xrequest)) ((((unsupported)).apply ((xkwargs)))))))
            (((unsupported)).apply (((xadmin).xModelAdmin)) (((((xadmin).xregister)).apply ((xUser)))))
              seq
                xadd_form_template.write "admin/auth/user/add_form.html"
                xchange_user_password_template.write "None: is there a None literal in the EO language?"
                xfieldsets.write (((unsupported)).apply ((((unsupported)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("fields") ((((unsupported)).apply ("username") ("password"))))))) ((((unsupported)).apply ((((x_)).apply ("Personal info"))) ((((unsupported)).apply ("fields") ((((unsupported)).apply ("first_name") ("last_name") ("email"))))))) ((((unsupported)).apply ((((x_)).apply ("Permissions"))) ((((unsupported)).apply ("fields") ((((unsupported)).apply ("is_active") ("is_staff") ("is_superuser") ("groups") ("user_permissions"))))))) ((((unsupported)).apply ((((x_)).apply ("Important dates"))) ((((unsupported)).apply ("fields") ((((unsupported)).apply ("last_login") ("date_joined"))))))))
                xadd_fieldsets.write (((unsupported)).apply ((((unsupported)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("classes") ((((unsupported)).apply ("wide"))) ("fields") ((((unsupported)).apply ("username") ("password1") ("password2"))))))))
                xform.write (xUserChangeForm)
                xadd_form.write (xUserCreationForm)
                xchange_password_form.write (xAdminPasswordChangeForm)
                xlist_display.write (((unsupported)).apply ("username") ("email") ("first_name") ("last_name") ("is_staff"))
                xlist_filter.write (((unsupported)).apply ("is_staff") ("is_superuser") ("is_active") ("groups"))
                xsearch_fields.write (((unsupported)).apply ("username") ("first_name") ("last_name") ("email"))
                xordering.write (((unsupported)).apply ("username"))
                xfilter_horizontal.write (((unsupported)).apply ("groups") ("user_permissions"))
                xget_fieldsets.write
                  [xself xrequest xobj]
                    seq > @
                      (((unsupported)).apply)
                        ((xobj).not).if
                          (((unsupported)).apply (((xself).xadd_fieldsets)))
                        (((unsupported)).apply (((((((xsuper)).apply).xget_fieldsets)).apply ((xrequest)) ((xobj)))))
                xget_form.write
                  [xself xrequest xobj]
                    memory > xdefaults
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        xdefaults.write (((unsupported)).apply)
                        (((unsupported)).apply ((xobj)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((unsupported)).apply ((xdefaults)) ("form"))) (((xself).xadd_form)))
                        bogusForceDataize.write ((((xdefaults).xupdate)).apply ((xkwargs)))
                        (((unsupported)).apply (((((((xsuper)).apply).xget_form)).apply ((xrequest)) ((xobj)) ((((unsupported)).apply ((xdefaults)))))))
                xget_urls.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((unsupported)).apply ((((unsupported)).apply ((xpath)) ("<id>/password/") ((((((xself).xadmin_site).xadmin_view)).apply (((xself).xuser_change_password)))) ("auth_user_password_change")))).sub ((((((xsuper)).apply).xget_urls)).apply))))
                xlookup_allowed.write
                  [xself xlookup xvalue]
                    seq > @
                      (((unsupported)).apply (((((((xlookup).xstartswith)).apply ("password")).not).and ((((((xsuper)).apply).xlookup_allowed)).apply ((xlookup)) ((xvalue))))))
                xadd_view.write
                  [xself xrequest xform_url xextra_context]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply ((((unsupported)).apply (((xtransaction).xatomic)) (((((xrouter).xdb_for_write)).apply (((xself).xmodel)))))))
                          (((unsupported)).apply (((((xself).x_add_view)).apply ((xrequest)) ((xform_url)) ((xextra_context)))))
                x_add_view.write
                  [xself xrequest xform_url xextra_context]
                    memory > xdefaults
                    memory > xusername_field
                    seq > @
                      (((unsupported)).apply)
                        (((((xself).xhas_change_permission)).apply ((xrequest))).not).if
                          seq
                            (((((xself).xhas_add_permission)).apply ((xrequest))).and ((xsettings).xDEBUG)).if
                              (((unsupported)).apply ((((xHttp404)).apply ("Your user does not have the \"Change user\" permission. In order to add users, Django requires that your user account have both the \"Add user\" and \"Change user\" permissions set."))))
                            (((unsupported)).apply ((xPermissionDenied)))
                        (((unsupported)).apply ((xextra_context)) ("None: is there a None literal in the EO language?")).if
                          xextra_context.write (((unsupported)).apply)
                        xusername_field.write ((((((xself).xmodel).x_meta).xget_field)).apply ((((xself).xmodel).xUSERNAME_FIELD)))
                        xdefaults.write (((unsupported)).apply ("auto_populated_fields") ((((unsupported)).apply)) ("username_help_text") (((xusername_field).xhelp_text)))
                        bogusForceDataize.write ((((xextra_context).xupdate)).apply ((xdefaults)))
                        (((unsupported)).apply (((((((xsuper)).apply).xadd_view)).apply ((xrequest)) ((xform_url)) ((xextra_context)))))
                xuser_change_password.write
                  [xself xrequest xid xform_url]
                    memory > xfieldsets
                    memory > xcontext
                    memory > xform
                    memory > xmsg
                    memory > xadminForm
                    memory > xchange_message
                    memory > xuser
                    seq > @
                      (((unsupported)).apply)
                        xuser.write ((((xself).xget_object)).apply ((xrequest)) ((((xunquote)).apply ((xid)))))
                        (((((xself).xhas_change_permission)).apply ((xrequest)) ((xuser))).not).if
                          (((unsupported)).apply ((xPermissionDenied)))
                        (((unsupported)).apply ((xuser)) ("None: is there a None literal in the EO language?")).if
                          (((unsupported)).apply ((((xHttp404)).apply (((((x_)).apply ("%(name)s object with primary key %(key)r does not exist.")).mod (((unsupported)).apply ("name") (((((xself).xmodel).x_meta).xverbose_name)) ("key") ((((xescape)).apply ((xid))))))))))
                        (((xrequest).xmethod).eq "POST").if
                          seq
                            xform.write ((((xself).xchange_password_form)).apply ((xuser)) (((xrequest).xPOST)))
                            ((((xform).xis_valid)).apply).if
                              seq
                                bogusForceDataize.write ((((xform).xsave)).apply)
                                xchange_message.write ((((xself).xconstruct_change_message)).apply ((xrequest)) ((xform)) ("None: is there a None literal in the EO language?"))
                                bogusForceDataize.write ((((xself).xlog_change)).apply ((xrequest)) ((xuser)) ((xchange_message)))
                                xmsg.write (((xgettext)).apply ("Password changed successfully."))
                                bogusForceDataize.write ((((xmessages).xsuccess)).apply ((xrequest)) ((xmsg)))
                                bogusForceDataize.write (((xupdate_session_auth_hash)).apply ((xrequest)) (((xform).xuser)))
                                (((unsupported)).apply ((((xHttpResponseRedirect)).apply ((((unsupported)).apply ((xreverse)) (("%s:%s_%s_change".mod (((unsupported)).apply ((((xself).xadmin_site).xname)) ((((xuser).x_meta).xapp_label)) ((((xuser).x_meta).xmodel_name))))) ((((unsupported)).apply (((xuser).xpk)))))))))
                          xform.write ((((xself).xchange_password_form)).apply ((xuser)))
                        xfieldsets.write (((unsupported)).apply ((((unsupported)).apply ("None: is there a None literal in the EO language?") ((((unsupported)).apply ("fields") ((((xlist)).apply (((xform).xbase_fields)))))))))
                        xadminForm.write (((((xadmin).xhelpers).xAdminForm)).apply ((xform)) ((xfieldsets)) ((((unsupported)).apply)))
                        xcontext.write (((unsupported)).apply ("title") (((((x_)).apply ("Change password: %s")).mod (((xescape)).apply (((((xuser).xget_username)).apply))))) ("adminForm") ((xadminForm)) ("form_url") ((xform_url)) ("form") ((xform)) ("is_popup") (((((unsupported)).apply ((xIS_POPUP_VAR)) (((xrequest).xPOST))).or (((unsupported)).apply ((xIS_POPUP_VAR)) (((xrequest).xGET))))) ("is_popup_var") ((xIS_POPUP_VAR)) ("add") (TRUE) ("change") (FALSE) ("has_delete_permission") (FALSE) ("has_change_permission") (TRUE) ("has_absolute_url") (FALSE) ("opts") ((((xself).xmodel).x_meta)) ("original") ((xuser)) ("save_as") (FALSE) ("show_save") (TRUE) ((((((xself).xadmin_site).xeach_context)).apply ((xrequest)))))
                        (((unsupported)).apply (((xrequest).xcurrent_app)) ((((xself).xadmin_site).xname)))
                        (((unsupported)).apply ((((xTemplateResponse)).apply ((xrequest)) ((((xself).xchange_user_password_template).or "admin/auth/user/change_password.html")) ((xcontext)))))
                xresponse_add.write
                  [xself xrequest xobj xpost_url_continue]
                    seq > @
                      (((unsupported)).apply)
                        (((unsupported)).apply)
                        ((((unsupported)).apply ("_addanother") (((xrequest).xPOST))).and (((unsupported)).apply ((xIS_POPUP_VAR)) (((xrequest).xPOST)))).if
                          seq
                            (((unsupported)).apply (((xrequest).xPOST)) ((((((xrequest).xPOST).xcopy)).apply)))
                            (((unsupported)).apply ((((unsupported)).apply (((xrequest).xPOST)) ("_continue"))) (1))
                        (((unsupported)).apply (((((((xsuper)).apply).xresponse_add)).apply ((xrequest)) ((xobj)) ((xpost_url_continue)))))