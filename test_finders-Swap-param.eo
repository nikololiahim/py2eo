memory > xImportError
memory > xTEST_ROOT
memory > xTestFinders
memory > xrange
memory > xsuper
memory > xoverride_settings
memory > xsrc
memory > xos
memory > xdst
memory > xn
memory > xImproperlyConfigured
memory > xSimpleTestCase
memory > xstorage
memory > xd
memory > xStaticFilesTestCase
memory > xf
memory > xfinders
memory > xsettings
[] > test_finders
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_get_finder_bad_classname
        memory > xtest_get_finder_bad_module
        memory > xtest_find_first
        memory > xtest_find_all
        memory > xsetUp
        memory > xtest_cache
        memory > xtest_location_empty
        memory > xtest_get_finder
        memory > xtest_searched_locations
        seq > @
          seq
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
              seq
                (((unsupported)).apply)
                xtest_find_first.write
                  [xself]
                    memory > xfound
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xsrc)) ((xdst)))) (((xself).xfind_first)))
                        xfound.write (((((xself).xfinder).xfind)).apply ((xsrc)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((((((xos).xpath).xnormcase)).apply ((xdst)))) ((((((xos).xpath).xnormcase)).apply ((xfound)))))
                xtest_find_all.write
                  [xself]
                    memory > xfound
                    memory > xdst
                    seq > @
                      seq
                        (((unsupported)).apply ((((unsupported)).apply ((xsrc)) ((xdst)))) (((xself).xfind_all)))
                        xfound.write (((unsupported)).apply ((((xself).xfinder).xfind)) ((xsrc)) (TRUE))
                        xfound.write (((unsupported)).apply ((((((xos).xpath).xnormcase)).apply ((xf)))) ((xf)) ((xfound)))
                        xdst.write (((unsupported)).apply ((((((xos).xpath).xnormcase)).apply ((xd)))) ((xd)) ((xdst)))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xfound)) ((xdst)))
            (((unsupported)).apply ((xTestFinders)) ((xStaticFilesTestCase)))
              seq
                (((unsupported)).apply)
                xsetUp.write
                  [xself]
                    memory > xtest_file_path
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUp)).apply)
                        (((unsupported)).apply (((xself).xfinder)) (((((xfinders).xFileSystemFinder)).apply)))
                        xtest_file_path.write (((((xos).xpath).xjoin)).apply ((xTEST_ROOT)) ("project") ("documents") ("test") ("file.txt"))
                        (((unsupported)).apply (((xself).xfind_first)) ((((unsupported)).apply ((((((xos).xpath).xjoin)).apply ("test") ("file.txt"))) ((xtest_file_path)))))
                        (((unsupported)).apply (((xself).xfind_all)) ((((unsupported)).apply ((((((xos).xpath).xjoin)).apply ("test") ("file.txt"))) ((((unsupported)).apply ((xtest_file_path)))))))
            (((unsupported)).apply ((xTestFinders)) ((xStaticFilesTestCase)))
              seq
                (((unsupported)).apply)
                xsetUp.write
                  [xself]
                    memory > xtest_file_path
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUp)).apply)
                        (((unsupported)).apply (((xself).xfinder)) (((((xfinders).xAppDirectoriesFinder)).apply)))
                        xtest_file_path.write (((((xos).xpath).xjoin)).apply ((xTEST_ROOT)) ("apps") ("test") ("static") ("test") ("file1.txt"))
                        (((unsupported)).apply (((xself).xfind_first)) ((((unsupported)).apply ((((((xos).xpath).xjoin)).apply ("test") ("file1.txt"))) ((xtest_file_path)))))
                        (((unsupported)).apply (((xself).xfind_all)) ((((unsupported)).apply ((((((xos).xpath).xjoin)).apply ("test") ("file1.txt"))) ((((unsupported)).apply ((xtest_file_path)))))))
            (((unsupported)).apply ((xTestFinders)) ((xStaticFilesTestCase)))
              seq
                (((unsupported)).apply)
                xsetUp.write
                  [xself]
                    memory > xtest_file_path
                    seq > @
                      seq
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUp)).apply)
                        (((unsupported)).apply (((xself).xfinder)) ((((unsupported)).apply (((xfinders).xDefaultStorageFinder)) ((((unsupported)).apply (((xstorage).xStaticFilesStorage)) (((xsettings).xMEDIA_ROOT)))))))
                        xtest_file_path.write (((((xos).xpath).xjoin)).apply (((xsettings).xMEDIA_ROOT)) ("media-file.txt"))
                        (((unsupported)).apply (((xself).xfind_first)) ((((unsupported)).apply ("media-file.txt") ((xtest_file_path)))))
                        (((unsupported)).apply (((xself).xfind_all)) ((((unsupported)).apply ("media-file.txt") ((((unsupported)).apply ((xtest_file_path)))))))
            (((unsupported)).apply ((xSimpleTestCase)) ((((unsupported)).apply ((xoverride_settings)) ((((unsupported)).apply ("django.contrib.staticfiles.finders.FileSystemFinder"))) ((((unsupported)).apply ((((((xos).xpath).xjoin)).apply ((xTEST_ROOT)) ("project") ("documents"))))))))
              seq
                (((unsupported)).apply)
                xtest_get_finder.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertIsInstance)).apply (((((xfinders).xget_finder)).apply ("django.contrib.staticfiles.finders.FileSystemFinder"))) (((xfinders).xFileSystemFinder)))
                xtest_get_finder_bad_classname.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertRaises)).apply ((xImportError)))))
                        bogusForceDataize.write ((((xfinders).xget_finder)).apply ("django.contrib.staticfiles.finders.FooBarFinder"))
                xtest_get_finder_bad_module.write
                  [xself]
                    seq > @
                      (((unsupported)).apply (((((xself).xassertRaises)).apply ((xImportError)))))
                        bogusForceDataize.write ((((xfinders).xget_finder)).apply ("foo.bar.FooBarFinder"))
                xtest_cache.write
                  [xself]
                    memory > xcache_info
                    seq > @
                      seq
                        bogusForceDataize.write (((((xfinders).xget_finder).xcache_clear)).apply)
                        (((unsupported)).apply ((xn)) ((((xrange)).apply (10))))
                          bogusForceDataize.write ((((xfinders).xget_finder)).apply ("django.contrib.staticfiles.finders.FileSystemFinder"))
                        xcache_info.write (((((xfinders).xget_finder).xcache_info)).apply)
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xcache_info).xhits)) (9))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xcache_info).xcurrsize)) (1))
                xtest_searched_locations.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xfinders).xfind)).apply ("spam"))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfinders).xsearched_locations)) ((((unsupported)).apply ((((((xos).xpath).xjoin)).apply ((xTEST_ROOT)) ("project") ("documents"))))))
                xtest_location_empty.write
                  [xself]
                    memory > xmsg
                    seq > @
                      (((unsupported)).apply)
                        xmsg.write "The storage backend of the staticfiles finder <class 'django.contrib.staticfiles.finders.DefaultStorageFinder'> doesn't have a valid location."
                        (((unsupported)).apply (((((xself).xassertRaisesMessage)).apply ((xImproperlyConfigured)) ((xmsg)))))
                          bogusForceDataize.write ((((xfinders).xDefaultStorageFinder)).apply)