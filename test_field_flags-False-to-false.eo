memory > xfield
memory > xall
memory > xAllFieldsModel
memory > xtype
memory > xhasattr
memory > xsum
memory > xsuper
memory > xbool
memory > xGenericRelation
memory > xgetattr
memory > xmodels
memory > xflag
memory > xtest
memory > xf
memory > xset
memory > xobj
memory > xGenericForeignKey
[] > test_field_flags
  [args...] > unsupported
  [args...] > xunsupported
  memory > bogusForceDataize
  memory > xbogusForceDataize
  memory > xhack
  seq > @
    xhack.write
      []
        memory > xtest_cardinality_m2m
        memory > xNON_CONCRETE_FIELDS
        memory > xMANY_TO_ONE_CLASSES
        memory > xRELATION_FIELDS
        memory > xNON_EDITABLE_FIELDS
        memory > xtest_each_field_should_have_a_has_rel_attribute
        memory > xsetUpClass
        memory > xtest_null
        memory > xtest_each_object_should_have_auto_created
        memory > xtest_cardinality_m2o
        memory > xMANY_TO_MANY_CLASSES
        memory > xtest_related_fields
        memory > xFLAG_PROPERTIES_FOR_RELATIONS
        memory > xtest_hidden_flag
        memory > xtest_cardinality_o2o
        memory > xtest_each_field_should_have_an_editable_attribute
        memory > xONE_TO_MANY_CLASSES
        memory > xtest_cardinality_o2m
        memory > xtest_non_editable_fields
        memory > xFLAG_PROPERTIES
        memory > xtest_field_names_should_always_be_available
        memory > xtest_all_field_types_should_have_flags
        memory > xtest_each_field_should_have_a_concrete_attribute
        memory > xONE_TO_ONE_CLASSES
        memory > xtest_non_concrete_fields
        memory > xtest_model_and_reverse_model_should_equal_on_relations
        seq > @
          seq
            (((unsupported)).apply)
            seq
              (((unsupported)).apply)
              (((unsupported)).apply)
            (((unsupported)).apply)
            (((unsupported)).apply)
            xNON_CONCRETE_FIELDS.write (((unsupported)).apply (((xmodels).xForeignObject)) ((xGenericForeignKey)) ((xGenericRelation)))
            xNON_EDITABLE_FIELDS.write (((unsupported)).apply (((xmodels).xBinaryField)) ((xGenericForeignKey)) ((xGenericRelation)))
            xRELATION_FIELDS.write (((unsupported)).apply (((xmodels).xForeignKey)) (((xmodels).xForeignObject)) (((xmodels).xManyToManyField)) (((xmodels).xOneToOneField)) ((xGenericForeignKey)) ((xGenericRelation)))
            xMANY_TO_MANY_CLASSES.write (((unsupported)).apply (((xmodels).xManyToManyField)))
            xMANY_TO_ONE_CLASSES.write (((unsupported)).apply (((xmodels).xForeignObject)) (((xmodels).xForeignKey)) ((xGenericForeignKey)))
            xONE_TO_MANY_CLASSES.write (((unsupported)).apply (((xmodels).xForeignObjectRel)) (((xmodels).xManyToOneRel)) ((xGenericRelation)))
            xONE_TO_ONE_CLASSES.write (((unsupported)).apply (((xmodels).xOneToOneField)))
            xFLAG_PROPERTIES.write (((unsupported)).apply ("concrete") ("editable") ("is_relation") ("model") ("hidden") ("one_to_many") ("many_to_one") ("many_to_many") ("one_to_one") ("related_model"))
            xFLAG_PROPERTIES_FOR_RELATIONS.write (((unsupported)).apply ("one_to_many") ("many_to_one") ("many_to_many") ("one_to_one"))
            (((unsupported)).apply (((xtest).xSimpleTestCase)))
              seq
                xsetUpClass.write
                  [xcls]
                    seq > @
                      (((unsupported)).apply)
                        bogusForceDataize.write ((((((xsuper)).apply).xsetUpClass)).apply)
                        (((unsupported)).apply (((xcls).xfields)) ((((unsupported)).apply ((((unsupported)).apply ((((xAllFieldsModel).x_meta).xfields)))) ((((unsupported)).apply ((((xAllFieldsModel).x_meta).xprivate_fields)))))))
                        (((unsupported)).apply (((xcls).xall_fields)) ((((unsupported)).apply ((((unsupported)).apply (((xcls).xfields)))) ((((unsupported)).apply ((((xAllFieldsModel).x_meta).xmany_to_many)))) ((((unsupported)).apply ((((xAllFieldsModel).x_meta).xprivate_fields)))))))
                        (((unsupported)).apply (((xcls).xfields_and_reverse_objects)) ((((unsupported)).apply ((((unsupported)).apply (((xcls).xall_fields)))) ((((unsupported)).apply ((((xAllFieldsModel).x_meta).xrelated_objects)))))))
                xtest_each_field_should_have_a_concrete_attribute.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply (((((xf).xconcrete).x__class__).eq (xbool))) ((xf)) (((xself).xfields)))))))
                xtest_each_field_should_have_an_editable_attribute.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply (((((xf).xeditable).x__class__).eq (xbool))) ((xf)) (((xself).xall_fields)))))))
                xtest_each_field_should_have_a_has_rel_attribute.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply (((((xf).xis_relation).x__class__).eq (xbool))) ((xf)) (((xself).xall_fields)))))))
                xtest_each_object_should_have_auto_created.write
                  [xself]
                    seq > @
                      bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xall)).apply ((((unsupported)).apply (((((xf).xauto_created).x__class__).eq (xbool))) ((xf)) (((xself).xfields_and_reverse_objects)))))))
                xtest_non_concrete_fields.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xfield)) (((xself).xfields)))
                        (((unsupported)).apply ((((xtype)).apply ((xfield)))) ((xNON_CONCRETE_FIELDS))).if
                          bogusForceDataize.write ((((xself).xassertfalse)).apply (((xfield).xconcrete)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((xfield).xconcrete)))
                xtest_non_editable_fields.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xfield)) (((xself).xall_fields)))
                        (((unsupported)).apply ((((xtype)).apply ((xfield)))) ((xNON_EDITABLE_FIELDS))).if
                          bogusForceDataize.write ((((xself).xassertfalse)).apply (((xfield).xeditable)))
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((xfield).xeditable)))
                xtest_related_fields.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xfield)) (((xself).xall_fields)))
                        (((unsupported)).apply ((((xtype)).apply ((xfield)))) ((xRELATION_FIELDS))).if
                          bogusForceDataize.write ((((xself).xassertTrue)).apply (((xfield).xis_relation)))
                          bogusForceDataize.write ((((xself).xassertfalse)).apply (((xfield).xis_relation)))
                xtest_field_names_should_always_be_available.write
                  [xself]
                    seq > @
                      (((unsupported)).apply ((xfield)) (((xself).xfields_and_reverse_objects)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((xfield).xname)))
                xtest_all_field_types_should_have_flags.write
                  [xself]
                    memory > xtrue_cardinality_flags
                    seq > @
                      (((unsupported)).apply ((xfield)) (((xself).xfields_and_reverse_objects)))
                        seq
                          (((unsupported)).apply ((xflag)) ((xFLAG_PROPERTIES)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xhasattr)).apply ((xfield)) ((xflag)))) (("Field %s does not have flag %s".mod (((unsupported)).apply ((xfield)) ((xflag))))))
                          ((xfield).xis_relation).if
                            seq
                              xtrue_cardinality_flags.write (((xsum)).apply ((((unsupported)).apply ((((unsupported)).apply ((((xgetattr)).apply ((xfield)) ((xflag)))) (TRUE))) ((xflag)) ((xFLAG_PROPERTIES_FOR_RELATIONS)))))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (1) ((xtrue_cardinality_flags)))
                xtest_cardinality_m2m.write
                  [xself]
                    memory > xreverse_field
                    memory > xm2m_type_fields
                    seq > @
                      seq
                        xm2m_type_fields.write (((unsupported)).apply ((xf)) ((xf)) (((xself).xall_fields)) ((((xf).xis_relation).and ((xf).xmany_to_many))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xMANY_TO_MANY_CLASSES)) ((((unsupported)).apply (((xf).x__class__)) ((xf)) ((xm2m_type_fields)))))
                        (((unsupported)).apply ((xfield)) ((xm2m_type_fields)))
                          seq
                            xreverse_field.write ((xfield).xremote_field)
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((xreverse_field).xis_relation)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((xreverse_field).xmany_to_many)))
                            bogusForceDataize.write ((((xself).xassertTrue)).apply (((xreverse_field).xrelated_model)))
                xtest_cardinality_o2m.write
                  [xself]
                    memory > xreverse_field
                    memory > xo2m_type_fields
                    seq > @
                      seq
                        xo2m_type_fields.write (((unsupported)).apply ((xf)) ((xf)) (((xself).xfields_and_reverse_objects)) ((((xf).xis_relation).and ((xf).xone_to_many))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xONE_TO_MANY_CLASSES)) ((((unsupported)).apply (((xf).x__class__)) ((xf)) ((xo2m_type_fields)))))
                        (((unsupported)).apply ((xfield)) ((xo2m_type_fields)))
                          ((xfield).xconcrete).if
                            seq
                              xreverse_field.write ((xfield).xremote_field)
                              bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xreverse_field).xis_relation).and ((xreverse_field).xmany_to_one))))
                xtest_cardinality_m2o.write
                  [xself]
                    memory > xreverse_field
                    memory > xm2o_type_fields
                    seq > @
                      seq
                        xm2o_type_fields.write (((unsupported)).apply ((xf)) ((xf)) (((xself).xfields_and_reverse_objects)) ((((xf).xis_relation).and ((xf).xmany_to_one))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xMANY_TO_ONE_CLASSES)) ((((unsupported)).apply (((xf).x__class__)) ((xf)) ((xm2o_type_fields)))))
                        (((unsupported)).apply ((xobj)) ((xm2o_type_fields)))
                          (((xhasattr)).apply ((xobj)) ("field")).if
                            seq
                              xreverse_field.write ((xobj).xfield)
                              bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xreverse_field).xis_relation).and ((xreverse_field).xone_to_many))))
                xtest_cardinality_o2o.write
                  [xself]
                    memory > xreverse_field
                    memory > xo2o_type_fields
                    seq > @
                      seq
                        xo2o_type_fields.write (((unsupported)).apply ((xf)) ((xf)) (((xself).xall_fields)) ((((xf).xis_relation).and ((xf).xone_to_one))))
                        bogusForceDataize.write ((((xself).xassertEqual)).apply ((xONE_TO_ONE_CLASSES)) ((((unsupported)).apply (((xf).x__class__)) ((xf)) ((xo2o_type_fields)))))
                        (((unsupported)).apply ((xobj)) ((xo2o_type_fields)))
                          (((xhasattr)).apply ((xobj)) ("field")).if
                            seq
                              xreverse_field.write ((xobj).xfield)
                              bogusForceDataize.write ((((xself).xassertTrue)).apply ((((xreverse_field).xis_relation).and ((xreverse_field).xone_to_one))))
                xtest_hidden_flag.write
                  [xself]
                    memory > xno_hidden
                    memory > xfields_that_should_be_hidden
                    memory > xincl_hidden
                    seq > @
                      seq
                        xincl_hidden.write (((xset)).apply ((((unsupported)).apply ((((xAllFieldsModel).x_meta).xget_fields)) (TRUE))))
                        xno_hidden.write (((xset)).apply ((((((xAllFieldsModel).x_meta).xget_fields)).apply)))
                        xfields_that_should_be_hidden.write ((xincl_hidden).sub (xno_hidden))
                        (((unsupported)).apply ((xf)) ((xincl_hidden)))
                          bogusForceDataize.write ((((xself).xassertEqual)).apply ((((unsupported)).apply ((xf)) ((xfields_that_should_be_hidden)))) (((xf).xhidden)))
                xtest_model_and_reverse_model_should_equal_on_relations.write
                  [xself]
                    memory > xreverse_field
                    memory > xis_concrete_forward_field
                    seq > @
                      (((unsupported)).apply ((xfield)) ((((((xAllFieldsModel).x_meta).xget_fields)).apply)))
                        seq
                          xis_concrete_forward_field.write (((xfield).xconcrete).and ((xfield).xrelated_model))
                          (xis_concrete_forward_field).if
                            seq
                              xreverse_field.write ((xfield).xremote_field)
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfield).xmodel)) (((xreverse_field).xrelated_model)))
                              bogusForceDataize.write ((((xself).xassertEqual)).apply (((xfield).xrelated_model)) (((xreverse_field).xmodel)))
                xtest_null.write
                  [xself]
                    seq > @
                      seq
                        bogusForceDataize.write ((((xself).xassertfalse)).apply (((((((xAllFieldsModel).x_meta).xget_field)).apply ("m2m")).xnull)))
                        bogusForceDataize.write ((((xself).xassertTrue)).apply (((((((xAllFieldsModel).x_meta).xget_field)).apply ("reverse2")).xnull)))